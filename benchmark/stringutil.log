/home/elise/language/dart/dart-repo/dart/runtime/out/ReleaseIA32/dart
Code for stub '_stub_CallToRuntime': {
0xb5380028    55                     push ebp
0xb5380029    89e5                   mov ebp,esp
0xb538002b    8b4607                 mov eax,[esi+0x7]
0xb538002e    89a04c100000           mov [eax+0x104c],esp
0xb5380034    89b048100000           mov [eax+0x1048],esi
0xb538003a    89c6                   mov esi,eax
0xb538003c    83ec10                 sub esp,0x10
0xb538003f    83e4f0                 and esp,0xf0
0xb5380042    893424                 mov [esp],esi
0xb5380045    89542404               mov [esp+0x4],edx
0xb5380049    8d449504               lea eax,[ebp+edx*0x4+0x4]
0xb538004d    89442408               mov [esp+0x8],eax
0xb5380051    83c004                 add eax,0x4
0xb5380054    8944240c               mov [esp+0xc],eax
0xb5380058    ffd1                   call ecx
0xb538005a    c7864c10000000000000   mov [esi+0x104c],0
0xb5380064    8b8e48100000           mov ecx,[esi+0x1048]
0xb538006a    c78648100000190040b5   mov [esi+0x1048],0xb5400019
0xb5380074    89ce                   mov esi,ecx
0xb5380076    89ec                   mov esp,ebp
0xb5380078    5d                     pop ebp
0xb5380079    c3                     ret
}
Code for stub '_stub_PrintStopMessage': {
0xb5380098    c8000000               enter 0, 0
0xb538009c    50                     push eax
0xb538009d    51                     push ecx
0xb538009e    52                     push edx
0xb538009f    83ec38                 sub esp,0x38
0xb53800a2    f20f110c24             movsd [esp],xmm1
0xb53800a7    f20f11542408           movsd [esp+0x8],xmm2
0xb53800ad    f20f115c2410           movsd [esp+0x10],xmm3
0xb53800b3    f20f11642418           movsd [esp+0x18],xmm4
0xb53800b9    f20f116c2420           movsd [esp+0x20],xmm5
0xb53800bf    f20f11742428           movsd [esp+0x28],xmm6
0xb53800c5    f20f117c2430           movsd [esp+0x30],xmm7
0xb53800cb    83ec04                 sub esp,0x4
0xb53800ce    83e4f0                 and esp,0xf0
0xb53800d1    890424                 mov [esp],eax
0xb53800d4    e817a0e652             call 0x81ea0f0
0xb53800d9    8d65bc                 lea esp,[ebp-0x44]
0xb53800dc    f20f100c24             movsd xmm1,[esp]
0xb53800e1    f20f10542408           movsd xmm2,[esp+0x8]
0xb53800e7    f20f105c2410           movsd xmm3,[esp+0x10]
0xb53800ed    f20f10642418           movsd xmm4,[esp+0x18]
0xb53800f3    f20f106c2420           movsd xmm5,[esp+0x20]
0xb53800f9    f20f10742428           movsd xmm6,[esp+0x28]
0xb53800ff    f20f107c2430           movsd xmm7,[esp+0x30]
0xb5380105    83c438                 add esp,0x38
0xb5380108    5a                     pop edx
0xb5380109    59                     pop ecx
0xb538010a    58                     pop eax
0xb538010b    c9                     leave
0xb538010c    c3                     ret
}
Code for stub '_stub_CallNativeCFunction': {
0xb5380128    55                     push ebp
0xb5380129    89e5                   mov ebp,esp
0xb538012b    8b7e07                 mov edi,[esi+0x7]
0xb538012e    89a74c100000           mov [edi+0x104c],esp
0xb5380134    89b748100000           mov [edi+0x1048],esi
0xb538013a    89fe                   mov esi,edi
0xb538013c    83ec14                 sub esp,0x14
0xb538013f    83e4f0                 and esp,0xf0
0xb5380142    89742404               mov [esp+0x4],esi
0xb5380146    89542408               mov [esp+0x8],edx
0xb538014a    8944240c               mov [esp+0xc],eax
0xb538014e    8d4508                 lea eax,[ebp+0x8]
0xb5380151    89442410               mov [esp+0x10],eax
0xb5380155    8d442404               lea eax,[esp+0x4]
0xb5380159    890424                 mov [esp],eax
0xb538015c    ffd1                   call ecx
0xb538015e    c7864c10000000000000   mov [esi+0x104c],0
0xb5380168    8bbe48100000           mov edi,[esi+0x1048]
0xb538016e    c78648100000190040b5   mov [esi+0x1048],0xb5400019
0xb5380178    89fe                   mov esi,edi
0xb538017a    89ec                   mov esp,ebp
0xb538017c    5d                     pop ebp
0xb538017d    c3                     ret
}
Code for stub '_stub_AllocateArray': {
0xb5380198    f6c201                 test_b edx,0x1
0xb538019b    0f856b000000           jnz 0xb538020c
0xb53801a1    8b7e07                 mov edi,[esi+0x7]
0xb53801a4    8bbf40100000           mov edi,[edi+0x1040]
0xb53801aa    8b3f                   mov edi,[edi]
0xb53801ac    8b4728                 mov eax,[edi+0x28]
0xb53801af    8d1c5513000000         lea ebx,[edx*0x2+0x13]
0xb53801b6    83e3f8                 and ebx,0xf8
0xb53801b9    8d1c18                 lea ebx,[eax+ebx*0x1]
0xb53801bc    3b5f2c                 cmp ebx,[edi+0x2c]
0xb53801bf    0f8347000000           jnc 0xb538020c
0xb53801c5    895f28                 mov [edi+0x28],ebx
0xb53801c8    83c001                 add eax,0x1
0xb53801cb    894803                 mov [eax+0x3],ecx
0xb53801ce    895007                 mov [eax+0x7],edx
0xb53801d1    8d0c5513000000         lea ecx,[edx*0x2+0x13]
0xb53801d8    83e1f8                 and ecx,0xf8
0xb53801db    81f9f8070000           cmp ecx,0x7f8
0xb53801e1    7708                   ja 0xb53801eb
0xb53801e3    c1e105                 shl ecx, 0x5
0xb53801e6    e905000000             jmp 0xb53801f0
0xb53801eb    b900000000             mov ecx,0
0xb53801f0    81c900002e00           or ecx,0x2e0000
0xb53801f6    8948ff                 mov [eax-0x1],ecx
0xb53801f9    8d480b                 lea ecx,[eax+0xb]
0xb53801fc    3bcb                   cmp ecx,ebx
0xb53801fe    730b                   jnc 0xb538020b
0xb5380200    c701190040b5           mov [ecx],0xb5400019
0xb5380206    83c104                 add ecx,0x4
0xb5380209    ebf1                   jmp 0xb53801fc
0xb538020b    c3                     ret
0xb538020c    55                     push ebp
0xb538020d    89e5                   mov ebp,esp
0xb538020f    6800000000             push 0
0xb5380214    68190040b5             push 0xb5400019
0xb5380219    52                     push edx
0xb538021a    51                     push ecx
0xb538021b    b930060b08             mov ecx,0x80b0630
0xb5380220    ba02000000             mov edx,0x2
0xb5380225    e8fefdffff             call 0xb5380028  [stub: CallToRuntime]
0xb538022a    58                     pop eax
0xb538022b    5a                     pop edx
0xb538022c    58                     pop eax
0xb538022d    89ec                   mov esp,ebp
0xb538022f    5d                     pop ebp
0xb5380230    c3                     ret
}
Code for stub '_stub_CallNoSuchMethodFunction': {
0xb5380248    8b7a0b                 mov edi,[edx+0xb]
0xb538024b    8b447d04               mov eax,[ebp+edi*0x2+0x4]
0xb538024f    55                     push ebp
0xb5380250    89e5                   mov ebp,esp
0xb5380252    6800000000             push 0
0xb5380257    68190040b5             push 0xb5400019
0xb538025c    50                     push eax
0xb538025d    51                     push ecx
0xb538025e    52                     push edx
0xb538025f    89fa                   mov edx,edi
0xb5380261    b9190040b5             mov ecx,0xb5400019  'null'
0xb5380266    e82dffffff             call 0xb5380198  [stub: AllocateArray]
0xb538026b    d1fa                   sar edx, 1
0xb538026d    50                     push eax
0xb538026e    8d5c9428               lea ebx,[esp+edx*0x4+0x28]
0xb5380272    8d480b                 lea ecx,[eax+0xb]
0xb5380275    eb0a                   jmp 0xb5380281
0xb5380277    8b03                   mov eax,[ebx]
0xb5380279    8901                   mov [ecx],eax
0xb538027b    83c104                 add ecx,0x4
0xb538027e    83eb04                 sub ebx,0x4
0xb5380281    4a                     dec edx
0xb5380282    79f3                   jns 0xb5380277
0xb5380284    b950900b08             mov ecx,0x80b9050
0xb5380289    ba04000000             mov edx,0x4
0xb538028e    e895fdffff             call 0xb5380028  [stub: CallToRuntime]
0xb5380293    58                     pop eax
0xb5380294    58                     pop eax
0xb5380295    58                     pop eax
0xb5380296    58                     pop eax
0xb5380297    58                     pop eax
0xb5380298    89ec                   mov esp,ebp
0xb538029a    5d                     pop ebp
0xb538029b    c3                     ret
}
Code for stub '_stub_InstanceFunctionLookup': {
0xb53802b8    55                     push ebp
0xb53802b9    89e5                   mov ebp,esp
0xb53802bb    6800000000             push 0
0xb53802c0    68190040b5             push 0xb5400019
0xb53802c5    8b7a0b                 mov edi,[edx+0xb]
0xb53802c8    ff747c0c               push [esp+edi*0x2+0xc]
0xb53802cc    51                     push ecx
0xb53802cd    52                     push edx
0xb53802ce    89fa                   mov edx,edi
0xb53802d0    b9190040b5             mov ecx,0xb5400019  'null'
0xb53802d5    e8befeffff             call 0xb5380198  [stub: AllocateArray]
0xb53802da    d1fa                   sar edx, 1
0xb53802dc    50                     push eax
0xb53802dd    8d5c941c               lea ebx,[esp+edx*0x4+0x1c]
0xb53802e1    8d480b                 lea ecx,[eax+0xb]
0xb53802e4    eb0a                   jmp 0xb53802f0
0xb53802e6    8b03                   mov eax,[ebx]
0xb53802e8    8901                   mov [ecx],eax
0xb53802ea    83c104                 add ecx,0x4
0xb53802ed    83eb04                 sub ebx,0x4
0xb53802f0    4a                     dec edx
0xb53802f1    79f3                   jns 0xb53802e6
0xb53802f3    b9c0810b08             mov ecx,0x80b81c0
0xb53802f8    ba04000000             mov edx,0x4
0xb53802fd    e826fdffff             call 0xb5380028  [stub: CallToRuntime]
0xb5380302    58                     pop eax
0xb5380303    58                     pop eax
0xb5380304    58                     pop eax
0xb5380305    58                     pop eax
0xb5380306    58                     pop eax
0xb5380307    89ec                   mov esp,ebp
0xb5380309    5d                     pop ebp
0xb538030a    c3                     ret
}
Code for stub '_stub_CallStaticFunction': {
0xb5380328    55                     push ebp
0xb5380329    89e5                   mov ebp,esp
0xb538032b    6800000000             push 0
0xb5380330    52                     push edx
0xb5380331    68190040b5             push 0xb5400019
0xb5380336    b9704b0b08             mov ecx,0x80b4b70
0xb538033b    ba00000000             mov edx,0
0xb5380340    e8e3fcffff             call 0xb5380028  [stub: CallToRuntime]
0xb5380345    58                     pop eax
0xb5380346    5a                     pop edx
0xb5380347    89ec                   mov esp,ebp
0xb5380349    5d                     pop ebp
0xb538034a    8b4803                 mov ecx,[eax+0x3]
0xb538034d    83c10f                 add ecx,0xf
0xb5380350    ffe1                   jmp ecx
}
Code for stub '_stub_CallClosureFunction': {
0xb5380368    8b420b                 mov eax,[edx+0xb]
0xb538036b    8b3c44                 mov edi,[esp+eax*0x2]
0xb538036e    81ff190040b5           cmp edi,0xb5400019
0xb5380374    745b                   jz 0xb53803d1
0xb5380376    f7c701000000           test edi,0x1
0xb538037c    7453                   jz 0xb53803d1
0xb538037e    0fb74f01               movzx_w ecx,[edi+0x1]
0xb5380382    8b4607                 mov eax,[esi+0x7]
0xb5380385    8b801c100000           mov eax,[eax+0x101c]
0xb538038b    8b0488                 mov eax,[eax+ecx*0x4]
0xb538038e    8b402b                 mov eax,[eax+0x2b]
0xb5380391    3d190040b5             cmp eax, 0xb5400019  'null'
0xb5380396    7439                   jz 0xb53803d1
0xb5380398    8b4f07                 mov ecx,[edi+0x7]
0xb538039b    8b770b                 mov esi,[edi+0xb]
0xb538039e    8b4117                 mov eax,[ecx+0x17]
0xb53803a1    3d190040b5             cmp eax, 0xb5400019  'null'
0xb53803a6    7521                   jnz 0xb53803c9
0xb53803a8    55                     push ebp
0xb53803a9    89e5                   mov ebp,esp
0xb53803ab    6800000000             push 0
0xb53803b0    52                     push edx
0xb53803b1    51                     push ecx
0xb53803b2    b960d90b08             mov ecx,0x80bd960
0xb53803b7    ba01000000             mov edx,0x1
0xb53803bc    e867fcffff             call 0xb5380028  [stub: CallToRuntime]
0xb53803c1    59                     pop ecx
0xb53803c2    5a                     pop edx
0xb53803c3    8b4117                 mov eax,[ecx+0x17]
0xb53803c6    89ec                   mov esp,ebp
0xb53803c8    5d                     pop ebp
0xb53803c9    8b4803                 mov ecx,[eax+0x3]
0xb53803cc    83c10f                 add ecx,0xf
0xb53803cf    ffe1                   jmp ecx
0xb53803d1    55                     push ebp
0xb53803d2    89e5                   mov ebp,esp
0xb53803d4    6800000000             push 0
0xb53803d9    68190040b5             push 0xb5400019
0xb53803de    57                     push edi
0xb53803df    52                     push edx
0xb53803e0    8b520b                 mov edx,[edx+0xb]
0xb53803e3    b9190040b5             mov ecx,0xb5400019  'null'
0xb53803e8    e8abfdffff             call 0xb5380198  [stub: AllocateArray]
0xb53803ed    d1fa                   sar edx, 1
0xb53803ef    50                     push eax
0xb53803f0    8d5c9418               lea ebx,[esp+edx*0x4+0x18]
0xb53803f4    8d480b                 lea ecx,[eax+0xb]
0xb53803f7    eb0a                   jmp 0xb5380403
0xb53803f9    8b03                   mov eax,[ebx]
0xb53803fb    8901                   mov [ecx],eax
0xb53803fd    83c104                 add ecx,0x4
0xb5380400    83eb04                 sub ebx,0x4
0xb5380403    4a                     dec edx
0xb5380404    79f3                   jns 0xb53803f9
0xb5380406    b9c0790b08             mov ecx,0x80b79c0
0xb538040b    ba03000000             mov edx,0x3
0xb5380410    e813fcffff             call 0xb5380028  [stub: CallToRuntime]
0xb5380415    58                     pop eax
0xb5380416    58                     pop eax
0xb5380417    58                     pop eax
0xb5380418    58                     pop eax
0xb5380419    89ec                   mov esp,ebp
0xb538041b    5d                     pop ebp
0xb538041c    c3                     ret
}
Code for stub '_stub_FixCallersTarget': {
0xb5380438    55                     push ebp
0xb5380439    89e5                   mov ebp,esp
0xb538043b    6800000000             push 0
0xb5380440    52                     push edx
0xb5380441    68190040b5             push 0xb5400019
0xb5380446    b930e80a08             mov ecx,0x80ae830
0xb538044b    ba00000000             mov edx,0
0xb5380450    e8d3fbffff             call 0xb5380028  [stub: CallToRuntime]
0xb5380455    58                     pop eax
0xb5380456    5a                     pop edx
0xb5380457    8b4003                 mov eax,[eax+0x3]
0xb538045a    83c00f                 add eax,0xf
0xb538045d    89ec                   mov esp,ebp
0xb538045f    5d                     pop ebp
0xb5380460    ffe0                   jmp eax
0xb5380462    cc                     int3
}
Code for stub '_stub_Deoptimize': {
0xb5380478    55                     push ebp
0xb5380479    89e5                   mov ebp,esp
0xb538047b    57                     push edi
0xb538047c    56                     push esi
0xb538047d    55                     push ebp
0xb538047e    54                     push esp
0xb538047f    53                     push ebx
0xb5380480    52                     push edx
0xb5380481    51                     push ecx
0xb5380482    50                     push eax
0xb5380483    83ec40                 sub esp,0x40
0xb5380486    f20f110424             movsd [esp],xmm0
0xb538048b    f20f114c2408           movsd [esp+0x8],xmm1
0xb5380491    f20f11542410           movsd [esp+0x10],xmm2
0xb5380497    f20f115c2418           movsd [esp+0x18],xmm3
0xb538049d    f20f11642420           movsd [esp+0x20],xmm4
0xb53804a3    f20f116c2428           movsd [esp+0x28],xmm5
0xb53804a9    f20f11742430           movsd [esp+0x30],xmm6
0xb53804af    f20f117c2438           movsd [esp+0x38],xmm7
0xb53804b5    89e1                   mov ecx,esp
0xb53804b7    83ec04                 sub esp,0x4
0xb53804ba    83e4f0                 and esp,0xf0
0xb53804bd    d1f8                   sar eax, 1
0xb53804bf    890c24                 mov [esp],ecx
0xb53804c2    e87966d352             call 0x80b6b40
0xb53804c7    89ec                   mov esp,ebp
0xb53804c9    5d                     pop ebp
0xb53804ca    5a                     pop edx
0xb53804cb    89ec                   mov esp,ebp
0xb53804cd    2be0                   sub esp,eax
0xb53804cf    891424                 mov [esp],edx
0xb53804d2    55                     push ebp
0xb53804d3    89e5                   mov ebp,esp
0xb53804d5    89e1                   mov ecx,esp
0xb53804d7    83ec04                 sub esp,0x4
0xb53804da    83e4f0                 and esp,0xf0
0xb53804dd    890c24                 mov [esp],ecx
0xb53804e0    e8cb4ad352             call 0x80b4fb0
0xb53804e5    89ec                   mov esp,ebp
0xb53804e7    5d                     pop ebp
0xb53804e8    89c5                   mov ebp,eax
0xb53804ea    55                     push ebp
0xb53804eb    89e5                   mov ebp,esp
0xb53804ed    6800000000             push 0
0xb53804f2    b9e01a0b08             mov ecx,0x80b1ae0
0xb53804f7    ba00000000             mov edx,0
0xb53804fc    e827fbffff             call 0xb5380028  [stub: CallToRuntime]
0xb5380501    89ec                   mov esp,ebp
0xb5380503    5d                     pop ebp
0xb5380504    c3                     ret
}
Code for stub '_stub_DeoptimizeLazy': {
0xb5380518    5b                     pop ebx
0xb5380519    83eb05                 sub ebx,0x5
0xb538051c    53                     push ebx
0xb538051d    55                     push ebp
0xb538051e    89e5                   mov ebp,esp
0xb5380520    57                     push edi
0xb5380521    56                     push esi
0xb5380522    55                     push ebp
0xb5380523    54                     push esp
0xb5380524    53                     push ebx
0xb5380525    52                     push edx
0xb5380526    51                     push ecx
0xb5380527    50                     push eax
0xb5380528    83ec40                 sub esp,0x40
0xb538052b    f20f110424             movsd [esp],xmm0
0xb5380530    f20f114c2408           movsd [esp+0x8],xmm1
0xb5380536    f20f11542410           movsd [esp+0x10],xmm2
0xb538053c    f20f115c2418           movsd [esp+0x18],xmm3
0xb5380542    f20f11642420           movsd [esp+0x20],xmm4
0xb5380548    f20f116c2428           movsd [esp+0x28],xmm5
0xb538054e    f20f11742430           movsd [esp+0x30],xmm6
0xb5380554    f20f117c2438           movsd [esp+0x38],xmm7
0xb538055a    89e1                   mov ecx,esp
0xb538055c    83ec04                 sub esp,0x4
0xb538055f    83e4f0                 and esp,0xf0
0xb5380562    d1f8                   sar eax, 1
0xb5380564    890c24                 mov [esp],ecx
0xb5380567    e8d465d352             call 0x80b6b40
0xb538056c    8b5de0                 mov ebx,[ebp-0x20]
0xb538056f    89ec                   mov esp,ebp
0xb5380571    5d                     pop ebp
0xb5380572    5a                     pop edx
0xb5380573    89ec                   mov esp,ebp
0xb5380575    2be0                   sub esp,eax
0xb5380577    891424                 mov [esp],edx
0xb538057a    55                     push ebp
0xb538057b    89e5                   mov ebp,esp
0xb538057d    89e1                   mov ecx,esp
0xb538057f    53                     push ebx
0xb5380580    83ec04                 sub esp,0x4
0xb5380583    83e4f0                 and esp,0xf0
0xb5380586    890c24                 mov [esp],ecx
0xb5380589    e8224ad352             call 0x80b4fb0
0xb538058e    8b5dfc                 mov ebx,[ebp-0x4]
0xb5380591    89ec                   mov esp,ebp
0xb5380593    5d                     pop ebp
0xb5380594    89c5                   mov ebp,eax
0xb5380596    55                     push ebp
0xb5380597    89e5                   mov ebp,esp
0xb5380599    6800000000             push 0
0xb538059e    53                     push ebx
0xb538059f    b9e01a0b08             mov ecx,0x80b1ae0
0xb53805a4    ba00000000             mov edx,0
0xb53805a9    e87afaffff             call 0xb5380028  [stub: CallToRuntime]
0xb53805ae    58                     pop eax
0xb53805af    89ec                   mov esp,ebp
0xb53805b1    5d                     pop ebp
0xb53805b2    c3                     ret
}
Code for stub '_stub_BreakpointStatic': {
0xb53805c8    55                     push ebp
0xb53805c9    89e5                   mov ebp,esp
0xb53805cb    6800000000             push 0
0xb53805d0    52                     push edx
0xb53805d1    68190040b5             push 0xb5400019
0xb53805d6    b9e01e0b08             mov ecx,0x80b1ee0
0xb53805db    ba00000000             mov edx,0
0xb53805e0    e843faffff             call 0xb5380028  [stub: CallToRuntime]
0xb53805e5    58                     pop eax
0xb53805e6    5a                     pop edx
0xb53805e7    89ec                   mov esp,ebp
0xb53805e9    5d                     pop ebp
0xb53805ea    8b4803                 mov ecx,[eax+0x3]
0xb53805ed    83c10f                 add ecx,0xf
0xb53805f0    ffe1                   jmp ecx
}
Code for stub '_stub_BreakpointReturn': {
0xb5380608    55                     push ebp
0xb5380609    89e5                   mov ebp,esp
0xb538060b    6800000000             push 0
0xb5380610    50                     push eax
0xb5380611    b9f0d10a08             mov ecx,0x80ad1f0
0xb5380616    ba00000000             mov edx,0
0xb538061b    e808faffff             call 0xb5380028  [stub: CallToRuntime]
0xb5380620    58                     pop eax
0xb5380621    89ec                   mov esp,ebp
0xb5380623    5d                     pop ebp
0xb5380624    59                     pop ecx
0xb5380625    89ec                   mov esp,ebp
0xb5380627    5d                     pop ebp
0xb5380628    c3                     ret
}
Code for stub '_stub_Subtype1TestCache': {
0xb5380648    8b442408               mov eax,[esp+0x8]
0xb538064c    0fb74801               movzx_w ecx,[eax+0x1]
0xb5380650    8b54240c               mov edx,[esp+0xc]
0xb5380654    8b5203                 mov edx,[edx+0x3]
0xb5380657    83c20b                 add edx,0xb
0xb538065a    03c9                   add ecx,ecx
0xb538065c    8b3a                   mov edi,[edx]
0xb538065e    81ff190040b5           cmp edi,0xb5400019
0xb5380664    7409                   jz 0xb538066f
0xb5380666    3bf9                   cmp edi,ecx
0xb5380668    740b                   jz 0xb5380675
0xb538066a    83c210                 add edx,0x10
0xb538066d    ebed                   jmp 0xb538065c
0xb538066f    b9190040b5             mov ecx,0xb5400019  'null'
0xb5380674    c3                     ret
0xb5380675    8b4a0c                 mov ecx,[edx+0xc]
0xb5380678    c3                     ret
}
Code for stub '_stub_Subtype2TestCache': {
0xb5380698    8b442408               mov eax,[esp+0x8]
0xb538069c    0fb75801               movzx_w ebx,[eax+0x1]
0xb53806a0    8b4e07                 mov ecx,[esi+0x7]
0xb53806a3    8b891c100000           mov ecx,[ecx+0x101c]
0xb53806a9    8b0c99                 mov ecx,[ecx+ebx*0x4]
0xb53806ac    bb190040b5             mov ebx,0xb5400019  'null'
0xb53806b1    8b7947                 mov edi,[ecx+0x47]
0xb53806b4    83ffff                 cmp edi,0xff
0xb53806b7    7404                   jz 0xb53806bd
0xb53806b9    8b5cb8ff               mov ebx,[eax+edi*0x4-0x1]
0xb53806bd    0fb74801               movzx_w ecx,[eax+0x1]
0xb53806c1    8b54240c               mov edx,[esp+0xc]
0xb53806c5    8b5203                 mov edx,[edx+0x3]
0xb53806c8    83c20b                 add edx,0xb
0xb53806cb    03c9                   add ecx,ecx
0xb53806cd    8b3a                   mov edi,[edx]
0xb53806cf    81ff190040b5           cmp edi,0xb5400019
0xb53806d5    7410                   jz 0xb53806e7
0xb53806d7    3bf9                   cmp edi,ecx
0xb53806d9    7507                   jnz 0xb53806e2
0xb53806db    8b7a04                 mov edi,[edx+0x4]
0xb53806de    3bfb                   cmp edi,ebx
0xb53806e0    740b                   jz 0xb53806ed
0xb53806e2    83c210                 add edx,0x10
0xb53806e5    ebe6                   jmp 0xb53806cd
0xb53806e7    b9190040b5             mov ecx,0xb5400019  'null'
0xb53806ec    c3                     ret
0xb53806ed    8b4a0c                 mov ecx,[edx+0xc]
0xb53806f0    c3                     ret
}
Code for stub '_stub_Subtype3TestCache': {
0xb5380708    8b442408               mov eax,[esp+0x8]
0xb538070c    0fb75801               movzx_w ebx,[eax+0x1]
0xb5380710    8b4e07                 mov ecx,[esi+0x7]
0xb5380713    8b891c100000           mov ecx,[ecx+0x101c]
0xb5380719    8b0c99                 mov ecx,[ecx+ebx*0x4]
0xb538071c    bb190040b5             mov ebx,0xb5400019  'null'
0xb5380721    8b7947                 mov edi,[ecx+0x47]
0xb5380724    83ffff                 cmp edi,0xff
0xb5380727    7404                   jz 0xb538072d
0xb5380729    8b5cb8ff               mov ebx,[eax+edi*0x4-0x1]
0xb538072d    0fb74801               movzx_w ecx,[eax+0x1]
0xb5380731    8b54240c               mov edx,[esp+0xc]
0xb5380735    8b5203                 mov edx,[edx+0x3]
0xb5380738    83c20b                 add edx,0xb
0xb538073b    03c9                   add ecx,ecx
0xb538073d    8b3a                   mov edi,[edx]
0xb538073f    81ff190040b5           cmp edi,0xb5400019
0xb5380745    7419                   jz 0xb5380760
0xb5380747    3bf9                   cmp edi,ecx
0xb5380749    7510                   jnz 0xb538075b
0xb538074b    8b7a04                 mov edi,[edx+0x4]
0xb538074e    3bfb                   cmp edi,ebx
0xb5380750    7509                   jnz 0xb538075b
0xb5380752    8b7a08                 mov edi,[edx+0x8]
0xb5380755    3b7c2404               cmp edi,[esp+0x4]
0xb5380759    740b                   jz 0xb5380766
0xb538075b    83c210                 add edx,0x10
0xb538075e    ebdd                   jmp 0xb538073d
0xb5380760    b9190040b5             mov ecx,0xb5400019  'null'
0xb5380765    c3                     ret
0xb5380766    8b4a0c                 mov ecx,[edx+0xc]
0xb5380769    c3                     ret
}
Code for stub '_stub_GetStackPointer': {
0xb5380788    8d442404               lea eax,[esp+0x4]
0xb538078c    c3                     ret
}
Code for stub '_stub_JumpToExceptionHandler': {
0xb53807a8    8b542414               mov edx,[esp+0x14]
0xb53807ac    8b442410               mov eax,[esp+0x10]
0xb53807b0    8b6c240c               mov ebp,[esp+0xc]
0xb53807b4    8b5c2404               mov ebx,[esp+0x4]
0xb53807b8    8b642408               mov esp,[esp+0x8]
0xb53807bc    ffe3                   jmp ebx
}
Code for stub '_stub_JumpToErrorHandler': {
0xb53807d8    8b442410               mov eax,[esp+0x10]
0xb53807dc    8b6c240c               mov ebp,[esp+0xc]
0xb53807e0    8b5c2404               mov ebx,[esp+0x4]
0xb53807e4    8b642408               mov esp,[esp+0x8]
0xb53807e8    ffe3                   jmp ebx
}
Code for stub '_stub_IdenticalWithNumberCheck': {
0xb5380808    50                     push eax
0xb5380809    52                     push edx
0xb538080a    51                     push ecx
0xb538080b    8b442414               mov eax,[esp+0x14]
0xb538080f    8b542410               mov edx,[esp+0x10]
0xb5380813    a801                   test al,0x1
0xb5380815    747b                   jz 0xb5380892
0xb5380817    f6c201                 test_b edx,0x1
0xb538081a    7476                   jz 0xb5380892
0xb538081c    0fb74801               movzx_w ecx,[eax+0x1]
0xb5380820    83f92c                 cmp ecx,0x2c
0xb5380823    7519                   jnz 0xb538083e
0xb5380825    0fb74a01               movzx_w ecx,[edx+0x1]
0xb5380829    83f92c                 cmp ecx,0x2c
0xb538082c    7566                   jnz 0xb5380894
0xb538082e    8b4803                 mov ecx,[eax+0x3]
0xb5380831    3b4a03                 cmp ecx,[edx+0x3]
0xb5380834    755e                   jnz 0xb5380894
0xb5380836    8b4807                 mov ecx,[eax+0x7]
0xb5380839    3b4a07                 cmp ecx,[edx+0x7]
0xb538083c    eb56                   jmp 0xb5380894
0xb538083e    0fb74801               movzx_w ecx,[eax+0x1]
0xb5380842    83f92a                 cmp ecx,0x2a
0xb5380845    7519                   jnz 0xb5380860
0xb5380847    0fb74a01               movzx_w ecx,[edx+0x1]
0xb538084b    83f92a                 cmp ecx,0x2a
0xb538084e    7544                   jnz 0xb5380894
0xb5380850    8b4803                 mov ecx,[eax+0x3]
0xb5380853    3b4a03                 cmp ecx,[edx+0x3]
0xb5380856    753c                   jnz 0xb5380894
0xb5380858    8b4807                 mov ecx,[eax+0x7]
0xb538085b    3b4a07                 cmp ecx,[edx+0x7]
0xb538085e    eb34                   jmp 0xb5380894
0xb5380860    0fb74801               movzx_w ecx,[eax+0x1]
0xb5380864    83f92b                 cmp ecx,0x2b
0xb5380867    7529                   jnz 0xb5380892
0xb5380869    0fb74a01               movzx_w ecx,[edx+0x1]
0xb538086d    83f92b                 cmp ecx,0x2b
0xb5380870    7522                   jnz 0xb5380894
0xb5380872    55                     push ebp
0xb5380873    89e5                   mov ebp,esp
0xb5380875    83ec08                 sub esp,0x8
0xb5380878    83e4f0                 and esp,0xf0
0xb538087b    89442404               mov [esp+0x4],eax
0xb538087f    891424                 mov [esp],edx
0xb5380882    e849d0d252             call 0x80ad8d0
0xb5380887    89ec                   mov esp,ebp
0xb5380889    5d                     pop ebp
0xb538088a    83f800                 cmp eax,0
0xb538088d    e902000000             jmp 0xb5380894
0xb5380892    3bc2                   cmp eax,edx
0xb5380894    59                     pop ecx
0xb5380895    5a                     pop edx
0xb5380896    58                     pop eax
0xb5380897    c3                     ret
}
Code for stub '_stub_InvokeDartCode': {
0xb3000028    55                     push ebp
0xb3000029    89e5                   mov ebp,esp
0xb300002b    53                     push ebx
0xb300002c    56                     push esi
0xb300002d    57                     push edi
0xb300002e    8b7514                 mov esi,[ebp+0x14]
0xb3000031    8b7604                 mov esi,[esi+0x4]
0xb3000034    8b7e07                 mov edi,[esi+0x7]
0xb3000037    8b974c100000           mov edx,[edi+0x104c]
0xb300003d    52                     push edx
0xb300003e    c7874c10000000000000   mov [edi+0x104c],0
0xb3000048    8b8f48100000           mov ecx,[edi+0x1048]
0xb300004e    51                     push ecx
0xb300004f    8b550c                 mov edx,[ebp+0xc]
0xb3000052    8b5204                 mov edx,[edx+0x4]
0xb3000055    8b5a0b                 mov ebx,[edx+0xb]
0xb3000058    d1fb                   sar ebx, 1
0xb300005a    85db                   test ebx,ebx
0xb300005c    7414                   jz 0xb3000072
0xb300005e    b800000000             mov eax,0
0xb3000063    8b7d10                 mov edi,[ebp+0x10]
0xb3000066    8b0c87                 mov ecx,[edi+eax*0x4]
0xb3000069    8b4904                 mov ecx,[ecx+0x4]
0xb300006c    51                     push ecx
0xb300006d    40                     inc eax
0xb300006e    3bc3                   cmp eax,ebx
0xb3000070    7cf4                   jl 0xb3000066
0xb3000072    ff5508                 call [ebp+0x8]
0xb3000075    8b7514                 mov esi,[ebp+0x14]
0xb3000078    8b7604                 mov esi,[esi+0x4]
0xb300007b    8b550c                 mov edx,[ebp+0xc]
0xb300007e    8b5204                 mov edx,[edx+0x4]
0xb3000081    8b520b                 mov edx,[edx+0xb]
0xb3000084    8d2454                 lea esp,[esp+edx*0x2]
0xb3000087    8b7607                 mov esi,[esi+0x7]
0xb300008a    59                     pop ecx
0xb300008b    898e48100000           mov [esi+0x1048],ecx
0xb3000091    5a                     pop edx
0xb3000092    89964c100000           mov [esi+0x104c],edx
0xb3000098    5f                     pop edi
0xb3000099    5e                     pop esi
0xb300009a    5b                     pop ebx
0xb300009b    89ec                   mov esp,ebp
0xb300009d    5d                     pop ebp
0xb300009e    c3                     ret
}
Code for stub '_stub_AllocateContext': {
0xb30000b8    8d1c9517000000         lea ebx,[edx*0x4+0x17]
0xb30000bf    83e3f8                 and ebx,0xf8
0xb30000c2    8b0508fe5609           mov eax,[0x956fe08]
0xb30000c8    03d8                   add ebx,eax
0xb30000ca    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb30000d0    7354                   jnc 0xb3000126
0xb30000d2    891d08fe5609           mov [0x956fe08],ebx
0xb30000d8    83c001                 add eax,0x1
0xb30000db    8d1c9517000000         lea ebx,[edx*0x4+0x17]
0xb30000e2    83e3f8                 and ebx,0xf8
0xb30000e5    81fbf8070000           cmp ebx,0x7f8
0xb30000eb    7708                   ja 0xb30000f5
0xb30000ed    c1e305                 shl ebx, 0x5
0xb30000f0    e905000000             jmp 0xb30000fa
0xb30000f5    bb00000000             mov ebx,0
0xb30000fa    81cb00001900           or ebx,0x190000
0xb3000100    8958ff                 mov [eax-0x1],ebx
0xb3000103    895003                 mov [eax+0x3],edx
0xb3000106    8b5e07                 mov ebx,[esi+0x7]
0xb3000109    895807                 mov [eax+0x7],ebx
0xb300010c    c7400b190040b5         mov [eax+0xb],0xb5400019
0xb3000113    8d580f                 lea ebx,[eax+0xf]
0xb3000116    eb08                   jmp 0xb3000120
0xb3000118    4a                     dec edx
0xb3000119    c70493190040b5         mov [ebx+edx*0x4],0xb5400019
0xb3000120    83fa00                 cmp edx,0
0xb3000123    75f3                   jnz 0xb3000118
0xb3000125    c3                     ret
0xb3000126    55                     push ebp
0xb3000127    89e5                   mov ebp,esp
0xb3000129    6800000000             push 0
0xb300012e    68190040b5             push 0xb5400019
0xb3000133    03d2                   add edx,edx
0xb3000135    52                     push edx
0xb3000136    b910e30a08             mov ecx,0x80ae310
0xb300013b    ba01000000             mov edx,0x1
0xb3000140    e8e3fe3702             call 0xb5380028  [stub: CallToRuntime]
0xb3000145    58                     pop eax
0xb3000146    58                     pop eax
0xb3000147    89ec                   mov esp,ebp
0xb3000149    5d                     pop ebp
0xb300014a    c3                     ret
}
Code for stub '_stub_UpdateStoreBuffer': {
0xb3000168    52                     push edx
0xb3000169    51                     push ecx
0xb300016a    8b5607                 mov edx,[esi+0x7]
0xb300016d    8b4a08                 mov ecx,[edx+0x8]
0xb3000170    89448a0c               mov [edx+ecx*0x4+0xc],eax
0xb3000174    41                     inc ecx
0xb3000175    894a08                 mov [edx+0x8],ecx
0xb3000178    81f900040000           cmp ecx,0x400
0xb300017e    59                     pop ecx
0xb300017f    5a                     pop edx
0xb3000180    7401                   jz 0xb3000183
0xb3000182    c3                     ret
0xb3000183    c8000000               enter 0, 0
0xb3000187    50                     push eax
0xb3000188    51                     push ecx
0xb3000189    52                     push edx
0xb300018a    83ec38                 sub esp,0x38
0xb300018d    f20f110c24             movsd [esp],xmm1
0xb3000192    f20f11542408           movsd [esp+0x8],xmm2
0xb3000198    f20f115c2410           movsd [esp+0x10],xmm3
0xb300019e    f20f11642418           movsd [esp+0x18],xmm4
0xb30001a4    f20f116c2420           movsd [esp+0x20],xmm5
0xb30001aa    f20f11742428           movsd [esp+0x28],xmm6
0xb30001b0    f20f117c2430           movsd [esp+0x30],xmm7
0xb30001b6    83ec04                 sub esp,0x4
0xb30001b9    83e4f0                 and esp,0xf0
0xb30001bc    8b4607                 mov eax,[esi+0x7]
0xb30001bf    890424                 mov [esp],eax
0xb30001c2    e8596e1e55             call 0x81e7020
0xb30001c7    8d65bc                 lea esp,[ebp-0x44]
0xb30001ca    f20f100c24             movsd xmm1,[esp]
0xb30001cf    f20f10542408           movsd xmm2,[esp+0x8]
0xb30001d5    f20f105c2410           movsd xmm3,[esp+0x10]
0xb30001db    f20f10642418           movsd xmm4,[esp+0x18]
0xb30001e1    f20f106c2420           movsd xmm5,[esp+0x20]
0xb30001e7    f20f10742428           movsd xmm6,[esp+0x28]
0xb30001ed    f20f107c2430           movsd xmm7,[esp+0x30]
0xb30001f3    83c438                 add esp,0x38
0xb30001f6    5a                     pop edx
0xb30001f7    59                     pop ecx
0xb30001f8    58                     pop eax
0xb30001f9    c9                     leave
0xb30001fa    c3                     ret
}
Code for stub '_stub_OneArgCheckInlineCache': {
0xb3000218    8b5903                 mov ebx,[ecx+0x3]
0xb300021b    817b2bb80b0000         cmp [ebx+0x2b],0xbb8
0xb3000222    7403                   jz 0xb3000227
0xb3000224    ff432b                 inc [ebx+0x2b]
0xb3000227    8b590b                 mov ebx,[ecx+0xb]
0xb300022a    8d5b0b                 lea ebx,[ebx+0xb]
0xb300022d    8b420b                 mov eax,[edx+0xb]
0xb3000230    8b0444                 mov eax,[esp+eax*0x2]
0xb3000233    e876000000             call 0xb30002ae
0xb3000238    8b3b                   mov edi,[ebx]
0xb300023a    e909000000             jmp 0xb3000248
0xb300023f    3bc7                   cmp eax,edi
0xb3000241    744c                   jz 0xb300028f
0xb3000243    83c30c                 add ebx,0xc
0xb3000246    8b3b                   mov edi,[ebx]
0xb3000248    83ff00                 cmp edi,0
0xb300024b    75f2                   jnz 0xb300023f
0xb300024d    8b420b                 mov eax,[edx+0xb]
0xb3000250    8d0444                 lea eax,[esp+eax*0x2]
0xb3000253    55                     push ebp
0xb3000254    89e5                   mov ebp,esp
0xb3000256    6800000000             push 0
0xb300025b    52                     push edx
0xb300025c    51                     push ecx
0xb300025d    68190040b5             push 0xb5400019
0xb3000262    8b18                   mov ebx,[eax]
0xb3000264    53                     push ebx
0xb3000265    51                     push ecx
0xb3000266    52                     push edx
0xb3000267    b950600b08             mov ecx,0x80b6050
0xb300026c    ba03000000             mov edx,0x3
0xb3000271    e8b2fd3702             call 0xb5380028  [stub: CallToRuntime]
0xb3000276    58                     pop eax
0xb3000277    58                     pop eax
0xb3000278    58                     pop eax
0xb3000279    58                     pop eax
0xb300027a    59                     pop ecx
0xb300027b    5a                     pop edx
0xb300027c    89ec                   mov esp,ebp
0xb300027e    5d                     pop ebp
0xb300027f    3d190040b5             cmp eax, 0xb5400019
0xb3000284    751d                   jnz 0xb30002a3
0xb3000286    c6411801               mov_b [ecx+0x18],0x1
0xb300028a    e929003802             jmp 0xb53802b8  [stub: InstanceFunctionLookup]
0xb300028f    8b4304                 mov eax,[ebx+0x4]
0xb3000292    83430802               add [ebx+0x8],0x2
0xb3000296    0f8107000000           jno 0xb30002a3
0xb300029c    c74308feffff7f         mov [ebx+0x8],0x7ffffffe
0xb30002a3    8b4017                 mov eax,[eax+0x17]
0xb30002a6    8b4003                 mov eax,[eax+0x3]
0xb30002a9    83c00f                 add eax,0xf
0xb30002ac    ffe0                   jmp eax
0xb30002ae    a801                   test al,0x1
0xb30002b0    7506                   jnz 0xb30002b8
0xb30002b2    b852000000             mov eax,0x52
0xb30002b7    c3                     ret
0xb30002b8    0fb74001               movzx_w eax,[eax+0x1]
0xb30002bc    03c0                   add eax,eax
0xb30002be    c3                     ret
}
Code for stub '_stub_TwoArgsCheckInlineCache': {
0xb30002d8    8b5903                 mov ebx,[ecx+0x3]
0xb30002db    817b2bb80b0000         cmp [ebx+0x2b],0xbb8
0xb30002e2    7403                   jz 0xb30002e7
0xb30002e4    ff432b                 inc [ebx+0x2b]
0xb30002e7    8b590b                 mov ebx,[ecx+0xb]
0xb30002ea    8d5b0b                 lea ebx,[ebx+0xb]
0xb30002ed    8b420b                 mov eax,[edx+0xb]
0xb30002f0    8b0444                 mov eax,[esp+eax*0x2]
0xb30002f3    e89d000000             call 0xb3000395
0xb30002f8    8b3b                   mov edi,[ebx]
0xb30002fa    e92b000000             jmp 0xb300032a
0xb30002ff    3bc7                   cmp eax,edi
0xb3000301    0f8513000000           jnz 0xb300031a
0xb3000307    8b420b                 mov eax,[edx+0xb]
0xb300030a    8b4444fc               mov eax,[esp+eax*0x2-0x4]
0xb300030e    e882000000             call 0xb3000395
0xb3000313    8b7b04                 mov edi,[ebx+0x4]
0xb3000316    3bc7                   cmp eax,edi
0xb3000318    745c                   jz 0xb3000376
0xb300031a    8b420b                 mov eax,[edx+0xb]
0xb300031d    8b0444                 mov eax,[esp+eax*0x2]
0xb3000320    e870000000             call 0xb3000395
0xb3000325    83c310                 add ebx,0x10
0xb3000328    8b3b                   mov edi,[ebx]
0xb300032a    83ff00                 cmp edi,0
0xb300032d    75d0                   jnz 0xb30002ff
0xb300032f    8b420b                 mov eax,[edx+0xb]
0xb3000332    8d0444                 lea eax,[esp+eax*0x2]
0xb3000335    55                     push ebp
0xb3000336    89e5                   mov ebp,esp
0xb3000338    6800000000             push 0
0xb300033d    52                     push edx
0xb300033e    51                     push ecx
0xb300033f    68190040b5             push 0xb5400019
0xb3000344    8b18                   mov ebx,[eax]
0xb3000346    53                     push ebx
0xb3000347    8b58fc                 mov ebx,[eax-0x4]
0xb300034a    53                     push ebx
0xb300034b    51                     push ecx
0xb300034c    52                     push edx
0xb300034d    b950630b08             mov ecx,0x80b6350
0xb3000352    ba04000000             mov edx,0x4
0xb3000357    e8ccfc3702             call 0xb5380028  [stub: CallToRuntime]
0xb300035c    58                     pop eax
0xb300035d    58                     pop eax
0xb300035e    58                     pop eax
0xb300035f    58                     pop eax
0xb3000360    58                     pop eax
0xb3000361    59                     pop ecx
0xb3000362    5a                     pop edx
0xb3000363    89ec                   mov esp,ebp
0xb3000365    5d                     pop ebp
0xb3000366    3d190040b5             cmp eax, 0xb5400019
0xb300036b    751d                   jnz 0xb300038a
0xb300036d    c6411801               mov_b [ecx+0x18],0x1
0xb3000371    e942ff3702             jmp 0xb53802b8  [stub: InstanceFunctionLookup]
0xb3000376    8b4308                 mov eax,[ebx+0x8]
0xb3000379    83430c02               add [ebx+0xc],0x2
0xb300037d    0f8107000000           jno 0xb300038a
0xb3000383    c7430cfeffff7f         mov [ebx+0xc],0x7ffffffe
0xb300038a    8b4017                 mov eax,[eax+0x17]
0xb300038d    8b4003                 mov eax,[eax+0x3]
0xb3000390    83c00f                 add eax,0xf
0xb3000393    ffe0                   jmp eax
0xb3000395    a801                   test al,0x1
0xb3000397    7506                   jnz 0xb300039f
0xb3000399    b852000000             mov eax,0x52
0xb300039e    c3                     ret
0xb300039f    0fb74001               movzx_w eax,[eax+0x1]
0xb30003a3    03c0                   add eax,eax
0xb30003a5    c3                     ret
}
Code for stub '_stub_ThreeArgsCheckInlineCache': {
0xb30003b8    8b5903                 mov ebx,[ecx+0x3]
0xb30003bb    817b2bb80b0000         cmp [ebx+0x2b],0xbb8
0xb30003c2    7403                   jz 0xb30003c7
0xb30003c4    ff432b                 inc [ebx+0x2b]
0xb30003c7    8b590b                 mov ebx,[ecx+0xb]
0xb30003ca    8d5b0b                 lea ebx,[ebx+0xb]
0xb30003cd    8b420b                 mov eax,[edx+0xb]
0xb30003d0    8b0444                 mov eax,[esp+eax*0x2]
0xb30003d3    e8b9000000             call 0xb3000491
0xb30003d8    8b3b                   mov edi,[ebx]
0xb30003da    e942000000             jmp 0xb3000421
0xb30003df    3bc7                   cmp eax,edi
0xb30003e1    0f852a000000           jnz 0xb3000411
0xb30003e7    8b420b                 mov eax,[edx+0xb]
0xb30003ea    8b4444fc               mov eax,[esp+eax*0x2-0x4]
0xb30003ee    e89e000000             call 0xb3000491
0xb30003f3    8b7b04                 mov edi,[ebx+0x4]
0xb30003f6    3bc7                   cmp eax,edi
0xb30003f8    0f8513000000           jnz 0xb3000411
0xb30003fe    8b420b                 mov eax,[edx+0xb]
0xb3000401    8b4444f8               mov eax,[esp+eax*0x2-0x8]
0xb3000405    e887000000             call 0xb3000491
0xb300040a    8b7b08                 mov edi,[ebx+0x8]
0xb300040d    3bc7                   cmp eax,edi
0xb300040f    7461                   jz 0xb3000472
0xb3000411    8b420b                 mov eax,[edx+0xb]
0xb3000414    8b0444                 mov eax,[esp+eax*0x2]
0xb3000417    e875000000             call 0xb3000491
0xb300041c    83c314                 add ebx,0x14
0xb300041f    8b3b                   mov edi,[ebx]
0xb3000421    83ff00                 cmp edi,0
0xb3000424    75b9                   jnz 0xb30003df
0xb3000426    8b420b                 mov eax,[edx+0xb]
0xb3000429    8d0444                 lea eax,[esp+eax*0x2]
0xb300042c    55                     push ebp
0xb300042d    89e5                   mov ebp,esp
0xb300042f    6800000000             push 0
0xb3000434    52                     push edx
0xb3000435    51                     push ecx
0xb3000436    68190040b5             push 0xb5400019
0xb300043b    8b18                   mov ebx,[eax]
0xb300043d    53                     push ebx
0xb300043e    8b58fc                 mov ebx,[eax-0x4]
0xb3000441    53                     push ebx
0xb3000442    8b58f8                 mov ebx,[eax-0x8]
0xb3000445    53                     push ebx
0xb3000446    51                     push ecx
0xb3000447    52                     push edx
0xb3000448    b980660b08             mov ecx,0x80b6680
0xb300044d    ba05000000             mov edx,0x5
0xb3000452    e8d1fb3702             call 0xb5380028  [stub: CallToRuntime]
0xb3000457    58                     pop eax
0xb3000458    58                     pop eax
0xb3000459    58                     pop eax
0xb300045a    58                     pop eax
0xb300045b    58                     pop eax
0xb300045c    58                     pop eax
0xb300045d    59                     pop ecx
0xb300045e    5a                     pop edx
0xb300045f    89ec                   mov esp,ebp
0xb3000461    5d                     pop ebp
0xb3000462    3d190040b5             cmp eax, 0xb5400019
0xb3000467    751d                   jnz 0xb3000486
0xb3000469    c6411801               mov_b [ecx+0x18],0x1
0xb300046d    e946fe3702             jmp 0xb53802b8  [stub: InstanceFunctionLookup]
0xb3000472    8b430c                 mov eax,[ebx+0xc]
0xb3000475    83431002               add [ebx+0x10],0x2
0xb3000479    0f8107000000           jno 0xb3000486
0xb300047f    c74310feffff7f         mov [ebx+0x10],0x7ffffffe
0xb3000486    8b4017                 mov eax,[eax+0x17]
0xb3000489    8b4003                 mov eax,[eax+0x3]
0xb300048c    83c00f                 add eax,0xf
0xb300048f    ffe0                   jmp eax
0xb3000491    a801                   test al,0x1
0xb3000493    7506                   jnz 0xb300049b
0xb3000495    b852000000             mov eax,0x52
0xb300049a    c3                     ret
0xb300049b    0fb74001               movzx_w eax,[eax+0x1]
0xb300049f    03c0                   add eax,eax
0xb30004a1    c3                     ret
}
Code for stub '_stub_OneArgOptimizedCheckInlineCache': {
0xb30004b8    817f2bb80b0000         cmp [edi+0x2b],0xbb8
0xb30004bf    7d03                   jnl 0xb30004c4
0xb30004c1    ff472b                 inc [edi+0x2b]
0xb30004c4    8b590b                 mov ebx,[ecx+0xb]
0xb30004c7    8d5b0b                 lea ebx,[ebx+0xb]
0xb30004ca    8b420b                 mov eax,[edx+0xb]
0xb30004cd    8b0444                 mov eax,[esp+eax*0x2]
0xb30004d0    e876000000             call 0xb300054b
0xb30004d5    8b3b                   mov edi,[ebx]
0xb30004d7    e909000000             jmp 0xb30004e5
0xb30004dc    3bc7                   cmp eax,edi
0xb30004de    744c                   jz 0xb300052c
0xb30004e0    83c30c                 add ebx,0xc
0xb30004e3    8b3b                   mov edi,[ebx]
0xb30004e5    83ff00                 cmp edi,0
0xb30004e8    75f2                   jnz 0xb30004dc
0xb30004ea    8b420b                 mov eax,[edx+0xb]
0xb30004ed    8d0444                 lea eax,[esp+eax*0x2]
0xb30004f0    55                     push ebp
0xb30004f1    89e5                   mov ebp,esp
0xb30004f3    6800000000             push 0
0xb30004f8    52                     push edx
0xb30004f9    51                     push ecx
0xb30004fa    68190040b5             push 0xb5400019
0xb30004ff    8b18                   mov ebx,[eax]
0xb3000501    53                     push ebx
0xb3000502    51                     push ecx
0xb3000503    52                     push edx
0xb3000504    b950600b08             mov ecx,0x80b6050
0xb3000509    ba03000000             mov edx,0x3
0xb300050e    e815fb3702             call 0xb5380028  [stub: CallToRuntime]
0xb3000513    58                     pop eax
0xb3000514    58                     pop eax
0xb3000515    58                     pop eax
0xb3000516    58                     pop eax
0xb3000517    59                     pop ecx
0xb3000518    5a                     pop edx
0xb3000519    89ec                   mov esp,ebp
0xb300051b    5d                     pop ebp
0xb300051c    3d190040b5             cmp eax, 0xb5400019
0xb3000521    751d                   jnz 0xb3000540
0xb3000523    c6411801               mov_b [ecx+0x18],0x1
0xb3000527    e98cfd3702             jmp 0xb53802b8  [stub: InstanceFunctionLookup]
0xb300052c    8b4304                 mov eax,[ebx+0x4]
0xb300052f    83430802               add [ebx+0x8],0x2
0xb3000533    0f8107000000           jno 0xb3000540
0xb3000539    c74308feffff7f         mov [ebx+0x8],0x7ffffffe
0xb3000540    8b4017                 mov eax,[eax+0x17]
0xb3000543    8b4003                 mov eax,[eax+0x3]
0xb3000546    83c00f                 add eax,0xf
0xb3000549    ffe0                   jmp eax
0xb300054b    a801                   test al,0x1
0xb300054d    7506                   jnz 0xb3000555
0xb300054f    b852000000             mov eax,0x52
0xb3000554    c3                     ret
0xb3000555    0fb74001               movzx_w eax,[eax+0x1]
0xb3000559    03c0                   add eax,eax
0xb300055b    c3                     ret
}
Code for stub '_stub_TwoArgsOptimizedCheckInlineCache': {
0xb3000578    817f2bb80b0000         cmp [edi+0x2b],0xbb8
0xb300057f    7d03                   jnl 0xb3000584
0xb3000581    ff472b                 inc [edi+0x2b]
0xb3000584    8b590b                 mov ebx,[ecx+0xb]
0xb3000587    8d5b0b                 lea ebx,[ebx+0xb]
0xb300058a    8b420b                 mov eax,[edx+0xb]
0xb300058d    8b0444                 mov eax,[esp+eax*0x2]
0xb3000590    e89d000000             call 0xb3000632
0xb3000595    8b3b                   mov edi,[ebx]
0xb3000597    e92b000000             jmp 0xb30005c7
0xb300059c    3bc7                   cmp eax,edi
0xb300059e    0f8513000000           jnz 0xb30005b7
0xb30005a4    8b420b                 mov eax,[edx+0xb]
0xb30005a7    8b4444fc               mov eax,[esp+eax*0x2-0x4]
0xb30005ab    e882000000             call 0xb3000632
0xb30005b0    8b7b04                 mov edi,[ebx+0x4]
0xb30005b3    3bc7                   cmp eax,edi
0xb30005b5    745c                   jz 0xb3000613
0xb30005b7    8b420b                 mov eax,[edx+0xb]
0xb30005ba    8b0444                 mov eax,[esp+eax*0x2]
0xb30005bd    e870000000             call 0xb3000632
0xb30005c2    83c310                 add ebx,0x10
0xb30005c5    8b3b                   mov edi,[ebx]
0xb30005c7    83ff00                 cmp edi,0
0xb30005ca    75d0                   jnz 0xb300059c
0xb30005cc    8b420b                 mov eax,[edx+0xb]
0xb30005cf    8d0444                 lea eax,[esp+eax*0x2]
0xb30005d2    55                     push ebp
0xb30005d3    89e5                   mov ebp,esp
0xb30005d5    6800000000             push 0
0xb30005da    52                     push edx
0xb30005db    51                     push ecx
0xb30005dc    68190040b5             push 0xb5400019
0xb30005e1    8b18                   mov ebx,[eax]
0xb30005e3    53                     push ebx
0xb30005e4    8b58fc                 mov ebx,[eax-0x4]
0xb30005e7    53                     push ebx
0xb30005e8    51                     push ecx
0xb30005e9    52                     push edx
0xb30005ea    b950630b08             mov ecx,0x80b6350
0xb30005ef    ba04000000             mov edx,0x4
0xb30005f4    e82ffa3702             call 0xb5380028  [stub: CallToRuntime]
0xb30005f9    58                     pop eax
0xb30005fa    58                     pop eax
0xb30005fb    58                     pop eax
0xb30005fc    58                     pop eax
0xb30005fd    58                     pop eax
0xb30005fe    59                     pop ecx
0xb30005ff    5a                     pop edx
0xb3000600    89ec                   mov esp,ebp
0xb3000602    5d                     pop ebp
0xb3000603    3d190040b5             cmp eax, 0xb5400019
0xb3000608    751d                   jnz 0xb3000627
0xb300060a    c6411801               mov_b [ecx+0x18],0x1
0xb300060e    e9a5fc3702             jmp 0xb53802b8  [stub: InstanceFunctionLookup]
0xb3000613    8b4308                 mov eax,[ebx+0x8]
0xb3000616    83430c02               add [ebx+0xc],0x2
0xb300061a    0f8107000000           jno 0xb3000627
0xb3000620    c7430cfeffff7f         mov [ebx+0xc],0x7ffffffe
0xb3000627    8b4017                 mov eax,[eax+0x17]
0xb300062a    8b4003                 mov eax,[eax+0x3]
0xb300062d    83c00f                 add eax,0xf
0xb3000630    ffe0                   jmp eax
0xb3000632    a801                   test al,0x1
0xb3000634    7506                   jnz 0xb300063c
0xb3000636    b852000000             mov eax,0x52
0xb300063b    c3                     ret
0xb300063c    0fb74001               movzx_w eax,[eax+0x1]
0xb3000640    03c0                   add eax,eax
0xb3000642    c3                     ret
}
Code for stub '_stub_ThreeArgsOptimizedCheckInlineCache': {
0xb3000658    817f2bb80b0000         cmp [edi+0x2b],0xbb8
0xb300065f    7d03                   jnl 0xb3000664
0xb3000661    ff472b                 inc [edi+0x2b]
0xb3000664    8b590b                 mov ebx,[ecx+0xb]
0xb3000667    8d5b0b                 lea ebx,[ebx+0xb]
0xb300066a    8b420b                 mov eax,[edx+0xb]
0xb300066d    8b0444                 mov eax,[esp+eax*0x2]
0xb3000670    e8b9000000             call 0xb300072e
0xb3000675    8b3b                   mov edi,[ebx]
0xb3000677    e942000000             jmp 0xb30006be
0xb300067c    3bc7                   cmp eax,edi
0xb300067e    0f852a000000           jnz 0xb30006ae
0xb3000684    8b420b                 mov eax,[edx+0xb]
0xb3000687    8b4444fc               mov eax,[esp+eax*0x2-0x4]
0xb300068b    e89e000000             call 0xb300072e
0xb3000690    8b7b04                 mov edi,[ebx+0x4]
0xb3000693    3bc7                   cmp eax,edi
0xb3000695    0f8513000000           jnz 0xb30006ae
0xb300069b    8b420b                 mov eax,[edx+0xb]
0xb300069e    8b4444f8               mov eax,[esp+eax*0x2-0x8]
0xb30006a2    e887000000             call 0xb300072e
0xb30006a7    8b7b08                 mov edi,[ebx+0x8]
0xb30006aa    3bc7                   cmp eax,edi
0xb30006ac    7461                   jz 0xb300070f
0xb30006ae    8b420b                 mov eax,[edx+0xb]
0xb30006b1    8b0444                 mov eax,[esp+eax*0x2]
0xb30006b4    e875000000             call 0xb300072e
0xb30006b9    83c314                 add ebx,0x14
0xb30006bc    8b3b                   mov edi,[ebx]
0xb30006be    83ff00                 cmp edi,0
0xb30006c1    75b9                   jnz 0xb300067c
0xb30006c3    8b420b                 mov eax,[edx+0xb]
0xb30006c6    8d0444                 lea eax,[esp+eax*0x2]
0xb30006c9    55                     push ebp
0xb30006ca    89e5                   mov ebp,esp
0xb30006cc    6800000000             push 0
0xb30006d1    52                     push edx
0xb30006d2    51                     push ecx
0xb30006d3    68190040b5             push 0xb5400019
0xb30006d8    8b18                   mov ebx,[eax]
0xb30006da    53                     push ebx
0xb30006db    8b58fc                 mov ebx,[eax-0x4]
0xb30006de    53                     push ebx
0xb30006df    8b58f8                 mov ebx,[eax-0x8]
0xb30006e2    53                     push ebx
0xb30006e3    51                     push ecx
0xb30006e4    52                     push edx
0xb30006e5    b980660b08             mov ecx,0x80b6680
0xb30006ea    ba05000000             mov edx,0x5
0xb30006ef    e834f93702             call 0xb5380028  [stub: CallToRuntime]
0xb30006f4    58                     pop eax
0xb30006f5    58                     pop eax
0xb30006f6    58                     pop eax
0xb30006f7    58                     pop eax
0xb30006f8    58                     pop eax
0xb30006f9    58                     pop eax
0xb30006fa    59                     pop ecx
0xb30006fb    5a                     pop edx
0xb30006fc    89ec                   mov esp,ebp
0xb30006fe    5d                     pop ebp
0xb30006ff    3d190040b5             cmp eax, 0xb5400019
0xb3000704    751d                   jnz 0xb3000723
0xb3000706    c6411801               mov_b [ecx+0x18],0x1
0xb300070a    e9a9fb3702             jmp 0xb53802b8  [stub: InstanceFunctionLookup]
0xb300070f    8b430c                 mov eax,[ebx+0xc]
0xb3000712    83431002               add [ebx+0x10],0x2
0xb3000716    0f8107000000           jno 0xb3000723
0xb300071c    c74310feffff7f         mov [ebx+0x10],0x7ffffffe
0xb3000723    8b4017                 mov eax,[eax+0x17]
0xb3000726    8b4003                 mov eax,[eax+0x3]
0xb3000729    83c00f                 add eax,0xf
0xb300072c    ffe0                   jmp eax
0xb300072e    a801                   test al,0x1
0xb3000730    7506                   jnz 0xb3000738
0xb3000732    b852000000             mov eax,0x52
0xb3000737    c3                     ret
0xb3000738    0fb74001               movzx_w eax,[eax+0x1]
0xb300073c    03c0                   add eax,eax
0xb300073e    c3                     ret
}
Code for stub '_stub_ClosureCallInlineCache': {
0xb3000758    8b590b                 mov ebx,[ecx+0xb]
0xb300075b    8d5b0b                 lea ebx,[ebx+0xb]
0xb300075e    8b420b                 mov eax,[edx+0xb]
0xb3000761    8b0444                 mov eax,[esp+eax*0x2]
0xb3000764    e876000000             call 0xb30007df
0xb3000769    8b3b                   mov edi,[ebx]
0xb300076b    e909000000             jmp 0xb3000779
0xb3000770    3bc7                   cmp eax,edi
0xb3000772    744c                   jz 0xb30007c0
0xb3000774    83c30c                 add ebx,0xc
0xb3000777    8b3b                   mov edi,[ebx]
0xb3000779    83ff00                 cmp edi,0
0xb300077c    75f2                   jnz 0xb3000770
0xb300077e    8b420b                 mov eax,[edx+0xb]
0xb3000781    8d0444                 lea eax,[esp+eax*0x2]
0xb3000784    55                     push ebp
0xb3000785    89e5                   mov ebp,esp
0xb3000787    6800000000             push 0
0xb300078c    52                     push edx
0xb300078d    51                     push ecx
0xb300078e    68190040b5             push 0xb5400019
0xb3000793    8b18                   mov ebx,[eax]
0xb3000795    53                     push ebx
0xb3000796    51                     push ecx
0xb3000797    52                     push edx
0xb3000798    b950600b08             mov ecx,0x80b6050
0xb300079d    ba03000000             mov edx,0x3
0xb30007a2    e881f83702             call 0xb5380028  [stub: CallToRuntime]
0xb30007a7    58                     pop eax
0xb30007a8    58                     pop eax
0xb30007a9    58                     pop eax
0xb30007aa    58                     pop eax
0xb30007ab    59                     pop ecx
0xb30007ac    5a                     pop edx
0xb30007ad    89ec                   mov esp,ebp
0xb30007af    5d                     pop ebp
0xb30007b0    3d190040b5             cmp eax, 0xb5400019
0xb30007b5    751d                   jnz 0xb30007d4
0xb30007b7    c6411801               mov_b [ecx+0x18],0x1
0xb30007bb    e9f8fa3702             jmp 0xb53802b8  [stub: InstanceFunctionLookup]
0xb30007c0    8b4304                 mov eax,[ebx+0x4]
0xb30007c3    83430802               add [ebx+0x8],0x2
0xb30007c7    0f8107000000           jno 0xb30007d4
0xb30007cd    c74308feffff7f         mov [ebx+0x8],0x7ffffffe
0xb30007d4    8b4017                 mov eax,[eax+0x17]
0xb30007d7    8b4003                 mov eax,[eax+0x3]
0xb30007da    83c00f                 add eax,0xf
0xb30007dd    ffe0                   jmp eax
0xb30007df    a801                   test al,0x1
0xb30007e1    7506                   jnz 0xb30007e9
0xb30007e3    b852000000             mov eax,0x52
0xb30007e8    c3                     ret
0xb30007e9    0fb74001               movzx_w eax,[eax+0x1]
0xb30007ed    03c0                   add eax,eax
0xb30007ef    c3                     ret
}
Code for stub '_stub_MegamorphicCall': {
0xb3000808    8b590b                 mov ebx,[ecx+0xb]
0xb300080b    8d5b0b                 lea ebx,[ebx+0xb]
0xb300080e    8b420b                 mov eax,[edx+0xb]
0xb3000811    8b0444                 mov eax,[esp+eax*0x2]
0xb3000814    e876000000             call 0xb300088f
0xb3000819    8b3b                   mov edi,[ebx]
0xb300081b    e909000000             jmp 0xb3000829
0xb3000820    3bc7                   cmp eax,edi
0xb3000822    744c                   jz 0xb3000870
0xb3000824    83c30c                 add ebx,0xc
0xb3000827    8b3b                   mov edi,[ebx]
0xb3000829    83ff00                 cmp edi,0
0xb300082c    75f2                   jnz 0xb3000820
0xb300082e    8b420b                 mov eax,[edx+0xb]
0xb3000831    8d0444                 lea eax,[esp+eax*0x2]
0xb3000834    55                     push ebp
0xb3000835    89e5                   mov ebp,esp
0xb3000837    6800000000             push 0
0xb300083c    52                     push edx
0xb300083d    51                     push ecx
0xb300083e    68190040b5             push 0xb5400019
0xb3000843    8b18                   mov ebx,[eax]
0xb3000845    53                     push ebx
0xb3000846    51                     push ecx
0xb3000847    52                     push edx
0xb3000848    b950600b08             mov ecx,0x80b6050
0xb300084d    ba03000000             mov edx,0x3
0xb3000852    e8d1f73702             call 0xb5380028  [stub: CallToRuntime]
0xb3000857    58                     pop eax
0xb3000858    58                     pop eax
0xb3000859    58                     pop eax
0xb300085a    58                     pop eax
0xb300085b    59                     pop ecx
0xb300085c    5a                     pop edx
0xb300085d    89ec                   mov esp,ebp
0xb300085f    5d                     pop ebp
0xb3000860    3d190040b5             cmp eax, 0xb5400019
0xb3000865    751d                   jnz 0xb3000884
0xb3000867    c6411801               mov_b [ecx+0x18],0x1
0xb300086b    e948fa3702             jmp 0xb53802b8  [stub: InstanceFunctionLookup]
0xb3000870    8b4304                 mov eax,[ebx+0x4]
0xb3000873    83430802               add [ebx+0x8],0x2
0xb3000877    0f8107000000           jno 0xb3000884
0xb300087d    c74308feffff7f         mov [ebx+0x8],0x7ffffffe
0xb3000884    8b4017                 mov eax,[eax+0x17]
0xb3000887    8b4003                 mov eax,[eax+0x3]
0xb300088a    83c00f                 add eax,0xf
0xb300088d    ffe0                   jmp eax
0xb300088f    a801                   test al,0x1
0xb3000891    7506                   jnz 0xb3000899
0xb3000893    b852000000             mov eax,0x52
0xb3000898    c3                     ret
0xb3000899    0fb74001               movzx_w eax,[eax+0x1]
0xb300089d    03c0                   add eax,eax
0xb300089f    c3                     ret
}
Code for stub '_stub_OptimizeFunction': {
0xb30008b8    55                     push ebp
0xb30008b9    89e5                   mov ebp,esp
0xb30008bb    6800000000             push 0
0xb30008c0    50                     push eax
0xb30008c1    52                     push edx
0xb30008c2    b960180b08             mov ecx,0x80b1860
0xb30008c7    ba01000000             mov edx,0x1
0xb30008cc    e857f73702             call 0xb5380028  [stub: CallToRuntime]
0xb30008d1    5a                     pop edx
0xb30008d2    58                     pop eax
0xb30008d3    89ec                   mov esp,ebp
0xb30008d5    5d                     pop ebp
0xb30008d6    c3                     ret
}
Code for stub '_stub_BreakpointDynamic': {
0xb30008e8    55                     push ebp
0xb30008e9    89e5                   mov ebp,esp
0xb30008eb    6800000000             push 0
0xb30008f0    51                     push ecx
0xb30008f1    52                     push edx
0xb30008f2    b9c0d00a08             mov ecx,0x80ad0c0
0xb30008f7    ba00000000             mov edx,0
0xb30008fc    e827f73702             call 0xb5380028  [stub: CallToRuntime]
0xb3000901    5a                     pop edx
0xb3000902    59                     pop ecx
0xb3000903    89ec                   mov esp,ebp
0xb3000905    5d                     pop ebp
0xb3000906    8b5913                 mov ebx,[ecx+0x13]
0xb3000909    83fb01                 cmp ebx,0x1
0xb300090c    7505                   jnz 0xb3000913
0xb300090e    e905f9ffff             jmp 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3000913    83fb02                 cmp ebx,0x2
0xb3000916    7505                   jnz 0xb300091d
0xb3000918    e9bbf9ffff             jmp 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300091d    83fb03                 cmp ebx,0x3
0xb3000920    7505                   jnz 0xb3000927
0xb3000922    e991faffff             jmp 0xb30003b8  [stub: ThreeArgsCheckInlineCache]
0xb3000927    50                     push eax
0xb3000928    b8c4905708             mov eax,0x85790c4
0xb300092d    e866f73702             call 0xb5380098  [stub: PrintStopMessage]
0xb3000932    58                     pop eax
0xb3000933    cc                     int3
}
Code for stub '_stub_EqualityWithNullArg': {
0xb3000948    8b590b                 mov ebx,[ecx+0xb]
0xb300094b    8d5b0b                 lea ebx,[ebx+0xb]
0xb300094e    8b442408               mov eax,[esp+0x8]
0xb3000952    e84a000000             call 0xb30009a1
0xb3000957    8b3b                   mov edi,[ebx]
0xb3000959    3bc7                   cmp eax,edi
0xb300095b    7510                   jnz 0xb300096d
0xb300095d    8b442404               mov eax,[esp+0x4]
0xb3000961    e83b000000             call 0xb30009a1
0xb3000966    8b7b04                 mov edi,[ebx+0x4]
0xb3000969    3bc7                   cmp eax,edi
0xb300096b    740d                   jz 0xb300097a
0xb300096d    83c310                 add ebx,0x10
0xb3000970    83ff00                 cmp edi,0
0xb3000973    75d9                   jnz 0xb300094e
0xb3000975    e938000000             jmp 0xb30009b2
0xb300097a    83430c02               add [ebx+0xc],0x2
0xb300097e    0f8107000000           jno 0xb300098b
0xb3000984    c7430cfeffff7f         mov [ebx+0xc],0x7ffffffe
0xb300098b    8b442404               mov eax,[esp+0x4]
0xb300098f    3b442408               cmp eax,[esp+0x8]
0xb3000993    7406                   jz 0xb300099b
0xb3000995    b8411030b3             mov eax,0xb3301041  'false'
0xb300099a    c3                     ret
0xb300099b    b8391030b3             mov eax,0xb3301039  'true'
0xb30009a0    c3                     ret
0xb30009a1    a801                   test al,0x1
0xb30009a3    7506                   jnz 0xb30009ab
0xb30009a5    b852000000             mov eax,0x52
0xb30009aa    c3                     ret
0xb30009ab    0fb74001               movzx_w eax,[eax+0x1]
0xb30009af    03c0                   add eax,eax
0xb30009b1    c3                     ret
0xb30009b2    8b442404               mov eax,[esp+0x4]
0xb30009b6    8b7c2408               mov edi,[esp+0x8]
0xb30009ba    55                     push ebp
0xb30009bb    89e5                   mov ebp,esp
0xb30009bd    6800000000             push 0
0xb30009c2    57                     push edi
0xb30009c3    50                     push eax
0xb30009c4    68111340b5             push 0xb5401311
0xb30009c9    51                     push ecx
0xb30009ca    b9e0f60a08             mov ecx,0x80af6e0
0xb30009cf    ba04000000             mov edx,0x4
0xb30009d4    e84ff63702             call 0xb5380028  [stub: CallToRuntime]
0xb30009d9    83c410                 add esp,0x10
0xb30009dc    89ec                   mov esp,ebp
0xb30009de    5d                     pop ebp
0xb30009df    ebaa                   jmp 0xb300098b
}
Code for stub '_stub_MegamorphicMiss': {
0xb30009f8    55                     push ebp
0xb30009f9    89e5                   mov ebp,esp
0xb30009fb    6800000000             push 0
0xb3000a00    8b420b                 mov eax,[edx+0xb]
0xb3000a03    8b444408               mov eax,[esp+eax*0x2+0x8]
0xb3000a07    51                     push ecx
0xb3000a08    52                     push edx
0xb3000a09    68190040b5             push 0xb5400019
0xb3000a0e    50                     push eax
0xb3000a0f    51                     push ecx
0xb3000a10    52                     push edx
0xb3000a11    b920f00a08             mov ecx,0x80af020
0xb3000a16    ba03000000             mov edx,0x3
0xb3000a1b    e808f63702             call 0xb5380028  [stub: CallToRuntime]
0xb3000a20    58                     pop eax
0xb3000a21    58                     pop eax
0xb3000a22    58                     pop eax
0xb3000a23    58                     pop eax
0xb3000a24    5a                     pop edx
0xb3000a25    59                     pop ecx
0xb3000a26    89ec                   mov esp,ebp
0xb3000a28    5d                     pop ebp
0xb3000a29    3d190040b5             cmp eax, 0xb5400019
0xb3000a2e    7405                   jz 0xb3000a35
0xb3000a30    83c00f                 add eax,0xf
0xb3000a33    ffe0                   jmp eax
0xb3000a35    e97ef83702             jmp 0xb53802b8  [stub: InstanceFunctionLookup]
}
Compiling function: 'dart:builtin_::__getPrintClosure@0x116c55de' @ token 39
Before Optimizations
==== dart:builtin_::__getPrintClosure@0x116c55de
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#Closure: (dynamic, dynamic) => void from Function '_print@0x116c55de': static.)
    Return:4(t0)
--> 'dart:builtin_::__getPrintClosure@0x116c55de' entry: 0xb3000a58 time: 172 us
Code for function 'dart:builtin_::__getPrintClosure@0x116c55de' {
        ;; Enter frame
0xb3000a58    55                     push ebp
0xb3000a59    89e5                   mov ebp,esp
0xb3000a5b    e800000000             call 0xb3000a60
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3000a60    3b25bc195809           cmp esp,[0x95819bc]
0xb3000a66    0f8623000000           jna 0xb3000a8f
        ;; t0 <- Constant:3(#Closure: (dynamic, dynamic) => void from Function '_print@0x116c55de': static.)
0xb3000a6c    b8c9b40bb3             mov eax,0xb30bb4c9  'instance of Library:'dart:builtin' Class: (dynamic, dynamic) => void'
0xb3000a71    50                     push eax
        ;; Return:4(t0)
0xb3000a72    58                     pop eax
0xb3000a73    ba91ff11b3             mov edx,0xb311ff91  'Function '_getPrintClosure@0x116c55de': static.'
0xb3000a78    ff422b                 inc [edx+0x2b]
0xb3000a7b    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3000a82    7c05                   jl 0xb3000a89
0xb3000a84    e82ffeffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3000a89    89ec                   mov esp,ebp
0xb3000a8b    5d                     pop ebp
0xb3000a8c    c3                     ret
0xb3000a8d    90                     nop
0xb3000a8e    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3000a8f    b970d30a08             mov ecx,0x80ad370
0xb3000a94    ba00000000             mov edx,0
0xb3000a99    e88af53702             call 0xb5380028  [stub: CallToRuntime]
0xb3000a9e    ebcc                   jmp 0xb3000a6c
0xb3000aa0    e993f93702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3000aa5    e96efa3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 21 : 0xb3000a6d 'Closure: (dynamic, dynamic) => void from Function '_print@0x116c55de': static.'
 28 : 0xb3000a74 'Function '_getPrintClosure@0x116c55de': static.'
}
PC Descriptors for function 'dart:builtin_::__getPrintClosure@0x116c55de' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3000a89	other        	-1		0	-1
0xb3000a8e	return       	-1		42	-1
0xb3000a9e	other        	-1		39	-1
0xb3000aa0	patch        	-1		0	-1
0xb3000aa5	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:builtin_::__getPrintClosure@0x116c55de' {
}
Variable Descriptors for function 'dart:builtin_::__getPrintClosure@0x116c55de' {
}
Exception Handlers for function 'dart:builtin_::__getPrintClosure@0x116c55de' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:io_::__getTimerFactoryClosure@0x1da10ec4' @ token 59894
Before Optimizations
==== dart:io_::__getTimerFactoryClosure@0x1da10ec4
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#null)
    PushArgument:4(t0)
    t0 <- Constant:5(#null)
    PushArgument:6(t0)
    t0 <- CreateClosure:7(Function '<anonymous closure>': static.t0, t0)
    Return:8(t0)
Code for closure allocation stub 'Function '<anonymous closure>': static.': {
0xb3000ac8    8b0508fe5609           mov eax,[0x956fe08]
0xb3000ace    8d5810                 lea ebx,[eax+0x10]
0xb3000ad1    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb3000ad7    7322                   jnc 0xb3000afb
0xb3000ad9    891d08fe5609           mov [0x956fe08],ebx
0xb3000adf    c70000025802           mov [eax],0x2580200
0xb3000ae5    bad1b50bb3             mov edx,0xb30bb5d1  'Function '<anonymous closure>': static.'
0xb3000aea    895008                 mov [eax+0x8],edx
0xb3000aed    89700c                 mov [eax+0xc],esi
0xb3000af0    8b542404               mov edx,[esp+0x4]
0xb3000af4    895004                 mov [eax+0x4],edx
0xb3000af7    83c001                 add eax,0x1
0xb3000afa    c3                     ret
0xb3000afb    55                     push ebp
0xb3000afc    89e5                   mov ebp,esp
0xb3000afe    6800000000             push 0
0xb3000b03    68190040b5             push 0xb5400019
0xb3000b08    68d1b50bb3             push 0xb30bb5d1
0xb3000b0d    68190040b5             push 0xb5400019
0xb3000b12    b9c00c0b08             mov ecx,0x80b0cc0
0xb3000b17    ba02000000             mov edx,0x2
0xb3000b1c    e807f53702             call 0xb5380028  [stub: CallToRuntime]
0xb3000b21    58                     pop eax
0xb3000b22    58                     pop eax
0xb3000b23    58                     pop eax
0xb3000b24    89ec                   mov esp,ebp
0xb3000b26    5d                     pop ebp
0xb3000b27    c3                     ret
}
--> 'dart:io_::__getTimerFactoryClosure@0x1da10ec4' entry: 0xb3000b38 time: 803 us
Code for function 'dart:io_::__getTimerFactoryClosure@0x1da10ec4' {
        ;; Enter frame
0xb3000b38    55                     push ebp
0xb3000b39    89e5                   mov ebp,esp
0xb3000b3b    e800000000             call 0xb3000b40
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3000b40    3b25bc195809           cmp esp,[0x95819bc]
0xb3000b46    0f8632000000           jna 0xb3000b7e
        ;; t0 <- Constant:3(#null)
0xb3000b4c    b8190040b5             mov eax,0xb5400019
0xb3000b51    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#null)
0xb3000b52    b8190040b5             mov eax,0xb5400019
0xb3000b57    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- CreateClosure:7(Function '<anonymous closure>': static.t0, t0)
0xb3000b58    e86bffffff             call 0xb3000ac8 [ stub ]
0xb3000b5d    83c408                 add esp,0x8
0xb3000b60    50                     push eax
        ;; Return:8(t0)
0xb3000b61    58                     pop eax
0xb3000b62    ba217310b3             mov edx,0xb3107321  'Function '_getTimerFactoryClosure@0x1da10ec4': static.'
0xb3000b67    ff422b                 inc [edx+0x2b]
0xb3000b6a    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3000b71    7c05                   jl 0xb3000b78
0xb3000b73    e840fdffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3000b78    89ec                   mov esp,ebp
0xb3000b7a    5d                     pop ebp
0xb3000b7b    c3                     ret
0xb3000b7c    90                     nop
0xb3000b7d    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3000b7e    b970d30a08             mov ecx,0x80ad370
0xb3000b83    ba00000000             mov edx,0
0xb3000b88    e89bf43702             call 0xb5380028  [stub: CallToRuntime]
0xb3000b8d    ebbd                   jmp 0xb3000b4c
0xb3000b8f    e9a4f83702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3000b94    e97ff93702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 43 : 0xb3000b63 'Function '_getTimerFactoryClosure@0x1da10ec4': static.'
}
PC Descriptors for function 'dart:io_::__getTimerFactoryClosure@0x1da10ec4' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3000b5d	other        	-1		59898	-1
0xb3000b78	other        	-1		0	-1
0xb3000b7d	return       	-1		59897	-1
0xb3000b8d	other        	-1		59894	-1
0xb3000b8f	patch        	-1		0	-1
0xb3000b94	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:io_::__getTimerFactoryClosure@0x1da10ec4' {
}
Variable Descriptors for function 'dart:io_::__getTimerFactoryClosure@0x1da10ec4' {
}
Exception Handlers for function 'dart:io_::__getTimerFactoryClosure@0x1da10ec4' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:isolate_::__setTimerFactoryClosure@0x2a486688' @ token 819
Before Optimizations
==== dart:isolate_::__setTimerFactoryClosure@0x2a486688
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(closure lvl:0)
    StoreStaticField:4(_factory@0x2a486688, t0)
    t0 <- Constant:5(#null)
    Return:6(t0)
--> 'dart:isolate_::__setTimerFactoryClosure@0x2a486688' entry: 0xb3000bb8 time: 86 us
Code for function 'dart:isolate_::__setTimerFactoryClosure@0x2a486688' {
        ;; Enter frame
0xb3000bb8    55                     push ebp
0xb3000bb9    89e5                   mov ebp,esp
0xb3000bbb    e800000000             call 0xb3000bc0
0xb3000bc0    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb3000bc3    b8190040b5             mov eax,0xb5400019
0xb3000bc8    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3000bcb    3b25bc195809           cmp esp,[0x95819bc]
0xb3000bd1    0f8647000000           jna 0xb3000c1e
        ;; t0 <- LoadLocal:3(closure lvl:0)
0xb3000bd7    8b4508                 mov eax,[ebp+0x8]
0xb3000bda    50                     push eax
        ;; StoreStaticField:4(_factory@0x2a486688, t0)
0xb3000bdb    58                     pop eax
0xb3000bdc    b9293e0bb3             mov ecx,0xb30b3e29  'Field <_TimerFactory@0x2a486688._factory@0x2a486688>: static'
0xb3000be1    89410f                 mov [ecx+0xf],eax
0xb3000be4    83e005                 and eax,0x5
0xb3000be7    d1e8                   shr eax, 1
0xb3000be9    13c1                   adc eax,ecx
0xb3000beb    83e007                 and eax,0x7
0xb3000bee    83f804                 cmp eax,0x4
0xb3000bf1    7508                   jnz 0xb3000bfb
0xb3000bf3    8d410f                 lea eax,[ecx+0xf]
0xb3000bf6    e86df5ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- Constant:5(#null)
0xb3000bfb    b8190040b5             mov eax,0xb5400019
0xb3000c00    50                     push eax
        ;; Return:6(t0)
0xb3000c01    58                     pop eax
0xb3000c02    ba11ed11b3             mov edx,0xb311ed11  'Function '_setTimerFactoryClosure@0x2a486688': static.'
0xb3000c07    ff422b                 inc [edx+0x2b]
0xb3000c0a    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3000c11    7c05                   jl 0xb3000c18
0xb3000c13    e8a0fcffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3000c18    89ec                   mov esp,ebp
0xb3000c1a    5d                     pop ebp
0xb3000c1b    c3                     ret
0xb3000c1c    90                     nop
0xb3000c1d    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3000c1e    b970d30a08             mov ecx,0x80ad370
0xb3000c23    ba00000000             mov edx,0
0xb3000c28    e8fbf33702             call 0xb5380028  [stub: CallToRuntime]
0xb3000c2d    eba8                   jmp 0xb3000bd7
0xb3000c2f    e904f83702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3000c34    e9dff83702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 37 : 0xb3000bdd 'Field <_TimerFactory@0x2a486688._factory@0x2a486688>: static'
 75 : 0xb3000c03 'Function '_setTimerFactoryClosure@0x2a486688': static.'
}
PC Descriptors for function 'dart:isolate_::__setTimerFactoryClosure@0x2a486688' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3000c18	other        	-1		0	-1
0xb3000c1d	return       	-1		836	-1
0xb3000c2d	other        	-1		819	-1
0xb3000c2f	patch        	-1		0	-1
0xb3000c34	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:isolate_::__setTimerFactoryClosure@0x2a486688' {
}
Variable Descriptors for function 'dart:isolate_::__setTimerFactoryClosure@0x2a486688' {
  stack var 'closure' offset 2 (valid 822-836)
}
Exception Handlers for function 'dart:isolate_::__setTimerFactoryClosure@0x2a486688' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:builtin_::__resolveScriptUri@0x116c55de' @ token 101
Before Optimizations
==== dart:builtin_::__resolveScriptUri@0x116c55de
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(## Current working directory: )
    PushArgument:4(t0)
    t0 <- LoadLocal:5(cwd lvl:0)
    PushArgument:6(t0)
    t0 <- Constant:7(#)
    PushArgument:8(t0)
    t0 <- Constant:9(#NULL AbstractTypeArguments)
    t0 <- CreateArray:10(t0, t0, t0, t0)
    PushArgument:11(t0)
    t0 <- StaticCall:12(_interpolate@0x36924d72 t0)
    PushArgument:13(t0)
    StaticCall:14(_logResolution@0x116c55de t0)
    t0 <- Constant:15(## ScriptName: )
    PushArgument:16(t0)
    t0 <- LoadLocal:17(scriptName lvl:0)
    PushArgument:18(t0)
    t0 <- Constant:19(#)
    PushArgument:20(t0)
    t0 <- Constant:21(#NULL AbstractTypeArguments)
    t0 <- CreateArray:22(t0, t0, t0, t0)
    PushArgument:23(t0)
    t0 <- StaticCall:24(_interpolate@0x36924d72 t0)
    PushArgument:25(t0)
    StaticCall:26(_logResolution@0x116c55de t0)
    t0 <- LoadLocal:27(isWindows lvl:0)
    t1 <- Constant:28(#true)
    Branch if StrictCompare:29(===, t0, t1) goto (8, 9)
B8[target]
    t0 <- Constant:31(#/)
    PushArgument:32(t0)
    t0 <- LoadLocal:33(cwd lvl:0)
    PushArgument:34(t0)
    t0 <- Constant:35(#\)
    PushArgument:36(t0)
    t0 <- Constant:37(#/)
    PushArgument:38(t0)
    t0 <- InstanceCall:39(replaceAll, t0, t0, t0)
    PushArgument:40(t0)
    t0 <- Constant:41(#)
    PushArgument:42(t0)
    t0 <- Constant:43(#NULL AbstractTypeArguments)
    t0 <- CreateArray:44(t0, t0, t0, t0)
    PushArgument:45(t0)
    t0 <- StaticCall:46(_interpolate@0x36924d72 t0)
    StoreLocal:47(cwd, t0, lvl: 0)
    t0 <- Constant:48(### cwd: )
    PushArgument:49(t0)
    t0 <- LoadLocal:50(cwd lvl:0)
    PushArgument:51(t0)
    t0 <- Constant:52(#)
    PushArgument:53(t0)
    t0 <- Constant:54(#NULL AbstractTypeArguments)
    t0 <- CreateArray:55(t0, t0, t0, t0)
    PushArgument:56(t0)
    t0 <- StaticCall:57(_interpolate@0x36924d72 t0)
    PushArgument:58(t0)
    StaticCall:59(_logResolution@0x116c55de t0)
    t0 <- LoadLocal:60(scriptName lvl:0)
    PushArgument:61(t0)
    t0 <- InstanceCall:62(get:length, t0)
    t1 <- Constant:63(#2)
    Branch if RelationalOp:64(>, t0, t1) goto (2, 5)
B2[target]
    t0 <- LoadLocal:66(scriptName lvl:0)
    PushArgument:67(t0)
    t0 <- Constant:68(#1)
    PushArgument:69(t0)
    t0 <- InstanceCall:70([], t0, t0)
    t1 <- Constant:71(#:)
    Branch if EqualityCompare:72(t0 == t1) goto (3, 6)
B3[target]
    t0 <- Constant:75(#/)
    PushArgument:76(t0)
    t0 <- LoadLocal:77(scriptName lvl:0)
    PushArgument:78(t0)
    t0 <- Constant:79(#\)
    PushArgument:80(t0)
    t0 <- Constant:81(#/)
    PushArgument:82(t0)
    t0 <- InstanceCall:83(replaceAll, t0, t0, t0)
    PushArgument:84(t0)
    t0 <- Constant:85(#)
    PushArgument:86(t0)
    t0 <- Constant:87(#NULL AbstractTypeArguments)
    t0 <- CreateArray:88(t0, t0, t0, t0)
    PushArgument:89(t0)
    t0 <- StaticCall:90(_interpolate@0x36924d72 t0)
    StoreLocal:91(scriptName, t0, lvl: 0)
    goto:107 7
B6[target]
    goto:105 4
B5[target]
    goto:103 4
B4[join] pred(B5, B6)
    t0 <- LoadLocal:92(scriptName lvl:0)
    PushArgument:93(t0)
    t0 <- Constant:94(#\)
    PushArgument:95(t0)
    t0 <- Constant:96(#/)
    PushArgument:97(t0)
    t0 <- InstanceCall:98(replaceAll, t0, t0, t0)
    StoreLocal:99(scriptName, t0, lvl: 0)
    goto:108 7
B7[join] pred(B3, B4)
    t0 <- Constant:109(### scriptName: )
    PushArgument:110(t0)
    t0 <- LoadLocal:111(scriptName lvl:0)
    PushArgument:112(t0)
    t0 <- Constant:113(#)
    PushArgument:114(t0)
    t0 <- Constant:115(#NULL AbstractTypeArguments)
    t0 <- CreateArray:116(t0, t0, t0, t0)
    PushArgument:117(t0)
    t0 <- StaticCall:118(_interpolate@0x36924d72 t0)
    PushArgument:119(t0)
    StaticCall:120(_logResolution@0x116c55de t0)
    goto:124 10
B9[target]
    goto:125 10
B10[join] pred(B7, B9)
    t0 <- AllocateObject:126(Library:'dart:uri' Class: Uri)
    t0 <- StoreLocal:127(:alloc261, t0, lvl: 0)
    PushArgument:128(t0)
    t0 <- Constant:129(#3)
    PushArgument:130(t0)
    t0 <- Constant:131(#file)
    PushArgument:132(t0)
    t0 <- LoadLocal:133(cwd lvl:0)
    PushArgument:134(t0)
    t0 <- Constant:135(#/)
    PushArgument:136(t0)
    t0 <- InstanceCall:137(endsWith, t0, t0)
    t1 <- Constant:138(#true)
    Branch if StrictCompare:139(===, t0, t1) goto (11, 12)
B11[target]
    t0 <- LoadLocal:141(cwd lvl:0)
    StoreLocal:142(:expr_temp, t0, lvl: 0)
    goto:157 13
B12[target]
    t0 <- Constant:143(#)
    PushArgument:144(t0)
    t0 <- LoadLocal:145(cwd lvl:0)
    PushArgument:146(t0)
    t0 <- Constant:147(#/)
    PushArgument:148(t0)
    t0 <- Constant:149(#NULL AbstractTypeArguments)
    t0 <- CreateArray:150(t0, t0, t0, t0)
    PushArgument:151(t0)
    t0 <- StaticCall:152(_interpolate@0x36924d72 t0)
    StoreLocal:153(:expr_temp, t0, lvl: 0)
    goto:158 13
B13[join] pred(B11, B12)
    t0 <- LoadLocal:159(:expr_temp lvl:0)
    PushArgument:160(t0)
    StaticCall:161(Uri.fromComponents t0, t0, t0, t0)
    t0 <- LoadLocal:162(:alloc261 lvl:0)
    StoreLocal:163(base, t0, lvl: 0)
    t0 <- LoadLocal:164(base lvl:0)
    PushArgument:165(t0)
    t0 <- LoadLocal:166(scriptName lvl:0)
    PushArgument:167(t0)
    t0 <- InstanceCall:168(resolve, t0, t0)
    StoreStaticField:169(_entrypoint@0x116c55de, t0)
    t0 <- Constant:170(## Resolved script to: )
    PushArgument:171(t0)
    t0 <- LoadStaticField:172(_entrypoint@0x116c55de)
    PushArgument:173(t0)
    t0 <- Constant:174(#)
    PushArgument:175(t0)
    t0 <- Constant:176(#NULL AbstractTypeArguments)
    t0 <- CreateArray:177(t0, t0, t0, t0)
    PushArgument:178(t0)
    t0 <- StaticCall:179(_interpolate@0x36924d72 t0)
    PushArgument:180(t0)
    StaticCall:181(_logResolution@0x116c55de t0)
    t0 <- LoadStaticField:182(_entrypoint@0x116c55de)
    PushArgument:183(t0)
    t0 <- InstanceCall:184(toString, t0)
    Return:185(t0)
Code for allocation stub 'Library:'dart:uri' Class: Uri': {
0xb3000c58    8b0508fe5609           mov eax,[0x956fe08]
0xb3000c5e    8d5828                 lea ebx,[eax+0x28]
0xb3000c61    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb3000c67    7354                   jnc 0xb3000cbd
0xb3000c69    891d08fe5609           mov [0x956fe08],ebx
0xb3000c6f    baa95d11b3             mov edx,0xb3115da9  'Library:'dart:uri' Class: Uri'
0xb3000c74    c70000050602           mov [eax],0x2060500
0xb3000c7a    c74004190040b5         mov [eax+0x4],0xb5400019
0xb3000c81    c74008190040b5         mov [eax+0x8],0xb5400019
0xb3000c88    c7400c190040b5         mov [eax+0xc],0xb5400019
0xb3000c8f    c74010190040b5         mov [eax+0x10],0xb5400019
0xb3000c96    c74014190040b5         mov [eax+0x14],0xb5400019
0xb3000c9d    c74018190040b5         mov [eax+0x18],0xb5400019
0xb3000ca4    c7401c190040b5         mov [eax+0x1c],0xb5400019
0xb3000cab    c74020190040b5         mov [eax+0x20],0xb5400019
0xb3000cb2    c74024190040b5         mov [eax+0x24],0xb5400019
0xb3000cb9    83c001                 add eax,0x1
0xb3000cbc    c3                     ret
0xb3000cbd    55                     push ebp
0xb3000cbe    89e5                   mov ebp,esp
0xb3000cc0    6800000000             push 0
0xb3000cc5    68190040b5             push 0xb5400019
0xb3000cca    68a95d11b3             push 0xb3115da9
0xb3000ccf    68190040b5             push 0xb5400019
0xb3000cd4    6800000000             push 0
0xb3000cd9    b9d0080b08             mov ecx,0x80b08d0
0xb3000cde    ba03000000             mov edx,0x3
0xb3000ce3    e840f33702             call 0xb5380028  [stub: CallToRuntime]
0xb3000ce8    58                     pop eax
0xb3000ce9    58                     pop eax
0xb3000cea    58                     pop eax
0xb3000ceb    58                     pop eax
0xb3000cec    89ec                   mov esp,ebp
0xb3000cee    5d                     pop ebp
0xb3000cef    c3                     ret
}
--> 'dart:builtin_::__resolveScriptUri@0x116c55de' entry: 0xb3000d08 time: 2656 us
Code for function 'dart:builtin_::__resolveScriptUri@0x116c55de' {
        ;; Enter frame
0xb3000d08    55                     push ebp
0xb3000d09    89e5                   mov ebp,esp
0xb3000d0b    e800000000             call 0xb3000d10
0xb3000d10    83ec0c                 sub esp,0xc
        ;; Initialize spill slots
0xb3000d13    b8190040b5             mov eax,0xb5400019
0xb3000d18    8945f8                 mov [ebp-0x8],eax
0xb3000d1b    8945f4                 mov [ebp-0xc],eax
0xb3000d1e    8945f0                 mov [ebp-0x10],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3000d21    3b25bc195809           cmp esp,[0x95819bc]
0xb3000d27    0f864d040000           jna 0xb300117a
        ;; t0 <- Constant:3(## Current working directory: )
0xb3000d2d    b8f18432b3             mov eax,0xb33284f1  '# Current working directory: '
0xb3000d32    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(cwd lvl:0)
0xb3000d33    8b4510                 mov eax,[ebp+0x10]
0xb3000d36    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- Constant:7(#)
0xb3000d37    b8e11240b5             mov eax,0xb54012e1
0xb3000d3c    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- Constant:9(#NULL AbstractTypeArguments)
0xb3000d3d    b8190040b5             mov eax,0xb5400019
0xb3000d42    50                     push eax
        ;; t0 <- CreateArray:10(t0, t0, t0, t0)
0xb3000d43    59                     pop ecx
0xb3000d44    ba06000000             mov edx,0x6
0xb3000d49    e84af43702             call 0xb5380198  [stub: AllocateArray]
0xb3000d4e    8d500b                 lea edx,[eax+0xb]
0xb3000d51    8f4208                 pop [edx+0x8]
0xb3000d54    8f4204                 pop [edx+0x4]
0xb3000d57    8f02                   pop [edx]
0xb3000d59    50                     push eax
        ;; PushArgument:11(t0)
        ;; t0 <- StaticCall:12(_interpolate@0x36924d72 t0)
0xb3000d5a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3000d5f    e8c4f53702             call 0xb5380328  [stub: CallStaticFunction]
0xb3000d64    83c404                 add esp,0x4
0xb3000d67    50                     push eax
        ;; PushArgument:13(t0)
        ;; StaticCall:14(_logResolution@0x116c55de t0)
0xb3000d68    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3000d6d    e8b6f53702             call 0xb5380328  [stub: CallStaticFunction]
0xb3000d72    83c404                 add esp,0x4
        ;; t0 <- Constant:15(## ScriptName: )
0xb3000d75    b8592032b3             mov eax,0xb3322059  '# ScriptName: '
0xb3000d7a    50                     push eax
        ;; PushArgument:16(t0)
        ;; t0 <- LoadLocal:17(scriptName lvl:0)
0xb3000d7b    8b450c                 mov eax,[ebp+0xc]
0xb3000d7e    50                     push eax
        ;; PushArgument:18(t0)
        ;; t0 <- Constant:19(#)
0xb3000d7f    b8e11240b5             mov eax,0xb54012e1
0xb3000d84    50                     push eax
        ;; PushArgument:20(t0)
        ;; t0 <- Constant:21(#NULL AbstractTypeArguments)
0xb3000d85    b8190040b5             mov eax,0xb5400019
0xb3000d8a    50                     push eax
        ;; t0 <- CreateArray:22(t0, t0, t0, t0)
0xb3000d8b    59                     pop ecx
0xb3000d8c    ba06000000             mov edx,0x6
0xb3000d91    e802f43702             call 0xb5380198  [stub: AllocateArray]
0xb3000d96    8d500b                 lea edx,[eax+0xb]
0xb3000d99    8f4208                 pop [edx+0x8]
0xb3000d9c    8f4204                 pop [edx+0x4]
0xb3000d9f    8f02                   pop [edx]
0xb3000da1    50                     push eax
        ;; PushArgument:23(t0)
        ;; t0 <- StaticCall:24(_interpolate@0x36924d72 t0)
0xb3000da2    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3000da7    e87cf53702             call 0xb5380328  [stub: CallStaticFunction]
0xb3000dac    83c404                 add esp,0x4
0xb3000daf    50                     push eax
        ;; PushArgument:25(t0)
        ;; StaticCall:26(_logResolution@0x116c55de t0)
0xb3000db0    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3000db5    e86ef53702             call 0xb5380328  [stub: CallStaticFunction]
0xb3000dba    83c404                 add esp,0x4
        ;; t0 <- LoadLocal:27(isWindows lvl:0)
0xb3000dbd    8b4508                 mov eax,[ebp+0x8]
0xb3000dc0    50                     push eax
        ;; t1 <- Constant:28(#true)
0xb3000dc1    b8391030b3             mov eax,0xb3301039  'true'
0xb3000dc6    50                     push eax
        ;; Branch if StrictCompare:29(===, t0, t1) goto (8, 9)
0xb3000dc7    58                     pop eax
0xb3000dc8    59                     pop ecx
0xb3000dc9    51                     push ecx
0xb3000dca    50                     push eax
0xb3000dcb    e838fa3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3000dd0    58                     pop eax
0xb3000dd1    59                     pop ecx
0xb3000dd2    0f8531020000           jnz 0xb3001009
        ;; B8
        ;; t0 <- Constant:31(#/)
0xb3000dd8    b8812340b5             mov eax,0xb5402381
0xb3000ddd    50                     push eax
        ;; PushArgument:32(t0)
        ;; t0 <- LoadLocal:33(cwd lvl:0)
0xb3000dde    8b4510                 mov eax,[ebp+0x10]
0xb3000de1    50                     push eax
        ;; PushArgument:34(t0)
        ;; t0 <- Constant:35(#\)
0xb3000de2    b8412640b5             mov eax,0xb5402641
0xb3000de7    50                     push eax
        ;; PushArgument:36(t0)
        ;; t0 <- Constant:37(#/)
0xb3000de8    b8812340b5             mov eax,0xb5402381
0xb3000ded    50                     push eax
        ;; PushArgument:38(t0)
        ;; t0 <- InstanceCall:39(replaceAll, t0, t0, t0)
0xb3000dee    b949bc0bb3             mov ecx,0xb30bbc49  'ICData target:'replaceAll' num-checks: 0'
0xb3000df3    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3000df8    e81bf4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3000dfd    83c40c                 add esp,0xc
0xb3000e00    50                     push eax
        ;; PushArgument:40(t0)
        ;; t0 <- Constant:41(#)
0xb3000e01    b8e11240b5             mov eax,0xb54012e1
0xb3000e06    50                     push eax
        ;; PushArgument:42(t0)
        ;; t0 <- Constant:43(#NULL AbstractTypeArguments)
0xb3000e07    b8190040b5             mov eax,0xb5400019
0xb3000e0c    50                     push eax
        ;; t0 <- CreateArray:44(t0, t0, t0, t0)
0xb3000e0d    59                     pop ecx
0xb3000e0e    ba06000000             mov edx,0x6
0xb3000e13    e880f33702             call 0xb5380198  [stub: AllocateArray]
0xb3000e18    8d500b                 lea edx,[eax+0xb]
0xb3000e1b    8f4208                 pop [edx+0x8]
0xb3000e1e    8f4204                 pop [edx+0x4]
0xb3000e21    8f02                   pop [edx]
0xb3000e23    50                     push eax
        ;; PushArgument:45(t0)
        ;; t0 <- StaticCall:46(_interpolate@0x36924d72 t0)
0xb3000e24    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3000e29    e8faf43702             call 0xb5380328  [stub: CallStaticFunction]
0xb3000e2e    83c404                 add esp,0x4
0xb3000e31    50                     push eax
        ;; StoreLocal:47(cwd, t0, lvl: 0)
0xb3000e32    58                     pop eax
0xb3000e33    894510                 mov [ebp+0x10],eax
        ;; t0 <- Constant:48(### cwd: )
0xb3000e36    b8813f32b3             mov eax,0xb3323f81  '## cwd: '
0xb3000e3b    50                     push eax
        ;; PushArgument:49(t0)
        ;; t0 <- LoadLocal:50(cwd lvl:0)
0xb3000e3c    8b4510                 mov eax,[ebp+0x10]
0xb3000e3f    50                     push eax
        ;; PushArgument:51(t0)
        ;; t0 <- Constant:52(#)
0xb3000e40    b8e11240b5             mov eax,0xb54012e1
0xb3000e45    50                     push eax
        ;; PushArgument:53(t0)
        ;; t0 <- Constant:54(#NULL AbstractTypeArguments)
0xb3000e46    b8190040b5             mov eax,0xb5400019
0xb3000e4b    50                     push eax
        ;; t0 <- CreateArray:55(t0, t0, t0, t0)
0xb3000e4c    59                     pop ecx
0xb3000e4d    ba06000000             mov edx,0x6
0xb3000e52    e841f33702             call 0xb5380198  [stub: AllocateArray]
0xb3000e57    8d500b                 lea edx,[eax+0xb]
0xb3000e5a    8f4208                 pop [edx+0x8]
0xb3000e5d    8f4204                 pop [edx+0x4]
0xb3000e60    8f02                   pop [edx]
0xb3000e62    50                     push eax
        ;; PushArgument:56(t0)
        ;; t0 <- StaticCall:57(_interpolate@0x36924d72 t0)
0xb3000e63    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3000e68    e8bbf43702             call 0xb5380328  [stub: CallStaticFunction]
0xb3000e6d    83c404                 add esp,0x4
0xb3000e70    50                     push eax
        ;; PushArgument:58(t0)
        ;; StaticCall:59(_logResolution@0x116c55de t0)
0xb3000e71    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3000e76    e8adf43702             call 0xb5380328  [stub: CallStaticFunction]
0xb3000e7b    83c404                 add esp,0x4
        ;; t0 <- LoadLocal:60(scriptName lvl:0)
0xb3000e7e    8b450c                 mov eax,[ebp+0xc]
0xb3000e81    50                     push eax
        ;; PushArgument:61(t0)
        ;; t0 <- InstanceCall:62(get:length, t0)
0xb3000e82    b9e1bc0bb3             mov ecx,0xb30bbce1  'ICData target:'get:length' num-checks: 0'
0xb3000e87    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3000e8c    e887f3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3000e91    83c404                 add esp,0x4
0xb3000e94    50                     push eax
        ;; t1 <- Constant:63(#2)
0xb3000e95    b804000000             mov eax,0x4
0xb3000e9a    50                     push eax
        ;; Branch if RelationalOp:64(>, t0, t1) goto (2, 5)
0xb3000e9b    59                     pop ecx
0xb3000e9c    58                     pop eax
0xb3000e9d    50                     push eax
0xb3000e9e    51                     push ecx
0xb3000e9f    b931bd0bb3             mov ecx,0xb30bbd31  'ICData target:'>' num-checks: 0'
0xb3000ea4    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3000ea9    e82af4ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3000eae    83c408                 add esp,0x8
0xb3000eb1    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3000eb6    0f85d9000000           jnz 0xb3000f95
        ;; B2
        ;; t0 <- LoadLocal:66(scriptName lvl:0)
0xb3000ebc    8b450c                 mov eax,[ebp+0xc]
0xb3000ebf    50                     push eax
        ;; PushArgument:67(t0)
        ;; t0 <- Constant:68(#1)
0xb3000ec0    b802000000             mov eax,0x2
0xb3000ec5    50                     push eax
        ;; PushArgument:69(t0)
        ;; t0 <- InstanceCall:70([], t0, t0)
0xb3000ec6    b989bd0bb3             mov ecx,0xb30bbd89  'ICData target:'[]' num-checks: 0'
0xb3000ecb    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3000ed0    e843f3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3000ed5    83c408                 add esp,0x8
0xb3000ed8    50                     push eax
        ;; t1 <- Constant:71(#:)
0xb3000ed9    b8312440b5             mov eax,0xb5402431
0xb3000ede    50                     push eax
        ;; Branch if EqualityCompare:72(t0 == t1) goto (3, 6)
0xb3000edf    5a                     pop edx
0xb3000ee0    5b                     pop ebx
0xb3000ee1    53                     push ebx
0xb3000ee2    52                     push edx
0xb3000ee3    813c24190040b5         cmp [esp],0xb5400019
0xb3000eea    0f8425000000           jz 0xb3000f15
0xb3000ef0    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3000ef8    0f8417000000           jz 0xb3000f15
0xb3000efe    b9d9bd0bb3             mov ecx,0xb30bbdd9  'ICData target:'==' num-checks: 0'
0xb3000f03    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3000f08    e8cbf3ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3000f0d    83c408                 add esp,0x8
0xb3000f10    e90d000000             jmp 0xb3000f22
0xb3000f15    b9d9bd0bb3             mov ecx,0xb30bbdd9  'ICData target:'==' num-checks: 0'
0xb3000f1a    e829faffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3000f1f    83c408                 add esp,0x8
0xb3000f22    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3000f27    0f8563000000           jnz 0xb3000f90
        ;; B3
        ;; t0 <- Constant:75(#/)
0xb3000f2d    b8812340b5             mov eax,0xb5402381
0xb3000f32    50                     push eax
        ;; PushArgument:76(t0)
        ;; t0 <- LoadLocal:77(scriptName lvl:0)
0xb3000f33    8b450c                 mov eax,[ebp+0xc]
0xb3000f36    50                     push eax
        ;; PushArgument:78(t0)
        ;; t0 <- Constant:79(#\)
0xb3000f37    b8412640b5             mov eax,0xb5402641
0xb3000f3c    50                     push eax
        ;; PushArgument:80(t0)
        ;; t0 <- Constant:81(#/)
0xb3000f3d    b8812340b5             mov eax,0xb5402381
0xb3000f42    50                     push eax
        ;; PushArgument:82(t0)
        ;; t0 <- InstanceCall:83(replaceAll, t0, t0, t0)
0xb3000f43    b931be0bb3             mov ecx,0xb30bbe31  'ICData target:'replaceAll' num-checks: 0'
0xb3000f48    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3000f4d    e8c6f2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3000f52    83c40c                 add esp,0xc
0xb3000f55    50                     push eax
        ;; PushArgument:84(t0)
        ;; t0 <- Constant:85(#)
0xb3000f56    b8e11240b5             mov eax,0xb54012e1
0xb3000f5b    50                     push eax
        ;; PushArgument:86(t0)
        ;; t0 <- Constant:87(#NULL AbstractTypeArguments)
0xb3000f5c    b8190040b5             mov eax,0xb5400019
0xb3000f61    50                     push eax
        ;; t0 <- CreateArray:88(t0, t0, t0, t0)
0xb3000f62    59                     pop ecx
0xb3000f63    ba06000000             mov edx,0x6
0xb3000f68    e82bf23702             call 0xb5380198  [stub: AllocateArray]
0xb3000f6d    8d500b                 lea edx,[eax+0xb]
0xb3000f70    8f4208                 pop [edx+0x8]
0xb3000f73    8f4204                 pop [edx+0x4]
0xb3000f76    8f02                   pop [edx]
0xb3000f78    50                     push eax
        ;; PushArgument:89(t0)
        ;; t0 <- StaticCall:90(_interpolate@0x36924d72 t0)
0xb3000f79    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3000f7e    e8a5f33702             call 0xb5380328  [stub: CallStaticFunction]
0xb3000f83    83c404                 add esp,0x4
0xb3000f86    50                     push eax
        ;; StoreLocal:91(scriptName, t0, lvl: 0)
0xb3000f87    58                     pop eax
0xb3000f88    89450c                 mov [ebp+0xc],eax
        ;; goto:107 7
0xb3000f8b    e92c000000             jmp 0xb3000fbc
        ;; B6
        ;; goto:105 4
0xb3000f90    e900000000             jmp 0xb3000f95
        ;; B5
        ;; goto:103 4
        ;; B4
        ;; t0 <- LoadLocal:92(scriptName lvl:0)
0xb3000f95    8b450c                 mov eax,[ebp+0xc]
0xb3000f98    50                     push eax
        ;; PushArgument:93(t0)
        ;; t0 <- Constant:94(#\)
0xb3000f99    b8412640b5             mov eax,0xb5402641
0xb3000f9e    50                     push eax
        ;; PushArgument:95(t0)
        ;; t0 <- Constant:96(#/)
0xb3000f9f    b8812340b5             mov eax,0xb5402381
0xb3000fa4    50                     push eax
        ;; PushArgument:97(t0)
        ;; t0 <- InstanceCall:98(replaceAll, t0, t0, t0)
0xb3000fa5    b999be0bb3             mov ecx,0xb30bbe99  'ICData target:'replaceAll' num-checks: 0'
0xb3000faa    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3000faf    e864f2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3000fb4    83c40c                 add esp,0xc
0xb3000fb7    50                     push eax
        ;; StoreLocal:99(scriptName, t0, lvl: 0)
0xb3000fb8    58                     pop eax
0xb3000fb9    89450c                 mov [ebp+0xc],eax
        ;; goto:108 7
        ;; B7
        ;; t0 <- Constant:109(### scriptName: )
0xb3000fbc    b829b533b3             mov eax,0xb333b529  '## scriptName: '
0xb3000fc1    50                     push eax
        ;; PushArgument:110(t0)
        ;; t0 <- LoadLocal:111(scriptName lvl:0)
0xb3000fc2    8b450c                 mov eax,[ebp+0xc]
0xb3000fc5    50                     push eax
        ;; PushArgument:112(t0)
        ;; t0 <- Constant:113(#)
0xb3000fc6    b8e11240b5             mov eax,0xb54012e1
0xb3000fcb    50                     push eax
        ;; PushArgument:114(t0)
        ;; t0 <- Constant:115(#NULL AbstractTypeArguments)
0xb3000fcc    b8190040b5             mov eax,0xb5400019
0xb3000fd1    50                     push eax
        ;; t0 <- CreateArray:116(t0, t0, t0, t0)
0xb3000fd2    59                     pop ecx
0xb3000fd3    ba06000000             mov edx,0x6
0xb3000fd8    e8bbf13702             call 0xb5380198  [stub: AllocateArray]
0xb3000fdd    8d500b                 lea edx,[eax+0xb]
0xb3000fe0    8f4208                 pop [edx+0x8]
0xb3000fe3    8f4204                 pop [edx+0x4]
0xb3000fe6    8f02                   pop [edx]
0xb3000fe8    50                     push eax
        ;; PushArgument:117(t0)
        ;; t0 <- StaticCall:118(_interpolate@0x36924d72 t0)
0xb3000fe9    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3000fee    e835f33702             call 0xb5380328  [stub: CallStaticFunction]
0xb3000ff3    83c404                 add esp,0x4
0xb3000ff6    50                     push eax
        ;; PushArgument:119(t0)
        ;; StaticCall:120(_logResolution@0x116c55de t0)
0xb3000ff7    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3000ffc    e827f33702             call 0xb5380328  [stub: CallStaticFunction]
0xb3001001    83c404                 add esp,0x4
        ;; goto:124 10
0xb3001004    e900000000             jmp 0xb3001009
        ;; B9
        ;; goto:125 10
        ;; B10
        ;; t0 <- AllocateObject:126(Library:'dart:uri' Class: Uri)
0xb3001009    e84afcffff             call 0xb3000c58 [ stub ]
0xb300100e    50                     push eax
        ;; t0 <- StoreLocal:127(:alloc261, t0, lvl: 0)
0xb300100f    58                     pop eax
0xb3001010    8945f4                 mov [ebp-0xc],eax
0xb3001013    50                     push eax
        ;; PushArgument:128(t0)
        ;; t0 <- Constant:129(#3)
0xb3001014    b806000000             mov eax,0x6
0xb3001019    50                     push eax
        ;; PushArgument:130(t0)
        ;; t0 <- Constant:131(#file)
0xb300101a    b8517e32b3             mov eax,0xb3327e51  'file'
0xb300101f    50                     push eax
        ;; PushArgument:132(t0)
        ;; t0 <- LoadLocal:133(cwd lvl:0)
0xb3001020    8b4510                 mov eax,[ebp+0x10]
0xb3001023    50                     push eax
        ;; PushArgument:134(t0)
        ;; t0 <- Constant:135(#/)
0xb3001024    b8812340b5             mov eax,0xb5402381
0xb3001029    50                     push eax
        ;; PushArgument:136(t0)
        ;; t0 <- InstanceCall:137(endsWith, t0, t0)
0xb300102a    b959bf0bb3             mov ecx,0xb30bbf59  'ICData target:'endsWith' num-checks: 0'
0xb300102f    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001034    e8dff1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001039    83c408                 add esp,0x8
0xb300103c    50                     push eax
        ;; t1 <- Constant:138(#true)
0xb300103d    b8391030b3             mov eax,0xb3301039  'true'
0xb3001042    50                     push eax
        ;; Branch if StrictCompare:139(===, t0, t1) goto (11, 12)
0xb3001043    58                     pop eax
0xb3001044    59                     pop ecx
0xb3001045    51                     push ecx
0xb3001046    50                     push eax
0xb3001047    e8bcf73702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb300104c    58                     pop eax
0xb300104d    59                     pop ecx
0xb300104e    0f850d000000           jnz 0xb3001061
        ;; B11
        ;; t0 <- LoadLocal:141(cwd lvl:0)
0xb3001054    8b4510                 mov eax,[ebp+0x10]
0xb3001057    50                     push eax
        ;; StoreLocal:142(:expr_temp, t0, lvl: 0)
0xb3001058    58                     pop eax
0xb3001059    8945f8                 mov [ebp-0x8],eax
        ;; goto:157 13
0xb300105c    e93f000000             jmp 0xb30010a0
        ;; B12
        ;; t0 <- Constant:143(#)
0xb3001061    b8e11240b5             mov eax,0xb54012e1
0xb3001066    50                     push eax
        ;; PushArgument:144(t0)
        ;; t0 <- LoadLocal:145(cwd lvl:0)
0xb3001067    8b4510                 mov eax,[ebp+0x10]
0xb300106a    50                     push eax
        ;; PushArgument:146(t0)
        ;; t0 <- Constant:147(#/)
0xb300106b    b8812340b5             mov eax,0xb5402381
0xb3001070    50                     push eax
        ;; PushArgument:148(t0)
        ;; t0 <- Constant:149(#NULL AbstractTypeArguments)
0xb3001071    b8190040b5             mov eax,0xb5400019
0xb3001076    50                     push eax
        ;; t0 <- CreateArray:150(t0, t0, t0, t0)
0xb3001077    59                     pop ecx
0xb3001078    ba06000000             mov edx,0x6
0xb300107d    e816f13702             call 0xb5380198  [stub: AllocateArray]
0xb3001082    8d500b                 lea edx,[eax+0xb]
0xb3001085    8f4208                 pop [edx+0x8]
0xb3001088    8f4204                 pop [edx+0x4]
0xb300108b    8f02                   pop [edx]
0xb300108d    50                     push eax
        ;; PushArgument:151(t0)
        ;; t0 <- StaticCall:152(_interpolate@0x36924d72 t0)
0xb300108e    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001093    e890f23702             call 0xb5380328  [stub: CallStaticFunction]
0xb3001098    83c404                 add esp,0x4
0xb300109b    50                     push eax
        ;; StoreLocal:153(:expr_temp, t0, lvl: 0)
0xb300109c    58                     pop eax
0xb300109d    8945f8                 mov [ebp-0x8],eax
        ;; goto:158 13
        ;; B13
        ;; t0 <- LoadLocal:159(:expr_temp lvl:0)
0xb30010a0    8b45f8                 mov eax,[ebp-0x8]
0xb30010a3    50                     push eax
        ;; PushArgument:160(t0)
        ;; StaticCall:161(Uri.fromComponents t0, t0, t0, t0)
0xb30010a4    bac1bf0bb3             mov edx,0xb30bbfc1  Array[4, 2, path, 3, scheme, ...]
0xb30010a9    e87af23702             call 0xb5380328  [stub: CallStaticFunction]
0xb30010ae    83c410                 add esp,0x10
        ;; t0 <- LoadLocal:162(:alloc261 lvl:0)
0xb30010b1    8b45f4                 mov eax,[ebp-0xc]
0xb30010b4    50                     push eax
        ;; StoreLocal:163(base, t0, lvl: 0)
0xb30010b5    58                     pop eax
0xb30010b6    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:164(base lvl:0)
0xb30010b9    8b45f0                 mov eax,[ebp-0x10]
0xb30010bc    50                     push eax
        ;; PushArgument:165(t0)
        ;; t0 <- LoadLocal:166(scriptName lvl:0)
0xb30010bd    8b450c                 mov eax,[ebp+0xc]
0xb30010c0    50                     push eax
        ;; PushArgument:167(t0)
        ;; t0 <- InstanceCall:168(resolve, t0, t0)
0xb30010c1    b919c00bb3             mov ecx,0xb30bc019  'ICData target:'resolve' num-checks: 0'
0xb30010c6    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30010cb    e848f1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30010d0    83c408                 add esp,0x8
0xb30010d3    50                     push eax
        ;; StoreStaticField:169(_entrypoint@0x116c55de, t0)
0xb30010d4    58                     pop eax
0xb30010d5    b9710212b3             mov ecx,0xb3120271  'Field <::._entrypoint@0x116c55de>: static'
0xb30010da    89410f                 mov [ecx+0xf],eax
0xb30010dd    83e005                 and eax,0x5
0xb30010e0    d1e8                   shr eax, 1
0xb30010e2    13c1                   adc eax,ecx
0xb30010e4    83e007                 and eax,0x7
0xb30010e7    83f804                 cmp eax,0x4
0xb30010ea    7508                   jnz 0xb30010f4
0xb30010ec    8d410f                 lea eax,[ecx+0xf]
0xb30010ef    e874f0ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- Constant:170(## Resolved script to: )
0xb30010f4    b8c1a132b3             mov eax,0xb332a1c1  '# Resolved script to: '
0xb30010f9    50                     push eax
        ;; PushArgument:171(t0)
        ;; t0 <- LoadStaticField:172(_entrypoint@0x116c55de)
0xb30010fa    b8710212b3             mov eax,0xb3120271  'Field <::._entrypoint@0x116c55de>: static'
0xb30010ff    8b400f                 mov eax,[eax+0xf]
0xb3001102    50                     push eax
        ;; PushArgument:173(t0)
        ;; t0 <- Constant:174(#)
0xb3001103    b8e11240b5             mov eax,0xb54012e1
0xb3001108    50                     push eax
        ;; PushArgument:175(t0)
        ;; t0 <- Constant:176(#NULL AbstractTypeArguments)
0xb3001109    b8190040b5             mov eax,0xb5400019
0xb300110e    50                     push eax
        ;; t0 <- CreateArray:177(t0, t0, t0, t0)
0xb300110f    59                     pop ecx
0xb3001110    ba06000000             mov edx,0x6
0xb3001115    e87ef03702             call 0xb5380198  [stub: AllocateArray]
0xb300111a    8d500b                 lea edx,[eax+0xb]
0xb300111d    8f4208                 pop [edx+0x8]
0xb3001120    8f4204                 pop [edx+0x4]
0xb3001123    8f02                   pop [edx]
0xb3001125    50                     push eax
        ;; PushArgument:178(t0)
        ;; t0 <- StaticCall:179(_interpolate@0x36924d72 t0)
0xb3001126    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300112b    e8f8f13702             call 0xb5380328  [stub: CallStaticFunction]
0xb3001130    83c404                 add esp,0x4
0xb3001133    50                     push eax
        ;; PushArgument:180(t0)
        ;; StaticCall:181(_logResolution@0x116c55de t0)
0xb3001134    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001139    e8eaf13702             call 0xb5380328  [stub: CallStaticFunction]
0xb300113e    83c404                 add esp,0x4
        ;; t0 <- LoadStaticField:182(_entrypoint@0x116c55de)
0xb3001141    b8710212b3             mov eax,0xb3120271  'Field <::._entrypoint@0x116c55de>: static'
0xb3001146    8b400f                 mov eax,[eax+0xf]
0xb3001149    50                     push eax
        ;; PushArgument:183(t0)
        ;; t0 <- InstanceCall:184(toString, t0)
0xb300114a    b999c00bb3             mov ecx,0xb30bc099  'ICData target:'toString' num-checks: 0'
0xb300114f    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001154    e8bff0ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001159    83c404                 add esp,0x4
0xb300115c    50                     push eax
        ;; Return:185(t0)
0xb300115d    58                     pop eax
0xb300115e    ba090212b3             mov edx,0xb3120209  'Function '_resolveScriptUri@0x116c55de': static.'
0xb3001163    ff422b                 inc [edx+0x2b]
0xb3001166    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300116d    7c05                   jl 0xb3001174
0xb300116f    e844f7ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3001174    89ec                   mov esp,ebp
0xb3001176    5d                     pop ebp
0xb3001177    c3                     ret
0xb3001178    90                     nop
0xb3001179    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300117a    b970d30a08             mov ecx,0x80ad370
0xb300117f    ba00000000             mov edx,0
0xb3001184    e89fee3702             call 0xb5380028  [stub: CallToRuntime]
0xb3001189    e99ffbffff             jmp 0xb3000d2d
0xb300118e    e9a5f23702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3001193    e980f33702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 38 : 0xb3000d2e '# Current working directory: '
 48 : 0xb3000d38 ''
 83 : 0xb3000d5b 'ImmutableArray'
 97 : 0xb3000d69 'ImmutableArray'
 110 : 0xb3000d76 '# ScriptName: '
 120 : 0xb3000d80 ''
 155 : 0xb3000da3 'ImmutableArray'
 169 : 0xb3000db1 'ImmutableArray'
 186 : 0xb3000dc2 'true'
 209 : 0xb3000dd9 '/'
 219 : 0xb3000de3 '\'
 225 : 0xb3000de9 '/'
 231 : 0xb3000def 'ICData target:'replaceAll' num-checks: 0'
 236 : 0xb3000df4 'ImmutableArray'
 250 : 0xb3000e02 ''
 285 : 0xb3000e25 'ImmutableArray'
 303 : 0xb3000e37 '## cwd: '
 313 : 0xb3000e41 ''
 348 : 0xb3000e64 'ImmutableArray'
 362 : 0xb3000e72 'ImmutableArray'
 379 : 0xb3000e83 'ICData target:'get:length' num-checks: 0'
 384 : 0xb3000e88 'ImmutableArray'
 408 : 0xb3000ea0 'ICData target:'>' num-checks: 0'
 413 : 0xb3000ea5 'ImmutableArray'
 426 : 0xb3000eb2 'true'
 447 : 0xb3000ec7 'ICData target:'[]' num-checks: 0'
 452 : 0xb3000ecc 'ImmutableArray'
 466 : 0xb3000eda ':'
 503 : 0xb3000eff 'ICData target:'==' num-checks: 0'
 508 : 0xb3000f04 'ImmutableArray'
 526 : 0xb3000f16 'ICData target:'==' num-checks: 0'
 539 : 0xb3000f23 'true'
 550 : 0xb3000f2e '/'
 560 : 0xb3000f38 '\'
 566 : 0xb3000f3e '/'
 572 : 0xb3000f44 'ICData target:'replaceAll' num-checks: 0'
 577 : 0xb3000f49 'ImmutableArray'
 591 : 0xb3000f57 ''
 626 : 0xb3000f7a 'ImmutableArray'
 658 : 0xb3000f9a '\'
 664 : 0xb3000fa0 '/'
 670 : 0xb3000fa6 'ICData target:'replaceAll' num-checks: 0'
 675 : 0xb3000fab 'ImmutableArray'
 693 : 0xb3000fbd '## scriptName: '
 703 : 0xb3000fc7 ''
 738 : 0xb3000fea 'ImmutableArray'
 752 : 0xb3000ff8 'ImmutableArray'
 787 : 0xb300101b 'file'
 797 : 0xb3001025 '/'
 803 : 0xb300102b 'ICData target:'endsWith' num-checks: 0'
 808 : 0xb3001030 'ImmutableArray'
 822 : 0xb300103e 'true'
 858 : 0xb3001062 ''
 868 : 0xb300106c '/'
 903 : 0xb300108f 'ImmutableArray'
 925 : 0xb30010a5 'ImmutableArray'
 954 : 0xb30010c2 'ICData target:'resolve' num-checks: 0'
 959 : 0xb30010c7 'ImmutableArray'
 974 : 0xb30010d6 'Field <::._entrypoint@0x116c55de>: static'
 1005 : 0xb30010f5 '# Resolved script to: '
 1011 : 0xb30010fb 'Field <::._entrypoint@0x116c55de>: static'
 1020 : 0xb3001104 ''
 1055 : 0xb3001127 'ImmutableArray'
 1069 : 0xb3001135 'ImmutableArray'
 1082 : 0xb3001142 'Field <::._entrypoint@0x116c55de>: static'
 1091 : 0xb300114b 'ICData target:'toString' num-checks: 0'
 1096 : 0xb3001150 'ImmutableArray'
 1111 : 0xb300115f 'Function '_resolveScriptUri@0x116c55de': static.'
}
PC Descriptors for function 'dart:builtin_::__resolveScriptUri@0x116c55de' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3000d4e	other        	-1		119	-1
0xb3000d64	fn-call      	12		119	-1
0xb3000d64	deopt-after  	12		119	-1
0xb3000d72	fn-call      	14		118	-1
0xb3000d72	deopt-after  	14		118	-1
0xb3000d96	other        	-1		130	-1
0xb3000dac	fn-call      	24		130	-1
0xb3000dac	deopt-after  	24		130	-1
0xb3000dba	fn-call      	26		129	-1
0xb3000dba	deopt-after  	26		129	-1
0xb3000dee	deopt-before 	39		155	-1
0xb3000dfd	ic-call      	39		155	-1
0xb3000dfd	deopt-after  	39		155	-1
0xb3000e18	other        	-1		147	-1
0xb3000e2e	fn-call      	46		147	-1
0xb3000e2e	deopt-after  	46		147	-1
0xb3000e57	other        	-1		169	-1
0xb3000e6d	fn-call      	57		169	-1
0xb3000e6d	deopt-after  	57		169	-1
0xb3000e7b	fn-call      	59		168	-1
0xb3000e7b	deopt-after  	59		168	-1
0xb3000e82	deopt-before 	62		183	-1
0xb3000e91	ic-call      	62		183	-1
0xb3000e91	deopt-after  	62		183	-1
0xb3000e9f	deopt-before 	64		185	-1
0xb3000eae	ic-call      	64		185	-1
0xb3000eae	deopt-after  	64		185	-1
0xb3000ec6	deopt-before 	70		193	-1
0xb3000ed5	ic-call      	70		193	-1
0xb3000ed5	deopt-after  	70		193	-1
0xb3000ee3	deopt-before 	72		197	-1
0xb3000f0d	ic-call      	72		197	-1
0xb3000f0d	deopt-after  	72		197	-1
0xb3000f1f	other        	-1		197	-1
0xb3000f43	deopt-before 	83		214	-1
0xb3000f52	ic-call      	83		214	-1
0xb3000f52	deopt-after  	83		214	-1
0xb3000f6d	other        	-1		206	-1
0xb3000f83	fn-call      	90		206	-1
0xb3000f83	deopt-after  	90		206	-1
0xb3000f8b	deopt-before 	107		0	-1
0xb3000f90	deopt-before 	105		0	-1
0xb3000f95	deopt-before 	103		0	-1
0xb3000fa5	deopt-before 	98		236	-1
0xb3000fb4	ic-call      	98		236	-1
0xb3000fb4	deopt-after  	98		236	-1
0xb3000fbc	deopt-before 	108		0	-1
0xb3000fdd	other        	-1		248	-1
0xb3000ff3	fn-call      	118		248	-1
0xb3000ff3	deopt-after  	118		248	-1
0xb3001001	fn-call      	120		247	-1
0xb3001001	deopt-after  	120		247	-1
0xb3001004	deopt-before 	124		0	-1
0xb3001009	deopt-before 	125		0	-1
0xb300100e	other        	-1		261	-1
0xb300102a	deopt-before 	137		282	-1
0xb3001039	ic-call      	137		282	-1
0xb3001039	deopt-after  	137		282	-1
0xb300105c	deopt-before 	157		0	-1
0xb3001082	other        	-1		290	-1
0xb3001098	fn-call      	152		290	-1
0xb3001098	deopt-after  	152		290	-1
0xb30010a0	deopt-before 	158		0	-1
0xb30010ae	fn-call      	161		261	-1
0xb30010ae	deopt-after  	161		261	-1
0xb30010c1	deopt-before 	168		306	-1
0xb30010d0	ic-call      	168		306	-1
0xb30010d0	deopt-after  	168		306	-1
0xb300111a	other        	-1		314	-1
0xb3001130	fn-call      	179		314	-1
0xb3001130	deopt-after  	179		314	-1
0xb300113e	fn-call      	181		313	-1
0xb300113e	deopt-after  	181		313	-1
0xb300114a	deopt-before 	184		327	-1
0xb3001159	ic-call      	184		327	-1
0xb3001159	deopt-after  	184		327	-1
0xb3001174	other        	-1		0	-1
0xb3001179	return       	-1		322	-1
0xb3001189	other        	-1		101	-1
0xb300118e	patch        	-1		0	-1
0xb3001193	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:builtin_::__resolveScriptUri@0x116c55de' {
}
Variable Descriptors for function 'dart:builtin_::__resolveScriptUri@0x116c55de' {
  stack var 'cwd' offset 4 (valid 103-331)
  stack var 'scriptName' offset 3 (valid 107-331)
  stack var 'isWindows' offset 2 (valid 112-331)
  stack var 'base' offset -4 (valid 258-331)
}
Exception Handlers for function 'dart:builtin_::__resolveScriptUri@0x116c55de' {
No exception handlers
}
Static call target functions {
  0xb3000d64: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3000d72: dart:builtin_::__logResolution@0x116c55de, 0xb5400019
  0xb3000dac: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3000dba: dart:builtin_::__logResolution@0x116c55de, 0xb5400019
  0xb3000e2e: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3000e6d: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3000e7b: dart:builtin_::__logResolution@0x116c55de, 0xb5400019
  0xb3000f83: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3000ff3: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3001001: dart:builtin_::__logResolution@0x116c55de, 0xb5400019
  0xb3001098: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb30010ae: dart:uri_Uri_Uri.fromComponents, 0xb5400019
  0xb3001130: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb300113e: dart:builtin_::__logResolution@0x116c55de, 0xb5400019
}
Compiling function: 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' @ token 14077
Before Optimizations
==== dart:core__StringBase@0x36924d72__interpolate@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(values lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:length, t0)
    StoreLocal:6(numValues, t0, lvl: 0)
    t0 <- Constant:7(#NULL AbstractTypeArguments)
    PushArgument:8(t0)
    t0 <- LoadLocal:9(numValues lvl:0)
    PushArgument:10(t0)
    t0 <- StaticCall:11(List. t0, t0)
    StoreLocal:12(stringList, t0, lvl: 0)
    t0 <- Constant:13(#0)
    StoreLocal:14(i, t0, lvl: 0)
    goto:37 2
B2[join] pred(B1, B3)
    t0 <- LoadLocal:39(i lvl:0)
    t1 <- LoadLocal:40(numValues lvl:0)
    Branch if RelationalOp:41(<, t0, t1) goto (3, 4)
B3[target]
    CheckStackOverflow:15()
    t0 <- LoadLocal:16(stringList lvl:0)
    PushArgument:17(t0)
    t0 <- LoadLocal:18(i lvl:0)
    PushArgument:19(t0)
    t0 <- LoadLocal:20(values lvl:0)
    PushArgument:21(t0)
    t0 <- LoadLocal:22(i lvl:0)
    PushArgument:23(t0)
    t0 <- InstanceCall:24([], t0, t0)
    PushArgument:25(t0)
    t0 <- InstanceCall:26(toString, t0)
    PushArgument:27(t0)
    InstanceCall:28([]=, t0, t0, t0)
    t0 <- LoadLocal:29(i lvl:0)
    t0 <- StoreLocal:30(:expr_temp, t0, lvl: 0)
    PushArgument:31(t0)
    t0 <- Constant:32(#1)
    PushArgument:33(t0)
    t0 <- InstanceCall:34(+, t0, t0)
    StoreLocal:35(i, t0, lvl: 0)
    goto:38 2
B4[target]
    t0 <- LoadLocal:45(stringList lvl:0)
    PushArgument:46(t0)
    t0 <- StaticCall:47(_concatAll@0x36924d72 t0)
    Return:48(t0)
--> 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' entry: 0xb30011a8 time: 607 us
Code for function 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' {
        ;; Enter frame
0xb30011a8    55                     push ebp
0xb30011a9    89e5                   mov ebp,esp
0xb30011ab    e800000000             call 0xb30011b0
0xb30011b0    83ec14                 sub esp,0x14
        ;; Initialize spill slots
0xb30011b3    b8190040b5             mov eax,0xb5400019
0xb30011b8    8945f8                 mov [ebp-0x8],eax
0xb30011bb    8945f4                 mov [ebp-0xc],eax
0xb30011be    8945f0                 mov [ebp-0x10],eax
0xb30011c1    8945ec                 mov [ebp-0x14],eax
0xb30011c4    8945e8                 mov [ebp-0x18],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30011c7    3b25bc195809           cmp esp,[0x95819bc]
0xb30011cd    0f8618010000           jna 0xb30012eb
        ;; t0 <- LoadLocal:3(values lvl:0)
0xb30011d3    8b4508                 mov eax,[ebp+0x8]
0xb30011d6    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:length, t0)
0xb30011d7    b999c90bb3             mov ecx,0xb30bc999  'ICData target:'get:length' num-checks: 0'
0xb30011dc    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30011e1    e832f0ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30011e6    83c404                 add esp,0x4
0xb30011e9    50                     push eax
        ;; StoreLocal:6(numValues, t0, lvl: 0)
0xb30011ea    58                     pop eax
0xb30011eb    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- Constant:7(#NULL AbstractTypeArguments)
0xb30011ee    b8190040b5             mov eax,0xb5400019
0xb30011f3    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- LoadLocal:9(numValues lvl:0)
0xb30011f4    8b45f4                 mov eax,[ebp-0xc]
0xb30011f7    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- StaticCall:11(List. t0, t0)
0xb30011f8    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30011fd    e826f13702             call 0xb5380328  [stub: CallStaticFunction]
0xb3001202    83c408                 add esp,0x8
0xb3001205    50                     push eax
        ;; StoreLocal:12(stringList, t0, lvl: 0)
0xb3001206    58                     pop eax
0xb3001207    8945ec                 mov [ebp-0x14],eax
        ;; t0 <- Constant:13(#0)
0xb300120a    b800000000             mov eax,0
0xb300120f    50                     push eax
        ;; StoreLocal:14(i, t0, lvl: 0)
0xb3001210    58                     pop eax
0xb3001211    8945e8                 mov [ebp-0x18],eax
        ;; goto:37 2
        ;; B2
        ;; t0 <- LoadLocal:39(i lvl:0)
0xb3001214    8b45e8                 mov eax,[ebp-0x18]
0xb3001217    50                     push eax
        ;; t1 <- LoadLocal:40(numValues lvl:0)
0xb3001218    8b45f4                 mov eax,[ebp-0xc]
0xb300121b    50                     push eax
        ;; Branch if RelationalOp:41(<, t0, t1) goto (3, 4)
0xb300121c    59                     pop ecx
0xb300121d    58                     pop eax
0xb300121e    50                     push eax
0xb300121f    51                     push ecx
0xb3001220    b901ca0bb3             mov ecx,0xb30bca01  'ICData target:'<' num-checks: 0'
0xb3001225    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300122a    e8a9f0ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300122f    83c408                 add esp,0x8
0xb3001232    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3001237    0f857f000000           jnz 0xb30012bc
        ;; B3
        ;; CheckStackOverflow:15()
0xb300123d    3b25bc195809           cmp esp,[0x95819bc]
0xb3001243    0f86b6000000           jna 0xb30012ff
        ;; t0 <- LoadLocal:16(stringList lvl:0)
0xb3001249    8b45ec                 mov eax,[ebp-0x14]
0xb300124c    50                     push eax
        ;; PushArgument:17(t0)
        ;; t0 <- LoadLocal:18(i lvl:0)
0xb300124d    8b45e8                 mov eax,[ebp-0x18]
0xb3001250    50                     push eax
        ;; PushArgument:19(t0)
        ;; t0 <- LoadLocal:20(values lvl:0)
0xb3001251    8b4508                 mov eax,[ebp+0x8]
0xb3001254    50                     push eax
        ;; PushArgument:21(t0)
        ;; t0 <- LoadLocal:22(i lvl:0)
0xb3001255    8b45e8                 mov eax,[ebp-0x18]
0xb3001258    50                     push eax
        ;; PushArgument:23(t0)
        ;; t0 <- InstanceCall:24([], t0, t0)
0xb3001259    b959ca0bb3             mov ecx,0xb30bca59  'ICData target:'[]' num-checks: 0'
0xb300125e    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001263    e8b0efffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001268    83c408                 add esp,0x8
0xb300126b    50                     push eax
        ;; PushArgument:25(t0)
        ;; t0 <- InstanceCall:26(toString, t0)
0xb300126c    b9a9ca0bb3             mov ecx,0xb30bcaa9  'ICData target:'toString' num-checks: 0'
0xb3001271    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001276    e89defffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300127b    83c404                 add esp,0x4
0xb300127e    50                     push eax
        ;; PushArgument:27(t0)
        ;; InstanceCall:28([]=, t0, t0, t0)
0xb300127f    b9f9ca0bb3             mov ecx,0xb30bcaf9  'ICData target:'[]=' num-checks: 0'
0xb3001284    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3001289    e82af1ffff             call 0xb30003b8  [stub: ThreeArgsCheckInlineCache]
0xb300128e    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:29(i lvl:0)
0xb3001291    8b45e8                 mov eax,[ebp-0x18]
0xb3001294    50                     push eax
        ;; t0 <- StoreLocal:30(:expr_temp, t0, lvl: 0)
0xb3001295    58                     pop eax
0xb3001296    8945f8                 mov [ebp-0x8],eax
0xb3001299    50                     push eax
        ;; PushArgument:31(t0)
        ;; t0 <- Constant:32(#1)
0xb300129a    b802000000             mov eax,0x2
0xb300129f    50                     push eax
        ;; PushArgument:33(t0)
        ;; t0 <- InstanceCall:34(+, t0, t0)
0xb30012a0    b951cb0bb3             mov ecx,0xb30bcb51  'ICData target:'+' num-checks: 0'
0xb30012a5    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30012aa    e829f0ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30012af    83c408                 add esp,0x8
0xb30012b2    50                     push eax
        ;; StoreLocal:35(i, t0, lvl: 0)
0xb30012b3    58                     pop eax
0xb30012b4    8945e8                 mov [ebp-0x18],eax
        ;; goto:38 2
0xb30012b7    e958ffffff             jmp 0xb3001214
        ;; B4
        ;; t0 <- LoadLocal:45(stringList lvl:0)
0xb30012bc    8b45ec                 mov eax,[ebp-0x14]
0xb30012bf    50                     push eax
        ;; PushArgument:46(t0)
        ;; t0 <- StaticCall:47(_concatAll@0x36924d72 t0)
0xb30012c0    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30012c5    e85ef03702             call 0xb5380328  [stub: CallStaticFunction]
0xb30012ca    83c404                 add esp,0x4
0xb30012cd    50                     push eax
        ;; Return:48(t0)
0xb30012ce    58                     pop eax
0xb30012cf    bab9aa1ab3             mov edx,0xb31aaab9  'Function '_interpolate@0x36924d72': static.'
0xb30012d4    ff422b                 inc [edx+0x2b]
0xb30012d7    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30012de    7c05                   jl 0xb30012e5
0xb30012e0    e8d3f5ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30012e5    89ec                   mov esp,ebp
0xb30012e7    5d                     pop ebp
0xb30012e8    c3                     ret
0xb30012e9    90                     nop
0xb30012ea    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30012eb    b970d30a08             mov ecx,0x80ad370
0xb30012f0    ba00000000             mov edx,0
0xb30012f5    e82eed3702             call 0xb5380028  [stub: CallToRuntime]
0xb30012fa    e9d4feffff             jmp 0xb30011d3
        ;; CheckStackOverflowSlowPath
0xb30012ff    b970d30a08             mov ecx,0x80ad370
0xb3001304    ba00000000             mov edx,0
0xb3001309    e81aed3702             call 0xb5380028  [stub: CallToRuntime]
0xb300130e    e936ffffff             jmp 0xb3001249
0xb3001313    e920f13702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3001318    e9fbf13702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 48 : 0xb30011d8 'ICData target:'get:length' num-checks: 0'
 53 : 0xb30011dd 'ImmutableArray'
 81 : 0xb30011f9 'ImmutableArray'
 121 : 0xb3001221 'ICData target:'<' num-checks: 0'
 126 : 0xb3001226 'ImmutableArray'
 139 : 0xb3001233 'true'
 178 : 0xb300125a 'ICData target:'[]' num-checks: 0'
 183 : 0xb300125f 'ImmutableArray'
 197 : 0xb300126d 'ICData target:'toString' num-checks: 0'
 202 : 0xb3001272 'ImmutableArray'
 216 : 0xb3001280 'ICData target:'[]=' num-checks: 0'
 221 : 0xb3001285 'ImmutableArray'
 249 : 0xb30012a1 'ICData target:'+' num-checks: 0'
 254 : 0xb30012a6 'ImmutableArray'
 281 : 0xb30012c1 'ImmutableArray'
 296 : 0xb30012d0 'Function '_interpolate@0x36924d72': static.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30011d7	deopt-before 	5		14091	-1
0xb30011e6	ic-call      	5		14091	-1
0xb30011e6	deopt-after  	5		14091	-1
0xb3001202	fn-call      	11		14098	-1
0xb3001202	deopt-after  	11		14098	-1
0xb3001214	deopt-before 	37		0	-1
0xb3001220	deopt-before 	41		14117	-1
0xb300122f	ic-call      	41		14117	-1
0xb300122f	deopt-after  	41		14117	-1
0xb3001259	deopt-before 	24		14135	-1
0xb3001268	ic-call      	24		14135	-1
0xb3001268	deopt-after  	24		14135	-1
0xb300126c	deopt-before 	26		14142	-1
0xb300127b	ic-call      	26		14142	-1
0xb300127b	deopt-after  	26		14142	-1
0xb300127f	deopt-before 	28		14128	-1
0xb300128e	ic-call      	28		14128	-1
0xb300128e	deopt-after  	28		14128	-1
0xb30012a0	deopt-before 	34		14121	-1
0xb30012af	ic-call      	34		14121	-1
0xb30012af	deopt-after  	34		14121	-1
0xb30012b7	deopt-before 	38		0	-1
0xb30012ca	fn-call      	47		14149	-1
0xb30012ca	deopt-after  	47		14149	-1
0xb30012e5	other        	-1		0	-1
0xb30012ea	return       	-1		14146	-1
0xb30012fa	other        	-1		14077	-1
0xb300130e	other        	-1		14106	-1
0xb3001313	patch        	-1		0	-1
0xb3001318	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' {
  stack var 'values' offset 2 (valid 14080-14155)
  stack var 'numValues' offset -3 (valid 14085-14155)
  stack var 'stringList' offset -5 (valid 14095-14155)
  stack var 'i' offset -6 (valid 14109-14146)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' {
No exception handlers
}
Static call target functions {
  0xb3001202: dart:core_List_List., 0xb5400019
  0xb30012ca: dart:core__StringBase@0x36924d72__concatAll@0x36924d72, 0xb5400019
}
PatchStaticCall: patching from 0xb3000d64 to 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' 0xb30011a8
Compiling function: 'dart:core__ObjectArray@0x36924d72_get_length' @ token 1887
Before Optimizations
==== dart:core__ObjectArray@0x36924d72_get_length
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(ObjectArray_getLength)
    Return:4(t0)
--> 'dart:core__ObjectArray@0x36924d72_get_length' entry: 0xb3001338 time: 197 us
Code for function 'dart:core__ObjectArray@0x36924d72_get_length' {
0xb3001338    8b442404               mov eax,[esp+0x4]
0xb300133c    8b4007                 mov eax,[eax+0x7]
0xb300133f    c3                     ret
0xb3001340    cc                     int3
0xb3001341    e9f2f03702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__ObjectArray@0x36924d72_get_length' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__ObjectArray@0x36924d72_get_length' {
}
Variable Descriptors for function 'dart:core__ObjectArray@0x36924d72_get_length' {
  stack var 'this' offset 2 (valid 1821-1892)
}
Exception Handlers for function 'dart:core__ObjectArray@0x36924d72_get_length' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core_List_List.' @ token 3771
Before Optimizations
==== dart:core_List_List.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(length lvl:0)
    t1 <- Constant:4(#null)
    Branch if StrictCompare:6(===, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:8(:type_arguments lvl:0)
    t0 <- InstantiateTypeArguments:9(<E>, t0)
    PushArgument:10(t0)
    t0 <- StaticCall:11(_GrowableObjectArray@0x36924d72. t0)
    Return:12(t0)
B3[target]
    t0 <- LoadLocal:13(:type_arguments lvl:0)
    t0 <- InstantiateTypeArguments:14(<E>, t0)
    PushArgument:15(t0)
    t0 <- LoadLocal:16(length lvl:0)
    PushArgument:17(t0)
    t0 <- StaticCall:18(_ObjectArray@0x36924d72. t0, t0)
    Return:19(t0)
--> 'dart:core_List_List.' entry: 0xb3001358 time: 241 us
Code for function 'dart:core_List_List.' {
        ;; Enter frame
0xb3001358    55                     push ebp
0xb3001359    89e5                   mov ebp,esp
0xb300135b    e800000000             call 0xb3001360
0xb3001360    83ec10                 sub esp,0x10
        ;; Copy parameters
0xb3001363    8b4a0f                 mov ecx,[edx+0xf]
0xb3001366    83f902                 cmp ecx,0x2
0xb3001369    0f8c41000000           jl 0xb30013b0
0xb300136f    83f904                 cmp ecx,0x4
0xb3001372    0f8f38000000           jg 0xb30013b0
0xb3001378    8b5a0b                 mov ebx,[edx+0xb]
0xb300137b    2bd9                   sub ebx,ecx
0xb300137d    8d5c5d08               lea ebx,[ebp+ebx*0x2+0x8]
0xb3001381    8d7dfc                 lea edi,[ebp-0x4]
0xb3001384    2bf9                   sub edi,ecx
0xb3001386    2bf9                   sub edi,ecx
0xb3001388    d1f9                   sar ecx, 1
0xb300138a    eb06                   jmp 0xb3001392
0xb300138c    8b048b                 mov eax,[ebx+ecx*0x4]
0xb300138f    89048f                 mov [edi+ecx*0x4],eax
0xb3001392    49                     dec ecx
0xb3001393    79f7                   jns 0xb300138c
0xb3001395    8b4a0f                 mov ecx,[edx+0xf]
0xb3001398    d1f9                   sar ecx, 1
0xb300139a    83f901                 cmp ecx,0x1
0xb300139d    7f08                   jg 0xb30013a7
0xb300139f    b8190040b5             mov eax,0xb5400019
0xb30013a4    8945f4                 mov [ebp-0xc],eax
0xb30013a7    8b5a0b                 mov ebx,[edx+0xb]
0xb30013aa    d1fb                   sar ebx, 1
0xb30013ac    3bcb                   cmp ecx,ebx
0xb30013ae    7411                   jz 0xb30013c1
0xb30013b0    83c410                 add esp,0x10
0xb30013b3    b971d10bb3             mov ecx,0xb30bd171  'ICData target:'List.' num-checks: 0'
0xb30013b8    e88bee3702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb30013bd    89ec                   mov esp,ebp
0xb30013bf    5d                     pop ebp
0xb30013c0    c3                     ret
0xb30013c1    8b4a0b                 mov ecx,[edx+0xb]
0xb30013c4    d1f9                   sar ecx, 1
0xb30013c6    eb08                   jmp 0xb30013d0
0xb30013c8    c7448d08190040b5       mov [ebp+ecx*0x4+0x8],0xb5400019
0xb30013d0    49                     dec ecx
0xb30013d1    79f5                   jns 0xb30013c8
        ;; Initialize spill slots
0xb30013d3    b8190040b5             mov eax,0xb5400019
0xb30013d8    8945f0                 mov [ebp-0x10],eax
0xb30013db    8945ec                 mov [ebp-0x14],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30013de    3b25bc195809           cmp esp,[0x95819bc]
0xb30013e4    0f86e8000000           jna 0xb30014d2
        ;; t0 <- LoadLocal:3(length lvl:0)
0xb30013ea    8b45f4                 mov eax,[ebp-0xc]
0xb30013ed    50                     push eax
        ;; t1 <- Constant:4(#null)
0xb30013ee    b8190040b5             mov eax,0xb5400019
0xb30013f3    50                     push eax
        ;; Branch if StrictCompare:6(===, t0, t1) goto (2, 3)
0xb30013f4    58                     pop eax
0xb30013f5    59                     pop ecx
0xb30013f6    51                     push ecx
0xb30013f7    50                     push eax
0xb30013f8    e80bf43702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb30013fd    58                     pop eax
0xb30013fe    59                     pop ecx
0xb30013ff    0f8564000000           jnz 0xb3001469
        ;; B2
        ;; t0 <- LoadLocal:8(:type_arguments lvl:0)
0xb3001405    8b45f8                 mov eax,[ebp-0x8]
0xb3001408    50                     push eax
        ;; t0 <- InstantiateTypeArguments:9(<E>, t0)
0xb3001409    58                     pop eax
0xb300140a    3d190040b5             cmp eax, 0xb5400019
0xb300140f    742d                   jz 0xb300143e
0xb3001411    0fb74801               movzx_w ecx,[eax+0x1]
0xb3001415    83f905                 cmp ecx,0x5
0xb3001418    7506                   jnz 0xb3001420
0xb300141a    83780302               cmp [eax+0x3],0x2
0xb300141e    741e                   jz 0xb300143e
0xb3001420    68190040b5             push 0xb5400019
0xb3001425    68a1d00bb3             push 0xb30bd0a1
0xb300142a    50                     push eax
0xb300142b    b990120b08             mov ecx,0x80b1290
0xb3001430    ba02000000             mov edx,0x2
0xb3001435    e8eeeb3702             call 0xb5380028  [stub: CallToRuntime]
0xb300143a    83c408                 add esp,0x8
0xb300143d    58                     pop eax
0xb300143e    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- StaticCall:11(_GrowableObjectArray@0x36924d72. t0)
0xb300143f    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001444    e8dfee3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3001449    83c404                 add esp,0x4
0xb300144c    50                     push eax
        ;; Return:12(t0)
0xb300144d    58                     pop eax
0xb300144e    ba21bc1ab3             mov edx,0xb31abc21  'Function 'List.': static factory.'
0xb3001453    ff422b                 inc [edx+0x2b]
0xb3001456    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300145d    7c05                   jl 0xb3001464
0xb300145f    e854f4ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3001464    89ec                   mov esp,ebp
0xb3001466    5d                     pop ebp
0xb3001467    c3                     ret
0xb3001468    90                     nop
        ;; B3
        ;; t0 <- LoadLocal:13(:type_arguments lvl:0)
0xb3001469    8b45f8                 mov eax,[ebp-0x8]
0xb300146c    50                     push eax
        ;; t0 <- InstantiateTypeArguments:14(<E>, t0)
0xb300146d    58                     pop eax
0xb300146e    3d190040b5             cmp eax, 0xb5400019
0xb3001473    742d                   jz 0xb30014a2
0xb3001475    0fb74801               movzx_w ecx,[eax+0x1]
0xb3001479    83f905                 cmp ecx,0x5
0xb300147c    7506                   jnz 0xb3001484
0xb300147e    83780302               cmp [eax+0x3],0x2
0xb3001482    741e                   jz 0xb30014a2
0xb3001484    68190040b5             push 0xb5400019
0xb3001489    68a1d00bb3             push 0xb30bd0a1
0xb300148e    50                     push eax
0xb300148f    b990120b08             mov ecx,0x80b1290
0xb3001494    ba02000000             mov edx,0x2
0xb3001499    e88aeb3702             call 0xb5380028  [stub: CallToRuntime]
0xb300149e    83c408                 add esp,0x8
0xb30014a1    58                     pop eax
0xb30014a2    50                     push eax
        ;; PushArgument:15(t0)
        ;; t0 <- LoadLocal:16(length lvl:0)
0xb30014a3    8b45f4                 mov eax,[ebp-0xc]
0xb30014a6    50                     push eax
        ;; PushArgument:17(t0)
        ;; t0 <- StaticCall:18(_ObjectArray@0x36924d72. t0, t0)
0xb30014a7    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30014ac    e877ee3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30014b1    83c408                 add esp,0x8
0xb30014b4    50                     push eax
        ;; Return:19(t0)
0xb30014b5    58                     pop eax
0xb30014b6    ba21bc1ab3             mov edx,0xb31abc21  'Function 'List.': static factory.'
0xb30014bb    ff422b                 inc [edx+0x2b]
0xb30014be    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30014c5    7c05                   jl 0xb30014cc
0xb30014c7    e8ecf3ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30014cc    89ec                   mov esp,ebp
0xb30014ce    5d                     pop ebp
0xb30014cf    c3                     ret
0xb30014d0    90                     nop
0xb30014d1    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30014d2    b970d30a08             mov ecx,0x80ad370
0xb30014d7    ba00000000             mov edx,0
0xb30014dc    e847eb3702             call 0xb5380028  [stub: CallToRuntime]
0xb30014e1    e904ffffff             jmp 0xb30013ea
0xb30014e6    e94def3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30014eb    e928f03702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 92 : 0xb30013b4 'ICData target:'List.' num-checks: 0'
 206 : 0xb3001426 'TypeArguments: [TypeParameter: name E; index: 0; class: List]'
 232 : 0xb3001440 'ImmutableArray'
 247 : 0xb300144f 'Function 'List.': static factory.'
 306 : 0xb300148a 'TypeArguments: [TypeParameter: name E; index: 0; class: List]'
 336 : 0xb30014a8 'ImmutableArray'
 351 : 0xb30014b7 'Function 'List.': static factory.'
}
PC Descriptors for function 'dart:core_List_List.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300143a	other        	-1		3790	-1
0xb3001449	fn-call      	11		3790	-1
0xb3001449	deopt-after  	11		3790	-1
0xb3001464	other        	-1		0	-1
0xb3001469	return       	-1		3789	-1
0xb300149e	other        	-1		3804	-1
0xb30014b1	fn-call      	18		3804	-1
0xb30014b1	deopt-after  	18		3804	-1
0xb30014cc	other        	-1		0	-1
0xb30014d1	return       	-1		3803	-1
0xb30014e1	other        	-1		3771	-1
0xb30014e6	patch        	-1		0	-1
0xb30014eb	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_List_List.' {
}
Variable Descriptors for function 'dart:core_List_List.' {
  stack var 'length' offset -3 (valid 3774-3818)
}
Exception Handlers for function 'dart:core_List_List.' {
No exception handlers
}
Static call target functions {
  0xb3001449: dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72., 0xb5400019
  0xb30014b1: dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72., 0xb5400019
}
PatchStaticCall: patching from 0xb3001202 to 'dart:core_List_List.' 0xb3001358
Compiling function: 'dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.' @ token 1823
Before Optimizations
==== dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(ObjectArray_allocate)
    Return:4(t0)
--> 'dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.' entry: 0xb3001508 time: 194 us
Code for function 'dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.' {
0xb3001508    8b7c2404               mov edi,[esp+0x4]
0xb300150c    f7c701000000           test edi,0x1
0xb3001512    0f8580000000           jnz 0xb3001598
0xb3001518    83ff00                 cmp edi,0
0xb300151b    0f8c77000000           jl 0xb3001598
0xb3001521    81fffeffff1f           cmp edi,0x1ffffffe
0xb3001527    0f8f6b000000           jg 0xb3001598
0xb300152d    8d3c7d13000000         lea edi,[edi*0x2+0x13]
0xb3001534    83e7f8                 and edi,0xf8
0xb3001537    8b0508fe5609           mov eax,[0x956fe08]
0xb300153d    89c3                   mov ebx,eax
0xb300153f    03df                   add ebx,edi
0xb3001541    0f8251000000           jc 0xb3001598
0xb3001547    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb300154d    0f8345000000           jnc 0xb3001598
0xb3001553    891d08fe5609           mov [0x956fe08],ebx
0xb3001559    83c001                 add eax,0x1
0xb300155c    81fff8070000           cmp edi,0x7f8
0xb3001562    7705                   ja 0xb3001569
0xb3001564    c1e705                 shl edi, 0x5
0xb3001567    eb05                   jmp 0xb300156e
0xb3001569    bf00000000             mov edi,0
0xb300156e    81cf00002e00           or edi,0x2e0000
0xb3001574    8978ff                 mov [eax-0x1],edi
0xb3001577    8b7c2408               mov edi,[esp+0x8]
0xb300157b    897803                 mov [eax+0x3],edi
0xb300157e    8b7c2404               mov edi,[esp+0x4]
0xb3001582    897807                 mov [eax+0x7],edi
0xb3001585    8d780b                 lea edi,[eax+0xb]
0xb3001588    3bfb                   cmp edi,ebx
0xb300158a    730b                   jnc 0xb3001597
0xb300158c    c707190040b5           mov [edi],0xb5400019
0xb3001592    83c704                 add edi,0x4
0xb3001595    ebf1                   jmp 0xb3001588
0xb3001597    c3                     ret
        ;; Enter frame
0xb3001598    55                     push ebp
0xb3001599    89e5                   mov ebp,esp
0xb300159b    e800000000             call 0xb30015a0
0xb30015a0    81042470ffffff         add [esp],0xffffff70
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30015a7    3b25bc195809           cmp esp,[0x95819bc]
0xb30015ad    0f8628000000           jna 0xb30015db
        ;; t0 <- NativeCall:3(ObjectArray_allocate)
0xb30015b3    68190040b5             push 0xb5400019
0xb30015b8    8d450c                 lea eax,[ebp+0xc]
0xb30015bb    b9a0194408             mov ecx,0x84419a0
0xb30015c0    ba02000000             mov edx,0x2
0xb30015c5    e85eeb3702             call 0xb5380128  [stub: CallNativeCFunction]
0xb30015ca    58                     pop eax
0xb30015cb    50                     push eax
        ;; Return:4(t0)
0xb30015cc    58                     pop eax
0xb30015cd    ba41bf1ab3             mov edx,0xb31abf41  'Function '_ObjectArray@0x36924d72.': static factory.'
0xb30015d2    ff422b                 inc [edx+0x2b]
0xb30015d5    89ec                   mov esp,ebp
0xb30015d7    5d                     pop ebp
0xb30015d8    c3                     ret
0xb30015d9    90                     nop
0xb30015da    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30015db    b970d30a08             mov ecx,0x80ad370
0xb30015e0    ba00000000             mov edx,0
0xb30015e5    e83eea3702             call 0xb5380028  [stub: CallToRuntime]
0xb30015ea    ebc7                   jmp 0xb30015b3
0xb30015ec    e947ee3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30015f1    e922ef3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 198 : 0xb30015ce 'Function '_ObjectArray@0x36924d72.': static factory.'
}
PC Descriptors for function 'dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30015ca	other        	-1		1833	-1
0xb30015da	return       	-1		1833	-1
0xb30015ea	other        	-1		1823	-1
0xb30015ec	patch        	-1		0	-1
0xb30015f1	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.' {
}
Variable Descriptors for function 'dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.' {
  stack var 'length' offset 2 (valid 1825-1833)
}
Exception Handlers for function 'dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb30014b1 to 'dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.' 0xb3001508
Compiling function: 'dart:core__IntegerImplementation@0x36924d72_<' @ token 9320
Before Optimizations
==== dart:core__IntegerImplementation@0x36924d72_<
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(other lvl:0)
    t1 <- LoadLocal:4(this lvl:0)
    t0 <- RelationalOp:5(>, t0, t1)
    Return:6(t0)
--> 'dart:core__IntegerImplementation@0x36924d72_<' entry: 0xb3001608 time: 125 us
Code for function 'dart:core__IntegerImplementation@0x36924d72_<' {
0xb3001608    8b442404               mov eax,[esp+0x4]
0xb300160c    8b5c2408               mov ebx,[esp+0x8]
0xb3001610    0bd8                   or ebx,eax
0xb3001612    f6c301                 test_b ebx,0x1
0xb3001615    7512                   jnz 0xb3001629
0xb3001617    39442408               cmp [esp+0x8],eax
0xb300161b    7c06                   jl 0xb3001623
0xb300161d    b8411030b3             mov eax,0xb3301041  'false'
0xb3001622    c3                     ret
0xb3001623    b8391030b3             mov eax,0xb3301039  'true'
0xb3001628    c3                     ret
0xb3001629    8b5c2408               mov ebx,[esp+0x8]
0xb300162d    f6c301                 test_b ebx,0x1
0xb3001630    750e                   jnz 0xb3001640
0xb3001632    d1fb                   sar ebx, 1
0xb3001634    89df                   mov edi,ebx
0xb3001636    c1ff1f                 sar edi, 0x1f
0xb3001639    57                     push edi
0xb300163a    53                     push ebx
0xb300163b    e913000000             jmp 0xb3001653
0xb3001640    0fb77b01               movzx_w edi,[ebx+0x1]
0xb3001644    83ff2a                 cmp edi,0x2a
0xb3001647    0f853e000000           jnz 0xb300168b
0xb300164d    ff7307                 push [ebx+0x7]
0xb3001650    ff7303                 push [ebx+0x3]
0xb3001653    a801                   test al,0x1
0xb3001655    750e                   jnz 0xb3001665
0xb3001657    d1f8                   sar eax, 1
0xb3001659    89c7                   mov edi,eax
0xb300165b    c1ff1f                 sar edi, 0x1f
0xb300165e    57                     push edi
0xb300165f    50                     push eax
0xb3001660    e913000000             jmp 0xb3001678
0xb3001665    0fb77801               movzx_w edi,[eax+0x1]
0xb3001669    83ff2a                 cmp edi,0x2a
0xb300166c    0f8516000000           jnz 0xb3001688
0xb3001672    ff7007                 push [eax+0x7]
0xb3001675    ff7003                 push [eax+0x3]
0xb3001678    5b                     pop ebx
0xb3001679    59                     pop ecx
0xb300167a    58                     pop eax
0xb300167b    5a                     pop edx
0xb300167c    3bd1                   cmp edx,ecx
0xb300167e    7f9d                   jg 0xb300161d
0xb3001680    7ca1                   jl 0xb3001623
0xb3001682    3bc3                   cmp eax,ebx
0xb3001684    7397                   jnc 0xb300161d
0xb3001686    eb9b                   jmp 0xb3001623
0xb3001688    83c408                 add esp,0x8
        ;; Enter frame
0xb300168b    55                     push ebp
0xb300168c    89e5                   mov ebp,esp
0xb300168e    e800000000             call 0xb3001693
0xb3001693    8104247dffffff         add [esp],0xffffff7d
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300169a    3b25bc195809           cmp esp,[0x95819bc]
0xb30016a0    0f863c000000           jna 0xb30016e2
        ;; t0 <- LoadLocal:3(other lvl:0)
0xb30016a6    8b4508                 mov eax,[ebp+0x8]
0xb30016a9    50                     push eax
        ;; t1 <- LoadLocal:4(this lvl:0)
0xb30016aa    8b450c                 mov eax,[ebp+0xc]
0xb30016ad    50                     push eax
        ;; t0 <- RelationalOp:5(>, t0, t1)
0xb30016ae    59                     pop ecx
0xb30016af    58                     pop eax
0xb30016b0    50                     push eax
0xb30016b1    51                     push ecx
0xb30016b2    b9e9d40bb3             mov ecx,0xb30bd4e9  'ICData target:'>' num-checks: 0'
0xb30016b7    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30016bc    e817ecffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30016c1    83c408                 add esp,0x8
0xb30016c4    50                     push eax
        ;; Return:6(t0)
0xb30016c5    58                     pop eax
0xb30016c6    ba596b1ab3             mov edx,0xb31a6b59  'Function '<':.'
0xb30016cb    ff422b                 inc [edx+0x2b]
0xb30016ce    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30016d5    7c05                   jl 0xb30016dc
0xb30016d7    e8dcf1ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30016dc    89ec                   mov esp,ebp
0xb30016de    5d                     pop ebp
0xb30016df    c3                     ret
0xb30016e0    90                     nop
0xb30016e1    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30016e2    b970d30a08             mov ecx,0x80ad370
0xb30016e7    ba00000000             mov edx,0
0xb30016ec    e837e93702             call 0xb5380028  [stub: CallToRuntime]
0xb30016f1    ebb3                   jmp 0xb30016a6
0xb30016f3    e940ed3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30016f8    e91bee3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb300161e 'false'
 28 : 0xb3001624 'true'
 171 : 0xb30016b3 'ICData target:'>' num-checks: 0'
 176 : 0xb30016b8 'ImmutableArray'
 191 : 0xb30016c7 'Function '<':.'
}
PC Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_<' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30016b2	deopt-before 	5		9328	-1
0xb30016c1	ic-call      	5		9328	-1
0xb30016c1	deopt-after  	5		9328	-1
0xb30016dc	other        	-1		0	-1
0xb30016e1	return       	-1		9326	-1
0xb30016f1	other        	-1		9320	-1
0xb30016f3	patch        	-1		0	-1
0xb30016f8	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__IntegerImplementation@0x36924d72_<' {
}
Variable Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_<' {
  stack var 'this' offset 3 (valid 8886-9332)
  stack var 'other' offset 2 (valid 9323-9332)
}
Exception Handlers for function 'dart:core__IntegerImplementation@0x36924d72_<' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__ObjectArray@0x36924d72_[]' @ token 1837
Before Optimizations
==== dart:core__ObjectArray@0x36924d72_[]
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(ObjectArray_getIndexed)
    Return:4(t0)
--> 'dart:core__ObjectArray@0x36924d72_[]' entry: 0xb3001718 time: 191 us
Code for function 'dart:core__ObjectArray@0x36924d72_[]' {
0xb3001718    8b5c2404               mov ebx,[esp+0x4]
0xb300171c    8b442408               mov eax,[esp+0x8]
0xb3001720    f6c301                 test_b ebx,0x1
0xb3001723    750a                   jnz 0xb300172f
0xb3001725    3b5807                 cmp ebx,[eax+0x7]
0xb3001728    7305                   jnc 0xb300172f
0xb300172a    8b44580b               mov eax,[eax+ebx*0x2+0xb]
0xb300172e    c3                     ret
        ;; Enter frame
0xb300172f    55                     push ebp
0xb3001730    89e5                   mov ebp,esp
0xb3001732    e800000000             call 0xb3001737
0xb3001737    830424e9               add [esp],0xe9
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300173b    3b25bc195809           cmp esp,[0x95819bc]
0xb3001741    0f8628000000           jna 0xb300176f
        ;; t0 <- NativeCall:3(ObjectArray_getIndexed)
0xb3001747    68190040b5             push 0xb5400019
0xb300174c    8d450c                 lea eax,[ebp+0xc]
0xb300174f    b9e0134408             mov ecx,0x84413e0
0xb3001754    ba02000001             mov edx,0x1000002
0xb3001759    e8cae93702             call 0xb5380128  [stub: CallNativeCFunction]
0xb300175e    58                     pop eax
0xb300175f    50                     push eax
        ;; Return:4(t0)
0xb3001760    58                     pop eax
0xb3001761    bac1bf1ab3             mov edx,0xb31abfc1  'Function '[]':.'
0xb3001766    ff422b                 inc [edx+0x2b]
0xb3001769    89ec                   mov esp,ebp
0xb300176b    5d                     pop ebp
0xb300176c    c3                     ret
0xb300176d    90                     nop
0xb300176e    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300176f    b970d30a08             mov ecx,0x80ad370
0xb3001774    ba00000000             mov edx,0
0xb3001779    e8aae83702             call 0xb5380028  [stub: CallToRuntime]
0xb300177e    ebc7                   jmp 0xb3001747
0xb3001780    e9b3ec3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3001785    e98eed3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 74 : 0xb3001762 'Function '[]':.'
}
PC Descriptors for function 'dart:core__ObjectArray@0x36924d72_[]' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300175e	other        	-1		1847	-1
0xb300176e	return       	-1		1847	-1
0xb300177e	other        	-1		1837	-1
0xb3001780	patch        	-1		0	-1
0xb3001785	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__ObjectArray@0x36924d72_[]' {
}
Variable Descriptors for function 'dart:core__ObjectArray@0x36924d72_[]' {
  stack var 'this' offset 3 (valid 1821-1847)
  stack var 'index' offset 2 (valid 1839-1847)
}
Exception Handlers for function 'dart:core__ObjectArray@0x36924d72_[]' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBase@0x36924d72_toString' @ token 12560
Before Optimizations
==== dart:core__StringBase@0x36924d72_toString
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    Return:4(t0)
--> 'dart:core__StringBase@0x36924d72_toString' entry: 0xb30017a8 time: 163 us
Code for function 'dart:core__StringBase@0x36924d72_toString' {
        ;; Enter frame
0xb30017a8    55                     push ebp
0xb30017a9    89e5                   mov ebp,esp
0xb30017ab    e800000000             call 0xb30017b0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30017b0    3b25bc195809           cmp esp,[0x95819bc]
0xb30017b6    0f8621000000           jna 0xb30017dd
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb30017bc    8b4508                 mov eax,[ebp+0x8]
0xb30017bf    50                     push eax
        ;; Return:4(t0)
0xb30017c0    58                     pop eax
0xb30017c1    bac1a41ab3             mov edx,0xb31aa4c1  'Function 'toString':.'
0xb30017c6    ff422b                 inc [edx+0x2b]
0xb30017c9    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30017d0    7c05                   jl 0xb30017d7
0xb30017d2    e8e1f0ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30017d7    89ec                   mov esp,ebp
0xb30017d9    5d                     pop ebp
0xb30017da    c3                     ret
0xb30017db    90                     nop
0xb30017dc    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30017dd    b970d30a08             mov ecx,0x80ad370
0xb30017e2    ba00000000             mov edx,0
0xb30017e7    e83ce83702             call 0xb5380028  [stub: CallToRuntime]
0xb30017ec    ebce                   jmp 0xb30017bc
0xb30017ee    e945ec3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30017f3    e920ed3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 26 : 0xb30017c2 'Function 'toString':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_toString' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30017d7	other        	-1		0	-1
0xb30017dc	return       	-1		12563	-1
0xb30017ec	other        	-1		12560	-1
0xb30017ee	patch        	-1		0	-1
0xb30017f3	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_toString' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_toString' {
  stack var 'this' offset 2 (valid 12342-12567)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_toString' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__ObjectArray@0x36924d72_[]=' @ token 1850
Before Optimizations
==== dart:core__ObjectArray@0x36924d72_[]=
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(ObjectArray_setIndexed)
    Return:4(t0)
--> 'dart:core__ObjectArray@0x36924d72_[]=' entry: 0xb3001808 time: 192 us
Code for function 'dart:core__ObjectArray@0x36924d72_[]=' {
0xb3001808    8b5c2408               mov ebx,[esp+0x8]
0xb300180c    f6c301                 test_b ebx,0x1
0xb300180f    752c                   jnz 0xb300183d
0xb3001811    8b44240c               mov eax,[esp+0xc]
0xb3001815    3b5807                 cmp ebx,[eax+0x7]
0xb3001818    7323                   jnc 0xb300183d
0xb300181a    8b4c2404               mov ecx,[esp+0x4]
0xb300181e    894c580b               mov [eax+ebx*0x2+0xb],ecx
0xb3001822    83e105                 and ecx,0x5
0xb3001825    d1e9                   shr ecx, 1
0xb3001827    13c8                   adc ecx,eax
0xb3001829    83e107                 and ecx,0x7
0xb300182c    83f904                 cmp ecx,0x4
0xb300182f    750b                   jnz 0xb300183c
0xb3001831    50                     push eax
0xb3001832    8d44580b               lea eax,[eax+ebx*0x2+0xb]
0xb3001836    e82de9ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
0xb300183b    58                     pop eax
0xb300183c    c3                     ret
        ;; Enter frame
0xb300183d    55                     push ebp
0xb300183e    89e5                   mov ebp,esp
0xb3001840    e800000000             call 0xb3001845
0xb3001845    830424cb               add [esp],0xcb
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3001849    3b25bc195809           cmp esp,[0x95819bc]
0xb300184f    0f8628000000           jna 0xb300187d
        ;; t0 <- NativeCall:3(ObjectArray_setIndexed)
0xb3001855    68190040b5             push 0xb5400019
0xb300185a    8d4510                 lea eax,[ebp+0x10]
0xb300185d    b9900c4408             mov ecx,0x8440c90
0xb3001862    ba03000001             mov edx,0x1000003
0xb3001867    e8bce83702             call 0xb5380128  [stub: CallNativeCFunction]
0xb300186c    58                     pop eax
0xb300186d    50                     push eax
        ;; Return:4(t0)
0xb300186e    58                     pop eax
0xb300186f    ba49c01ab3             mov edx,0xb31ac049  'Function '[]=':.'
0xb3001874    ff422b                 inc [edx+0x2b]
0xb3001877    89ec                   mov esp,ebp
0xb3001879    5d                     pop ebp
0xb300187a    c3                     ret
0xb300187b    90                     nop
0xb300187c    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300187d    b970d30a08             mov ecx,0x80ad370
0xb3001882    ba00000000             mov edx,0
0xb3001887    e89ce73702             call 0xb5380028  [stub: CallToRuntime]
0xb300188c    ebc7                   jmp 0xb3001855
0xb300188e    e9a5eb3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3001893    e980ec3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 104 : 0xb3001870 'Function '[]=':.'
}
PC Descriptors for function 'dart:core__ObjectArray@0x36924d72_[]=' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300186c	other        	-1		1865	-1
0xb300187c	return       	-1		1865	-1
0xb300188c	other        	-1		1850	-1
0xb300188e	patch        	-1		0	-1
0xb3001893	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__ObjectArray@0x36924d72_[]=' {
}
Variable Descriptors for function 'dart:core__ObjectArray@0x36924d72_[]=' {
  stack var 'this' offset 4 (valid 1821-1865)
  stack var 'index' offset 3 (valid 1852-1865)
  stack var 'value' offset 2 (valid 1857-1865)
}
Exception Handlers for function 'dart:core__ObjectArray@0x36924d72_[]=' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__IntegerImplementation@0x36924d72_+' @ token 8908
Before Optimizations
==== dart:core__IntegerImplementation@0x36924d72_+
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(other lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(this lvl:0)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(_addFromInteger@0x36924d72, t0, t0)
    Return:8(t0)
--> 'dart:core__IntegerImplementation@0x36924d72_+' entry: 0xb30018a8 time: 92 us
Code for function 'dart:core__IntegerImplementation@0x36924d72_+' {
0xb30018a8    8b442404               mov eax,[esp+0x4]
0xb30018ac    8b5c2408               mov ebx,[esp+0x8]
0xb30018b0    0bd8                   or ebx,eax
0xb30018b2    f6c301                 test_b ebx,0x1
0xb30018b5    7507                   jnz 0xb30018be
0xb30018b7    03442408               add eax,[esp+0x8]
0xb30018bb    7001                   jo 0xb30018be
0xb30018bd    c3                     ret
        ;; Enter frame
0xb30018be    55                     push ebp
0xb30018bf    89e5                   mov ebp,esp
0xb30018c1    e800000000             call 0xb30018c6
0xb30018c6    830424ea               add [esp],0xea
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30018ca    3b25bc195809           cmp esp,[0x95819bc]
0xb30018d0    0f8638000000           jna 0xb300190e
        ;; t0 <- LoadLocal:3(other lvl:0)
0xb30018d6    8b4508                 mov eax,[ebp+0x8]
0xb30018d9    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(this lvl:0)
0xb30018da    8b450c                 mov eax,[ebp+0xc]
0xb30018dd    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(_addFromInteger@0x36924d72, t0, t0)
0xb30018de    b9b9db0bb3             mov ecx,0xb30bdbb9  'ICData target:'_addFromInteger@0x36924d72' num-checks: 0'
0xb30018e3    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30018e8    e82be9ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30018ed    83c408                 add esp,0x8
0xb30018f0    50                     push eax
        ;; Return:8(t0)
0xb30018f1    58                     pop eax
0xb30018f2    ba79621ab3             mov edx,0xb31a6279  'Function '+':.'
0xb30018f7    ff422b                 inc [edx+0x2b]
0xb30018fa    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3001901    7c05                   jl 0xb3001908
0xb3001903    e8b0efffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3001908    89ec                   mov esp,ebp
0xb300190a    5d                     pop ebp
0xb300190b    c3                     ret
0xb300190c    90                     nop
0xb300190d    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300190e    b970d30a08             mov ecx,0x80ad370
0xb3001913    ba00000000             mov edx,0
0xb3001918    e80be73702             call 0xb5380028  [stub: CallToRuntime]
0xb300191d    ebb7                   jmp 0xb30018d6
0xb300191f    e914eb3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3001924    e9efeb3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 55 : 0xb30018df 'ICData target:'_addFromInteger@0x36924d72' num-checks: 0'
 60 : 0xb30018e4 'ImmutableArray'
 75 : 0xb30018f3 'Function '+':.'
}
PC Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_+' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30018de	deopt-before 	7		8919	-1
0xb30018ed	ic-call      	7		8919	-1
0xb30018ed	deopt-after  	7		8919	-1
0xb3001908	other        	-1		0	-1
0xb300190d	return       	-1		8914	-1
0xb300191d	other        	-1		8908	-1
0xb300191f	patch        	-1		0	-1
0xb3001924	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__IntegerImplementation@0x36924d72_+' {
}
Variable Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_+' {
  stack var 'this' offset 3 (valid 8886-8924)
  stack var 'other' offset 2 (valid 8911-8924)
}
Exception Handlers for function 'dart:core__IntegerImplementation@0x36924d72_+' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBase@0x36924d72__concatAll@0x36924d72' @ token 15046
Before Optimizations
==== dart:core__StringBase@0x36924d72__concatAll@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(Strings_concatAll)
    Return:4(t0)
--> 'dart:core__StringBase@0x36924d72__concatAll@0x36924d72' entry: 0xb3001948 time: 183 us
Code for function 'dart:core__StringBase@0x36924d72__concatAll@0x36924d72' {
        ;; Enter frame
0xb3001948    55                     push ebp
0xb3001949    89e5                   mov ebp,esp
0xb300194b    e800000000             call 0xb3001950
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3001950    3b25bc195809           cmp esp,[0x95819bc]
0xb3001956    0f8628000000           jna 0xb3001984
        ;; t0 <- NativeCall:3(Strings_concatAll)
0xb300195c    68190040b5             push 0xb5400019
0xb3001961    8d4508                 lea eax,[ebp+0x8]
0xb3001964    b9d0244608             mov ecx,0x84624d0
0xb3001969    ba01000000             mov edx,0x1
0xb300196e    e8b5e73702             call 0xb5380128  [stub: CallNativeCFunction]
0xb3001973    58                     pop eax
0xb3001974    50                     push eax
        ;; Return:4(t0)
0xb3001975    58                     pop eax
0xb3001976    ba19ae1ab3             mov edx,0xb31aae19  'Function '_concatAll@0x36924d72': static.'
0xb300197b    ff422b                 inc [edx+0x2b]
0xb300197e    89ec                   mov esp,ebp
0xb3001980    5d                     pop ebp
0xb3001981    c3                     ret
0xb3001982    90                     nop
0xb3001983    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3001984    b970d30a08             mov ecx,0x80ad370
0xb3001989    ba00000000             mov edx,0
0xb300198e    e895e63702             call 0xb5380028  [stub: CallToRuntime]
0xb3001993    ebc7                   jmp 0xb300195c
0xb3001995    e99eea3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300199a    e979eb3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 47 : 0xb3001977 'Function '_concatAll@0x36924d72': static.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72__concatAll@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3001973	other        	-1		15061	-1
0xb3001983	return       	-1		15061	-1
0xb3001993	other        	-1		15046	-1
0xb3001995	patch        	-1		0	-1
0xb300199a	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72__concatAll@0x36924d72' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72__concatAll@0x36924d72' {
  stack var 'strings' offset 2 (valid 15053-15061)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72__concatAll@0x36924d72' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb30012ca to 'dart:core__StringBase@0x36924d72__concatAll@0x36924d72' 0xb3001948
Compiling function: 'dart:builtin_::__logResolution@0x116c55de' @ token 55
Before Optimizations
==== dart:builtin_::__logResolution@0x116c55de
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#false)
    StoreLocal:4(enabled, t0, lvl: 0)
    t0 <- LoadLocal:5(enabled lvl:0)
    t1 <- Constant:6(#true)
    Branch if StrictCompare:7(===, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:9(msg lvl:0)
    PushArgument:10(t0)
    StaticCall:11(_printString@0x116c55de t0)
    goto:15 4
B3[target]
    goto:16 4
B4[join] pred(B2, B3)
    t0 <- Constant:17(#null)
    Return:18(t0)
--> 'dart:builtin_::__logResolution@0x116c55de' entry: 0xb30019b8 time: 141 us
Code for function 'dart:builtin_::__logResolution@0x116c55de' {
        ;; Enter frame
0xb30019b8    55                     push ebp
0xb30019b9    89e5                   mov ebp,esp
0xb30019bb    e800000000             call 0xb30019c0
0xb30019c0    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb30019c3    b8190040b5             mov eax,0xb5400019
0xb30019c8    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30019cb    3b25bc195809           cmp esp,[0x95819bc]
0xb30019d1    0f865e000000           jna 0xb3001a35
        ;; t0 <- Constant:3(#false)
0xb30019d7    b8411030b3             mov eax,0xb3301041  'false'
0xb30019dc    50                     push eax
        ;; StoreLocal:4(enabled, t0, lvl: 0)
0xb30019dd    58                     pop eax
0xb30019de    8945f8                 mov [ebp-0x8],eax
        ;; t0 <- LoadLocal:5(enabled lvl:0)
0xb30019e1    8b45f8                 mov eax,[ebp-0x8]
0xb30019e4    50                     push eax
        ;; t1 <- Constant:6(#true)
0xb30019e5    b8391030b3             mov eax,0xb3301039  'true'
0xb30019ea    50                     push eax
        ;; Branch if StrictCompare:7(===, t0, t1) goto (2, 3)
0xb30019eb    58                     pop eax
0xb30019ec    59                     pop ecx
0xb30019ed    51                     push ecx
0xb30019ee    50                     push eax
0xb30019ef    e814ee3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb30019f4    58                     pop eax
0xb30019f5    59                     pop ecx
0xb30019f6    0f8516000000           jnz 0xb3001a12
        ;; B2
        ;; t0 <- LoadLocal:9(msg lvl:0)
0xb30019fc    8b4508                 mov eax,[ebp+0x8]
0xb30019ff    50                     push eax
        ;; PushArgument:10(t0)
        ;; StaticCall:11(_printString@0x116c55de t0)
0xb3001a00    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001a05    e81ee93702             call 0xb5380328  [stub: CallStaticFunction]
0xb3001a0a    83c404                 add esp,0x4
        ;; goto:15 4
0xb3001a0d    e900000000             jmp 0xb3001a12
        ;; B3
        ;; goto:16 4
        ;; B4
        ;; t0 <- Constant:17(#null)
0xb3001a12    b8190040b5             mov eax,0xb5400019
0xb3001a17    50                     push eax
        ;; Return:18(t0)
0xb3001a18    58                     pop eax
0xb3001a19    bae9ff11b3             mov edx,0xb311ffe9  'Function '_logResolution@0x116c55de': static.'
0xb3001a1e    ff422b                 inc [edx+0x2b]
0xb3001a21    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3001a28    7c05                   jl 0xb3001a2f
0xb3001a2a    e889eeffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3001a2f    89ec                   mov esp,ebp
0xb3001a31    5d                     pop ebp
0xb3001a32    c3                     ret
0xb3001a33    90                     nop
0xb3001a34    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3001a35    b970d30a08             mov ecx,0x80ad370
0xb3001a3a    ba00000000             mov edx,0
0xb3001a3f    e8e4e53702             call 0xb5380028  [stub: CallToRuntime]
0xb3001a44    eb91                   jmp 0xb30019d7
0xb3001a46    e9ede93702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3001a4b    e9c8ea3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 32 : 0xb30019d8 'false'
 46 : 0xb30019e6 'true'
 73 : 0xb3001a01 'ImmutableArray'
 98 : 0xb3001a1a 'Function '_logResolution@0x116c55de': static.'
}
PC Descriptors for function 'dart:builtin_::__logResolution@0x116c55de' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3001a0a	fn-call      	11		76	-1
0xb3001a0a	deopt-after  	11		76	-1
0xb3001a0d	deopt-before 	15		0	-1
0xb3001a12	deopt-before 	16		0	-1
0xb3001a2f	other        	-1		0	-1
0xb3001a34	return       	-1		83	-1
0xb3001a44	other        	-1		55	-1
0xb3001a46	patch        	-1		0	-1
0xb3001a4b	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:builtin_::__logResolution@0x116c55de' {
}
Variable Descriptors for function 'dart:builtin_::__logResolution@0x116c55de' {
  stack var 'msg' offset 2 (valid 57-83)
  stack var 'enabled' offset -2 (valid 62-83)
}
Exception Handlers for function 'dart:builtin_::__logResolution@0x116c55de' {
No exception handlers
}
Static call target functions {
  0xb3001a0a: dart:builtin__Logger@0x116c55de__printString@0x116c55de, 0xb5400019
}
PatchStaticCall: patching from 0xb3000d72 to 'dart:builtin_::__logResolution@0x116c55de' 0xb30019b8
PatchStaticCall: patching from 0xb3000dac to 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' 0xb30011a8
PatchStaticCall: patching from 0xb3000dba to 'dart:builtin_::__logResolution@0x116c55de' 0xb30019b8
Compiling function: 'dart:core__StringBase@0x36924d72_endsWith' @ token 12915
Before Optimizations
==== dart:core__StringBase@0x36924d72_endsWith
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(this lvl:0)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(get:length, t0)
    PushArgument:8(t0)
    t0 <- LoadLocal:9(other lvl:0)
    PushArgument:10(t0)
    t0 <- InstanceCall:11(get:length, t0)
    PushArgument:12(t0)
    t0 <- InstanceCall:13(-, t0, t0)
    PushArgument:14(t0)
    t0 <- LoadLocal:15(other lvl:0)
    PushArgument:16(t0)
    t0 <- InstanceCall:17(_substringMatches@0x36924d72, t0, t0, t0)
    Return:18(t0)
--> 'dart:core__StringBase@0x36924d72_endsWith' entry: 0xb3001a68 time: 275 us
Code for function 'dart:core__StringBase@0x36924d72_endsWith' {
        ;; Enter frame
0xb3001a68    55                     push ebp
0xb3001a69    89e5                   mov ebp,esp
0xb3001a6b    e800000000             call 0xb3001a70
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3001a70    3b25bc195809           cmp esp,[0x95819bc]
0xb3001a76    0f8679000000           jna 0xb3001af5
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb3001a7c    8b450c                 mov eax,[ebp+0xc]
0xb3001a7f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(this lvl:0)
0xb3001a80    8b450c                 mov eax,[ebp+0xc]
0xb3001a83    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(get:length, t0)
0xb3001a84    b9d9e00bb3             mov ecx,0xb30be0d9  'ICData target:'get:length' num-checks: 0'
0xb3001a89    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001a8e    e885e7ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001a93    83c404                 add esp,0x4
0xb3001a96    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- LoadLocal:9(other lvl:0)
0xb3001a97    8b4508                 mov eax,[ebp+0x8]
0xb3001a9a    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- InstanceCall:11(get:length, t0)
0xb3001a9b    b929e10bb3             mov ecx,0xb30be129  'ICData target:'get:length' num-checks: 0'
0xb3001aa0    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001aa5    e86ee7ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001aaa    83c404                 add esp,0x4
0xb3001aad    50                     push eax
        ;; PushArgument:12(t0)
        ;; t0 <- InstanceCall:13(-, t0, t0)
0xb3001aae    b979e10bb3             mov ecx,0xb30be179  'ICData target:'-' num-checks: 0'
0xb3001ab3    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001ab8    e81be8ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3001abd    83c408                 add esp,0x8
0xb3001ac0    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- LoadLocal:15(other lvl:0)
0xb3001ac1    8b4508                 mov eax,[ebp+0x8]
0xb3001ac4    50                     push eax
        ;; PushArgument:16(t0)
        ;; t0 <- InstanceCall:17(_substringMatches@0x36924d72, t0, t0, t0)
0xb3001ac5    b9d1e10bb3             mov ecx,0xb30be1d1  'ICData target:'_substringMatches@0x36924d72' num-checks: 0'
0xb3001aca    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3001acf    e844e7ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001ad4    83c40c                 add esp,0xc
0xb3001ad7    50                     push eax
        ;; Return:18(t0)
0xb3001ad8    58                     pop eax
0xb3001ad9    ba51a61ab3             mov edx,0xb31aa651  'Function 'endsWith':.'
0xb3001ade    ff422b                 inc [edx+0x2b]
0xb3001ae1    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3001ae8    7c05                   jl 0xb3001aef
0xb3001aea    e8c9edffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3001aef    89ec                   mov esp,ebp
0xb3001af1    5d                     pop ebp
0xb3001af2    c3                     ret
0xb3001af3    90                     nop
0xb3001af4    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3001af5    b970d30a08             mov ecx,0x80ad370
0xb3001afa    ba00000000             mov edx,0
0xb3001aff    e824e53702             call 0xb5380028  [stub: CallToRuntime]
0xb3001b04    e973ffffff             jmp 0xb3001a7c
0xb3001b09    e92ae93702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3001b0e    e905ea3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 29 : 0xb3001a85 'ICData target:'get:length' num-checks: 0'
 34 : 0xb3001a8a 'ImmutableArray'
 52 : 0xb3001a9c 'ICData target:'get:length' num-checks: 0'
 57 : 0xb3001aa1 'ImmutableArray'
 71 : 0xb3001aaf 'ICData target:'-' num-checks: 0'
 76 : 0xb3001ab4 'ImmutableArray'
 94 : 0xb3001ac6 'ICData target:'_substringMatches@0x36924d72' num-checks: 0'
 99 : 0xb3001acb 'ImmutableArray'
 114 : 0xb3001ada 'Function 'endsWith':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_endsWith' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3001a84	deopt-before 	7		12927	-1
0xb3001a93	ic-call      	7		12927	-1
0xb3001a93	deopt-after  	7		12927	-1
0xb3001a9b	deopt-before 	11		12932	-1
0xb3001aaa	ic-call      	11		12932	-1
0xb3001aaa	deopt-after  	11		12932	-1
0xb3001aae	deopt-before 	13		12929	-1
0xb3001abd	ic-call      	13		12929	-1
0xb3001abd	deopt-after  	13		12929	-1
0xb3001ac5	deopt-before 	17		12924	-1
0xb3001ad4	ic-call      	17		12924	-1
0xb3001ad4	deopt-after  	17		12924	-1
0xb3001aef	other        	-1		0	-1
0xb3001af4	return       	-1		12921	-1
0xb3001b04	other        	-1		12915	-1
0xb3001b09	patch        	-1		0	-1
0xb3001b0e	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_endsWith' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_endsWith' {
  stack var 'this' offset 3 (valid 12342-12939)
  stack var 'other' offset 2 (valid 12918-12939)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_endsWith' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBase@0x36924d72_get_length' @ token 12522
Before Optimizations
==== dart:core__StringBase@0x36924d72_get_length
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(String_getLength)
    Return:4(t0)
--> 'dart:core__StringBase@0x36924d72_get_length' entry: 0xb3001b28 time: 223 us
Code for function 'dart:core__StringBase@0x36924d72_get_length' {
0xb3001b28    8b442404               mov eax,[esp+0x4]
0xb3001b2c    8b4003                 mov eax,[eax+0x3]
0xb3001b2f    c3                     ret
0xb3001b30    cc                     int3
0xb3001b31    e902e93702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_get_length' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_get_length' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_get_length' {
  stack var 'this' offset 2 (valid 12342-12527)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_get_length' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__IntegerImplementation@0x36924d72_-' @ token 8928
Before Optimizations
==== dart:core__IntegerImplementation@0x36924d72_-
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(other lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(this lvl:0)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(_subFromInteger@0x36924d72, t0, t0)
    Return:8(t0)
--> 'dart:core__IntegerImplementation@0x36924d72_-' entry: 0xb3001b48 time: 94 us
Code for function 'dart:core__IntegerImplementation@0x36924d72_-' {
0xb3001b48    8b442404               mov eax,[esp+0x4]
0xb3001b4c    8b5c2408               mov ebx,[esp+0x8]
0xb3001b50    0bd8                   or ebx,eax
0xb3001b52    f6c301                 test_b ebx,0x1
0xb3001b55    750b                   jnz 0xb3001b62
0xb3001b57    89c3                   mov ebx,eax
0xb3001b59    8b442408               mov eax,[esp+0x8]
0xb3001b5d    2bc3                   sub eax,ebx
0xb3001b5f    7001                   jo 0xb3001b62
0xb3001b61    c3                     ret
        ;; Enter frame
0xb3001b62    55                     push ebp
0xb3001b63    89e5                   mov ebp,esp
0xb3001b65    e800000000             call 0xb3001b6a
0xb3001b6a    830424e6               add [esp],0xe6
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3001b6e    3b25bc195809           cmp esp,[0x95819bc]
0xb3001b74    0f8638000000           jna 0xb3001bb2
        ;; t0 <- LoadLocal:3(other lvl:0)
0xb3001b7a    8b4508                 mov eax,[ebp+0x8]
0xb3001b7d    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(this lvl:0)
0xb3001b7e    8b450c                 mov eax,[ebp+0xc]
0xb3001b81    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(_subFromInteger@0x36924d72, t0, t0)
0xb3001b82    b999e50bb3             mov ecx,0xb30be599  'ICData target:'_subFromInteger@0x36924d72' num-checks: 0'
0xb3001b87    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001b8c    e887e6ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001b91    83c408                 add esp,0x8
0xb3001b94    50                     push eax
        ;; Return:8(t0)
0xb3001b95    58                     pop eax
0xb3001b96    bae1621ab3             mov edx,0xb31a62e1  'Function '-':.'
0xb3001b9b    ff422b                 inc [edx+0x2b]
0xb3001b9e    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3001ba5    7c05                   jl 0xb3001bac
0xb3001ba7    e80cedffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3001bac    89ec                   mov esp,ebp
0xb3001bae    5d                     pop ebp
0xb3001baf    c3                     ret
0xb3001bb0    90                     nop
0xb3001bb1    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3001bb2    b970d30a08             mov ecx,0x80ad370
0xb3001bb7    ba00000000             mov edx,0
0xb3001bbc    e867e43702             call 0xb5380028  [stub: CallToRuntime]
0xb3001bc1    ebb7                   jmp 0xb3001b7a
0xb3001bc3    e970e83702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3001bc8    e94be93702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 59 : 0xb3001b83 'ICData target:'_subFromInteger@0x36924d72' num-checks: 0'
 64 : 0xb3001b88 'ImmutableArray'
 79 : 0xb3001b97 'Function '-':.'
}
PC Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_-' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3001b82	deopt-before 	7		8939	-1
0xb3001b91	ic-call      	7		8939	-1
0xb3001b91	deopt-after  	7		8939	-1
0xb3001bac	other        	-1		0	-1
0xb3001bb1	return       	-1		8934	-1
0xb3001bc1	other        	-1		8928	-1
0xb3001bc3	patch        	-1		0	-1
0xb3001bc8	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__IntegerImplementation@0x36924d72_-' {
}
Variable Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_-' {
  stack var 'this' offset 3 (valid 8886-8944)
  stack var 'other' offset 2 (valid 8931-8944)
}
Exception Handlers for function 'dart:core__IntegerImplementation@0x36924d72_-' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' @ token 12784
Before Optimizations
==== dart:core__StringBase@0x36924d72__substringMatches@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(other lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:isEmpty, t0)
    t1 <- Constant:6(#true)
    Branch if StrictCompare:7(===, t0, t1) goto (2, 3)
B2[target]
    t0 <- Constant:9(#true)
    Return:10(t0)
B3[target]
    t0 <- LoadLocal:13(start lvl:0)
    t1 <- Constant:14(#0)
    Branch if RelationalOp:15(<, t0, t1) goto (6, 4)
B6[target]
    goto:28 5
B4[target]
    t0 <- LoadLocal:17(start lvl:0)
    t1 <- LoadLocal:18(this lvl:0)
    PushArgument:19(t1)
    t1 <- InstanceCall:20(get:length, t1)
    Branch if RelationalOp:21(>=, t0, t1) goto (7, 8)
B7[target]
    goto:30 5
B5[join] pred(B6, B7)
    t0 <- Constant:24(#false)
    Return:25(t0)
B8[target]
    t0 <- LoadLocal:32(other lvl:0)
    PushArgument:33(t0)
    t0 <- InstanceCall:34(get:length, t0)
    StoreLocal:35(len, t0, lvl: 0)
    t0 <- LoadLocal:36(start lvl:0)
    PushArgument:37(t0)
    t0 <- LoadLocal:38(len lvl:0)
    PushArgument:39(t0)
    t0 <- InstanceCall:40(+, t0, t0)
    t1 <- LoadLocal:41(this lvl:0)
    PushArgument:42(t1)
    t1 <- InstanceCall:43(get:length, t1)
    Branch if RelationalOp:44(>, t0, t1) goto (9, 10)
B9[target]
    t0 <- Constant:46(#false)
    Return:47(t0)
B10[target]
    t0 <- Constant:50(#0)
    StoreLocal:51(i, t0, lvl: 0)
    goto:81 13
B13[join] pred(B10, B12)
    t0 <- LoadLocal:83(i lvl:0)
    t1 <- LoadLocal:84(len lvl:0)
    Branch if RelationalOp:85(<, t0, t1) goto (14, 15)
B14[target]
    CheckStackOverflow:52()
    t0 <- LoadLocal:53(this lvl:0)
    PushArgument:54(t0)
    t0 <- LoadLocal:55(i lvl:0)
    PushArgument:56(t0)
    t0 <- LoadLocal:57(start lvl:0)
    PushArgument:58(t0)
    t0 <- InstanceCall:59(+, t0, t0)
    PushArgument:60(t0)
    t0 <- InstanceCall:61(charCodeAt, t0, t0)
    t1 <- LoadLocal:62(other lvl:0)
    PushArgument:63(t1)
    t1 <- LoadLocal:64(i lvl:0)
    PushArgument:65(t1)
    t1 <- InstanceCall:66(charCodeAt, t1, t1)
    Branch if EqualityCompare:67(t0 != t1) goto (11, 12)
B11[target]
    t0 <- Constant:69(#false)
    Return:70(t0)
B12[target]
    t0 <- LoadLocal:73(i lvl:0)
    t0 <- StoreLocal:74(:expr_temp, t0, lvl: 0)
    PushArgument:75(t0)
    t0 <- Constant:76(#1)
    PushArgument:77(t0)
    t0 <- InstanceCall:78(+, t0, t0)
    StoreLocal:79(i, t0, lvl: 0)
    goto:82 13
B15[target]
    t0 <- Constant:89(#true)
    Return:90(t0)
--> 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' entry: 0xb3001be8 time: 653 us
Code for function 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' {
        ;; Enter frame
0xb3001be8    55                     push ebp
0xb3001be9    89e5                   mov ebp,esp
0xb3001beb    e800000000             call 0xb3001bf0
0xb3001bf0    83ec0c                 sub esp,0xc
        ;; Initialize spill slots
0xb3001bf3    b8190040b5             mov eax,0xb5400019
0xb3001bf8    8945f8                 mov [ebp-0x8],eax
0xb3001bfb    8945f4                 mov [ebp-0xc],eax
0xb3001bfe    8945f0                 mov [ebp-0x10],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3001c01    3b25bc195809           cmp esp,[0x95819bc]
0xb3001c07    0f86b8020000           jna 0xb3001ec5
        ;; t0 <- LoadLocal:3(other lvl:0)
0xb3001c0d    8b4508                 mov eax,[ebp+0x8]
0xb3001c10    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:isEmpty, t0)
0xb3001c11    b9d1e70bb3             mov ecx,0xb30be7d1  'ICData target:'get:isEmpty' num-checks: 0'
0xb3001c16    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001c1b    e8f8e5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001c20    83c404                 add esp,0x4
0xb3001c23    50                     push eax
        ;; t1 <- Constant:6(#true)
0xb3001c24    b8391030b3             mov eax,0xb3301039  'true'
0xb3001c29    50                     push eax
        ;; Branch if StrictCompare:7(===, t0, t1) goto (2, 3)
0xb3001c2a    58                     pop eax
0xb3001c2b    59                     pop ecx
0xb3001c2c    51                     push ecx
0xb3001c2d    50                     push eax
0xb3001c2e    e8d5eb3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3001c33    58                     pop eax
0xb3001c34    59                     pop ecx
0xb3001c35    0f8522000000           jnz 0xb3001c5d
        ;; B2
        ;; t0 <- Constant:9(#true)
0xb3001c3b    b8391030b3             mov eax,0xb3301039  'true'
0xb3001c40    50                     push eax
        ;; Return:10(t0)
0xb3001c41    58                     pop eax
0xb3001c42    bae9a51ab3             mov edx,0xb31aa5e9  'Function '_substringMatches@0x36924d72':.'
0xb3001c47    ff422b                 inc [edx+0x2b]
0xb3001c4a    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3001c51    7c05                   jl 0xb3001c58
0xb3001c53    e860ecffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3001c58    89ec                   mov esp,ebp
0xb3001c5a    5d                     pop ebp
0xb3001c5b    c3                     ret
0xb3001c5c    90                     nop
        ;; B3
        ;; t0 <- LoadLocal:13(start lvl:0)
0xb3001c5d    8b450c                 mov eax,[ebp+0xc]
0xb3001c60    50                     push eax
        ;; t1 <- Constant:14(#0)
0xb3001c61    b800000000             mov eax,0
0xb3001c66    50                     push eax
        ;; Branch if RelationalOp:15(<, t0, t1) goto (6, 4)
0xb3001c67    59                     pop ecx
0xb3001c68    58                     pop eax
0xb3001c69    50                     push eax
0xb3001c6a    51                     push ecx
0xb3001c6b    b921e80bb3             mov ecx,0xb30be821  'ICData target:'<' num-checks: 0'
0xb3001c70    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001c75    e85ee6ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3001c7a    83c408                 add esp,0x8
0xb3001c7d    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3001c82    0f8505000000           jnz 0xb3001c8d
        ;; B6
        ;; goto:28 5
0xb3001c88    e93c000000             jmp 0xb3001cc9
        ;; B4
        ;; t0 <- LoadLocal:17(start lvl:0)
0xb3001c8d    8b450c                 mov eax,[ebp+0xc]
0xb3001c90    50                     push eax
        ;; t1 <- LoadLocal:18(this lvl:0)
0xb3001c91    8b4510                 mov eax,[ebp+0x10]
0xb3001c94    50                     push eax
        ;; PushArgument:19(t1)
        ;; t1 <- InstanceCall:20(get:length, t1)
0xb3001c95    b979e80bb3             mov ecx,0xb30be879  'ICData target:'get:length' num-checks: 0'
0xb3001c9a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001c9f    e874e5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001ca4    83c404                 add esp,0x4
0xb3001ca7    50                     push eax
        ;; Branch if RelationalOp:21(>=, t0, t1) goto (7, 8)
0xb3001ca8    59                     pop ecx
0xb3001ca9    58                     pop eax
0xb3001caa    50                     push eax
0xb3001cab    51                     push ecx
0xb3001cac    b9c9e80bb3             mov ecx,0xb30be8c9  'ICData target:'>=' num-checks: 0'
0xb3001cb1    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001cb6    e81de6ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3001cbb    83c408                 add esp,0x8
0xb3001cbe    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3001cc3    0f8522000000           jnz 0xb3001ceb
        ;; B7
        ;; goto:30 5
        ;; B5
        ;; t0 <- Constant:24(#false)
0xb3001cc9    b8411030b3             mov eax,0xb3301041  'false'
0xb3001cce    50                     push eax
        ;; Return:25(t0)
0xb3001ccf    58                     pop eax
0xb3001cd0    bae9a51ab3             mov edx,0xb31aa5e9  'Function '_substringMatches@0x36924d72':.'
0xb3001cd5    ff422b                 inc [edx+0x2b]
0xb3001cd8    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3001cdf    7c05                   jl 0xb3001ce6
0xb3001ce1    e8d2ebffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3001ce6    89ec                   mov esp,ebp
0xb3001ce8    5d                     pop ebp
0xb3001ce9    c3                     ret
0xb3001cea    90                     nop
        ;; B8
        ;; t0 <- LoadLocal:32(other lvl:0)
0xb3001ceb    8b4508                 mov eax,[ebp+0x8]
0xb3001cee    50                     push eax
        ;; PushArgument:33(t0)
        ;; t0 <- InstanceCall:34(get:length, t0)
0xb3001cef    b921e90bb3             mov ecx,0xb30be921  'ICData target:'get:length' num-checks: 0'
0xb3001cf4    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001cf9    e81ae5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001cfe    83c404                 add esp,0x4
0xb3001d01    50                     push eax
        ;; StoreLocal:35(len, t0, lvl: 0)
0xb3001d02    58                     pop eax
0xb3001d03    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- LoadLocal:36(start lvl:0)
0xb3001d06    8b450c                 mov eax,[ebp+0xc]
0xb3001d09    50                     push eax
        ;; PushArgument:37(t0)
        ;; t0 <- LoadLocal:38(len lvl:0)
0xb3001d0a    8b45f4                 mov eax,[ebp-0xc]
0xb3001d0d    50                     push eax
        ;; PushArgument:39(t0)
        ;; t0 <- InstanceCall:40(+, t0, t0)
0xb3001d0e    b971e90bb3             mov ecx,0xb30be971  'ICData target:'+' num-checks: 0'
0xb3001d13    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001d18    e8bbe5ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3001d1d    83c408                 add esp,0x8
0xb3001d20    50                     push eax
        ;; t1 <- LoadLocal:41(this lvl:0)
0xb3001d21    8b4510                 mov eax,[ebp+0x10]
0xb3001d24    50                     push eax
        ;; PushArgument:42(t1)
        ;; t1 <- InstanceCall:43(get:length, t1)
0xb3001d25    b9c9e90bb3             mov ecx,0xb30be9c9  'ICData target:'get:length' num-checks: 0'
0xb3001d2a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3001d2f    e8e4e4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001d34    83c404                 add esp,0x4
0xb3001d37    50                     push eax
        ;; Branch if RelationalOp:44(>, t0, t1) goto (9, 10)
0xb3001d38    59                     pop ecx
0xb3001d39    58                     pop eax
0xb3001d3a    50                     push eax
0xb3001d3b    51                     push ecx
0xb3001d3c    b919ea0bb3             mov ecx,0xb30bea19  'ICData target:'>' num-checks: 0'
0xb3001d41    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001d46    e88de5ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3001d4b    83c408                 add esp,0x8
0xb3001d4e    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3001d53    0f8522000000           jnz 0xb3001d7b
        ;; B9
        ;; t0 <- Constant:46(#false)
0xb3001d59    b8411030b3             mov eax,0xb3301041  'false'
0xb3001d5e    50                     push eax
        ;; Return:47(t0)
0xb3001d5f    58                     pop eax
0xb3001d60    bae9a51ab3             mov edx,0xb31aa5e9  'Function '_substringMatches@0x36924d72':.'
0xb3001d65    ff422b                 inc [edx+0x2b]
0xb3001d68    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3001d6f    7c05                   jl 0xb3001d76
0xb3001d71    e842ebffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3001d76    89ec                   mov esp,ebp
0xb3001d78    5d                     pop ebp
0xb3001d79    c3                     ret
0xb3001d7a    90                     nop
        ;; B10
        ;; t0 <- Constant:50(#0)
0xb3001d7b    b800000000             mov eax,0
0xb3001d80    50                     push eax
        ;; StoreLocal:51(i, t0, lvl: 0)
0xb3001d81    58                     pop eax
0xb3001d82    8945f0                 mov [ebp-0x10],eax
        ;; goto:81 13
        ;; B13
        ;; t0 <- LoadLocal:83(i lvl:0)
0xb3001d85    8b45f0                 mov eax,[ebp-0x10]
0xb3001d88    50                     push eax
        ;; t1 <- LoadLocal:84(len lvl:0)
0xb3001d89    8b45f4                 mov eax,[ebp-0xc]
0xb3001d8c    50                     push eax
        ;; Branch if RelationalOp:85(<, t0, t1) goto (14, 15)
0xb3001d8d    59                     pop ecx
0xb3001d8e    58                     pop eax
0xb3001d8f    50                     push eax
0xb3001d90    51                     push ecx
0xb3001d91    b971ea0bb3             mov ecx,0xb30bea71  'ICData target:'<' num-checks: 0'
0xb3001d96    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001d9b    e838e5ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3001da0    83c408                 add esp,0x8
0xb3001da3    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3001da8    0f85f4000000           jnz 0xb3001ea2
        ;; B14
        ;; CheckStackOverflow:52()
0xb3001dae    3b25bc195809           cmp esp,[0x95819bc]
0xb3001db4    0f861f010000           jna 0xb3001ed9
        ;; t0 <- LoadLocal:53(this lvl:0)
0xb3001dba    8b4510                 mov eax,[ebp+0x10]
0xb3001dbd    50                     push eax
        ;; PushArgument:54(t0)
        ;; t0 <- LoadLocal:55(i lvl:0)
0xb3001dbe    8b45f0                 mov eax,[ebp-0x10]
0xb3001dc1    50                     push eax
        ;; PushArgument:56(t0)
        ;; t0 <- LoadLocal:57(start lvl:0)
0xb3001dc2    8b450c                 mov eax,[ebp+0xc]
0xb3001dc5    50                     push eax
        ;; PushArgument:58(t0)
        ;; t0 <- InstanceCall:59(+, t0, t0)
0xb3001dc6    b9c9ea0bb3             mov ecx,0xb30beac9  'ICData target:'+' num-checks: 0'
0xb3001dcb    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001dd0    e803e5ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3001dd5    83c408                 add esp,0x8
0xb3001dd8    50                     push eax
        ;; PushArgument:60(t0)
        ;; t0 <- InstanceCall:61(charCodeAt, t0, t0)
0xb3001dd9    b921eb0bb3             mov ecx,0xb30beb21  'ICData target:'charCodeAt' num-checks: 0'
0xb3001dde    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001de3    e830e4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001de8    83c408                 add esp,0x8
0xb3001deb    50                     push eax
        ;; t1 <- LoadLocal:62(other lvl:0)
0xb3001dec    8b4508                 mov eax,[ebp+0x8]
0xb3001def    50                     push eax
        ;; PushArgument:63(t1)
        ;; t1 <- LoadLocal:64(i lvl:0)
0xb3001df0    8b45f0                 mov eax,[ebp-0x10]
0xb3001df3    50                     push eax
        ;; PushArgument:65(t1)
        ;; t1 <- InstanceCall:66(charCodeAt, t1, t1)
0xb3001df4    b971eb0bb3             mov ecx,0xb30beb71  'ICData target:'charCodeAt' num-checks: 0'
0xb3001df9    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001dfe    e815e4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3001e03    83c408                 add esp,0x8
0xb3001e06    50                     push eax
        ;; Branch if EqualityCompare:67(t0 != t1) goto (11, 12)
0xb3001e07    5a                     pop edx
0xb3001e08    5b                     pop ebx
0xb3001e09    53                     push ebx
0xb3001e0a    52                     push edx
0xb3001e0b    813c24190040b5         cmp [esp],0xb5400019
0xb3001e12    0f8425000000           jz 0xb3001e3d
0xb3001e18    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3001e20    0f8417000000           jz 0xb3001e3d
0xb3001e26    b9c1eb0bb3             mov ecx,0xb30bebc1  'ICData target:'==' num-checks: 0'
0xb3001e2b    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001e30    e8a3e4ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3001e35    83c408                 add esp,0x8
0xb3001e38    e90d000000             jmp 0xb3001e4a
0xb3001e3d    b9c1eb0bb3             mov ecx,0xb30bebc1  'ICData target:'==' num-checks: 0'
0xb3001e42    e801ebffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3001e47    83c408                 add esp,0x8
0xb3001e4a    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3001e4f    0f8422000000           jz 0xb3001e77
        ;; B11
        ;; t0 <- Constant:69(#false)
0xb3001e55    b8411030b3             mov eax,0xb3301041  'false'
0xb3001e5a    50                     push eax
        ;; Return:70(t0)
0xb3001e5b    58                     pop eax
0xb3001e5c    bae9a51ab3             mov edx,0xb31aa5e9  'Function '_substringMatches@0x36924d72':.'
0xb3001e61    ff422b                 inc [edx+0x2b]
0xb3001e64    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3001e6b    7c05                   jl 0xb3001e72
0xb3001e6d    e846eaffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3001e72    89ec                   mov esp,ebp
0xb3001e74    5d                     pop ebp
0xb3001e75    c3                     ret
0xb3001e76    90                     nop
        ;; B12
        ;; t0 <- LoadLocal:73(i lvl:0)
0xb3001e77    8b45f0                 mov eax,[ebp-0x10]
0xb3001e7a    50                     push eax
        ;; t0 <- StoreLocal:74(:expr_temp, t0, lvl: 0)
0xb3001e7b    58                     pop eax
0xb3001e7c    8945f8                 mov [ebp-0x8],eax
0xb3001e7f    50                     push eax
        ;; PushArgument:75(t0)
        ;; t0 <- Constant:76(#1)
0xb3001e80    b802000000             mov eax,0x2
0xb3001e85    50                     push eax
        ;; PushArgument:77(t0)
        ;; t0 <- InstanceCall:78(+, t0, t0)
0xb3001e86    b919ec0bb3             mov ecx,0xb30bec19  'ICData target:'+' num-checks: 0'
0xb3001e8b    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3001e90    e843e4ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3001e95    83c408                 add esp,0x8
0xb3001e98    50                     push eax
        ;; StoreLocal:79(i, t0, lvl: 0)
0xb3001e99    58                     pop eax
0xb3001e9a    8945f0                 mov [ebp-0x10],eax
        ;; goto:82 13
0xb3001e9d    e9e3feffff             jmp 0xb3001d85
        ;; B15
        ;; t0 <- Constant:89(#true)
0xb3001ea2    b8391030b3             mov eax,0xb3301039  'true'
0xb3001ea7    50                     push eax
        ;; Return:90(t0)
0xb3001ea8    58                     pop eax
0xb3001ea9    bae9a51ab3             mov edx,0xb31aa5e9  'Function '_substringMatches@0x36924d72':.'
0xb3001eae    ff422b                 inc [edx+0x2b]
0xb3001eb1    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3001eb8    7c05                   jl 0xb3001ebf
0xb3001eba    e8f9e9ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3001ebf    89ec                   mov esp,ebp
0xb3001ec1    5d                     pop ebp
0xb3001ec2    c3                     ret
0xb3001ec3    90                     nop
0xb3001ec4    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3001ec5    b970d30a08             mov ecx,0x80ad370
0xb3001eca    ba00000000             mov edx,0
0xb3001ecf    e854e13702             call 0xb5380028  [stub: CallToRuntime]
0xb3001ed4    e934fdffff             jmp 0xb3001c0d
        ;; CheckStackOverflowSlowPath
0xb3001ed9    b970d30a08             mov ecx,0x80ad370
0xb3001ede    ba00000000             mov edx,0
0xb3001ee3    e840e13702             call 0xb5380028  [stub: CallToRuntime]
0xb3001ee8    e9cdfeffff             jmp 0xb3001dba
0xb3001eed    e946e53702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3001ef2    e921e63702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 42 : 0xb3001c12 'ICData target:'get:isEmpty' num-checks: 0'
 47 : 0xb3001c17 'ImmutableArray'
 61 : 0xb3001c25 'true'
 84 : 0xb3001c3c 'true'
 91 : 0xb3001c43 'Function '_substringMatches@0x36924d72':.'
 132 : 0xb3001c6c 'ICData target:'<' num-checks: 0'
 137 : 0xb3001c71 'ImmutableArray'
 150 : 0xb3001c7e 'true'
 174 : 0xb3001c96 'ICData target:'get:length' num-checks: 0'
 179 : 0xb3001c9b 'ImmutableArray'
 197 : 0xb3001cad 'ICData target:'>=' num-checks: 0'
 202 : 0xb3001cb2 'ImmutableArray'
 215 : 0xb3001cbf 'true'
 226 : 0xb3001cca 'false'
 233 : 0xb3001cd1 'Function '_substringMatches@0x36924d72':.'
 264 : 0xb3001cf0 'ICData target:'get:length' num-checks: 0'
 269 : 0xb3001cf5 'ImmutableArray'
 295 : 0xb3001d0f 'ICData target:'+' num-checks: 0'
 300 : 0xb3001d14 'ImmutableArray'
 318 : 0xb3001d26 'ICData target:'get:length' num-checks: 0'
 323 : 0xb3001d2b 'ImmutableArray'
 341 : 0xb3001d3d 'ICData target:'>' num-checks: 0'
 346 : 0xb3001d42 'ImmutableArray'
 359 : 0xb3001d4f 'true'
 370 : 0xb3001d5a 'false'
 377 : 0xb3001d61 'Function '_substringMatches@0x36924d72':.'
 426 : 0xb3001d92 'ICData target:'<' num-checks: 0'
 431 : 0xb3001d97 'ImmutableArray'
 444 : 0xb3001da4 'true'
 479 : 0xb3001dc7 'ICData target:'+' num-checks: 0'
 484 : 0xb3001dcc 'ImmutableArray'
 498 : 0xb3001dda 'ICData target:'charCodeAt' num-checks: 0'
 503 : 0xb3001ddf 'ImmutableArray'
 525 : 0xb3001df5 'ICData target:'charCodeAt' num-checks: 0'
 530 : 0xb3001dfa 'ImmutableArray'
 575 : 0xb3001e27 'ICData target:'==' num-checks: 0'
 580 : 0xb3001e2c 'ImmutableArray'
 598 : 0xb3001e3e 'ICData target:'==' num-checks: 0'
 611 : 0xb3001e4b 'true'
 622 : 0xb3001e56 'false'
 629 : 0xb3001e5d 'Function '_substringMatches@0x36924d72':.'
 671 : 0xb3001e87 'ICData target:'+' num-checks: 0'
 676 : 0xb3001e8c 'ImmutableArray'
 699 : 0xb3001ea3 'true'
 706 : 0xb3001eaa 'Function '_substringMatches@0x36924d72':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3001c11	deopt-before 	5		12798	-1
0xb3001c20	ic-call      	5		12798	-1
0xb3001c20	deopt-after  	5		12798	-1
0xb3001c58	other        	-1		0	-1
0xb3001c5d	return       	-1		12801	-1
0xb3001c6b	deopt-before 	15		12809	-1
0xb3001c7a	ic-call      	15		12809	-1
0xb3001c7a	deopt-after  	15		12809	-1
0xb3001c88	deopt-before 	28		0	-1
0xb3001c95	deopt-before 	20		12820	-1
0xb3001ca4	ic-call      	20		12820	-1
0xb3001ca4	deopt-after  	20		12820	-1
0xb3001cac	deopt-before 	21		12817	-1
0xb3001cbb	ic-call      	21		12817	-1
0xb3001cbb	deopt-after  	21		12817	-1
0xb3001cc9	deopt-before 	30		0	-1
0xb3001ce6	other        	-1		0	-1
0xb3001ceb	return       	-1		12825	-1
0xb3001cef	deopt-before 	34		12836	-1
0xb3001cfe	ic-call      	34		12836	-1
0xb3001cfe	deopt-after  	34		12836	-1
0xb3001d0e	deopt-before 	40		12844	-1
0xb3001d1d	ic-call      	40		12844	-1
0xb3001d1d	deopt-after  	40		12844	-1
0xb3001d25	deopt-before 	43		12851	-1
0xb3001d34	ic-call      	43		12851	-1
0xb3001d34	deopt-after  	43		12851	-1
0xb3001d3c	deopt-before 	44		12848	-1
0xb3001d4b	ic-call      	44		12848	-1
0xb3001d4b	deopt-after  	44		12848	-1
0xb3001d76	other        	-1		0	-1
0xb3001d7b	return       	-1		12855	-1
0xb3001d85	deopt-before 	81		0	-1
0xb3001d91	deopt-before 	85		12870	-1
0xb3001da0	ic-call      	85		12870	-1
0xb3001da0	deopt-after  	85		12870	-1
0xb3001dc6	deopt-before 	59		12888	-1
0xb3001dd5	ic-call      	59		12888	-1
0xb3001dd5	deopt-after  	59		12888	-1
0xb3001dd9	deopt-before 	61		12885	-1
0xb3001de8	ic-call      	61		12885	-1
0xb3001de8	deopt-after  	61		12885	-1
0xb3001df4	deopt-before 	66		12897	-1
0xb3001e03	ic-call      	66		12897	-1
0xb3001e03	deopt-after  	66		12897	-1
0xb3001e0b	deopt-before 	67		12892	-1
0xb3001e35	ic-call      	67		12892	-1
0xb3001e35	deopt-after  	67		12892	-1
0xb3001e47	other        	-1		12892	-1
0xb3001e72	other        	-1		0	-1
0xb3001e77	return       	-1		12903	-1
0xb3001e86	deopt-before 	78		12874	-1
0xb3001e95	ic-call      	78		12874	-1
0xb3001e95	deopt-after  	78		12874	-1
0xb3001e9d	deopt-before 	82		0	-1
0xb3001ebf	other        	-1		0	-1
0xb3001ec4	return       	-1		12908	-1
0xb3001ed4	other        	-1		12784	-1
0xb3001ee8	other        	-1		12859	-1
0xb3001eed	patch        	-1		0	-1
0xb3001ef2	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' {
  stack var 'this' offset 4 (valid 12342-12912)
  stack var 'start' offset 3 (valid 12786-12912)
  stack var 'other' offset 2 (valid 12791-12912)
  stack var 'len' offset -3 (valid 12831-12912)
  stack var 'i' offset -4 (valid 12862-12908)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBase@0x36924d72_get_isEmpty' @ token 12531
Before Optimizations
==== dart:core__StringBase@0x36924d72_get_isEmpty
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:length, t0)
    t1 <- Constant:6(#0)
    t0 <- EqualityCompare:7(t0 == t1)
    Return:8(t0)
--> 'dart:core__StringBase@0x36924d72_get_isEmpty' entry: 0xb3001f08 time: 241 us
Code for function 'dart:core__StringBase@0x36924d72_get_isEmpty' {
0xb3001f08    8b442404               mov eax,[esp+0x4]
0xb3001f0c    8b4003                 mov eax,[eax+0x3]
0xb3001f0f    83f800                 cmp eax,0
0xb3001f12    7406                   jz 0xb3001f1a
0xb3001f14    b8411030b3             mov eax,0xb3301041  'false'
0xb3001f19    c3                     ret
0xb3001f1a    b8391030b3             mov eax,0xb3301039  'true'
0xb3001f1f    c3                     ret
0xb3001f20    cc                     int3
0xb3001f21    e912e53702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
 13 : 0xb3001f15 'false'
 19 : 0xb3001f1b 'true'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_get_isEmpty' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_get_isEmpty' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_get_isEmpty' {
  stack var 'this' offset 2 (valid 12342-12542)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_get_isEmpty' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__IntegerImplementation@0x36924d72_>=' @ token 9354
Before Optimizations
==== dart:core__IntegerImplementation@0x36924d72_>=
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t1 <- LoadLocal:4(other lvl:0)
    Branch if EqualityCompare:5(t0 == t1) goto (2, 3)
B2[target]
    t0 <- Constant:13(#true)
    StoreLocal:14(:expr_temp, t0, lvl: 0)
    goto:18 4
B3[target]
    t0 <- LoadLocal:7(this lvl:0)
    t1 <- LoadLocal:8(other lvl:0)
    t0 <- RelationalOp:9(>, t0, t1)
    t1 <- Constant:10(#true)
    t0 <- StrictCompare:11(===, t0, t1)
    StoreLocal:12(:expr_temp, t0, lvl: 0)
    goto:19 4
B4[join] pred(B2, B3)
    t0 <- LoadLocal:20(:expr_temp lvl:0)
    Return:21(t0)
--> 'dart:core__IntegerImplementation@0x36924d72_>=' entry: 0xb3001f38 time: 207 us
Code for function 'dart:core__IntegerImplementation@0x36924d72_>=' {
0xb3001f38    8b442404               mov eax,[esp+0x4]
0xb3001f3c    8b5c2408               mov ebx,[esp+0x8]
0xb3001f40    0bd8                   or ebx,eax
0xb3001f42    f6c301                 test_b ebx,0x1
0xb3001f45    7512                   jnz 0xb3001f59
0xb3001f47    39442408               cmp [esp+0x8],eax
0xb3001f4b    7d06                   jnl 0xb3001f53
0xb3001f4d    b8411030b3             mov eax,0xb3301041  'false'
0xb3001f52    c3                     ret
0xb3001f53    b8391030b3             mov eax,0xb3301039  'true'
0xb3001f58    c3                     ret
0xb3001f59    8b5c2408               mov ebx,[esp+0x8]
0xb3001f5d    f6c301                 test_b ebx,0x1
0xb3001f60    750e                   jnz 0xb3001f70
0xb3001f62    d1fb                   sar ebx, 1
0xb3001f64    89df                   mov edi,ebx
0xb3001f66    c1ff1f                 sar edi, 0x1f
0xb3001f69    57                     push edi
0xb3001f6a    53                     push ebx
0xb3001f6b    e913000000             jmp 0xb3001f83
0xb3001f70    0fb77b01               movzx_w edi,[ebx+0x1]
0xb3001f74    83ff2a                 cmp edi,0x2a
0xb3001f77    0f853e000000           jnz 0xb3001fbb
0xb3001f7d    ff7307                 push [ebx+0x7]
0xb3001f80    ff7303                 push [ebx+0x3]
0xb3001f83    a801                   test al,0x1
0xb3001f85    750e                   jnz 0xb3001f95
0xb3001f87    d1f8                   sar eax, 1
0xb3001f89    89c7                   mov edi,eax
0xb3001f8b    c1ff1f                 sar edi, 0x1f
0xb3001f8e    57                     push edi
0xb3001f8f    50                     push eax
0xb3001f90    e913000000             jmp 0xb3001fa8
0xb3001f95    0fb77801               movzx_w edi,[eax+0x1]
0xb3001f99    83ff2a                 cmp edi,0x2a
0xb3001f9c    0f8516000000           jnz 0xb3001fb8
0xb3001fa2    ff7007                 push [eax+0x7]
0xb3001fa5    ff7003                 push [eax+0x3]
0xb3001fa8    5b                     pop ebx
0xb3001fa9    59                     pop ecx
0xb3001faa    58                     pop eax
0xb3001fab    5a                     pop edx
0xb3001fac    3bd1                   cmp edx,ecx
0xb3001fae    7c9d                   jl 0xb3001f4d
0xb3001fb0    7fa1                   jg 0xb3001f53
0xb3001fb2    3bc3                   cmp eax,ebx
0xb3001fb4    7297                   jc 0xb3001f4d
0xb3001fb6    eb9b                   jmp 0xb3001f53
0xb3001fb8    83c408                 add esp,0x8
        ;; Enter frame
0xb3001fbb    55                     push ebp
0xb3001fbc    89e5                   mov ebp,esp
0xb3001fbe    e800000000             call 0xb3001fc3
0xb3001fc3    8104247dffffff         add [esp],0xffffff7d
0xb3001fca    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb3001fcd    b8190040b5             mov eax,0xb5400019
0xb3001fd2    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3001fd5    3b25bc195809           cmp esp,[0x95819bc]
0xb3001fdb    0f86c9000000           jna 0xb30020aa
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb3001fe1    8b450c                 mov eax,[ebp+0xc]
0xb3001fe4    50                     push eax
        ;; t1 <- LoadLocal:4(other lvl:0)
0xb3001fe5    8b4508                 mov eax,[ebp+0x8]
0xb3001fe8    50                     push eax
        ;; Branch if EqualityCompare:5(t0 == t1) goto (2, 3)
0xb3001fe9    5a                     pop edx
0xb3001fea    5b                     pop ebx
0xb3001feb    53                     push ebx
0xb3001fec    52                     push edx
0xb3001fed    813c24190040b5         cmp [esp],0xb5400019
0xb3001ff4    0f8425000000           jz 0xb300201f
0xb3001ffa    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3002002    0f8417000000           jz 0xb300201f
0xb3002008    b959f40bb3             mov ecx,0xb30bf459  'ICData target:'==' num-checks: 0'
0xb300200d    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3002012    e8c1e2ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3002017    83c408                 add esp,0x8
0xb300201a    e90d000000             jmp 0xb300202c
0xb300201f    b959f40bb3             mov ecx,0xb30bf459  'ICData target:'==' num-checks: 0'
0xb3002024    e81fe9ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3002029    83c408                 add esp,0x8
0xb300202c    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3002031    0f850f000000           jnz 0xb3002046
        ;; B2
        ;; t0 <- Constant:13(#true)
0xb3002037    b8391030b3             mov eax,0xb3301039  'true'
0xb300203c    50                     push eax
        ;; StoreLocal:14(:expr_temp, t0, lvl: 0)
0xb300203d    58                     pop eax
0xb300203e    8945f8                 mov [ebp-0x8],eax
        ;; goto:18 4
0xb3002041    e943000000             jmp 0xb3002089
        ;; B3
        ;; t0 <- LoadLocal:7(this lvl:0)
0xb3002046    8b450c                 mov eax,[ebp+0xc]
0xb3002049    50                     push eax
        ;; t1 <- LoadLocal:8(other lvl:0)
0xb300204a    8b4508                 mov eax,[ebp+0x8]
0xb300204d    50                     push eax
        ;; t0 <- RelationalOp:9(>, t0, t1)
0xb300204e    59                     pop ecx
0xb300204f    58                     pop eax
0xb3002050    50                     push eax
0xb3002051    51                     push ecx
0xb3002052    b9b1f40bb3             mov ecx,0xb30bf4b1  'ICData target:'>' num-checks: 0'
0xb3002057    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300205c    e877e2ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3002061    83c408                 add esp,0x8
0xb3002064    50                     push eax
        ;; t1 <- Constant:10(#true)
0xb3002065    b8391030b3             mov eax,0xb3301039  'true'
0xb300206a    50                     push eax
        ;; t0 <- StrictCompare:11(===, t0, t1)
0xb300206b    58                     pop eax
0xb300206c    59                     pop ecx
0xb300206d    51                     push ecx
0xb300206e    50                     push eax
0xb300206f    e894e73702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3002074    58                     pop eax
0xb3002075    59                     pop ecx
0xb3002076    7407                   jz 0xb300207f
0xb3002078    ba411030b3             mov edx,0xb3301041  'false'
0xb300207d    eb05                   jmp 0xb3002084
0xb300207f    ba391030b3             mov edx,0xb3301039  'true'
0xb3002084    52                     push edx
        ;; StoreLocal:12(:expr_temp, t0, lvl: 0)
0xb3002085    58                     pop eax
0xb3002086    8945f8                 mov [ebp-0x8],eax
        ;; goto:19 4
        ;; B4
        ;; t0 <- LoadLocal:20(:expr_temp lvl:0)
0xb3002089    8b45f8                 mov eax,[ebp-0x8]
0xb300208c    50                     push eax
        ;; Return:21(t0)
0xb300208d    58                     pop eax
0xb300208e    ba296c1ab3             mov edx,0xb31a6c29  'Function '>=':.'
0xb3002093    ff422b                 inc [edx+0x2b]
0xb3002096    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300209d    7c05                   jl 0xb30020a4
0xb300209f    e814e8ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30020a4    89ec                   mov esp,ebp
0xb30020a6    5d                     pop ebp
0xb30020a7    c3                     ret
0xb30020a8    90                     nop
0xb30020a9    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30020aa    b970d30a08             mov ecx,0x80ad370
0xb30020af    ba00000000             mov edx,0
0xb30020b4    e86fdf3702             call 0xb5380028  [stub: CallToRuntime]
0xb30020b9    e923ffffff             jmp 0xb3001fe1
0xb30020be    e975e33702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30020c3    e950e43702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb3001f4e 'false'
 28 : 0xb3001f54 'true'
 209 : 0xb3002009 'ICData target:'==' num-checks: 0'
 214 : 0xb300200e 'ImmutableArray'
 232 : 0xb3002020 'ICData target:'==' num-checks: 0'
 245 : 0xb300202d 'true'
 256 : 0xb3002038 'true'
 283 : 0xb3002053 'ICData target:'>' num-checks: 0'
 288 : 0xb3002058 'ImmutableArray'
 302 : 0xb3002066 'true'
 321 : 0xb3002079 'false'
 328 : 0xb3002080 'true'
 343 : 0xb300208f 'Function '>=':.'
}
PC Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_>=' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3001fed	deopt-before 	5		9363	-1
0xb3002017	ic-call      	5		9363	-1
0xb3002017	deopt-after  	5		9363	-1
0xb3002029	other        	-1		9363	-1
0xb3002041	deopt-before 	18		0	-1
0xb3002052	deopt-before 	9		9369	-1
0xb3002061	ic-call      	9		9369	-1
0xb3002061	deopt-after  	9		9369	-1
0xb3002089	deopt-before 	19		0	-1
0xb30020a4	other        	-1		0	-1
0xb30020a9	return       	-1		9360	-1
0xb30020b9	other        	-1		9354	-1
0xb30020be	patch        	-1		0	-1
0xb30020c3	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__IntegerImplementation@0x36924d72_>=' {
}
Variable Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_>=' {
  stack var 'this' offset 3 (valid 8886-9374)
  stack var 'other' offset 2 (valid 9357-9374)
}
Exception Handlers for function 'dart:core__IntegerImplementation@0x36924d72_>=' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__IntegerImplementation@0x36924d72_>' @ token 9335
Before Optimizations
==== dart:core__IntegerImplementation@0x36924d72_>
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(other lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(this lvl:0)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(_greaterThanFromInteger@0x36924d72, t0, t0)
    Return:8(t0)
--> 'dart:core__IntegerImplementation@0x36924d72_>' entry: 0xb30020d8 time: 138 us
Code for function 'dart:core__IntegerImplementation@0x36924d72_>' {
0xb30020d8    8b442404               mov eax,[esp+0x4]
0xb30020dc    8b5c2408               mov ebx,[esp+0x8]
0xb30020e0    0bd8                   or ebx,eax
0xb30020e2    f6c301                 test_b ebx,0x1
0xb30020e5    7512                   jnz 0xb30020f9
0xb30020e7    39442408               cmp [esp+0x8],eax
0xb30020eb    7f06                   jg 0xb30020f3
0xb30020ed    b8411030b3             mov eax,0xb3301041  'false'
0xb30020f2    c3                     ret
0xb30020f3    b8391030b3             mov eax,0xb3301039  'true'
0xb30020f8    c3                     ret
0xb30020f9    8b5c2408               mov ebx,[esp+0x8]
0xb30020fd    f6c301                 test_b ebx,0x1
0xb3002100    750e                   jnz 0xb3002110
0xb3002102    d1fb                   sar ebx, 1
0xb3002104    89df                   mov edi,ebx
0xb3002106    c1ff1f                 sar edi, 0x1f
0xb3002109    57                     push edi
0xb300210a    53                     push ebx
0xb300210b    e913000000             jmp 0xb3002123
0xb3002110    0fb77b01               movzx_w edi,[ebx+0x1]
0xb3002114    83ff2a                 cmp edi,0x2a
0xb3002117    0f853e000000           jnz 0xb300215b
0xb300211d    ff7307                 push [ebx+0x7]
0xb3002120    ff7303                 push [ebx+0x3]
0xb3002123    a801                   test al,0x1
0xb3002125    750e                   jnz 0xb3002135
0xb3002127    d1f8                   sar eax, 1
0xb3002129    89c7                   mov edi,eax
0xb300212b    c1ff1f                 sar edi, 0x1f
0xb300212e    57                     push edi
0xb300212f    50                     push eax
0xb3002130    e913000000             jmp 0xb3002148
0xb3002135    0fb77801               movzx_w edi,[eax+0x1]
0xb3002139    83ff2a                 cmp edi,0x2a
0xb300213c    0f8516000000           jnz 0xb3002158
0xb3002142    ff7007                 push [eax+0x7]
0xb3002145    ff7003                 push [eax+0x3]
0xb3002148    5b                     pop ebx
0xb3002149    59                     pop ecx
0xb300214a    58                     pop eax
0xb300214b    5a                     pop edx
0xb300214c    3bd1                   cmp edx,ecx
0xb300214e    7c9d                   jl 0xb30020ed
0xb3002150    7fa1                   jg 0xb30020f3
0xb3002152    3bc3                   cmp eax,ebx
0xb3002154    7697                   jna 0xb30020ed
0xb3002156    eb9b                   jmp 0xb30020f3
0xb3002158    83c408                 add esp,0x8
        ;; Enter frame
0xb300215b    55                     push ebp
0xb300215c    89e5                   mov ebp,esp
0xb300215e    e800000000             call 0xb3002163
0xb3002163    8104247dffffff         add [esp],0xffffff7d
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300216a    3b25bc195809           cmp esp,[0x95819bc]
0xb3002170    0f8638000000           jna 0xb30021ae
        ;; t0 <- LoadLocal:3(other lvl:0)
0xb3002176    8b4508                 mov eax,[ebp+0x8]
0xb3002179    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(this lvl:0)
0xb300217a    8b450c                 mov eax,[ebp+0xc]
0xb300217d    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(_greaterThanFromInteger@0x36924d72, t0, t0)
0xb300217e    b9e9f70bb3             mov ecx,0xb30bf7e9  'ICData target:'_greaterThanFromInteger@0x36924d72' num-checks: 0'
0xb3002183    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3002188    e88be0ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300218d    83c408                 add esp,0x8
0xb3002190    50                     push eax
        ;; Return:8(t0)
0xb3002191    58                     pop eax
0xb3002192    bac16b1ab3             mov edx,0xb31a6bc1  'Function '>':.'
0xb3002197    ff422b                 inc [edx+0x2b]
0xb300219a    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30021a1    7c05                   jl 0xb30021a8
0xb30021a3    e810e7ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30021a8    89ec                   mov esp,ebp
0xb30021aa    5d                     pop ebp
0xb30021ab    c3                     ret
0xb30021ac    90                     nop
0xb30021ad    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30021ae    b970d30a08             mov ecx,0x80ad370
0xb30021b3    ba00000000             mov edx,0
0xb30021b8    e86bde3702             call 0xb5380028  [stub: CallToRuntime]
0xb30021bd    ebb7                   jmp 0xb3002176
0xb30021bf    e974e23702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30021c4    e94fe33702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb30020ee 'false'
 28 : 0xb30020f4 'true'
 167 : 0xb300217f 'ICData target:'_greaterThanFromInteger@0x36924d72' num-checks: 0'
 172 : 0xb3002184 'ImmutableArray'
 187 : 0xb3002193 'Function '>':.'
}
PC Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_>' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300217e	deopt-before 	7		9346	-1
0xb300218d	ic-call      	7		9346	-1
0xb300218d	deopt-after  	7		9346	-1
0xb30021a8	other        	-1		0	-1
0xb30021ad	return       	-1		9341	-1
0xb30021bd	other        	-1		9335	-1
0xb30021bf	patch        	-1		0	-1
0xb30021c4	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__IntegerImplementation@0x36924d72_>' {
}
Variable Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_>' {
  stack var 'this' offset 3 (valid 8886-9351)
  stack var 'other' offset 2 (valid 9338-9351)
}
Exception Handlers for function 'dart:core__IntegerImplementation@0x36924d72_>' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBase@0x36924d72_charCodeAt' @ token 12508
Before Optimizations
==== dart:core__StringBase@0x36924d72_charCodeAt
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(String_charCodeAt)
    Return:4(t0)
--> 'dart:core__StringBase@0x36924d72_charCodeAt' entry: 0xb30021e8 time: 240 us
Code for function 'dart:core__StringBase@0x36924d72_charCodeAt' {
0xb30021e8    8b5c2404               mov ebx,[esp+0x4]
0xb30021ec    8b442408               mov eax,[esp+0x8]
0xb30021f0    f6c301                 test_b ebx,0x1
0xb30021f3    751c                   jnz 0xb3002211
0xb30021f5    3b5803                 cmp ebx,[eax+0x3]
0xb30021f8    7317                   jnc 0xb3002211
0xb30021fa    0fb77801               movzx_w edi,[eax+0x1]
0xb30021fe    83ff4d                 cmp edi,0x4d
0xb3002201    0f850a000000           jnz 0xb3002211
0xb3002207    d1fb                   sar ebx, 1
0xb3002209    0fb644180b             movzx_b eax,[eax+ebx*0x1+0xb]
0xb300220e    03c0                   add eax,eax
0xb3002210    c3                     ret
        ;; Enter frame
0xb3002211    55                     push ebp
0xb3002212    89e5                   mov ebp,esp
0xb3002214    e800000000             call 0xb3002219
0xb3002219    830424d7               add [esp],0xd7
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300221d    3b25bc195809           cmp esp,[0x95819bc]
0xb3002223    0f8628000000           jna 0xb3002251
        ;; t0 <- NativeCall:3(String_charCodeAt)
0xb3002229    68190040b5             push 0xb5400019
0xb300222e    8d450c                 lea eax,[ebp+0xc]
0xb3002231    b960194608             mov ecx,0x8461960
0xb3002236    ba02000001             mov edx,0x1000002
0xb300223b    e8e8de3702             call 0xb5380128  [stub: CallNativeCFunction]
0xb3002240    58                     pop eax
0xb3002241    50                     push eax
        ;; Return:4(t0)
0xb3002242    58                     pop eax
0xb3002243    ba41a31ab3             mov edx,0xb31aa341  'Function 'charCodeAt':.'
0xb3002248    ff422b                 inc [edx+0x2b]
0xb300224b    89ec                   mov esp,ebp
0xb300224d    5d                     pop ebp
0xb300224e    c3                     ret
0xb300224f    90                     nop
0xb3002250    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3002251    b970d30a08             mov ecx,0x80ad370
0xb3002256    ba00000000             mov edx,0
0xb300225b    e8c8dd3702             call 0xb5380028  [stub: CallToRuntime]
0xb3002260    ebc7                   jmp 0xb3002229
0xb3002262    e9d1e13702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3002267    e9ace23702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 92 : 0xb3002244 'Function 'charCodeAt':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_charCodeAt' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3002240	other        	-1		12518	-1
0xb3002250	return       	-1		12518	-1
0xb3002260	other        	-1		12508	-1
0xb3002262	patch        	-1		0	-1
0xb3002267	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_charCodeAt' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_charCodeAt' {
  stack var 'this' offset 3 (valid 12342-12518)
  stack var 'index' offset 2 (valid 12510-12518)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_charCodeAt' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__IntegerImplementation@0x36924d72_==' @ token 9412
Before Optimizations
==== dart:core__IntegerImplementation@0x36924d72_==
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(other lvl:0)
    t1 <- Constant:4(#null)
    t2 <- Constant:5(#null)
    t0 <- InstanceOf:6(t0 IS num instantiator(t1) type-arg(t2))
    t1 <- Constant:7(#true)
    Branch if StrictCompare:8(===, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:10(other lvl:0)
    PushArgument:11(t0)
    t0 <- LoadLocal:12(this lvl:0)
    PushArgument:13(t0)
    t0 <- InstanceCall:14(_equalToInteger@0x36924d72, t0, t0)
    Return:15(t0)
B3[target]
    t0 <- Constant:18(#false)
    Return:19(t0)
--> 'dart:core__IntegerImplementation@0x36924d72_==' entry: 0xb3002288 time: 203 us
Code for function 'dart:core__IntegerImplementation@0x36924d72_==' {
0xb3002288    8b442404               mov eax,[esp+0x4]
0xb300228c    3b442408               cmp eax,[esp+0x8]
0xb3002290    7410                   jz 0xb30022a2
0xb3002292    8b5c2408               mov ebx,[esp+0x8]
0xb3002296    0bc3                   or eax,ebx
0xb3002298    a801                   test al,0x1
0xb300229a    750c                   jnz 0xb30022a8
0xb300229c    b8411030b3             mov eax,0xb3301041  'false'
0xb30022a1    c3                     ret
0xb30022a2    b8391030b3             mov eax,0xb3301039  'true'
0xb30022a7    c3                     ret
0xb30022a8    8b442408               mov eax,[esp+0x8]
0xb30022ac    a801                   test al,0x1
0xb30022ae    0f8517000000           jnz 0xb30022cb
0xb30022b4    8b442404               mov eax,[esp+0x4]
0xb30022b8    0fb77801               movzx_w edi,[eax+0x1]
0xb30022bc    83ff2c                 cmp edi,0x2c
0xb30022bf    0f8425000000           jz 0xb30022ea
0xb30022c5    b8411030b3             mov eax,0xb3301041  'false'
0xb30022ca    c3                     ret
0xb30022cb    0fb77801               movzx_w edi,[eax+0x1]
0xb30022cf    83ff2a                 cmp edi,0x2a
0xb30022d2    0f8512000000           jnz 0xb30022ea
0xb30022d8    8b442404               mov eax,[esp+0x4]
0xb30022dc    a801                   test al,0x1
0xb30022de    0f8506000000           jnz 0xb30022ea
0xb30022e4    b8411030b3             mov eax,0xb3301041  'false'
0xb30022e9    c3                     ret
        ;; Enter frame
0xb30022ea    55                     push ebp
0xb30022eb    89e5                   mov ebp,esp
0xb30022ed    e800000000             call 0xb30022f2
0xb30022f2    8304249e               add [esp],0x9e
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30022f6    3b25bc195809           cmp esp,[0x95819bc]
0xb30022fc    0f86d6000000           jna 0xb30023d8
        ;; t0 <- LoadLocal:3(other lvl:0)
0xb3002302    8b4508                 mov eax,[ebp+0x8]
0xb3002305    50                     push eax
        ;; t1 <- Constant:4(#null)
0xb3002306    b8190040b5             mov eax,0xb5400019
0xb300230b    50                     push eax
        ;; t2 <- Constant:5(#null)
0xb300230c    b8190040b5             mov eax,0xb5400019
0xb3002311    50                     push eax
        ;; t0 <- InstanceOf:6(t0 IS num instantiator(t1) type-arg(t2))
0xb3002312    5a                     pop edx
0xb3002313    59                     pop ecx
0xb3002314    58                     pop eax
0xb3002315    51                     push ecx
0xb3002316    52                     push edx
0xb3002317    3d190040b5             cmp eax, 0xb5400019
0xb300231c    0f8436000000           jz 0xb3002358
        ;; InlineInstanceof
        ;; InstantiatedTypeNoArgumentsTest
0xb3002322    a801                   test al,0x1
0xb3002324    7505                   jnz 0xb300232b
0xb3002326    e934000000             jmp 0xb300235f
0xb300232b    0fb74801               movzx_w ecx,[eax+0x1]
0xb300232f    83f927                 cmp ecx,0x27
0xb3002332    0f8427000000           jz 0xb300235f
        ;; NumberTypeCheck
0xb3002338    83f92c                 cmp ecx,0x2c
0xb300233b    0f841e000000           jz 0xb300235f
0xb3002341    83f92a                 cmp ecx,0x2a
0xb3002344    0f8415000000           jz 0xb300235f
0xb300234a    83f92b                 cmp ecx,0x2b
0xb300234d    0f840c000000           jz 0xb300235f
0xb3002353    e900000000             jmp 0xb3002358
0xb3002358    b8411030b3             mov eax,0xb3301041  'false'
0xb300235d    eb05                   jmp 0xb3002364
0xb300235f    b8391030b3             mov eax,0xb3301039  'true'
0xb3002364    5a                     pop edx
0xb3002365    59                     pop ecx
0xb3002366    50                     push eax
        ;; t1 <- Constant:7(#true)
0xb3002367    b8391030b3             mov eax,0xb3301039  'true'
0xb300236c    50                     push eax
        ;; Branch if StrictCompare:8(===, t0, t1) goto (2, 3)
0xb300236d    58                     pop eax
0xb300236e    59                     pop ecx
0xb300236f    51                     push ecx
0xb3002370    50                     push eax
0xb3002371    e892e43702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3002376    58                     pop eax
0xb3002377    59                     pop ecx
0xb3002378    0f8537000000           jnz 0xb30023b5
        ;; B2
        ;; t0 <- LoadLocal:10(other lvl:0)
0xb300237e    8b4508                 mov eax,[ebp+0x8]
0xb3002381    50                     push eax
        ;; PushArgument:11(t0)
        ;; t0 <- LoadLocal:12(this lvl:0)
0xb3002382    8b450c                 mov eax,[ebp+0xc]
0xb3002385    50                     push eax
        ;; PushArgument:13(t0)
        ;; t0 <- InstanceCall:14(_equalToInteger@0x36924d72, t0, t0)
0xb3002386    b901fc0bb3             mov ecx,0xb30bfc01  'ICData target:'_equalToInteger@0x36924d72' num-checks: 0'
0xb300238b    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3002390    e883deffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3002395    83c408                 add esp,0x8
0xb3002398    50                     push eax
        ;; Return:15(t0)
0xb3002399    58                     pop eax
0xb300239a    ba616d1ab3             mov edx,0xb31a6d61  'Function '==':.'
0xb300239f    ff422b                 inc [edx+0x2b]
0xb30023a2    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30023a9    7c05                   jl 0xb30023b0
0xb30023ab    e808e5ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30023b0    89ec                   mov esp,ebp
0xb30023b2    5d                     pop ebp
0xb30023b3    c3                     ret
0xb30023b4    90                     nop
        ;; B3
        ;; t0 <- Constant:18(#false)
0xb30023b5    b8411030b3             mov eax,0xb3301041  'false'
0xb30023ba    50                     push eax
        ;; Return:19(t0)
0xb30023bb    58                     pop eax
0xb30023bc    ba616d1ab3             mov edx,0xb31a6d61  'Function '==':.'
0xb30023c1    ff422b                 inc [edx+0x2b]
0xb30023c4    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30023cb    7c05                   jl 0xb30023d2
0xb30023cd    e8e6e4ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30023d2    89ec                   mov esp,ebp
0xb30023d4    5d                     pop ebp
0xb30023d5    c3                     ret
0xb30023d6    90                     nop
0xb30023d7    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30023d8    b970d30a08             mov ecx,0x80ad370
0xb30023dd    ba00000000             mov edx,0
0xb30023e2    e841dc3702             call 0xb5380028  [stub: CallToRuntime]
0xb30023e7    e916ffffff             jmp 0xb3002302
0xb30023ec    e947e03702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30023f1    e922e13702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 21 : 0xb300229d 'false'
 27 : 0xb30022a3 'true'
 62 : 0xb30022c6 'false'
 93 : 0xb30022e5 'false'
 209 : 0xb3002359 'false'
 216 : 0xb3002360 'true'
 224 : 0xb3002368 'true'
 255 : 0xb3002387 'ICData target:'_equalToInteger@0x36924d72' num-checks: 0'
 260 : 0xb300238c 'ImmutableArray'
 275 : 0xb300239b 'Function '==':.'
 302 : 0xb30023b6 'false'
 309 : 0xb30023bd 'Function '==':.'
}
PC Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_==' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3002386	deopt-before 	14		9429	-1
0xb3002395	ic-call      	14		9429	-1
0xb3002395	deopt-after  	14		9429	-1
0xb30023b0	other        	-1		0	-1
0xb30023b5	return       	-1		9424	-1
0xb30023d2	other        	-1		0	-1
0xb30023d7	return       	-1		9434	-1
0xb30023e7	other        	-1		9412	-1
0xb30023ec	patch        	-1		0	-1
0xb30023f1	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__IntegerImplementation@0x36924d72_==' {
}
Variable Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_==' {
  stack var 'this' offset 3 (valid 8886-9438)
  stack var 'other' offset 2 (valid 9413-9438)
}
Exception Handlers for function 'dart:core__IntegerImplementation@0x36924d72_==' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb3001098 to 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' 0xb30011a8
Compiling function: 'dart:uri_Uri_Uri.fromComponents' @ token 187
Before Optimizations
==== dart:uri_Uri_Uri.fromComponents
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(:phase lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#1)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(&, t0, t0)
    t1 <- Constant:8(#0)
    Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:12(this lvl:0)
    t1 <- LoadLocal:13(scheme lvl:0)
    StoreInstanceField:14(scheme, t0, t1)
    t0 <- LoadLocal:15(this lvl:0)
    t1 <- LoadLocal:16(userInfo lvl:0)
    StoreInstanceField:17(userInfo, t0, t1)
    t0 <- LoadLocal:18(this lvl:0)
    t1 <- LoadLocal:19(domain lvl:0)
    StoreInstanceField:20(domain, t0, t1)
    t0 <- LoadLocal:21(this lvl:0)
    t1 <- LoadLocal:22(port lvl:0)
    StoreInstanceField:23(port, t0, t1)
    t0 <- LoadLocal:24(this lvl:0)
    t1 <- LoadLocal:25(path lvl:0)
    StoreInstanceField:26(path, t0, t1)
    t0 <- LoadLocal:27(this lvl:0)
    t1 <- LoadLocal:28(query lvl:0)
    StoreInstanceField:29(query, t0, t1)
    t0 <- LoadLocal:30(this lvl:0)
    t1 <- LoadLocal:31(fragment lvl:0)
    StoreInstanceField:32(fragment, t0, t1)
    t0 <- LoadLocal:33(this lvl:0)
    PushArgument:34(t0)
    t0 <- Constant:35(#3)
    PushArgument:36(t0)
    StaticCall:37(Object. t0, t0)
    goto:41 4
B3[target]
    goto:42 4
B4[join] pred(B2, B3)
    t0 <- Constant:43(#null)
    Return:44(t0)
--> 'dart:uri_Uri_Uri.fromComponents' entry: 0xb3002408 time: 307 us
Code for function 'dart:uri_Uri_Uri.fromComponents' {
        ;; Enter frame
0xb3002408    55                     push ebp
0xb3002409    89e5                   mov ebp,esp
0xb300240b    e800000000             call 0xb3002410
0xb3002410    83ec24                 sub esp,0x24
        ;; Copy parameters
0xb3002413    8b4a0f                 mov ecx,[edx+0xf]
0xb3002416    83f904                 cmp ecx,0x4
0xb3002419    0f8c0f010000           jl 0xb300252e
0xb300241f    83f904                 cmp ecx,0x4
0xb3002422    0f8f06010000           jg 0xb300252e
0xb3002428    8b5a0b                 mov ebx,[edx+0xb]
0xb300242b    2bd9                   sub ebx,ecx
0xb300242d    8d5c5d08               lea ebx,[ebp+ebx*0x2+0x8]
0xb3002431    8d7dfc                 lea edi,[ebp-0x4]
0xb3002434    2bf9                   sub edi,ecx
0xb3002436    2bf9                   sub edi,ecx
0xb3002438    d1f9                   sar ecx, 1
0xb300243a    eb06                   jmp 0xb3002442
0xb300243c    8b048b                 mov eax,[ebx+ecx*0x4]
0xb300243f    89048f                 mov [edi+ecx*0x4],eax
0xb3002442    49                     dec ecx
0xb3002443    79f7                   jns 0xb300243c
0xb3002445    8b5a0b                 mov ebx,[edx+0xb]
0xb3002448    8b4a0f                 mov ecx,[edx+0xf]
0xb300244b    d1f9                   sar ecx, 1
0xb300244d    8d5c5d04               lea ebx,[ebp+ebx*0x2+0x4]
0xb3002451    8d7a13                 lea edi,[edx+0x13]
0xb3002454    8b07                   mov eax,[edi]
0xb3002456    3d813a18b3             cmp eax, 0xb3183a81  'domain'
0xb300245b    750d                   jnz 0xb300246a
0xb300245d    8b4704                 mov eax,[edi+0x4]
0xb3002460    83c708                 add edi,0x8
0xb3002463    f7d8                   neg eax
0xb3002465    8b0443                 mov eax,[ebx+eax*0x2]
0xb3002468    eb05                   jmp 0xb300246f
0xb300246a    b8e11240b5             mov eax,0xb54012e1
0xb300246f    8945e8                 mov [ebp-0x18],eax
0xb3002472    8b07                   mov eax,[edi]
0xb3002474    3db9a433b3             cmp eax, 0xb333a4b9  'fragment'
0xb3002479    750d                   jnz 0xb3002488
0xb300247b    8b4704                 mov eax,[edi+0x4]
0xb300247e    83c708                 add edi,0x8
0xb3002481    f7d8                   neg eax
0xb3002483    8b0443                 mov eax,[ebx+eax*0x2]
0xb3002486    eb05                   jmp 0xb300248d
0xb3002488    b8e11240b5             mov eax,0xb54012e1
0xb300248d    8945d8                 mov [ebp-0x28],eax
0xb3002490    8b07                   mov eax,[edi]
0xb3002492    3d01c718b3             cmp eax, 0xb318c701  'path'
0xb3002497    750d                   jnz 0xb30024a6
0xb3002499    8b4704                 mov eax,[edi+0x4]
0xb300249c    83c708                 add edi,0x8
0xb300249f    f7d8                   neg eax
0xb30024a1    8b0443                 mov eax,[ebx+eax*0x2]
0xb30024a4    eb05                   jmp 0xb30024ab
0xb30024a6    b8e11240b5             mov eax,0xb54012e1
0xb30024ab    8945e0                 mov [ebp-0x20],eax
0xb30024ae    8b07                   mov eax,[edi]
0xb30024b0    3db9a333b3             cmp eax, 0xb333a3b9  'port'
0xb30024b5    750d                   jnz 0xb30024c4
0xb30024b7    8b4704                 mov eax,[edi+0x4]
0xb30024ba    83c708                 add edi,0x8
0xb30024bd    f7d8                   neg eax
0xb30024bf    8b0443                 mov eax,[ebx+eax*0x2]
0xb30024c2    eb05                   jmp 0xb30024c9
0xb30024c4    b800000000             mov eax,0
0xb30024c9    8945e4                 mov [ebp-0x1c],eax
0xb30024cc    8b07                   mov eax,[edi]
0xb30024ce    3d09bb18b3             cmp eax, 0xb318bb09  'query'
0xb30024d3    750d                   jnz 0xb30024e2
0xb30024d5    8b4704                 mov eax,[edi+0x4]
0xb30024d8    83c708                 add edi,0x8
0xb30024db    f7d8                   neg eax
0xb30024dd    8b0443                 mov eax,[ebx+eax*0x2]
0xb30024e0    eb05                   jmp 0xb30024e7
0xb30024e2    b8e11240b5             mov eax,0xb54012e1
0xb30024e7    8945dc                 mov [ebp-0x24],eax
0xb30024ea    8b07                   mov eax,[edi]
0xb30024ec    3d519a18b3             cmp eax, 0xb3189a51  'scheme'
0xb30024f1    750d                   jnz 0xb3002500
0xb30024f3    8b4704                 mov eax,[edi+0x4]
0xb30024f6    83c708                 add edi,0x8
0xb30024f9    f7d8                   neg eax
0xb30024fb    8b0443                 mov eax,[ebx+eax*0x2]
0xb30024fe    eb05                   jmp 0xb3002505
0xb3002500    b8e11240b5             mov eax,0xb54012e1
0xb3002505    8945f0                 mov [ebp-0x10],eax
0xb3002508    8b07                   mov eax,[edi]
0xb300250a    3d99bf18b3             cmp eax, 0xb318bf99  'userInfo'
0xb300250f    750d                   jnz 0xb300251e
0xb3002511    8b4704                 mov eax,[edi+0x4]
0xb3002514    83c708                 add edi,0x8
0xb3002517    f7d8                   neg eax
0xb3002519    8b0443                 mov eax,[ebx+eax*0x2]
0xb300251c    eb05                   jmp 0xb3002523
0xb300251e    b8e11240b5             mov eax,0xb54012e1
0xb3002523    8945ec                 mov [ebp-0x14],eax
0xb3002526    813f190040b5           cmp [edi],0xb5400019
0xb300252c    7411                   jz 0xb300253f
0xb300252e    83c424                 add esp,0x24
0xb3002531    b931fe0bb3             mov ecx,0xb30bfe31  'ICData target:'Uri.fromComponents' num-checks: 0'
0xb3002536    e80ddd3702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb300253b    89ec                   mov esp,ebp
0xb300253d    5d                     pop ebp
0xb300253e    c3                     ret
0xb300253f    8b4a0b                 mov ecx,[edx+0xb]
0xb3002542    d1f9                   sar ecx, 1
0xb3002544    eb08                   jmp 0xb300254e
0xb3002546    c7448d08190040b5       mov [ebp+ecx*0x4+0x8],0xb5400019
0xb300254e    49                     dec ecx
0xb300254f    79f5                   jns 0xb3002546
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3002551    3b25bc195809           cmp esp,[0x95819bc]
0xb3002557    0f866f010000           jna 0xb30026cc
        ;; t0 <- LoadLocal:3(:phase lvl:0)
0xb300255d    8b45f4                 mov eax,[ebp-0xc]
0xb3002560    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#1)
0xb3002561    b802000000             mov eax,0x2
0xb3002566    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(&, t0, t0)
0xb3002567    b969fe0bb3             mov ecx,0xb30bfe69  'ICData target:'&' num-checks: 0'
0xb300256c    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3002571    e862ddffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3002576    83c408                 add esp,0x8
0xb3002579    50                     push eax
        ;; t1 <- Constant:8(#0)
0xb300257a    b800000000             mov eax,0
0xb300257f    50                     push eax
        ;; Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
0xb3002580    58                     pop eax
0xb3002581    59                     pop ecx
0xb3002582    51                     push ecx
0xb3002583    50                     push eax
0xb3002584    e87fe23702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3002589    58                     pop eax
0xb300258a    59                     pop ecx
0xb300258b    0f8418010000           jz 0xb30026a9
        ;; B2
        ;; t0 <- LoadLocal:12(this lvl:0)
0xb3002591    8b45f8                 mov eax,[ebp-0x8]
0xb3002594    50                     push eax
        ;; t1 <- LoadLocal:13(scheme lvl:0)
0xb3002595    8b45f0                 mov eax,[ebp-0x10]
0xb3002598    50                     push eax
        ;; StoreInstanceField:14(scheme, t0, t1)
0xb3002599    58                     pop eax
0xb300259a    59                     pop ecx
0xb300259b    894107                 mov [ecx+0x7],eax
0xb300259e    83e005                 and eax,0x5
0xb30025a1    d1e8                   shr eax, 1
0xb30025a3    13c1                   adc eax,ecx
0xb30025a5    83e007                 and eax,0x7
0xb30025a8    83f804                 cmp eax,0x4
0xb30025ab    7508                   jnz 0xb30025b5
0xb30025ad    8d4107                 lea eax,[ecx+0x7]
0xb30025b0    e8b3dbffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:15(this lvl:0)
0xb30025b5    8b45f8                 mov eax,[ebp-0x8]
0xb30025b8    50                     push eax
        ;; t1 <- LoadLocal:16(userInfo lvl:0)
0xb30025b9    8b45ec                 mov eax,[ebp-0x14]
0xb30025bc    50                     push eax
        ;; StoreInstanceField:17(userInfo, t0, t1)
0xb30025bd    58                     pop eax
0xb30025be    59                     pop ecx
0xb30025bf    89410b                 mov [ecx+0xb],eax
0xb30025c2    83e005                 and eax,0x5
0xb30025c5    d1e8                   shr eax, 1
0xb30025c7    13c1                   adc eax,ecx
0xb30025c9    83e007                 and eax,0x7
0xb30025cc    83f804                 cmp eax,0x4
0xb30025cf    7508                   jnz 0xb30025d9
0xb30025d1    8d410b                 lea eax,[ecx+0xb]
0xb30025d4    e88fdbffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:18(this lvl:0)
0xb30025d9    8b45f8                 mov eax,[ebp-0x8]
0xb30025dc    50                     push eax
        ;; t1 <- LoadLocal:19(domain lvl:0)
0xb30025dd    8b45e8                 mov eax,[ebp-0x18]
0xb30025e0    50                     push eax
        ;; StoreInstanceField:20(domain, t0, t1)
0xb30025e1    58                     pop eax
0xb30025e2    59                     pop ecx
0xb30025e3    89410f                 mov [ecx+0xf],eax
0xb30025e6    83e005                 and eax,0x5
0xb30025e9    d1e8                   shr eax, 1
0xb30025eb    13c1                   adc eax,ecx
0xb30025ed    83e007                 and eax,0x7
0xb30025f0    83f804                 cmp eax,0x4
0xb30025f3    7508                   jnz 0xb30025fd
0xb30025f5    8d410f                 lea eax,[ecx+0xf]
0xb30025f8    e86bdbffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:21(this lvl:0)
0xb30025fd    8b45f8                 mov eax,[ebp-0x8]
0xb3002600    50                     push eax
        ;; t1 <- LoadLocal:22(port lvl:0)
0xb3002601    8b45e4                 mov eax,[ebp-0x1c]
0xb3002604    50                     push eax
        ;; StoreInstanceField:23(port, t0, t1)
0xb3002605    58                     pop eax
0xb3002606    59                     pop ecx
0xb3002607    894113                 mov [ecx+0x13],eax
0xb300260a    83e005                 and eax,0x5
0xb300260d    d1e8                   shr eax, 1
0xb300260f    13c1                   adc eax,ecx
0xb3002611    83e007                 and eax,0x7
0xb3002614    83f804                 cmp eax,0x4
0xb3002617    7508                   jnz 0xb3002621
0xb3002619    8d4113                 lea eax,[ecx+0x13]
0xb300261c    e847dbffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:24(this lvl:0)
0xb3002621    8b45f8                 mov eax,[ebp-0x8]
0xb3002624    50                     push eax
        ;; t1 <- LoadLocal:25(path lvl:0)
0xb3002625    8b45e0                 mov eax,[ebp-0x20]
0xb3002628    50                     push eax
        ;; StoreInstanceField:26(path, t0, t1)
0xb3002629    58                     pop eax
0xb300262a    59                     pop ecx
0xb300262b    894117                 mov [ecx+0x17],eax
0xb300262e    83e005                 and eax,0x5
0xb3002631    d1e8                   shr eax, 1
0xb3002633    13c1                   adc eax,ecx
0xb3002635    83e007                 and eax,0x7
0xb3002638    83f804                 cmp eax,0x4
0xb300263b    7508                   jnz 0xb3002645
0xb300263d    8d4117                 lea eax,[ecx+0x17]
0xb3002640    e823dbffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:27(this lvl:0)
0xb3002645    8b45f8                 mov eax,[ebp-0x8]
0xb3002648    50                     push eax
        ;; t1 <- LoadLocal:28(query lvl:0)
0xb3002649    8b45dc                 mov eax,[ebp-0x24]
0xb300264c    50                     push eax
        ;; StoreInstanceField:29(query, t0, t1)
0xb300264d    58                     pop eax
0xb300264e    59                     pop ecx
0xb300264f    89411b                 mov [ecx+0x1b],eax
0xb3002652    83e005                 and eax,0x5
0xb3002655    d1e8                   shr eax, 1
0xb3002657    13c1                   adc eax,ecx
0xb3002659    83e007                 and eax,0x7
0xb300265c    83f804                 cmp eax,0x4
0xb300265f    7508                   jnz 0xb3002669
0xb3002661    8d411b                 lea eax,[ecx+0x1b]
0xb3002664    e8ffdaffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:30(this lvl:0)
0xb3002669    8b45f8                 mov eax,[ebp-0x8]
0xb300266c    50                     push eax
        ;; t1 <- LoadLocal:31(fragment lvl:0)
0xb300266d    8b45d8                 mov eax,[ebp-0x28]
0xb3002670    50                     push eax
        ;; StoreInstanceField:32(fragment, t0, t1)
0xb3002671    58                     pop eax
0xb3002672    59                     pop ecx
0xb3002673    89411f                 mov [ecx+0x1f],eax
0xb3002676    83e005                 and eax,0x5
0xb3002679    d1e8                   shr eax, 1
0xb300267b    13c1                   adc eax,ecx
0xb300267d    83e007                 and eax,0x7
0xb3002680    83f804                 cmp eax,0x4
0xb3002683    7508                   jnz 0xb300268d
0xb3002685    8d411f                 lea eax,[ecx+0x1f]
0xb3002688    e8dbdaffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:33(this lvl:0)
0xb300268d    8b45f8                 mov eax,[ebp-0x8]
0xb3002690    50                     push eax
        ;; PushArgument:34(t0)
        ;; t0 <- Constant:35(#3)
0xb3002691    b806000000             mov eax,0x6
0xb3002696    50                     push eax
        ;; PushArgument:36(t0)
        ;; StaticCall:37(Object. t0, t0)
0xb3002697    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300269c    e887dc3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30026a1    83c408                 add esp,0x8
        ;; goto:41 4
0xb30026a4    e900000000             jmp 0xb30026a9
        ;; B3
        ;; goto:42 4
        ;; B4
        ;; t0 <- Constant:43(#null)
0xb30026a9    b8190040b5             mov eax,0xb5400019
0xb30026ae    50                     push eax
        ;; Return:44(t0)
0xb30026af    58                     pop eax
0xb30026b0    ba191b0bb3             mov edx,0xb30b1b19  'Function 'Uri.fromComponents': constructor const.'
0xb30026b5    ff422b                 inc [edx+0x2b]
0xb30026b8    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30026bf    7c05                   jl 0xb30026c6
0xb30026c1    e8f2e1ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30026c6    89ec                   mov esp,ebp
0xb30026c8    5d                     pop ebp
0xb30026c9    c3                     ret
0xb30026ca    90                     nop
0xb30026cb    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30026cc    b970d30a08             mov ecx,0x80ad370
0xb30026d1    ba00000000             mov edx,0
0xb30026d6    e84dd93702             call 0xb5380028  [stub: CallToRuntime]
0xb30026db    e97dfeffff             jmp 0xb300255d
0xb30026e0    e953dd3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30026e5    e92ede3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 79 : 0xb3002457 'domain'
 99 : 0xb300246b ''
 109 : 0xb3002475 'fragment'
 129 : 0xb3002489 ''
 139 : 0xb3002493 'path'
 159 : 0xb30024a7 ''
 169 : 0xb30024b1 'port'
 199 : 0xb30024cf 'query'
 219 : 0xb30024e3 ''
 229 : 0xb30024ed 'scheme'
 249 : 0xb3002501 ''
 259 : 0xb300250b 'userInfo'
 279 : 0xb300251f ''
 298 : 0xb3002532 'ICData target:'Uri.fromComponents' num-checks: 0'
 352 : 0xb3002568 'ICData target:'&' num-checks: 0'
 357 : 0xb300256d 'ImmutableArray'
 656 : 0xb3002698 'ImmutableArray'
 681 : 0xb30026b1 'Function 'Uri.fromComponents': constructor const.'
}
PC Descriptors for function 'dart:uri_Uri_Uri.fromComponents' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3002567	deopt-before 	7		240	-1
0xb3002576	ic-call      	7		240	-1
0xb3002576	deopt-after  	7		240	-1
0xb30026a1	fn-call      	37		240	-1
0xb30026a1	deopt-after  	37		240	-1
0xb30026a4	deopt-before 	41		0	-1
0xb30026a9	deopt-before 	42		0	-1
0xb30026c6	other        	-1		0	-1
0xb30026cb	return       	-1		241	-1
0xb30026db	other        	-1		187	-1
0xb30026e0	patch        	-1		0	-1
0xb30026e5	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_Uri_Uri.fromComponents' {
}
Variable Descriptors for function 'dart:uri_Uri_Uri.fromComponents' {
  stack var 'this' offset -2 (valid 21-241)
  stack var 'scheme' offset -4 (valid 191-241)
  stack var 'userInfo' offset -5 (valid 198-241)
  stack var 'domain' offset -6 (valid 205-241)
  stack var 'port' offset -7 (valid 212-241)
  stack var 'path' offset -8 (valid 219-241)
  stack var 'query' offset -9 (valid 226-241)
  stack var 'fragment' offset -10 (valid 233-241)
}
Exception Handlers for function 'dart:uri_Uri_Uri.fromComponents' {
No exception handlers
}
Static call target functions {
  0xb30026a1: dart:core_Object_Object., 0xb5400019
}
PatchStaticCall: patching from 0xb30010ae to 'dart:uri_Uri_Uri.fromComponents' 0xb3002408
Compiling function: 'dart:core__IntegerImplementation@0x36924d72_&' @ token 9094
Before Optimizations
==== dart:core__IntegerImplementation@0x36924d72_&
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(other lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(this lvl:0)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(_bitAndFromInteger@0x36924d72, t0, t0)
    Return:8(t0)
--> 'dart:core__IntegerImplementation@0x36924d72_&' entry: 0xb3002708 time: 99 us
Code for function 'dart:core__IntegerImplementation@0x36924d72_&' {
0xb3002708    8b442404               mov eax,[esp+0x4]
0xb300270c    8b5c2408               mov ebx,[esp+0x8]
0xb3002710    0bd8                   or ebx,eax
0xb3002712    f6c301                 test_b ebx,0x1
0xb3002715    7507                   jnz 0xb300271e
0xb3002717    8b5c2408               mov ebx,[esp+0x8]
0xb300271b    23c3                   and eax,ebx
0xb300271d    c3                     ret
        ;; Enter frame
0xb300271e    55                     push ebp
0xb300271f    89e5                   mov ebp,esp
0xb3002721    e800000000             call 0xb3002726
0xb3002726    830424ea               add [esp],0xea
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300272a    3b25bc195809           cmp esp,[0x95819bc]
0xb3002730    0f8638000000           jna 0xb300276e
        ;; t0 <- LoadLocal:3(other lvl:0)
0xb3002736    8b4508                 mov eax,[ebp+0x8]
0xb3002739    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(this lvl:0)
0xb300273a    8b450c                 mov eax,[ebp+0xc]
0xb300273d    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(_bitAndFromInteger@0x36924d72, t0, t0)
0xb300273e    b9810128b3             mov ecx,0xb3280181  'ICData target:'_bitAndFromInteger@0x36924d72' num-checks: 0'
0xb3002743    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3002748    e8cbdaffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300274d    83c408                 add esp,0x8
0xb3002750    50                     push eax
        ;; Return:8(t0)
0xb3002751    58                     pop eax
0xb3002752    ba41651ab3             mov edx,0xb31a6541  'Function '&':.'
0xb3002757    ff422b                 inc [edx+0x2b]
0xb300275a    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3002761    7c05                   jl 0xb3002768
0xb3002763    e850e1ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3002768    89ec                   mov esp,ebp
0xb300276a    5d                     pop ebp
0xb300276b    c3                     ret
0xb300276c    90                     nop
0xb300276d    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300276e    b970d30a08             mov ecx,0x80ad370
0xb3002773    ba00000000             mov edx,0
0xb3002778    e8abd83702             call 0xb5380028  [stub: CallToRuntime]
0xb300277d    ebb7                   jmp 0xb3002736
0xb300277f    e9b4dc3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3002784    e98fdd3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 55 : 0xb300273f 'ICData target:'_bitAndFromInteger@0x36924d72' num-checks: 0'
 60 : 0xb3002744 'ImmutableArray'
 75 : 0xb3002753 'Function '&':.'
}
PC Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_&' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300273e	deopt-before 	7		9104	-1
0xb300274d	ic-call      	7		9104	-1
0xb300274d	deopt-after  	7		9104	-1
0xb3002768	other        	-1		0	-1
0xb300276d	return       	-1		9099	-1
0xb300277d	other        	-1		9094	-1
0xb300277f	patch        	-1		0	-1
0xb3002784	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__IntegerImplementation@0x36924d72_&' {
}
Variable Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_&' {
  stack var 'this' offset 3 (valid 8886-9109)
  stack var 'other' offset 2 (valid 9096-9109)
}
Exception Handlers for function 'dart:core__IntegerImplementation@0x36924d72_&' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core_Object_Object.' @ token 11992
Before Optimizations
==== dart:core_Object_Object.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#null)
    Return:4(t0)
--> 'dart:core_Object_Object.' entry: 0xb30027a8 time: 49 us
Code for function 'dart:core_Object_Object.' {
        ;; Enter frame
0xb30027a8    55                     push ebp
0xb30027a9    89e5                   mov ebp,esp
0xb30027ab    e800000000             call 0xb30027b0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30027b0    3b25bc195809           cmp esp,[0x95819bc]
0xb30027b6    0f8623000000           jna 0xb30027df
        ;; t0 <- Constant:3(#null)
0xb30027bc    b8190040b5             mov eax,0xb5400019
0xb30027c1    50                     push eax
        ;; Return:4(t0)
0xb30027c2    58                     pop eax
0xb30027c3    bab9e019b3             mov edx,0xb319e0b9  'Function 'Object.': constructor const.'
0xb30027c8    ff422b                 inc [edx+0x2b]
0xb30027cb    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30027d2    7c05                   jl 0xb30027d9
0xb30027d4    e8dfe0ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30027d9    89ec                   mov esp,ebp
0xb30027db    5d                     pop ebp
0xb30027dc    c3                     ret
0xb30027dd    90                     nop
0xb30027de    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30027df    b970d30a08             mov ecx,0x80ad370
0xb30027e4    ba00000000             mov edx,0
0xb30027e9    e83ad83702             call 0xb5380028  [stub: CallToRuntime]
0xb30027ee    ebcc                   jmp 0xb30027bc
0xb30027f0    e943dc3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30027f5    e91edd3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 28 : 0xb30027c4 'Function 'Object.': constructor const.'
}
PC Descriptors for function 'dart:core_Object_Object.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30027d9	other        	-1		0	-1
0xb30027de	return       	-1		11995	-1
0xb30027ee	other        	-1		11992	-1
0xb30027f0	patch        	-1		0	-1
0xb30027f5	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_Object_Object.' {
}
Variable Descriptors for function 'dart:core_Object_Object.' {
  stack var 'this' offset 3 (valid 0-11995)
}
Exception Handlers for function 'dart:core_Object_Object.' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb30026a1 to 'dart:core_Object_Object.' 0xb30027a8
Compiling function: 'dart:uri_Uri_resolve' @ token 451
Before Optimizations
==== dart:uri_Uri_resolve
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- AllocateObject:5(Library:'dart:uri' Class: Uri)
    t0 <- StoreLocal:6(:alloc461, t0, lvl: 0)
    PushArgument:7(t0)
    t0 <- Constant:8(#3)
    PushArgument:9(t0)
    t0 <- LoadLocal:10(uri lvl:0)
    PushArgument:11(t0)
    StaticCall:12(Uri.fromString t0, t0, t0)
    t0 <- LoadLocal:13(:alloc461 lvl:0)
    PushArgument:14(t0)
    t0 <- InstanceCall:15(resolveUri, t0, t0)
    Return:16(t0)
--> 'dart:uri_Uri_resolve' entry: 0xb3002818 time: 157 us
Code for function 'dart:uri_Uri_resolve' {
        ;; Enter frame
0xb3002818    55                     push ebp
0xb3002819    89e5                   mov ebp,esp
0xb300281b    e800000000             call 0xb3002820
0xb3002820    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb3002823    b8190040b5             mov eax,0xb5400019
0xb3002828    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300282b    3b25bc195809           cmp esp,[0x95819bc]
0xb3002831    0f865a000000           jna 0xb3002891
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb3002837    8b450c                 mov eax,[ebp+0xc]
0xb300283a    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- AllocateObject:5(Library:'dart:uri' Class: Uri)
0xb300283b    e818e4ffff             call 0xb3000c58 [ stub ]
0xb3002840    50                     push eax
        ;; t0 <- StoreLocal:6(:alloc461, t0, lvl: 0)
0xb3002841    58                     pop eax
0xb3002842    8945f8                 mov [ebp-0x8],eax
0xb3002845    50                     push eax
        ;; PushArgument:7(t0)
        ;; t0 <- Constant:8(#3)
0xb3002846    b806000000             mov eax,0x6
0xb300284b    50                     push eax
        ;; PushArgument:9(t0)
        ;; t0 <- LoadLocal:10(uri lvl:0)
0xb300284c    8b4508                 mov eax,[ebp+0x8]
0xb300284f    50                     push eax
        ;; PushArgument:11(t0)
        ;; StaticCall:12(Uri.fromString t0, t0, t0)
0xb3002850    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3002855    e8ceda3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300285a    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:13(:alloc461 lvl:0)
0xb300285d    8b45f8                 mov eax,[ebp-0x8]
0xb3002860    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- InstanceCall:15(resolveUri, t0, t0)
0xb3002861    b9f90428b3             mov ecx,0xb32804f9  'ICData target:'resolveUri' num-checks: 0'
0xb3002866    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300286b    e8a8d9ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3002870    83c408                 add esp,0x8
0xb3002873    50                     push eax
        ;; Return:16(t0)
0xb3002874    58                     pop eax
0xb3002875    ba591d0bb3             mov edx,0xb30b1d59  'Function 'resolve':.'
0xb300287a    ff422b                 inc [edx+0x2b]
0xb300287d    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3002884    7c05                   jl 0xb300288b
0xb3002886    e82de0ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300288b    89ec                   mov esp,ebp
0xb300288d    5d                     pop ebp
0xb300288e    c3                     ret
0xb300288f    90                     nop
0xb3002890    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3002891    b970d30a08             mov ecx,0x80ad370
0xb3002896    ba00000000             mov edx,0
0xb300289b    e888d73702             call 0xb5380028  [stub: CallToRuntime]
0xb30028a0    eb95                   jmp 0xb3002837
0xb30028a2    e991db3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30028a7    e96cdc3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 57 : 0xb3002851 'ImmutableArray'
 74 : 0xb3002862 'ICData target:'resolveUri' num-checks: 0'
 79 : 0xb3002867 'ImmutableArray'
 94 : 0xb3002876 'Function 'resolve':.'
}
PC Descriptors for function 'dart:uri_Uri_resolve' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3002840	other        	-1		461	-1
0xb300285a	fn-call      	12		461	-1
0xb300285a	deopt-after  	12		461	-1
0xb3002861	deopt-before 	15		460	-1
0xb3002870	ic-call      	15		460	-1
0xb3002870	deopt-after  	15		460	-1
0xb300288b	other        	-1		0	-1
0xb3002890	return       	-1		457	-1
0xb30028a0	other        	-1		451	-1
0xb30028a2	patch        	-1		0	-1
0xb30028a7	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_Uri_resolve' {
}
Variable Descriptors for function 'dart:uri_Uri_resolve' {
  stack var 'this' offset 3 (valid 21-473)
  stack var 'uri' offset 2 (valid 453-473)
}
Exception Handlers for function 'dart:uri_Uri_resolve' {
No exception handlers
}
Static call target functions {
  0xb300285a: dart:uri_Uri_Uri.fromString, 0xb5400019
}
Compiling function: 'dart:uri_Uri_Uri.fromString' @ token 51
Before Optimizations
==== dart:uri_Uri_Uri.fromString
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(:phase lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#1)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(&, t0, t0)
    t1 <- Constant:8(#0)
    Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:12(this lvl:0)
    PushArgument:13(t0)
    t0 <- LoadLocal:14(:phase lvl:0)
    PushArgument:15(t0)
    t0 <- StaticCall:16(get:_splitRe@0x715366f )
    PushArgument:17(t0)
    t0 <- LoadLocal:18(uri lvl:0)
    PushArgument:19(t0)
    t0 <- InstanceCall:20(firstMatch, t0, t0)
    PushArgument:21(t0)
    StaticCall:22(Uri._fromMatch@0x715366f t0, t0, t0)
    goto:26 4
B3[target]
    goto:27 4
B4[join] pred(B2, B3)
    t0 <- Constant:28(#null)
    Return:29(t0)
--> 'dart:uri_Uri_Uri.fromString' entry: 0xb30028c8 time: 209 us
Code for function 'dart:uri_Uri_Uri.fromString' {
        ;; Enter frame
0xb30028c8    55                     push ebp
0xb30028c9    89e5                   mov ebp,esp
0xb30028cb    e800000000             call 0xb30028d0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30028d0    3b25bc195809           cmp esp,[0x95819bc]
0xb30028d6    0f8693000000           jna 0xb300296f
        ;; t0 <- LoadLocal:3(:phase lvl:0)
0xb30028dc    8b450c                 mov eax,[ebp+0xc]
0xb30028df    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#1)
0xb30028e0    b802000000             mov eax,0x2
0xb30028e5    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(&, t0, t0)
0xb30028e6    b9410728b3             mov ecx,0xb3280741  'ICData target:'&' num-checks: 0'
0xb30028eb    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30028f0    e8e3d9ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30028f5    83c408                 add esp,0x8
0xb30028f8    50                     push eax
        ;; t1 <- Constant:8(#0)
0xb30028f9    b800000000             mov eax,0
0xb30028fe    50                     push eax
        ;; Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
0xb30028ff    58                     pop eax
0xb3002900    59                     pop ecx
0xb3002901    51                     push ecx
0xb3002902    50                     push eax
0xb3002903    e800df3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3002908    58                     pop eax
0xb3002909    59                     pop ecx
0xb300290a    0f843c000000           jz 0xb300294c
        ;; B2
        ;; t0 <- LoadLocal:12(this lvl:0)
0xb3002910    8b4510                 mov eax,[ebp+0x10]
0xb3002913    50                     push eax
        ;; PushArgument:13(t0)
        ;; t0 <- LoadLocal:14(:phase lvl:0)
0xb3002914    8b450c                 mov eax,[ebp+0xc]
0xb3002917    50                     push eax
        ;; PushArgument:15(t0)
        ;; t0 <- StaticCall:16(get:_splitRe@0x715366f )
0xb3002918    bab9b50bb3             mov edx,0xb30bb5b9  Array[0, 0, null]
0xb300291d    e806da3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3002922    50                     push eax
        ;; PushArgument:17(t0)
        ;; t0 <- LoadLocal:18(uri lvl:0)
0xb3002923    8b4508                 mov eax,[ebp+0x8]
0xb3002926    50                     push eax
        ;; PushArgument:19(t0)
        ;; t0 <- InstanceCall:20(firstMatch, t0, t0)
0xb3002927    b9b10728b3             mov ecx,0xb32807b1  'ICData target:'firstMatch' num-checks: 0'
0xb300292c    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3002931    e8e2d8ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3002936    83c408                 add esp,0x8
0xb3002939    50                     push eax
        ;; PushArgument:21(t0)
        ;; StaticCall:22(Uri._fromMatch@0x715366f t0, t0, t0)
0xb300293a    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb300293f    e8e4d93702             call 0xb5380328  [stub: CallStaticFunction]
0xb3002944    83c40c                 add esp,0xc
        ;; goto:26 4
0xb3002947    e900000000             jmp 0xb300294c
        ;; B3
        ;; goto:27 4
        ;; B4
        ;; t0 <- Constant:28(#null)
0xb300294c    b8190040b5             mov eax,0xb5400019
0xb3002951    50                     push eax
        ;; Return:29(t0)
0xb3002952    58                     pop eax
0xb3002953    ba491a0bb3             mov edx,0xb30b1a49  'Function 'Uri.fromString': constructor.'
0xb3002958    ff422b                 inc [edx+0x2b]
0xb300295b    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3002962    7c05                   jl 0xb3002969
0xb3002964    e84fdfffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3002969    89ec                   mov esp,ebp
0xb300296b    5d                     pop ebp
0xb300296c    c3                     ret
0xb300296d    90                     nop
0xb300296e    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300296f    b970d30a08             mov ecx,0x80ad370
0xb3002974    ba00000000             mov edx,0
0xb3002979    e8aad63702             call 0xb5380028  [stub: CallToRuntime]
0xb300297e    e959ffffff             jmp 0xb30028dc
0xb3002983    e9b0da3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3002988    e98bdb3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 31 : 0xb30028e7 'ICData target:'&' num-checks: 0'
 36 : 0xb30028ec 'ImmutableArray'
 81 : 0xb3002919 'ImmutableArray'
 96 : 0xb3002928 'ICData target:'firstMatch' num-checks: 0'
 101 : 0xb300292d 'ImmutableArray'
 115 : 0xb300293b 'ImmutableArray'
 140 : 0xb3002954 'Function 'Uri.fromString': constructor.'
}
PC Descriptors for function 'dart:uri_Uri_Uri.fromString' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30028e6	deopt-before 	7		72	-1
0xb30028f5	ic-call      	7		72	-1
0xb30028f5	deopt-after  	7		72	-1
0xb3002922	fn-call      	16		64	-1
0xb3002922	deopt-after  	16		64	-1
0xb3002927	deopt-before 	20		67	-1
0xb3002936	ic-call      	20		67	-1
0xb3002936	deopt-after  	20		67	-1
0xb3002944	fn-call      	22		57	-1
0xb3002944	deopt-after  	22		57	-1
0xb3002947	deopt-before 	26		0	-1
0xb300294c	deopt-before 	27		0	-1
0xb3002969	other        	-1		0	-1
0xb300296e	return       	-1		73	-1
0xb300297e	other        	-1		51	-1
0xb3002983	patch        	-1		0	-1
0xb3002988	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_Uri_Uri.fromString' {
}
Variable Descriptors for function 'dart:uri_Uri_Uri.fromString' {
  stack var 'this' offset 4 (valid 21-73)
  stack var 'uri' offset 2 (valid 53-73)
}
Exception Handlers for function 'dart:uri_Uri_Uri.fromString' {
No exception handlers
}
Static call target functions {
  0xb3002922: dart:uri_Uri_get__splitRe@0x715366f, 0xb5400019
  0xb3002944: dart:uri_Uri_Uri._fromMatch@0x715366f, 0xb5400019
}
PatchStaticCall: patching from 0xb300285a to 'dart:uri_Uri_Uri.fromString' 0xb30028c8
Compiling function: 'dart:uri_Uri_get__splitRe@0x715366f' @ token 325
Before Optimizations
==== dart:uri_Uri_get__splitRe@0x715366f
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadStaticField:3(_splitRe@0x715366f)
    t1 <- Constant:4(#transition_sentinel)
    Branch if StrictCompare:6(===, t0, t1) goto (2, 3)
B2[target]
    t0 <- Constant:8(#null)
    StoreStaticField:9(_splitRe@0x715366f, t0)
    t0 <- Constant:10(#circular dependency in field initialization)
    PushArgument:11(t0)
    Throw:12()
B3[target]
    t0 <- LoadStaticField:15(_splitRe@0x715366f)
    t1 <- Constant:16(#sentinel)
    Branch if StrictCompare:18(===, t0, t1) goto (4, 5)
B4[target]
    t0 <- Constant:20(#transition_sentinel)
    StoreStaticField:21(_splitRe@0x715366f, t0)
    t0 <- Constant:22(#NULL AbstractTypeArguments)
    PushArgument:23(t0)
    t0 <- Constant:24(#^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([\w\d\-\u0100-\uffff.%]*)(?::([0-9]+))?)?([^?#]+)?(?:\?([^#]*))?(?:#(.*))?$)
    PushArgument:25(t0)
    t0 <- StaticCall:26(RegExp. t0, t0)
    StoreStaticField:27(_splitRe@0x715366f, t0)
    goto:31 6
B5[target]
    goto:32 6
B6[join] pred(B4, B5)
    t0 <- LoadStaticField:33(_splitRe@0x715366f)
    Return:34(t0)
--> 'dart:uri_Uri_get__splitRe@0x715366f' entry: 0xb30029a8 time: 235 us
Code for function 'dart:uri_Uri_get__splitRe@0x715366f' {
        ;; Enter frame
0xb30029a8    55                     push ebp
0xb30029a9    89e5                   mov ebp,esp
0xb30029ab    e800000000             call 0xb30029b0
0xb30029b0    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb30029b3    b8190040b5             mov eax,0xb5400019
0xb30029b8    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30029bb    3b25bc195809           cmp esp,[0x95819bc]
0xb30029c1    0f86d9000000           jna 0xb3002aa0
        ;; t0 <- LoadStaticField:3(_splitRe@0x715366f)
0xb30029c7    b889200bb3             mov eax,0xb30b2089  'Field <Uri._splitRe@0x715366f>: static final'
0xb30029cc    8b400f                 mov eax,[eax+0xf]
0xb30029cf    50                     push eax
        ;; t1 <- Constant:4(#transition_sentinel)
0xb30029d0    b8490140b5             mov eax,0xb5400149
0xb30029d5    50                     push eax
        ;; Branch if StrictCompare:6(===, t0, t1) goto (2, 3)
0xb30029d6    58                     pop eax
0xb30029d7    59                     pop ecx
0xb30029d8    51                     push ecx
0xb30029d9    50                     push eax
0xb30029da    e829de3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb30029df    58                     pop eax
0xb30029e0    59                     pop ecx
0xb30029e1    0f8525000000           jnz 0xb3002a0c
        ;; B2
        ;; t0 <- Constant:8(#null)
0xb30029e7    b8190040b5             mov eax,0xb5400019
0xb30029ec    50                     push eax
        ;; StoreStaticField:9(_splitRe@0x715366f, t0)
0xb30029ed    58                     pop eax
0xb30029ee    b989200bb3             mov ecx,0xb30b2089  'Field <Uri._splitRe@0x715366f>: static final'
0xb30029f3    89410f                 mov [ecx+0xf],eax
        ;; t0 <- Constant:10(#circular dependency in field initialization)
0xb30029f6    b8390b28b3             mov eax,0xb3280b39  'circular dependency in field initialization'
0xb30029fb    50                     push eax
        ;; PushArgument:11(t0)
        ;; Throw:12()
0xb30029fc    b9a0d70a08             mov ecx,0x80ad7a0
0xb3002a01    ba01000000             mov edx,0x1
0xb3002a06    e81dd63702             call 0xb5380028  [stub: CallToRuntime]
0xb3002a0b    cc                     int3
        ;; B3
        ;; t0 <- LoadStaticField:15(_splitRe@0x715366f)
0xb3002a0c    b889200bb3             mov eax,0xb30b2089  'Field <Uri._splitRe@0x715366f>: static final'
0xb3002a11    8b400f                 mov eax,[eax+0xf]
0xb3002a14    50                     push eax
        ;; t1 <- Constant:16(#sentinel)
0xb3002a15    b8410140b5             mov eax,0xb5400141
0xb3002a1a    50                     push eax
        ;; Branch if StrictCompare:18(===, t0, t1) goto (4, 5)
0xb3002a1b    58                     pop eax
0xb3002a1c    59                     pop ecx
0xb3002a1d    51                     push ecx
0xb3002a1e    50                     push eax
0xb3002a1f    e8e4dd3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3002a24    58                     pop eax
0xb3002a25    59                     pop ecx
0xb3002a26    0f854e000000           jnz 0xb3002a7a
        ;; B4
        ;; t0 <- Constant:20(#transition_sentinel)
0xb3002a2c    b8490140b5             mov eax,0xb5400149
0xb3002a31    50                     push eax
        ;; StoreStaticField:21(_splitRe@0x715366f, t0)
0xb3002a32    58                     pop eax
0xb3002a33    b989200bb3             mov ecx,0xb30b2089  'Field <Uri._splitRe@0x715366f>: static final'
0xb3002a38    89410f                 mov [ecx+0xf],eax
        ;; t0 <- Constant:22(#NULL AbstractTypeArguments)
0xb3002a3b    b8190040b5             mov eax,0xb5400019
0xb3002a40    50                     push eax
        ;; PushArgument:23(t0)
        ;; t0 <- Constant:24(#^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([\w\d\-\u0100-\uffff.%]*)(?::([0-9]+))?)?([^?#]+)?(?:\?([^#]*))?(?:#(.*))?$)
0xb3002a41    b8a10a28b3             mov eax,0xb3280aa1  '^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([\w\d\-\u0100-\uffff.%]*)(?::([0-9]+))?)?([^?#]+)?(?:\?([^#]*))?(?:#(.*))?$'
0xb3002a46    50                     push eax
        ;; PushArgument:25(t0)
        ;; t0 <- StaticCall:26(RegExp. t0, t0)
0xb3002a47    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3002a4c    e8d7d83702             call 0xb5380328  [stub: CallStaticFunction]
0xb3002a51    83c408                 add esp,0x8
0xb3002a54    50                     push eax
        ;; StoreStaticField:27(_splitRe@0x715366f, t0)
0xb3002a55    58                     pop eax
0xb3002a56    b989200bb3             mov ecx,0xb30b2089  'Field <Uri._splitRe@0x715366f>: static final'
0xb3002a5b    89410f                 mov [ecx+0xf],eax
0xb3002a5e    83e005                 and eax,0x5
0xb3002a61    d1e8                   shr eax, 1
0xb3002a63    13c1                   adc eax,ecx
0xb3002a65    83e007                 and eax,0x7
0xb3002a68    83f804                 cmp eax,0x4
0xb3002a6b    7508                   jnz 0xb3002a75
0xb3002a6d    8d410f                 lea eax,[ecx+0xf]
0xb3002a70    e8f3d6ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; goto:31 6
0xb3002a75    e900000000             jmp 0xb3002a7a
        ;; B5
        ;; goto:32 6
        ;; B6
        ;; t0 <- LoadStaticField:33(_splitRe@0x715366f)
0xb3002a7a    b889200bb3             mov eax,0xb30b2089  'Field <Uri._splitRe@0x715366f>: static final'
0xb3002a7f    8b400f                 mov eax,[eax+0xf]
0xb3002a82    50                     push eax
        ;; Return:34(t0)
0xb3002a83    58                     pop eax
0xb3002a84    bac91c0bb3             mov edx,0xb30b1cc9  'Function 'get:_splitRe@0x715366f': static const-getter.'
0xb3002a89    ff422b                 inc [edx+0x2b]
0xb3002a8c    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3002a93    7c05                   jl 0xb3002a9a
0xb3002a95    e81edeffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3002a9a    89ec                   mov esp,ebp
0xb3002a9c    5d                     pop ebp
0xb3002a9d    c3                     ret
0xb3002a9e    90                     nop
0xb3002a9f    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3002aa0    b970d30a08             mov ecx,0x80ad370
0xb3002aa5    ba00000000             mov edx,0
0xb3002aaa    e879d53702             call 0xb5380028  [stub: CallToRuntime]
0xb3002aaf    e913ffffff             jmp 0xb30029c7
0xb3002ab4    e97fd93702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3002ab9    e95ada3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 32 : 0xb30029c8 'Field <Uri._splitRe@0x715366f>: static final'
 41 : 0xb30029d1 'transition_sentinel'
 71 : 0xb30029ef 'Field <Uri._splitRe@0x715366f>: static final'
 79 : 0xb30029f7 'circular dependency in field initialization'
 101 : 0xb3002a0d 'Field <Uri._splitRe@0x715366f>: static final'
 110 : 0xb3002a16 'sentinel'
 133 : 0xb3002a2d 'transition_sentinel'
 140 : 0xb3002a34 'Field <Uri._splitRe@0x715366f>: static final'
 154 : 0xb3002a42 '^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([\w\d\-\u0100-\uffff.%]*)(?::([0-9]+))?)?([^?#]+)?(?:\?([^#]*))?(?:#(.*))?$'
 160 : 0xb3002a48 'ImmutableArray'
 175 : 0xb3002a57 'Field <Uri._splitRe@0x715366f>: static final'
 211 : 0xb3002a7b 'Field <Uri._splitRe@0x715366f>: static final'
 221 : 0xb3002a85 'Function 'get:_splitRe@0x715366f': static const-getter.'
}
PC Descriptors for function 'dart:uri_Uri_get__splitRe@0x715366f' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3002a0b	other        	-1		359	-1
0xb3002a51	fn-call      	26		328	-1
0xb3002a51	deopt-after  	26		328	-1
0xb3002a75	deopt-before 	31		0	-1
0xb3002a7a	deopt-before 	32		0	-1
0xb3002a9a	other        	-1		0	-1
0xb3002a9f	return       	-1		359	-1
0xb3002aaf	other        	-1		325	-1
0xb3002ab4	patch        	-1		0	-1
0xb3002ab9	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_Uri_get__splitRe@0x715366f' {
}
Variable Descriptors for function 'dart:uri_Uri_get__splitRe@0x715366f' {
}
Exception Handlers for function 'dart:uri_Uri_get__splitRe@0x715366f' {
No exception handlers
}
Static call target functions {
  0xb3002a51: dart:core_RegExp_RegExp., 0xb5400019
}
PatchStaticCall: patching from 0xb3002922 to 'dart:uri_Uri_get__splitRe@0x715366f' 0xb30029a8
Compiling function: 'dart:core_RegExp_RegExp.' @ token 11484
Before Optimizations
==== dart:core_RegExp_RegExp.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#NULL AbstractTypeArguments)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(pattern lvl:0)
    PushArgument:6(t0)
    t0 <- LoadLocal:7(multiLine lvl:0)
    PushArgument:8(t0)
    t0 <- LoadLocal:9(ignoreCase lvl:0)
    PushArgument:10(t0)
    t0 <- StaticCall:11(_JSSyntaxRegExp@0x36924d72. t0, t0, t0, t0)
    Return:12(t0)
--> 'dart:core_RegExp_RegExp.' entry: 0xb3002ad8 time: 124 us
Code for function 'dart:core_RegExp_RegExp.' {
        ;; Enter frame
0xb3002ad8    55                     push ebp
0xb3002ad9    89e5                   mov ebp,esp
0xb3002adb    e800000000             call 0xb3002ae0
0xb3002ae0    83ec14                 sub esp,0x14
        ;; Copy parameters
0xb3002ae3    8b4a0f                 mov ecx,[edx+0xf]
0xb3002ae6    83f904                 cmp ecx,0x4
0xb3002ae9    0f8c79000000           jl 0xb3002b68
0xb3002aef    83f904                 cmp ecx,0x4
0xb3002af2    0f8f70000000           jg 0xb3002b68
0xb3002af8    8b5a0b                 mov ebx,[edx+0xb]
0xb3002afb    2bd9                   sub ebx,ecx
0xb3002afd    8d5c5d08               lea ebx,[ebp+ebx*0x2+0x8]
0xb3002b01    8d7dfc                 lea edi,[ebp-0x4]
0xb3002b04    2bf9                   sub edi,ecx
0xb3002b06    2bf9                   sub edi,ecx
0xb3002b08    d1f9                   sar ecx, 1
0xb3002b0a    eb06                   jmp 0xb3002b12
0xb3002b0c    8b048b                 mov eax,[ebx+ecx*0x4]
0xb3002b0f    89048f                 mov [edi+ecx*0x4],eax
0xb3002b12    49                     dec ecx
0xb3002b13    79f7                   jns 0xb3002b0c
0xb3002b15    8b5a0b                 mov ebx,[edx+0xb]
0xb3002b18    8b4a0f                 mov ecx,[edx+0xf]
0xb3002b1b    d1f9                   sar ecx, 1
0xb3002b1d    8d5c5d04               lea ebx,[ebp+ebx*0x2+0x4]
0xb3002b21    8d7a13                 lea edi,[edx+0x13]
0xb3002b24    8b07                   mov eax,[edi]
0xb3002b26    3d015e30b3             cmp eax, 0xb3305e01  'ignoreCase'
0xb3002b2b    750d                   jnz 0xb3002b3a
0xb3002b2d    8b4704                 mov eax,[edi+0x4]
0xb3002b30    83c708                 add edi,0x8
0xb3002b33    f7d8                   neg eax
0xb3002b35    8b0443                 mov eax,[ebx+eax*0x2]
0xb3002b38    eb05                   jmp 0xb3002b3f
0xb3002b3a    b8411030b3             mov eax,0xb3301041  'false'
0xb3002b3f    8945ec                 mov [ebp-0x14],eax
0xb3002b42    8b07                   mov eax,[edi]
0xb3002b44    3de95d30b3             cmp eax, 0xb3305de9  'multiLine'
0xb3002b49    750d                   jnz 0xb3002b58
0xb3002b4b    8b4704                 mov eax,[edi+0x4]
0xb3002b4e    83c708                 add edi,0x8
0xb3002b51    f7d8                   neg eax
0xb3002b53    8b0443                 mov eax,[ebx+eax*0x2]
0xb3002b56    eb05                   jmp 0xb3002b5d
0xb3002b58    b8411030b3             mov eax,0xb3301041  'false'
0xb3002b5d    8945f0                 mov [ebp-0x10],eax
0xb3002b60    813f190040b5           cmp [edi],0xb5400019
0xb3002b66    7411                   jz 0xb3002b79
0xb3002b68    83c414                 add esp,0x14
0xb3002b6b    b9b90d28b3             mov ecx,0xb3280db9  'ICData target:'RegExp.' num-checks: 0'
0xb3002b70    e8d3d63702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb3002b75    89ec                   mov esp,ebp
0xb3002b77    5d                     pop ebp
0xb3002b78    c3                     ret
0xb3002b79    8b4a0b                 mov ecx,[edx+0xb]
0xb3002b7c    d1f9                   sar ecx, 1
0xb3002b7e    eb08                   jmp 0xb3002b88
0xb3002b80    c7448d08190040b5       mov [ebp+ecx*0x4+0x8],0xb5400019
0xb3002b88    49                     dec ecx
0xb3002b89    79f5                   jns 0xb3002b80
        ;; Initialize spill slots
0xb3002b8b    b8190040b5             mov eax,0xb5400019
0xb3002b90    8945e8                 mov [ebp-0x18],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3002b93    3b25bc195809           cmp esp,[0x95819bc]
0xb3002b99    0f863d000000           jna 0xb3002bdc
        ;; t0 <- Constant:3(#NULL AbstractTypeArguments)
0xb3002b9f    b8190040b5             mov eax,0xb5400019
0xb3002ba4    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(pattern lvl:0)
0xb3002ba5    8b45f4                 mov eax,[ebp-0xc]
0xb3002ba8    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- LoadLocal:7(multiLine lvl:0)
0xb3002ba9    8b45f0                 mov eax,[ebp-0x10]
0xb3002bac    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- LoadLocal:9(ignoreCase lvl:0)
0xb3002bad    8b45ec                 mov eax,[ebp-0x14]
0xb3002bb0    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- StaticCall:11(_JSSyntaxRegExp@0x36924d72. t0, t0, t0, t0)
0xb3002bb1    baf10d28b3             mov edx,0xb3280df1  Array[4, 2, ignoreCase, 3, multiLine, ...]
0xb3002bb6    e86dd73702             call 0xb5380328  [stub: CallStaticFunction]
0xb3002bbb    83c410                 add esp,0x10
0xb3002bbe    50                     push eax
        ;; Return:12(t0)
0xb3002bbf    58                     pop eax
0xb3002bc0    ba918d12b3             mov edx,0xb3128d91  'Function 'RegExp.': static factory.'
0xb3002bc5    ff422b                 inc [edx+0x2b]
0xb3002bc8    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3002bcf    7c05                   jl 0xb3002bd6
0xb3002bd1    e8e2dcffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3002bd6    89ec                   mov esp,ebp
0xb3002bd8    5d                     pop ebp
0xb3002bd9    c3                     ret
0xb3002bda    90                     nop
0xb3002bdb    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3002bdc    b970d30a08             mov ecx,0x80ad370
0xb3002be1    ba00000000             mov edx,0
0xb3002be6    e83dd43702             call 0xb5380028  [stub: CallToRuntime]
0xb3002beb    ebb2                   jmp 0xb3002b9f
0xb3002bed    e946d83702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3002bf2    e921d93702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 79 : 0xb3002b27 'ignoreCase'
 99 : 0xb3002b3b 'false'
 109 : 0xb3002b45 'multiLine'
 129 : 0xb3002b59 'false'
 148 : 0xb3002b6c 'ICData target:'RegExp.' num-checks: 0'
 218 : 0xb3002bb2 'ImmutableArray'
 233 : 0xb3002bc1 'Function 'RegExp.': static factory.'
}
PC Descriptors for function 'dart:core_RegExp_RegExp.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3002bbb	fn-call      	11		11506	-1
0xb3002bbb	deopt-after  	11		11506	-1
0xb3002bd6	other        	-1		0	-1
0xb3002bdb	return       	-1		11505	-1
0xb3002beb	other        	-1		11484	-1
0xb3002bed	patch        	-1		0	-1
0xb3002bf2	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_RegExp_RegExp.' {
}
Variable Descriptors for function 'dart:core_RegExp_RegExp.' {
  stack var 'pattern' offset -3 (valid 11487-11527)
  stack var 'multiLine' offset -4 (valid 11492-11527)
  stack var 'ignoreCase' offset -5 (valid 11498-11527)
}
Exception Handlers for function 'dart:core_RegExp_RegExp.' {
No exception handlers
}
Static call target functions {
  0xb3002bbb: dart:core__JSSyntaxRegExp@0x36924d72__JSSyntaxRegExp@0x36924d72., 0xb5400019
}
PatchStaticCall: patching from 0xb3002a51 to 'dart:core_RegExp_RegExp.' 0xb3002ad8
Compiling function: 'dart:core__JSSyntaxRegExp@0x36924d72__JSSyntaxRegExp@0x36924d72.' @ token 11898
Before Optimizations
==== dart:core__JSSyntaxRegExp@0x36924d72__JSSyntaxRegExp@0x36924d72.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(JSSyntaxRegExp_factory)
    Return:4(t0)
--> 'dart:core__JSSyntaxRegExp@0x36924d72__JSSyntaxRegExp@0x36924d72.' entry: 0xb3002c08 time: 190 us
Code for function 'dart:core__JSSyntaxRegExp@0x36924d72__JSSyntaxRegExp@0x36924d72.' {
        ;; Enter frame
0xb3002c08    55                     push ebp
0xb3002c09    89e5                   mov ebp,esp
0xb3002c0b    e800000000             call 0xb3002c10
0xb3002c10    83ec10                 sub esp,0x10
        ;; Copy parameters
0xb3002c13    8b4a0f                 mov ecx,[edx+0xf]
0xb3002c16    83f904                 cmp ecx,0x4
0xb3002c19    0f8c79000000           jl 0xb3002c98
0xb3002c1f    83f904                 cmp ecx,0x4
0xb3002c22    0f8f70000000           jg 0xb3002c98
0xb3002c28    8b5a0b                 mov ebx,[edx+0xb]
0xb3002c2b    2bd9                   sub ebx,ecx
0xb3002c2d    8d5c5d08               lea ebx,[ebp+ebx*0x2+0x8]
0xb3002c31    8d7dfc                 lea edi,[ebp-0x4]
0xb3002c34    2bf9                   sub edi,ecx
0xb3002c36    2bf9                   sub edi,ecx
0xb3002c38    d1f9                   sar ecx, 1
0xb3002c3a    eb06                   jmp 0xb3002c42
0xb3002c3c    8b048b                 mov eax,[ebx+ecx*0x4]
0xb3002c3f    89048f                 mov [edi+ecx*0x4],eax
0xb3002c42    49                     dec ecx
0xb3002c43    79f7                   jns 0xb3002c3c
0xb3002c45    8b5a0b                 mov ebx,[edx+0xb]
0xb3002c48    8b4a0f                 mov ecx,[edx+0xf]
0xb3002c4b    d1f9                   sar ecx, 1
0xb3002c4d    8d5c5d04               lea ebx,[ebp+ebx*0x2+0x4]
0xb3002c51    8d7a13                 lea edi,[edx+0x13]
0xb3002c54    8b07                   mov eax,[edi]
0xb3002c56    3d015e30b3             cmp eax, 0xb3305e01  'ignoreCase'
0xb3002c5b    750d                   jnz 0xb3002c6a
0xb3002c5d    8b4704                 mov eax,[edi+0x4]
0xb3002c60    83c708                 add edi,0x8
0xb3002c63    f7d8                   neg eax
0xb3002c65    8b0443                 mov eax,[ebx+eax*0x2]
0xb3002c68    eb05                   jmp 0xb3002c6f
0xb3002c6a    b8411030b3             mov eax,0xb3301041  'false'
0xb3002c6f    8945ec                 mov [ebp-0x14],eax
0xb3002c72    8b07                   mov eax,[edi]
0xb3002c74    3de95d30b3             cmp eax, 0xb3305de9  'multiLine'
0xb3002c79    750d                   jnz 0xb3002c88
0xb3002c7b    8b4704                 mov eax,[edi+0x4]
0xb3002c7e    83c708                 add edi,0x8
0xb3002c81    f7d8                   neg eax
0xb3002c83    8b0443                 mov eax,[ebx+eax*0x2]
0xb3002c86    eb05                   jmp 0xb3002c8d
0xb3002c88    b8411030b3             mov eax,0xb3301041  'false'
0xb3002c8d    8945f0                 mov [ebp-0x10],eax
0xb3002c90    813f190040b5           cmp [edi],0xb5400019
0xb3002c96    7411                   jz 0xb3002ca9
0xb3002c98    83c410                 add esp,0x10
0xb3002c9b    b9f10f28b3             mov ecx,0xb3280ff1  'ICData target:'_JSSyntaxRegExp@0x36924d72.' num-checks: 0'
0xb3002ca0    e8a3d53702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb3002ca5    89ec                   mov esp,ebp
0xb3002ca7    5d                     pop ebp
0xb3002ca8    c3                     ret
0xb3002ca9    8b4a0b                 mov ecx,[edx+0xb]
0xb3002cac    d1f9                   sar ecx, 1
0xb3002cae    eb08                   jmp 0xb3002cb8
0xb3002cb0    c7448d08190040b5       mov [ebp+ecx*0x4+0x8],0xb5400019
0xb3002cb8    49                     dec ecx
0xb3002cb9    79f5                   jns 0xb3002cb0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3002cbb    3b25bc195809           cmp esp,[0x95819bc]
0xb3002cc1    0f8628000000           jna 0xb3002cef
        ;; t0 <- NativeCall:3(JSSyntaxRegExp_factory)
0xb3002cc7    68190040b5             push 0xb5400019
0xb3002ccc    8d45f8                 lea eax,[ebp-0x8]
0xb3002ccf    b920cf4508             mov ecx,0x845cf20
0xb3002cd4    ba04000000             mov edx,0x4
0xb3002cd9    e84ad43702             call 0xb5380128  [stub: CallNativeCFunction]
0xb3002cde    58                     pop eax
0xb3002cdf    50                     push eax
        ;; Return:4(t0)
0xb3002ce0    58                     pop eax
0xb3002ce1    bae98e1bb3             mov edx,0xb31b8ee9  'Function '_JSSyntaxRegExp@0x36924d72.': static factory.'
0xb3002ce6    ff422b                 inc [edx+0x2b]
0xb3002ce9    89ec                   mov esp,ebp
0xb3002ceb    5d                     pop ebp
0xb3002cec    c3                     ret
0xb3002ced    90                     nop
0xb3002cee    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3002cef    b970d30a08             mov ecx,0x80ad370
0xb3002cf4    ba00000000             mov edx,0
0xb3002cf9    e82ad33702             call 0xb5380028  [stub: CallToRuntime]
0xb3002cfe    ebc7                   jmp 0xb3002cc7
0xb3002d00    e933d73702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3002d05    e90ed83702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 79 : 0xb3002c57 'ignoreCase'
 99 : 0xb3002c6b 'false'
 109 : 0xb3002c75 'multiLine'
 129 : 0xb3002c89 'false'
 148 : 0xb3002c9c 'ICData target:'_JSSyntaxRegExp@0x36924d72.' num-checks: 0'
 218 : 0xb3002ce2 'Function '_JSSyntaxRegExp@0x36924d72.': static factory.'
}
PC Descriptors for function 'dart:core__JSSyntaxRegExp@0x36924d72__JSSyntaxRegExp@0x36924d72.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3002cde	other        	-1		11923	-1
0xb3002cee	return       	-1		11923	-1
0xb3002cfe	other        	-1		11898	-1
0xb3002d00	patch        	-1		0	-1
0xb3002d05	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__JSSyntaxRegExp@0x36924d72__JSSyntaxRegExp@0x36924d72.' {
}
Variable Descriptors for function 'dart:core__JSSyntaxRegExp@0x36924d72__JSSyntaxRegExp@0x36924d72.' {
  stack var 'pattern' offset -3 (valid 11901-11923)
  stack var 'multiLine' offset -4 (valid 11906-11923)
  stack var 'ignoreCase' offset -5 (valid 11912-11923)
}
Exception Handlers for function 'dart:core__JSSyntaxRegExp@0x36924d72__JSSyntaxRegExp@0x36924d72.' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb3002bbb to 'dart:core__JSSyntaxRegExp@0x36924d72__JSSyntaxRegExp@0x36924d72.' 0xb3002c08
Compiling function: 'dart:core__JSSyntaxRegExp@0x36924d72_firstMatch' @ token 11927
Before Optimizations
==== dart:core__JSSyntaxRegExp@0x36924d72_firstMatch
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(str lvl:0)
    PushArgument:6(t0)
    t0 <- Constant:7(#0)
    PushArgument:8(t0)
    t0 <- InstanceCall:9(_ExecuteMatch@0x36924d72, t0, t0, t0)
    StoreLocal:10(match, t0, lvl: 0)
    t0 <- LoadLocal:11(match lvl:0)
    t1 <- Constant:12(#null)
    Branch if StrictCompare:14(===, t0, t1) goto (2, 3)
B2[target]
    t0 <- Constant:16(#null)
    Return:17(t0)
B3[target]
    t0 <- AllocateObject:20(Library:'dart:core' Class: _JSRegExpMatch@0x36924d72)
    t0 <- StoreLocal:21(:alloc11962, t0, lvl: 0)
    PushArgument:22(t0)
    t0 <- Constant:23(#3)
    PushArgument:24(t0)
    t0 <- LoadLocal:25(this lvl:0)
    PushArgument:26(t0)
    t0 <- LoadLocal:27(str lvl:0)
    PushArgument:28(t0)
    t0 <- LoadLocal:29(match lvl:0)
    PushArgument:30(t0)
    StaticCall:31(_JSRegExpMatch@0x36924d72. t0, t0, t0, t0, t0)
    t0 <- LoadLocal:32(:alloc11962 lvl:0)
    Return:33(t0)
Code for allocation stub 'Library:'dart:core' Class: _JSRegExpMatch@0x36924d72': {
0xb3002d28    8b0508fe5609           mov eax,[0x956fe08]
0xb3002d2e    8d5818                 lea ebx,[eax+0x18]
0xb3002d31    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb3002d37    7338                   jnc 0xb3002d71
0xb3002d39    891d08fe5609           mov [0x956fe08],ebx
0xb3002d3f    bad1051ab3             mov edx,0xb31a05d1  'Library:'dart:core' Class: _JSRegExpMatch@0x36924d72'
0xb3002d44    c7000003c500           mov [eax],0xc50300
0xb3002d4a    c74004190040b5         mov [eax+0x4],0xb5400019
0xb3002d51    c74008190040b5         mov [eax+0x8],0xb5400019
0xb3002d58    c7400c190040b5         mov [eax+0xc],0xb5400019
0xb3002d5f    c74010190040b5         mov [eax+0x10],0xb5400019
0xb3002d66    c74014190040b5         mov [eax+0x14],0xb5400019
0xb3002d6d    83c001                 add eax,0x1
0xb3002d70    c3                     ret
0xb3002d71    55                     push ebp
0xb3002d72    89e5                   mov ebp,esp
0xb3002d74    6800000000             push 0
0xb3002d79    68190040b5             push 0xb5400019
0xb3002d7e    68d1051ab3             push 0xb31a05d1
0xb3002d83    68190040b5             push 0xb5400019
0xb3002d88    6800000000             push 0
0xb3002d8d    b9d0080b08             mov ecx,0x80b08d0
0xb3002d92    ba03000000             mov edx,0x3
0xb3002d97    e88cd23702             call 0xb5380028  [stub: CallToRuntime]
0xb3002d9c    58                     pop eax
0xb3002d9d    58                     pop eax
0xb3002d9e    58                     pop eax
0xb3002d9f    58                     pop eax
0xb3002da0    89ec                   mov esp,ebp
0xb3002da2    5d                     pop ebp
0xb3002da3    c3                     ret
}
--> 'dart:core__JSSyntaxRegExp@0x36924d72_firstMatch' entry: 0xb3002db8 time: 1055 us
Code for function 'dart:core__JSSyntaxRegExp@0x36924d72_firstMatch' {
        ;; Enter frame
0xb3002db8    55                     push ebp
0xb3002db9    89e5                   mov ebp,esp
0xb3002dbb    e800000000             call 0xb3002dc0
0xb3002dc0    83ec08                 sub esp,0x8
        ;; Initialize spill slots
0xb3002dc3    b8190040b5             mov eax,0xb5400019
0xb3002dc8    8945f8                 mov [ebp-0x8],eax
0xb3002dcb    8945f4                 mov [ebp-0xc],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3002dce    3b25bc195809           cmp esp,[0x95819bc]
0xb3002dd4    0f86ad000000           jna 0xb3002e87
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb3002dda    8b450c                 mov eax,[ebp+0xc]
0xb3002ddd    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(str lvl:0)
0xb3002dde    8b4508                 mov eax,[ebp+0x8]
0xb3002de1    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- Constant:7(#0)
0xb3002de2    b800000000             mov eax,0
0xb3002de7    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- InstanceCall:9(_ExecuteMatch@0x36924d72, t0, t0, t0)
0xb3002de8    b9d91128b3             mov ecx,0xb32811d9  'ICData target:'_ExecuteMatch@0x36924d72' num-checks: 0'
0xb3002ded    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3002df2    e821d4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3002df7    83c40c                 add esp,0xc
0xb3002dfa    50                     push eax
        ;; StoreLocal:10(match, t0, lvl: 0)
0xb3002dfb    58                     pop eax
0xb3002dfc    8945f8                 mov [ebp-0x8],eax
        ;; t0 <- LoadLocal:11(match lvl:0)
0xb3002dff    8b45f8                 mov eax,[ebp-0x8]
0xb3002e02    50                     push eax
        ;; t1 <- Constant:12(#null)
0xb3002e03    b8190040b5             mov eax,0xb5400019
0xb3002e08    50                     push eax
        ;; Branch if StrictCompare:14(===, t0, t1) goto (2, 3)
0xb3002e09    58                     pop eax
0xb3002e0a    59                     pop ecx
0xb3002e0b    51                     push ecx
0xb3002e0c    50                     push eax
0xb3002e0d    e8f6d93702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3002e12    58                     pop eax
0xb3002e13    59                     pop ecx
0xb3002e14    0f8522000000           jnz 0xb3002e3c
        ;; B2
        ;; t0 <- Constant:16(#null)
0xb3002e1a    b8190040b5             mov eax,0xb5400019
0xb3002e1f    50                     push eax
        ;; Return:17(t0)
0xb3002e20    58                     pop eax
0xb3002e21    ba798f1bb3             mov edx,0xb31b8f79  'Function 'firstMatch':.'
0xb3002e26    ff422b                 inc [edx+0x2b]
0xb3002e29    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3002e30    7c05                   jl 0xb3002e37
0xb3002e32    e881daffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3002e37    89ec                   mov esp,ebp
0xb3002e39    5d                     pop ebp
0xb3002e3a    c3                     ret
0xb3002e3b    90                     nop
        ;; B3
        ;; t0 <- AllocateObject:20(Library:'dart:core' Class: _JSRegExpMatch@0x36924d72)
0xb3002e3c    e8e7feffff             call 0xb3002d28 [ stub ]
0xb3002e41    50                     push eax
        ;; t0 <- StoreLocal:21(:alloc11962, t0, lvl: 0)
0xb3002e42    58                     pop eax
0xb3002e43    8945f4                 mov [ebp-0xc],eax
0xb3002e46    50                     push eax
        ;; PushArgument:22(t0)
        ;; t0 <- Constant:23(#3)
0xb3002e47    b806000000             mov eax,0x6
0xb3002e4c    50                     push eax
        ;; PushArgument:24(t0)
        ;; t0 <- LoadLocal:25(this lvl:0)
0xb3002e4d    8b450c                 mov eax,[ebp+0xc]
0xb3002e50    50                     push eax
        ;; PushArgument:26(t0)
        ;; t0 <- LoadLocal:27(str lvl:0)
0xb3002e51    8b4508                 mov eax,[ebp+0x8]
0xb3002e54    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- LoadLocal:29(match lvl:0)
0xb3002e55    8b45f8                 mov eax,[ebp-0x8]
0xb3002e58    50                     push eax
        ;; PushArgument:30(t0)
        ;; StaticCall:31(_JSRegExpMatch@0x36924d72. t0, t0, t0, t0, t0)
0xb3002e59    ba691228b3             mov edx,0xb3281269  Array[5, 5, null]
0xb3002e5e    e8c5d43702             call 0xb5380328  [stub: CallStaticFunction]
0xb3002e63    83c414                 add esp,0x14
        ;; t0 <- LoadLocal:32(:alloc11962 lvl:0)
0xb3002e66    8b45f4                 mov eax,[ebp-0xc]
0xb3002e69    50                     push eax
        ;; Return:33(t0)
0xb3002e6a    58                     pop eax
0xb3002e6b    ba798f1bb3             mov edx,0xb31b8f79  'Function 'firstMatch':.'
0xb3002e70    ff422b                 inc [edx+0x2b]
0xb3002e73    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3002e7a    7c05                   jl 0xb3002e81
0xb3002e7c    e837daffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3002e81    89ec                   mov esp,ebp
0xb3002e83    5d                     pop ebp
0xb3002e84    c3                     ret
0xb3002e85    90                     nop
0xb3002e86    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3002e87    b970d30a08             mov ecx,0x80ad370
0xb3002e8c    ba00000000             mov edx,0
0xb3002e91    e892d13702             call 0xb5380028  [stub: CallToRuntime]
0xb3002e96    e93fffffff             jmp 0xb3002dda
0xb3002e9b    e998d53702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3002ea0    e973d63702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 49 : 0xb3002de9 'ICData target:'_ExecuteMatch@0x36924d72' num-checks: 0'
 54 : 0xb3002dee 'ImmutableArray'
 106 : 0xb3002e22 'Function 'firstMatch':.'
 162 : 0xb3002e5a 'ImmutableArray'
 180 : 0xb3002e6c 'Function 'firstMatch':.'
}
PC Descriptors for function 'dart:core__JSSyntaxRegExp@0x36924d72_firstMatch' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3002de8	deopt-before 	9		11941	-1
0xb3002df7	ic-call      	9		11941	-1
0xb3002df7	deopt-after  	9		11941	-1
0xb3002e37	other        	-1		0	-1
0xb3002e3c	return       	-1		11957	-1
0xb3002e41	other        	-1		11962	-1
0xb3002e63	fn-call      	31		11962	-1
0xb3002e63	deopt-after  	31		11962	-1
0xb3002e81	other        	-1		0	-1
0xb3002e86	return       	-1		11961	-1
0xb3002e96	other        	-1		11927	-1
0xb3002e9b	patch        	-1		0	-1
0xb3002ea0	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__JSSyntaxRegExp@0x36924d72_firstMatch' {
}
Variable Descriptors for function 'dart:core__JSSyntaxRegExp@0x36924d72_firstMatch' {
  stack var 'this' offset 3 (valid 11896-11976)
  stack var 'str' offset 2 (valid 11930-11976)
  stack var 'match' offset -2 (valid 11936-11976)
}
Exception Handlers for function 'dart:core__JSSyntaxRegExp@0x36924d72_firstMatch' {
No exception handlers
}
Static call target functions {
  0xb3002e63: dart:core__JSRegExpMatch@0x36924d72__JSRegExpMatch@0x36924d72., 0xb5400019
}
Compiling function: 'dart:core__JSSyntaxRegExp@0x36924d72__ExecuteMatch@0x36924d72' @ token 12293
Before Optimizations
==== dart:core__JSSyntaxRegExp@0x36924d72__ExecuteMatch@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(JSSyntaxRegExp_ExecuteMatch)
    Return:4(t0)
--> 'dart:core__JSSyntaxRegExp@0x36924d72__ExecuteMatch@0x36924d72' entry: 0xb3002eb8 time: 179 us
Code for function 'dart:core__JSSyntaxRegExp@0x36924d72__ExecuteMatch@0x36924d72' {
        ;; Enter frame
0xb3002eb8    55                     push ebp
0xb3002eb9    89e5                   mov ebp,esp
0xb3002ebb    e800000000             call 0xb3002ec0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3002ec0    3b25bc195809           cmp esp,[0x95819bc]
0xb3002ec6    0f8628000000           jna 0xb3002ef4
        ;; t0 <- NativeCall:3(JSSyntaxRegExp_ExecuteMatch)
0xb3002ecc    68190040b5             push 0xb5400019
0xb3002ed1    8d4510                 lea eax,[ebp+0x10]
0xb3002ed4    b960e54508             mov ecx,0x845e560
0xb3002ed9    ba03000001             mov edx,0x1000003
0xb3002ede    e845d23702             call 0xb5380128  [stub: CallNativeCFunction]
0xb3002ee3    58                     pop eax
0xb3002ee4    50                     push eax
        ;; Return:4(t0)
0xb3002ee5    58                     pop eax
0xb3002ee6    ba79921bb3             mov edx,0xb31b9279  'Function '_ExecuteMatch@0x36924d72':.'
0xb3002eeb    ff422b                 inc [edx+0x2b]
0xb3002eee    89ec                   mov esp,ebp
0xb3002ef0    5d                     pop ebp
0xb3002ef1    c3                     ret
0xb3002ef2    90                     nop
0xb3002ef3    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3002ef4    b970d30a08             mov ecx,0x80ad370
0xb3002ef9    ba00000000             mov edx,0
0xb3002efe    e825d13702             call 0xb5380028  [stub: CallToRuntime]
0xb3002f03    ebc7                   jmp 0xb3002ecc
0xb3002f05    e92ed53702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3002f0a    e909d63702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 47 : 0xb3002ee7 'Function '_ExecuteMatch@0x36924d72':.'
}
PC Descriptors for function 'dart:core__JSSyntaxRegExp@0x36924d72__ExecuteMatch@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3002ee3	other        	-1		12308	-1
0xb3002ef3	return       	-1		12308	-1
0xb3002f03	other        	-1		12293	-1
0xb3002f05	patch        	-1		0	-1
0xb3002f0a	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__JSSyntaxRegExp@0x36924d72__ExecuteMatch@0x36924d72' {
}
Variable Descriptors for function 'dart:core__JSSyntaxRegExp@0x36924d72__ExecuteMatch@0x36924d72' {
  stack var 'this' offset 4 (valid 11896-12308)
  stack var 'str' offset 3 (valid 12296-12308)
  stack var 'start_index' offset 2 (valid 12300-12308)
}
Exception Handlers for function 'dart:core__JSSyntaxRegExp@0x36924d72__ExecuteMatch@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__JSRegExpMatch@0x36924d72__JSRegExpMatch@0x36924d72.' @ token 11537
Before Optimizations
==== dart:core__JSRegExpMatch@0x36924d72__JSRegExpMatch@0x36924d72.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(:phase lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#1)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(&, t0, t0)
    t1 <- Constant:8(#0)
    Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:12(this lvl:0)
    t1 <- LoadLocal:13(regexp lvl:0)
    StoreInstanceField:14(regexp, t0, t1)
    t0 <- LoadLocal:15(this lvl:0)
    t1 <- LoadLocal:16(str lvl:0)
    StoreInstanceField:17(str, t0, t1)
    t0 <- LoadLocal:18(this lvl:0)
    t1 <- LoadLocal:19(_match@0x36924d72 lvl:0)
    StoreInstanceField:20(_match@0x36924d72, t0, t1)
    t0 <- LoadLocal:21(this lvl:0)
    PushArgument:22(t0)
    t0 <- Constant:23(#3)
    PushArgument:24(t0)
    StaticCall:25(Object. t0, t0)
    goto:29 4
B3[target]
    goto:30 4
B4[join] pred(B2, B3)
    t0 <- Constant:31(#null)
    Return:32(t0)
--> 'dart:core__JSRegExpMatch@0x36924d72__JSRegExpMatch@0x36924d72.' entry: 0xb3002f28 time: 334 us
Code for function 'dart:core__JSRegExpMatch@0x36924d72__JSRegExpMatch@0x36924d72.' {
        ;; Enter frame
0xb3002f28    55                     push ebp
0xb3002f29    89e5                   mov ebp,esp
0xb3002f2b    e800000000             call 0xb3002f30
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3002f30    3b25bc195809           cmp esp,[0x95819bc]
0xb3002f36    0f86df000000           jna 0xb300301b
        ;; t0 <- LoadLocal:3(:phase lvl:0)
0xb3002f3c    8b4514                 mov eax,[ebp+0x14]
0xb3002f3f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#1)
0xb3002f40    b802000000             mov eax,0x2
0xb3002f45    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(&, t0, t0)
0xb3002f46    b9411628b3             mov ecx,0xb3281641  'ICData target:'&' num-checks: 0'
0xb3002f4b    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3002f50    e883d3ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3002f55    83c408                 add esp,0x8
0xb3002f58    50                     push eax
        ;; t1 <- Constant:8(#0)
0xb3002f59    b800000000             mov eax,0
0xb3002f5e    50                     push eax
        ;; Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
0xb3002f5f    58                     pop eax
0xb3002f60    59                     pop ecx
0xb3002f61    51                     push ecx
0xb3002f62    50                     push eax
0xb3002f63    e8a0d83702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3002f68    58                     pop eax
0xb3002f69    59                     pop ecx
0xb3002f6a    0f8488000000           jz 0xb3002ff8
        ;; B2
        ;; t0 <- LoadLocal:12(this lvl:0)
0xb3002f70    8b4518                 mov eax,[ebp+0x18]
0xb3002f73    50                     push eax
        ;; t1 <- LoadLocal:13(regexp lvl:0)
0xb3002f74    8b4510                 mov eax,[ebp+0x10]
0xb3002f77    50                     push eax
        ;; StoreInstanceField:14(regexp, t0, t1)
0xb3002f78    58                     pop eax
0xb3002f79    59                     pop ecx
0xb3002f7a    894107                 mov [ecx+0x7],eax
0xb3002f7d    83e005                 and eax,0x5
0xb3002f80    d1e8                   shr eax, 1
0xb3002f82    13c1                   adc eax,ecx
0xb3002f84    83e007                 and eax,0x7
0xb3002f87    83f804                 cmp eax,0x4
0xb3002f8a    7508                   jnz 0xb3002f94
0xb3002f8c    8d4107                 lea eax,[ecx+0x7]
0xb3002f8f    e8d4d1ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:15(this lvl:0)
0xb3002f94    8b4518                 mov eax,[ebp+0x18]
0xb3002f97    50                     push eax
        ;; t1 <- LoadLocal:16(str lvl:0)
0xb3002f98    8b450c                 mov eax,[ebp+0xc]
0xb3002f9b    50                     push eax
        ;; StoreInstanceField:17(str, t0, t1)
0xb3002f9c    58                     pop eax
0xb3002f9d    59                     pop ecx
0xb3002f9e    89410b                 mov [ecx+0xb],eax
0xb3002fa1    83e005                 and eax,0x5
0xb3002fa4    d1e8                   shr eax, 1
0xb3002fa6    13c1                   adc eax,ecx
0xb3002fa8    83e007                 and eax,0x7
0xb3002fab    83f804                 cmp eax,0x4
0xb3002fae    7508                   jnz 0xb3002fb8
0xb3002fb0    8d410b                 lea eax,[ecx+0xb]
0xb3002fb3    e8b0d1ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:18(this lvl:0)
0xb3002fb8    8b4518                 mov eax,[ebp+0x18]
0xb3002fbb    50                     push eax
        ;; t1 <- LoadLocal:19(_match@0x36924d72 lvl:0)
0xb3002fbc    8b4508                 mov eax,[ebp+0x8]
0xb3002fbf    50                     push eax
        ;; StoreInstanceField:20(_match@0x36924d72, t0, t1)
0xb3002fc0    58                     pop eax
0xb3002fc1    59                     pop ecx
0xb3002fc2    89410f                 mov [ecx+0xf],eax
0xb3002fc5    83e005                 and eax,0x5
0xb3002fc8    d1e8                   shr eax, 1
0xb3002fca    13c1                   adc eax,ecx
0xb3002fcc    83e007                 and eax,0x7
0xb3002fcf    83f804                 cmp eax,0x4
0xb3002fd2    7508                   jnz 0xb3002fdc
0xb3002fd4    8d410f                 lea eax,[ecx+0xf]
0xb3002fd7    e88cd1ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:21(this lvl:0)
0xb3002fdc    8b4518                 mov eax,[ebp+0x18]
0xb3002fdf    50                     push eax
        ;; PushArgument:22(t0)
        ;; t0 <- Constant:23(#3)
0xb3002fe0    b806000000             mov eax,0x6
0xb3002fe5    50                     push eax
        ;; PushArgument:24(t0)
        ;; StaticCall:25(Object. t0, t0)
0xb3002fe6    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3002feb    e838d33702             call 0xb5380328  [stub: CallStaticFunction]
0xb3002ff0    83c408                 add esp,0x8
        ;; goto:29 4
0xb3002ff3    e900000000             jmp 0xb3002ff8
        ;; B3
        ;; goto:30 4
        ;; B4
        ;; t0 <- Constant:31(#null)
0xb3002ff8    b8190040b5             mov eax,0xb5400019
0xb3002ffd    50                     push eax
        ;; Return:32(t0)
0xb3002ffe    58                     pop eax
0xb3002fff    ba01a912b3             mov edx,0xb312a901  'Function '_JSRegExpMatch@0x36924d72.': constructor.'
0xb3003004    ff422b                 inc [edx+0x2b]
0xb3003007    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300300e    7c05                   jl 0xb3003015
0xb3003010    e8a3d8ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3003015    89ec                   mov esp,ebp
0xb3003017    5d                     pop ebp
0xb3003018    c3                     ret
0xb3003019    90                     nop
0xb300301a    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300301b    b970d30a08             mov ecx,0x80ad370
0xb3003020    ba00000000             mov edx,0
0xb3003025    e8fecf3702             call 0xb5380028  [stub: CallToRuntime]
0xb300302a    e90dffffff             jmp 0xb3002f3c
0xb300302f    e904d43702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3003034    e9dfd43702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 31 : 0xb3002f47 'ICData target:'&' num-checks: 0'
 36 : 0xb3002f4c 'ImmutableArray'
 191 : 0xb3002fe7 'ImmutableArray'
 216 : 0xb3003000 'Function '_JSRegExpMatch@0x36924d72.': constructor.'
}
PC Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72__JSRegExpMatch@0x36924d72.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3002f46	deopt-before 	7		11553	-1
0xb3002f55	ic-call      	7		11553	-1
0xb3002f55	deopt-after  	7		11553	-1
0xb3002ff0	fn-call      	25		11553	-1
0xb3002ff0	deopt-after  	25		11553	-1
0xb3002ff3	deopt-before 	29		0	-1
0xb3002ff8	deopt-before 	30		0	-1
0xb3003015	other        	-1		0	-1
0xb300301a	return       	-1		11554	-1
0xb300302a	other        	-1		11537	-1
0xb300302f	patch        	-1		0	-1
0xb3003034	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__JSRegExpMatch@0x36924d72__JSRegExpMatch@0x36924d72.' {
}
Variable Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72__JSRegExpMatch@0x36924d72.' {
  stack var 'this' offset 6 (valid 11537-11554)
  stack var 'regexp' offset 4 (valid 11540-11554)
  stack var 'str' offset 3 (valid 11545-11554)
  stack var '_match@0x36924d72' offset 2 (valid 11550-11554)
}
Exception Handlers for function 'dart:core__JSRegExpMatch@0x36924d72__JSRegExpMatch@0x36924d72.' {
No exception handlers
}
Static call target functions {
  0xb3002ff0: dart:core_Object_Object., 0xb5400019
}
PatchStaticCall: patching from 0xb3002e63 to 'dart:core__JSRegExpMatch@0x36924d72__JSRegExpMatch@0x36924d72.' 0xb3002f28
PatchStaticCall: patching from 0xb3002ff0 to 'dart:core_Object_Object.' 0xb30027a8
Compiling function: 'dart:uri_Uri_Uri._fromMatch@0x715366f' @ token 77
Before Optimizations
==== dart:uri_Uri_Uri._fromMatch@0x715366f
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(:phase lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#1)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(&, t0, t0)
    t1 <- Constant:8(#0)
    Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:12(this lvl:0)
    PushArgument:13(t0)
    t0 <- LoadLocal:14(:phase lvl:0)
    PushArgument:15(t0)
    t0 <- LoadLocal:16(m lvl:0)
    PushArgument:17(t0)
    t0 <- Constant:18(#1)
    PushArgument:19(t0)
    t0 <- InstanceCall:20([], t0, t0)
    PushArgument:21(t0)
    t0 <- StaticCall:22(_emptyIfNull@0x715366f t0)
    PushArgument:23(t0)
    t0 <- LoadLocal:24(m lvl:0)
    PushArgument:25(t0)
    t0 <- Constant:26(#2)
    PushArgument:27(t0)
    t0 <- InstanceCall:28([], t0, t0)
    PushArgument:29(t0)
    t0 <- StaticCall:30(_emptyIfNull@0x715366f t0)
    PushArgument:31(t0)
    t0 <- LoadLocal:32(m lvl:0)
    PushArgument:33(t0)
    t0 <- Constant:34(#3)
    PushArgument:35(t0)
    t0 <- InstanceCall:36([], t0, t0)
    PushArgument:37(t0)
    t0 <- StaticCall:38(_emptyIfNull@0x715366f t0)
    PushArgument:39(t0)
    t0 <- LoadLocal:40(m lvl:0)
    PushArgument:41(t0)
    t0 <- Constant:42(#4)
    PushArgument:43(t0)
    t0 <- InstanceCall:44([], t0, t0)
    PushArgument:45(t0)
    t0 <- StaticCall:46(_parseIntOrZero@0x715366f t0)
    PushArgument:47(t0)
    t0 <- LoadLocal:48(m lvl:0)
    PushArgument:49(t0)
    t0 <- Constant:50(#5)
    PushArgument:51(t0)
    t0 <- InstanceCall:52([], t0, t0)
    PushArgument:53(t0)
    t0 <- StaticCall:54(_emptyIfNull@0x715366f t0)
    PushArgument:55(t0)
    t0 <- LoadLocal:56(m lvl:0)
    PushArgument:57(t0)
    t0 <- Constant:58(#6)
    PushArgument:59(t0)
    t0 <- InstanceCall:60([], t0, t0)
    PushArgument:61(t0)
    t0 <- StaticCall:62(_emptyIfNull@0x715366f t0)
    PushArgument:63(t0)
    t0 <- LoadLocal:64(m lvl:0)
    PushArgument:65(t0)
    t0 <- Constant:66(#7)
    PushArgument:67(t0)
    t0 <- InstanceCall:68([], t0, t0)
    PushArgument:69(t0)
    t0 <- StaticCall:70(_emptyIfNull@0x715366f t0)
    PushArgument:71(t0)
    StaticCall:72(Uri.fromComponents t0, t0, t0, t0, t0, t0, t0, t0, t0)
    goto:76 4
B3[target]
    goto:77 4
B4[join] pred(B2, B3)
    t0 <- Constant:78(#null)
    Return:79(t0)
--> 'dart:uri_Uri_Uri._fromMatch@0x715366f' entry: 0xb3003058 time: 553 us
Code for function 'dart:uri_Uri_Uri._fromMatch@0x715366f' {
        ;; Enter frame
0xb3003058    55                     push ebp
0xb3003059    89e5                   mov ebp,esp
0xb300305b    e800000000             call 0xb3003060
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3003060    3b25bc195809           cmp esp,[0x95819bc]
0xb3003066    0f869e010000           jna 0xb300320a
        ;; t0 <- LoadLocal:3(:phase lvl:0)
0xb300306c    8b450c                 mov eax,[ebp+0xc]
0xb300306f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#1)
0xb3003070    b802000000             mov eax,0x2
0xb3003075    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(&, t0, t0)
0xb3003076    b9e91828b3             mov ecx,0xb32818e9  'ICData target:'&' num-checks: 0'
0xb300307b    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003080    e853d2ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3003085    83c408                 add esp,0x8
0xb3003088    50                     push eax
        ;; t1 <- Constant:8(#0)
0xb3003089    b800000000             mov eax,0
0xb300308e    50                     push eax
        ;; Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
0xb300308f    58                     pop eax
0xb3003090    59                     pop ecx
0xb3003091    51                     push ecx
0xb3003092    50                     push eax
0xb3003093    e870d73702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3003098    58                     pop eax
0xb3003099    59                     pop ecx
0xb300309a    0f8447010000           jz 0xb30031e7
        ;; B2
        ;; t0 <- LoadLocal:12(this lvl:0)
0xb30030a0    8b4510                 mov eax,[ebp+0x10]
0xb30030a3    50                     push eax
        ;; PushArgument:13(t0)
        ;; t0 <- LoadLocal:14(:phase lvl:0)
0xb30030a4    8b450c                 mov eax,[ebp+0xc]
0xb30030a7    50                     push eax
        ;; PushArgument:15(t0)
        ;; t0 <- LoadLocal:16(m lvl:0)
0xb30030a8    8b4508                 mov eax,[ebp+0x8]
0xb30030ab    50                     push eax
        ;; PushArgument:17(t0)
        ;; t0 <- Constant:18(#1)
0xb30030ac    b802000000             mov eax,0x2
0xb30030b1    50                     push eax
        ;; PushArgument:19(t0)
        ;; t0 <- InstanceCall:20([], t0, t0)
0xb30030b2    b9411928b3             mov ecx,0xb3281941  'ICData target:'[]' num-checks: 0'
0xb30030b7    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30030bc    e857d1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30030c1    83c408                 add esp,0x8
0xb30030c4    50                     push eax
        ;; PushArgument:21(t0)
        ;; t0 <- StaticCall:22(_emptyIfNull@0x715366f t0)
0xb30030c5    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30030ca    e859d23702             call 0xb5380328  [stub: CallStaticFunction]
0xb30030cf    83c404                 add esp,0x4
0xb30030d2    50                     push eax
        ;; PushArgument:23(t0)
        ;; t0 <- LoadLocal:24(m lvl:0)
0xb30030d3    8b4508                 mov eax,[ebp+0x8]
0xb30030d6    50                     push eax
        ;; PushArgument:25(t0)
        ;; t0 <- Constant:26(#2)
0xb30030d7    b804000000             mov eax,0x4
0xb30030dc    50                     push eax
        ;; PushArgument:27(t0)
        ;; t0 <- InstanceCall:28([], t0, t0)
0xb30030dd    b9a91928b3             mov ecx,0xb32819a9  'ICData target:'[]' num-checks: 0'
0xb30030e2    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30030e7    e82cd1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30030ec    83c408                 add esp,0x8
0xb30030ef    50                     push eax
        ;; PushArgument:29(t0)
        ;; t0 <- StaticCall:30(_emptyIfNull@0x715366f t0)
0xb30030f0    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30030f5    e82ed23702             call 0xb5380328  [stub: CallStaticFunction]
0xb30030fa    83c404                 add esp,0x4
0xb30030fd    50                     push eax
        ;; PushArgument:31(t0)
        ;; t0 <- LoadLocal:32(m lvl:0)
0xb30030fe    8b4508                 mov eax,[ebp+0x8]
0xb3003101    50                     push eax
        ;; PushArgument:33(t0)
        ;; t0 <- Constant:34(#3)
0xb3003102    b806000000             mov eax,0x6
0xb3003107    50                     push eax
        ;; PushArgument:35(t0)
        ;; t0 <- InstanceCall:36([], t0, t0)
0xb3003108    b9111a28b3             mov ecx,0xb3281a11  'ICData target:'[]' num-checks: 0'
0xb300310d    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003112    e801d1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003117    83c408                 add esp,0x8
0xb300311a    50                     push eax
        ;; PushArgument:37(t0)
        ;; t0 <- StaticCall:38(_emptyIfNull@0x715366f t0)
0xb300311b    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003120    e803d23702             call 0xb5380328  [stub: CallStaticFunction]
0xb3003125    83c404                 add esp,0x4
0xb3003128    50                     push eax
        ;; PushArgument:39(t0)
        ;; t0 <- LoadLocal:40(m lvl:0)
0xb3003129    8b4508                 mov eax,[ebp+0x8]
0xb300312c    50                     push eax
        ;; PushArgument:41(t0)
        ;; t0 <- Constant:42(#4)
0xb300312d    b808000000             mov eax,0x8
0xb3003132    50                     push eax
        ;; PushArgument:43(t0)
        ;; t0 <- InstanceCall:44([], t0, t0)
0xb3003133    b9791a28b3             mov ecx,0xb3281a79  'ICData target:'[]' num-checks: 0'
0xb3003138    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300313d    e8d6d0ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003142    83c408                 add esp,0x8
0xb3003145    50                     push eax
        ;; PushArgument:45(t0)
        ;; t0 <- StaticCall:46(_parseIntOrZero@0x715366f t0)
0xb3003146    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300314b    e8d8d13702             call 0xb5380328  [stub: CallStaticFunction]
0xb3003150    83c404                 add esp,0x4
0xb3003153    50                     push eax
        ;; PushArgument:47(t0)
        ;; t0 <- LoadLocal:48(m lvl:0)
0xb3003154    8b4508                 mov eax,[ebp+0x8]
0xb3003157    50                     push eax
        ;; PushArgument:49(t0)
        ;; t0 <- Constant:50(#5)
0xb3003158    b80a000000             mov eax,0xa
0xb300315d    50                     push eax
        ;; PushArgument:51(t0)
        ;; t0 <- InstanceCall:52([], t0, t0)
0xb300315e    b9e11a28b3             mov ecx,0xb3281ae1  'ICData target:'[]' num-checks: 0'
0xb3003163    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003168    e8abd0ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300316d    83c408                 add esp,0x8
0xb3003170    50                     push eax
        ;; PushArgument:53(t0)
        ;; t0 <- StaticCall:54(_emptyIfNull@0x715366f t0)
0xb3003171    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003176    e8add13702             call 0xb5380328  [stub: CallStaticFunction]
0xb300317b    83c404                 add esp,0x4
0xb300317e    50                     push eax
        ;; PushArgument:55(t0)
        ;; t0 <- LoadLocal:56(m lvl:0)
0xb300317f    8b4508                 mov eax,[ebp+0x8]
0xb3003182    50                     push eax
        ;; PushArgument:57(t0)
        ;; t0 <- Constant:58(#6)
0xb3003183    b80c000000             mov eax,0xc
0xb3003188    50                     push eax
        ;; PushArgument:59(t0)
        ;; t0 <- InstanceCall:60([], t0, t0)
0xb3003189    b9491b28b3             mov ecx,0xb3281b49  'ICData target:'[]' num-checks: 0'
0xb300318e    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003193    e880d0ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003198    83c408                 add esp,0x8
0xb300319b    50                     push eax
        ;; PushArgument:61(t0)
        ;; t0 <- StaticCall:62(_emptyIfNull@0x715366f t0)
0xb300319c    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30031a1    e882d13702             call 0xb5380328  [stub: CallStaticFunction]
0xb30031a6    83c404                 add esp,0x4
0xb30031a9    50                     push eax
        ;; PushArgument:63(t0)
        ;; t0 <- LoadLocal:64(m lvl:0)
0xb30031aa    8b4508                 mov eax,[ebp+0x8]
0xb30031ad    50                     push eax
        ;; PushArgument:65(t0)
        ;; t0 <- Constant:66(#7)
0xb30031ae    b80e000000             mov eax,0xe
0xb30031b3    50                     push eax
        ;; PushArgument:67(t0)
        ;; t0 <- InstanceCall:68([], t0, t0)
0xb30031b4    b9b11b28b3             mov ecx,0xb3281bb1  'ICData target:'[]' num-checks: 0'
0xb30031b9    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30031be    e855d0ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30031c3    83c408                 add esp,0x8
0xb30031c6    50                     push eax
        ;; PushArgument:69(t0)
        ;; t0 <- StaticCall:70(_emptyIfNull@0x715366f t0)
0xb30031c7    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30031cc    e857d13702             call 0xb5380328  [stub: CallStaticFunction]
0xb30031d1    83c404                 add esp,0x4
0xb30031d4    50                     push eax
        ;; PushArgument:71(t0)
        ;; StaticCall:72(Uri.fromComponents t0, t0, t0, t0, t0, t0, t0, t0, t0)
0xb30031d5    ba191c28b3             mov edx,0xb3281c19  Array[9, 2, domain, 4, fragment, ...]
0xb30031da    e849d13702             call 0xb5380328  [stub: CallStaticFunction]
0xb30031df    83c424                 add esp,0x24
        ;; goto:76 4
0xb30031e2    e900000000             jmp 0xb30031e7
        ;; B3
        ;; goto:77 4
        ;; B4
        ;; t0 <- Constant:78(#null)
0xb30031e7    b8190040b5             mov eax,0xb5400019
0xb30031ec    50                     push eax
        ;; Return:79(t0)
0xb30031ed    58                     pop eax
0xb30031ee    bab11a0bb3             mov edx,0xb30b1ab1  'Function 'Uri._fromMatch@0x715366f': constructor.'
0xb30031f3    ff422b                 inc [edx+0x2b]
0xb30031f6    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30031fd    7c05                   jl 0xb3003204
0xb30031ff    e8b4d6ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3003204    89ec                   mov esp,ebp
0xb3003206    5d                     pop ebp
0xb3003207    c3                     ret
0xb3003208    90                     nop
0xb3003209    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300320a    b970d30a08             mov ecx,0x80ad370
0xb300320f    ba00000000             mov edx,0
0xb3003214    e80fce3702             call 0xb5380028  [stub: CallToRuntime]
0xb3003219    e94efeffff             jmp 0xb300306c
0xb300321e    e915d23702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3003223    e9f0d23702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 31 : 0xb3003077 'ICData target:'&' num-checks: 0'
 36 : 0xb300307c 'ImmutableArray'
 91 : 0xb30030b3 'ICData target:'[]' num-checks: 0'
 96 : 0xb30030b8 'ImmutableArray'
 110 : 0xb30030c6 'ImmutableArray'
 134 : 0xb30030de 'ICData target:'[]' num-checks: 0'
 139 : 0xb30030e3 'ImmutableArray'
 153 : 0xb30030f1 'ImmutableArray'
 177 : 0xb3003109 'ICData target:'[]' num-checks: 0'
 182 : 0xb300310e 'ImmutableArray'
 196 : 0xb300311c 'ImmutableArray'
 220 : 0xb3003134 'ICData target:'[]' num-checks: 0'
 225 : 0xb3003139 'ImmutableArray'
 239 : 0xb3003147 'ImmutableArray'
 263 : 0xb300315f 'ICData target:'[]' num-checks: 0'
 268 : 0xb3003164 'ImmutableArray'
 282 : 0xb3003172 'ImmutableArray'
 306 : 0xb300318a 'ICData target:'[]' num-checks: 0'
 311 : 0xb300318f 'ImmutableArray'
 325 : 0xb300319d 'ImmutableArray'
 349 : 0xb30031b5 'ICData target:'[]' num-checks: 0'
 354 : 0xb30031ba 'ImmutableArray'
 368 : 0xb30031c8 'ImmutableArray'
 382 : 0xb30031d6 'ImmutableArray'
 407 : 0xb30031ef 'Function 'Uri._fromMatch@0x715366f': constructor.'
}
PC Descriptors for function 'dart:uri_Uri_Uri._fromMatch@0x715366f' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3003076	deopt-before 	7		181	-1
0xb3003085	ic-call      	7		181	-1
0xb3003085	deopt-after  	7		181	-1
0xb30030b2	deopt-before 	20		96	-1
0xb30030c1	ic-call      	20		96	-1
0xb30030c1	deopt-after  	20		96	-1
0xb30030cf	fn-call      	22		93	-1
0xb30030cf	deopt-after  	22		93	-1
0xb30030dd	deopt-before 	28		109	-1
0xb30030ec	ic-call      	28		109	-1
0xb30030ec	deopt-after  	28		109	-1
0xb30030fa	fn-call      	30		106	-1
0xb30030fa	deopt-after  	30		106	-1
0xb3003108	deopt-before 	36		122	-1
0xb3003117	ic-call      	36		122	-1
0xb3003117	deopt-after  	36		122	-1
0xb3003125	fn-call      	38		119	-1
0xb3003125	deopt-after  	38		119	-1
0xb3003133	deopt-before 	44		135	-1
0xb3003142	ic-call      	44		135	-1
0xb3003142	deopt-after  	44		135	-1
0xb3003150	fn-call      	46		132	-1
0xb3003150	deopt-after  	46		132	-1
0xb300315e	deopt-before 	52		148	-1
0xb300316d	ic-call      	52		148	-1
0xb300316d	deopt-after  	52		148	-1
0xb300317b	fn-call      	54		145	-1
0xb300317b	deopt-after  	54		145	-1
0xb3003189	deopt-before 	60		161	-1
0xb3003198	ic-call      	60		161	-1
0xb3003198	deopt-after  	60		161	-1
0xb30031a6	fn-call      	62		158	-1
0xb30031a6	deopt-after  	62		158	-1
0xb30031b4	deopt-before 	68		175	-1
0xb30031c3	ic-call      	68		175	-1
0xb30031c3	deopt-after  	68		175	-1
0xb30031d1	fn-call      	70		172	-1
0xb30031d1	deopt-after  	70		172	-1
0xb30031df	fn-call      	72		84	-1
0xb30031df	deopt-after  	72		84	-1
0xb30031e2	deopt-before 	76		0	-1
0xb30031e7	deopt-before 	77		0	-1
0xb3003204	other        	-1		0	-1
0xb3003209	return       	-1		182	-1
0xb3003219	other        	-1		77	-1
0xb300321e	patch        	-1		0	-1
0xb3003223	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_Uri_Uri._fromMatch@0x715366f' {
}
Variable Descriptors for function 'dart:uri_Uri_Uri._fromMatch@0x715366f' {
  stack var 'this' offset 4 (valid 21-182)
  stack var 'm' offset 2 (valid 80-182)
}
Exception Handlers for function 'dart:uri_Uri_Uri._fromMatch@0x715366f' {
No exception handlers
}
Static call target functions {
  0xb30030cf: dart:uri_Uri__emptyIfNull@0x715366f, 0xb5400019
  0xb30030fa: dart:uri_Uri__emptyIfNull@0x715366f, 0xb5400019
  0xb3003125: dart:uri_Uri__emptyIfNull@0x715366f, 0xb5400019
  0xb3003150: dart:uri_Uri__parseIntOrZero@0x715366f, 0xb5400019
  0xb300317b: dart:uri_Uri__emptyIfNull@0x715366f, 0xb5400019
  0xb30031a6: dart:uri_Uri__emptyIfNull@0x715366f, 0xb5400019
  0xb30031d1: dart:uri_Uri__emptyIfNull@0x715366f, 0xb5400019
  0xb30031df: dart:uri_Uri_Uri.fromComponents, 0xb5400019
}
PatchStaticCall: patching from 0xb3002944 to 'dart:uri_Uri_Uri._fromMatch@0x715366f' 0xb3003058
Compiling function: 'dart:core__JSRegExpMatch@0x36924d72_[]' @ token 11733
Before Optimizations
==== dart:core__JSRegExpMatch@0x36924d72_[]
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(groupIdx lvl:0)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(group, t0, t0)
    Return:8(t0)
--> 'dart:core__JSRegExpMatch@0x36924d72_[]' entry: 0xb3003238 time: 228 us
Code for function 'dart:core__JSRegExpMatch@0x36924d72_[]' {
        ;; Enter frame
0xb3003238    55                     push ebp
0xb3003239    89e5                   mov ebp,esp
0xb300323b    e800000000             call 0xb3003240
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3003240    3b25bc195809           cmp esp,[0x95819bc]
0xb3003246    0f8638000000           jna 0xb3003284
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb300324c    8b450c                 mov eax,[ebp+0xc]
0xb300324f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(groupIdx lvl:0)
0xb3003250    8b4508                 mov eax,[ebp+0x8]
0xb3003253    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(group, t0, t0)
0xb3003254    b9912128b3             mov ecx,0xb3282191  'ICData target:'group' num-checks: 0'
0xb3003259    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300325e    e8b5cfffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003263    83c408                 add esp,0x8
0xb3003266    50                     push eax
        ;; Return:8(t0)
0xb3003267    58                     pop eax
0xb3003268    ba61ab12b3             mov edx,0xb312ab61  'Function '[]':.'
0xb300326d    ff422b                 inc [edx+0x2b]
0xb3003270    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3003277    7c05                   jl 0xb300327e
0xb3003279    e83ad6ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300327e    89ec                   mov esp,ebp
0xb3003280    5d                     pop ebp
0xb3003281    c3                     ret
0xb3003282    90                     nop
0xb3003283    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3003284    b970d30a08             mov ecx,0x80ad370
0xb3003289    ba00000000             mov edx,0
0xb300328e    e895cd3702             call 0xb5380028  [stub: CallToRuntime]
0xb3003293    ebb7                   jmp 0xb300324c
0xb3003295    e99ed13702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300329a    e979d23702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 29 : 0xb3003255 'ICData target:'group' num-checks: 0'
 34 : 0xb300325a 'ImmutableArray'
 49 : 0xb3003269 'Function '[]':.'
}
PC Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72_[]' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3003254	deopt-before 	7		11744	-1
0xb3003263	ic-call      	7		11744	-1
0xb3003263	deopt-after  	7		11744	-1
0xb300327e	other        	-1		0	-1
0xb3003283	return       	-1		11739	-1
0xb3003293	other        	-1		11733	-1
0xb3003295	patch        	-1		0	-1
0xb300329a	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__JSRegExpMatch@0x36924d72_[]' {
}
Variable Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72_[]' {
  stack var 'this' offset 3 (valid 11537-11750)
  stack var 'groupIdx' offset 2 (valid 11735-11750)
}
Exception Handlers for function 'dart:core__JSRegExpMatch@0x36924d72_[]' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__JSRegExpMatch@0x36924d72_group' @ token 11631
Before Optimizations
==== dart:core__JSRegExpMatch@0x36924d72_group
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(groupIdx lvl:0)
    t1 <- Constant:4(#0)
    Branch if RelationalOp:5(<, t0, t1) goto (4, 2)
B4[target]
    goto:29 3
B2[target]
    t0 <- LoadLocal:7(groupIdx lvl:0)
    t1 <- LoadLocal:8(this lvl:0)
    PushArgument:9(t1)
    t1 <- InstanceCall:10(get:regexp, t1)
    PushArgument:11(t1)
    t1 <- InstanceCall:12(get:_groupCount@0x36924d72, t1)
    Branch if RelationalOp:13(>, t0, t1) goto (5, 6)
B5[target]
    goto:31 3
B3[join] pred(B4, B5)
    t0 <- AllocateObject:16(Library:'dart:core' Class: RangeError)
    t0 <- StoreLocal:17(:alloc11656, t0, lvl: 0)
    PushArgument:18(t0)
    t0 <- Constant:19(#3)
    PushArgument:20(t0)
    t0 <- LoadLocal:21(groupIdx lvl:0)
    PushArgument:22(t0)
    StaticCall:23(RangeError.value t0, t0, t0)
    t0 <- LoadLocal:24(:alloc11656 lvl:0)
    PushArgument:25(t0)
    Throw:26()
B6[target]
    t0 <- LoadLocal:33(this lvl:0)
    PushArgument:34(t0)
    t0 <- LoadLocal:35(groupIdx lvl:0)
    PushArgument:36(t0)
    t0 <- InstanceCall:37(_start@0x36924d72, t0, t0)
    StoreLocal:38(startIndex, t0, lvl: 0)
    t0 <- LoadLocal:39(this lvl:0)
    PushArgument:40(t0)
    t0 <- LoadLocal:41(groupIdx lvl:0)
    PushArgument:42(t0)
    t0 <- InstanceCall:43(_end@0x36924d72, t0, t0)
    StoreLocal:44(endIndex, t0, lvl: 0)
    t0 <- LoadLocal:45(startIndex lvl:0)
    t1 <- Constant:46(#-1)
    Branch if EqualityCompare:47(t0 == t1) goto (7, 8)
B7[target]
    t0 <- Constant:49(#null)
    Return:50(t0)
B8[target]
    t0 <- LoadLocal:53(this lvl:0)
    PushArgument:54(t0)
    t0 <- InstanceCall:55(get:str, t0)
    PushArgument:56(t0)
    t0 <- LoadLocal:57(startIndex lvl:0)
    PushArgument:58(t0)
    t0 <- LoadLocal:59(endIndex lvl:0)
    PushArgument:60(t0)
    t0 <- InstanceCall:61(_substringUnchecked@0x36924d72, t0, t0, t0)
    Return:62(t0)
Code for allocation stub 'Library:'dart:core' Class: RangeError': {
0xb30032b8    8b0508fe5609           mov eax,[0x956fe08]
0xb30032be    8d5810                 lea ebx,[eax+0x10]
0xb30032c1    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb30032c7    732a                   jnc 0xb30032f3
0xb30032c9    891d08fe5609           mov [0x956fe08],ebx
0xb30032cf    bac9ec19b3             mov edx,0xb319ecc9  'Library:'dart:core' Class: RangeError'
0xb30032d4    c7000002a700           mov [eax],0xa70200
0xb30032da    c74004190040b5         mov [eax+0x4],0xb5400019
0xb30032e1    c74008190040b5         mov [eax+0x8],0xb5400019
0xb30032e8    c7400c190040b5         mov [eax+0xc],0xb5400019
0xb30032ef    83c001                 add eax,0x1
0xb30032f2    c3                     ret
0xb30032f3    55                     push ebp
0xb30032f4    89e5                   mov ebp,esp
0xb30032f6    6800000000             push 0
0xb30032fb    68190040b5             push 0xb5400019
0xb3003300    68c9ec19b3             push 0xb319ecc9
0xb3003305    68190040b5             push 0xb5400019
0xb300330a    6800000000             push 0
0xb300330f    b9d0080b08             mov ecx,0x80b08d0
0xb3003314    ba03000000             mov edx,0x3
0xb3003319    e80acd3702             call 0xb5380028  [stub: CallToRuntime]
0xb300331e    58                     pop eax
0xb300331f    58                     pop eax
0xb3003320    58                     pop eax
0xb3003321    58                     pop eax
0xb3003322    89ec                   mov esp,ebp
0xb3003324    5d                     pop ebp
0xb3003325    c3                     ret
}
--> 'dart:core__JSRegExpMatch@0x36924d72_group' entry: 0xb3003338 time: 1175 us
Code for function 'dart:core__JSRegExpMatch@0x36924d72_group' {
        ;; Enter frame
0xb3003338    55                     push ebp
0xb3003339    89e5                   mov ebp,esp
0xb300333b    e800000000             call 0xb3003340
0xb3003340    83ec10                 sub esp,0x10
        ;; Initialize spill slots
0xb3003343    b8190040b5             mov eax,0xb5400019
0xb3003348    8945f8                 mov [ebp-0x8],eax
0xb300334b    8945f4                 mov [ebp-0xc],eax
0xb300334e    8945f0                 mov [ebp-0x10],eax
0xb3003351    8945ec                 mov [ebp-0x14],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3003354    3b25bc195809           cmp esp,[0x95819bc]
0xb300335a    0f86bc010000           jna 0xb300351c
        ;; t0 <- LoadLocal:3(groupIdx lvl:0)
0xb3003360    8b4508                 mov eax,[ebp+0x8]
0xb3003363    50                     push eax
        ;; t1 <- Constant:4(#0)
0xb3003364    b800000000             mov eax,0
0xb3003369    50                     push eax
        ;; Branch if RelationalOp:5(<, t0, t1) goto (4, 2)
0xb300336a    59                     pop ecx
0xb300336b    58                     pop eax
0xb300336c    50                     push eax
0xb300336d    51                     push ecx
0xb300336e    b9d92328b3             mov ecx,0xb32823d9  'ICData target:'<' num-checks: 0'
0xb3003373    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003378    e85bcfffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300337d    83c408                 add esp,0x8
0xb3003380    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3003385    0f8505000000           jnz 0xb3003390
        ;; B4
        ;; goto:29 3
0xb300338b    e94f000000             jmp 0xb30033df
        ;; B2
        ;; t0 <- LoadLocal:7(groupIdx lvl:0)
0xb3003390    8b4508                 mov eax,[ebp+0x8]
0xb3003393    50                     push eax
        ;; t1 <- LoadLocal:8(this lvl:0)
0xb3003394    8b450c                 mov eax,[ebp+0xc]
0xb3003397    50                     push eax
        ;; PushArgument:9(t1)
        ;; t1 <- InstanceCall:10(get:regexp, t1)
0xb3003398    b9312428b3             mov ecx,0xb3282431  'ICData target:'get:regexp' num-checks: 0'
0xb300339d    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30033a2    e871ceffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30033a7    83c404                 add esp,0x4
0xb30033aa    50                     push eax
        ;; PushArgument:11(t1)
        ;; t1 <- InstanceCall:12(get:_groupCount@0x36924d72, t1)
0xb30033ab    b9812428b3             mov ecx,0xb3282481  'ICData target:'get:_groupCount@0x36924d72' num-checks: 0'
0xb30033b0    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30033b5    e85eceffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30033ba    83c404                 add esp,0x4
0xb30033bd    50                     push eax
        ;; Branch if RelationalOp:13(>, t0, t1) goto (5, 6)
0xb30033be    59                     pop ecx
0xb30033bf    58                     pop eax
0xb30033c0    50                     push eax
0xb30033c1    51                     push ecx
0xb30033c2    b9d12428b3             mov ecx,0xb32824d1  'ICData target:'>' num-checks: 0'
0xb30033c7    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30033cc    e807cfffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30033d1    83c408                 add esp,0x8
0xb30033d4    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30033d9    0f8536000000           jnz 0xb3003415
        ;; B5
        ;; goto:31 3
        ;; B3
        ;; t0 <- AllocateObject:16(Library:'dart:core' Class: RangeError)
0xb30033df    e8d4feffff             call 0xb30032b8 [ stub ]
0xb30033e4    50                     push eax
        ;; t0 <- StoreLocal:17(:alloc11656, t0, lvl: 0)
0xb30033e5    58                     pop eax
0xb30033e6    8945ec                 mov [ebp-0x14],eax
0xb30033e9    50                     push eax
        ;; PushArgument:18(t0)
        ;; t0 <- Constant:19(#3)
0xb30033ea    b806000000             mov eax,0x6
0xb30033ef    50                     push eax
        ;; PushArgument:20(t0)
        ;; t0 <- LoadLocal:21(groupIdx lvl:0)
0xb30033f0    8b4508                 mov eax,[ebp+0x8]
0xb30033f3    50                     push eax
        ;; PushArgument:22(t0)
        ;; StaticCall:23(RangeError.value t0, t0, t0)
0xb30033f4    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb30033f9    e82acf3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30033fe    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:24(:alloc11656 lvl:0)
0xb3003401    8b45ec                 mov eax,[ebp-0x14]
0xb3003404    50                     push eax
        ;; PushArgument:25(t0)
        ;; Throw:26()
0xb3003405    b9a0d70a08             mov ecx,0x80ad7a0
0xb300340a    ba01000000             mov edx,0x1
0xb300340f    e814cc3702             call 0xb5380028  [stub: CallToRuntime]
0xb3003414    cc                     int3
        ;; B6
        ;; t0 <- LoadLocal:33(this lvl:0)
0xb3003415    8b450c                 mov eax,[ebp+0xc]
0xb3003418    50                     push eax
        ;; PushArgument:34(t0)
        ;; t0 <- LoadLocal:35(groupIdx lvl:0)
0xb3003419    8b4508                 mov eax,[ebp+0x8]
0xb300341c    50                     push eax
        ;; PushArgument:36(t0)
        ;; t0 <- InstanceCall:37(_start@0x36924d72, t0, t0)
0xb300341d    b9812528b3             mov ecx,0xb3282581  'ICData target:'_start@0x36924d72' num-checks: 0'
0xb3003422    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003427    e8eccdffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300342c    83c408                 add esp,0x8
0xb300342f    50                     push eax
        ;; StoreLocal:38(startIndex, t0, lvl: 0)
0xb3003430    58                     pop eax
0xb3003431    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- LoadLocal:39(this lvl:0)
0xb3003434    8b450c                 mov eax,[ebp+0xc]
0xb3003437    50                     push eax
        ;; PushArgument:40(t0)
        ;; t0 <- LoadLocal:41(groupIdx lvl:0)
0xb3003438    8b4508                 mov eax,[ebp+0x8]
0xb300343b    50                     push eax
        ;; PushArgument:42(t0)
        ;; t0 <- InstanceCall:43(_end@0x36924d72, t0, t0)
0xb300343c    b9d12528b3             mov ecx,0xb32825d1  'ICData target:'_end@0x36924d72' num-checks: 0'
0xb3003441    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003446    e8cdcdffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300344b    83c408                 add esp,0x8
0xb300344e    50                     push eax
        ;; StoreLocal:44(endIndex, t0, lvl: 0)
0xb300344f    58                     pop eax
0xb3003450    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:45(startIndex lvl:0)
0xb3003453    8b45f4                 mov eax,[ebp-0xc]
0xb3003456    50                     push eax
        ;; t1 <- Constant:46(#-1)
0xb3003457    b8feffffff             mov eax,0xfffffffe
0xb300345c    50                     push eax
        ;; Branch if EqualityCompare:47(t0 == t1) goto (7, 8)
0xb300345d    5a                     pop edx
0xb300345e    5b                     pop ebx
0xb300345f    53                     push ebx
0xb3003460    52                     push edx
0xb3003461    813c24190040b5         cmp [esp],0xb5400019
0xb3003468    0f8425000000           jz 0xb3003493
0xb300346e    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3003476    0f8417000000           jz 0xb3003493
0xb300347c    b9212628b3             mov ecx,0xb3282621  'ICData target:'==' num-checks: 0'
0xb3003481    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003486    e84dceffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300348b    83c408                 add esp,0x8
0xb300348e    e90d000000             jmp 0xb30034a0
0xb3003493    b9212628b3             mov ecx,0xb3282621  'ICData target:'==' num-checks: 0'
0xb3003498    e8abd4ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb300349d    83c408                 add esp,0x8
0xb30034a0    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30034a5    0f8522000000           jnz 0xb30034cd
        ;; B7
        ;; t0 <- Constant:49(#null)
0xb30034ab    b8190040b5             mov eax,0xb5400019
0xb30034b0    50                     push eax
        ;; Return:50(t0)
0xb30034b1    58                     pop eax
0xb30034b2    baf9aa12b3             mov edx,0xb312aaf9  'Function 'group':.'
0xb30034b7    ff422b                 inc [edx+0x2b]
0xb30034ba    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30034c1    7c05                   jl 0xb30034c8
0xb30034c3    e8f0d3ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30034c8    89ec                   mov esp,ebp
0xb30034ca    5d                     pop ebp
0xb30034cb    c3                     ret
0xb30034cc    90                     nop
        ;; B8
        ;; t0 <- LoadLocal:53(this lvl:0)
0xb30034cd    8b450c                 mov eax,[ebp+0xc]
0xb30034d0    50                     push eax
        ;; PushArgument:54(t0)
        ;; t0 <- InstanceCall:55(get:str, t0)
0xb30034d1    b9792628b3             mov ecx,0xb3282679  'ICData target:'get:str' num-checks: 0'
0xb30034d6    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30034db    e838cdffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30034e0    83c404                 add esp,0x4
0xb30034e3    50                     push eax
        ;; PushArgument:56(t0)
        ;; t0 <- LoadLocal:57(startIndex lvl:0)
0xb30034e4    8b45f4                 mov eax,[ebp-0xc]
0xb30034e7    50                     push eax
        ;; PushArgument:58(t0)
        ;; t0 <- LoadLocal:59(endIndex lvl:0)
0xb30034e8    8b45f0                 mov eax,[ebp-0x10]
0xb30034eb    50                     push eax
        ;; PushArgument:60(t0)
        ;; t0 <- InstanceCall:61(_substringUnchecked@0x36924d72, t0, t0, t0)
0xb30034ec    b9c92628b3             mov ecx,0xb32826c9  'ICData target:'_substringUnchecked@0x36924d72' num-checks: 0'
0xb30034f1    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb30034f6    e81dcdffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30034fb    83c40c                 add esp,0xc
0xb30034fe    50                     push eax
        ;; Return:62(t0)
0xb30034ff    58                     pop eax
0xb3003500    baf9aa12b3             mov edx,0xb312aaf9  'Function 'group':.'
0xb3003505    ff422b                 inc [edx+0x2b]
0xb3003508    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300350f    7c05                   jl 0xb3003516
0xb3003511    e8a2d3ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3003516    89ec                   mov esp,ebp
0xb3003518    5d                     pop ebp
0xb3003519    c3                     ret
0xb300351a    90                     nop
0xb300351b    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300351c    b970d30a08             mov ecx,0x80ad370
0xb3003521    ba00000000             mov edx,0
0xb3003526    e8fdca3702             call 0xb5380028  [stub: CallToRuntime]
0xb300352b    e930feffff             jmp 0xb3003360
0xb3003530    e903cf3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3003535    e9decf3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 55 : 0xb300336f 'ICData target:'<' num-checks: 0'
 60 : 0xb3003374 'ImmutableArray'
 73 : 0xb3003381 'true'
 97 : 0xb3003399 'ICData target:'get:regexp' num-checks: 0'
 102 : 0xb300339e 'ImmutableArray'
 116 : 0xb30033ac 'ICData target:'get:_groupCount@0x36924d72' num-checks: 0'
 121 : 0xb30033b1 'ImmutableArray'
 139 : 0xb30033c3 'ICData target:'>' num-checks: 0'
 144 : 0xb30033c8 'ImmutableArray'
 157 : 0xb30033d5 'true'
 189 : 0xb30033f5 'ImmutableArray'
 230 : 0xb300341e 'ICData target:'_start@0x36924d72' num-checks: 0'
 235 : 0xb3003423 'ImmutableArray'
 261 : 0xb300343d 'ICData target:'_end@0x36924d72' num-checks: 0'
 266 : 0xb3003442 'ImmutableArray'
 325 : 0xb300347d 'ICData target:'==' num-checks: 0'
 330 : 0xb3003482 'ImmutableArray'
 348 : 0xb3003494 'ICData target:'==' num-checks: 0'
 361 : 0xb30034a1 'true'
 379 : 0xb30034b3 'Function 'group':.'
 410 : 0xb30034d2 'ICData target:'get:str' num-checks: 0'
 415 : 0xb30034d7 'ImmutableArray'
 437 : 0xb30034ed 'ICData target:'_substringUnchecked@0x36924d72' num-checks: 0'
 442 : 0xb30034f2 'ImmutableArray'
 457 : 0xb3003501 'Function 'group':.'
}
PC Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72_group' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300336e	deopt-before 	5		11641	-1
0xb300337d	ic-call      	5		11641	-1
0xb300337d	deopt-after  	5		11641	-1
0xb300338b	deopt-before 	29		0	-1
0xb3003398	deopt-before 	10		11648	-1
0xb30033a7	ic-call      	10		11648	-1
0xb30033a7	deopt-after  	10		11648	-1
0xb30033ab	deopt-before 	12		11651	-1
0xb30033ba	ic-call      	12		11651	-1
0xb30033ba	deopt-after  	12		11651	-1
0xb30033c2	deopt-before 	13		11647	-1
0xb30033d1	ic-call      	13		11647	-1
0xb30033d1	deopt-after  	13		11647	-1
0xb30033df	deopt-before 	31		0	-1
0xb30033e4	other        	-1		11656	-1
0xb30033fe	fn-call      	23		11656	-1
0xb30033fe	deopt-after  	23		11656	-1
0xb3003414	other        	-1		11655	-1
0xb300341d	deopt-before 	37		11674	-1
0xb300342c	ic-call      	37		11674	-1
0xb300342c	deopt-after  	37		11674	-1
0xb300343c	deopt-before 	43		11685	-1
0xb300344b	ic-call      	43		11685	-1
0xb300344b	deopt-after  	43		11685	-1
0xb3003461	deopt-before 	47		11694	-1
0xb300348b	ic-call      	47		11694	-1
0xb300348b	deopt-after  	47		11694	-1
0xb300349d	other        	-1		11694	-1
0xb30034c8	other        	-1		0	-1
0xb30034cd	return       	-1		11710	-1
0xb30034d1	deopt-before 	55		11715	-1
0xb30034e0	ic-call      	55		11715	-1
0xb30034e0	deopt-after  	55		11715	-1
0xb30034ec	deopt-before 	61		11720	-1
0xb30034fb	ic-call      	61		11720	-1
0xb30034fb	deopt-after  	61		11720	-1
0xb3003516	other        	-1		0	-1
0xb300351b	return       	-1		11714	-1
0xb300352b	other        	-1		11631	-1
0xb3003530	patch        	-1		0	-1
0xb3003535	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__JSRegExpMatch@0x36924d72_group' {
}
Variable Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72_group' {
  stack var 'this' offset 3 (valid 11537-11729)
  stack var 'groupIdx' offset 2 (valid 11633-11729)
  stack var 'startIndex' offset -3 (valid 11669-11729)
  stack var 'endIndex' offset -4 (valid 11680-11729)
}
Exception Handlers for function 'dart:core__JSRegExpMatch@0x36924d72_group' {
No exception handlers
}
Static call target functions {
  0xb30033fe: dart:core_RangeError_RangeError.value, 0xb5400019
}
Compiling function: 'dart:core__JSRegExpMatch@0x36924d72_get_regexp' @ token 11860
Before Optimizations
==== dart:core__JSRegExpMatch@0x36924d72_get_regexp
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 8, immutable=0)
    Return:5(t0)
--> 'dart:core__JSRegExpMatch@0x36924d72_get_regexp' entry: 0xb3003558 time: 46 us
Code for function 'dart:core__JSRegExpMatch@0x36924d72_get_regexp' {
0xb3003558    8b442404               mov eax,[esp+0x4]
0xb300355c    8b4007                 mov eax,[eax+0x7]
0xb300355f    c3                     ret
0xb3003560    cc                     int3
0xb3003561    e9d2ce3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72_get_regexp' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__JSRegExpMatch@0x36924d72_get_regexp' {
}
Variable Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72_get_regexp' {
  stack var 'this' offset 2 (valid 11537-11860)
}
Exception Handlers for function 'dart:core__JSRegExpMatch@0x36924d72_get_regexp' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__JSSyntaxRegExp@0x36924d72_get__groupCount@0x36924d72' @ token 12284
Before Optimizations
==== dart:core__JSSyntaxRegExp@0x36924d72_get__groupCount@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(JSSyntaxRegExp_getGroupCount)
    Return:4(t0)
--> 'dart:core__JSSyntaxRegExp@0x36924d72_get__groupCount@0x36924d72' entry: 0xb3003578 time: 173 us
Code for function 'dart:core__JSSyntaxRegExp@0x36924d72_get__groupCount@0x36924d72' {
        ;; Enter frame
0xb3003578    55                     push ebp
0xb3003579    89e5                   mov ebp,esp
0xb300357b    e800000000             call 0xb3003580
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3003580    3b25bc195809           cmp esp,[0x95819bc]
0xb3003586    0f8628000000           jna 0xb30035b4
        ;; t0 <- NativeCall:3(JSSyntaxRegExp_getGroupCount)
0xb300358c    68190040b5             push 0xb5400019
0xb3003591    8d4508                 lea eax,[ebp+0x8]
0xb3003594    b900e04508             mov ecx,0x845e000
0xb3003599    ba01000001             mov edx,0x1000001
0xb300359e    e885cb3702             call 0xb5380128  [stub: CallNativeCFunction]
0xb30035a3    58                     pop eax
0xb30035a4    50                     push eax
        ;; Return:4(t0)
0xb30035a5    58                     pop eax
0xb30035a6    ba21921bb3             mov edx,0xb31b9221  'Function 'get:_groupCount@0x36924d72':.'
0xb30035ab    ff422b                 inc [edx+0x2b]
0xb30035ae    89ec                   mov esp,ebp
0xb30035b0    5d                     pop ebp
0xb30035b1    c3                     ret
0xb30035b2    90                     nop
0xb30035b3    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30035b4    b970d30a08             mov ecx,0x80ad370
0xb30035b9    ba00000000             mov edx,0
0xb30035be    e865ca3702             call 0xb5380028  [stub: CallToRuntime]
0xb30035c3    ebc7                   jmp 0xb300358c
0xb30035c5    e96ece3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30035ca    e949cf3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 47 : 0xb30035a7 'Function 'get:_groupCount@0x36924d72':.'
}
PC Descriptors for function 'dart:core__JSSyntaxRegExp@0x36924d72_get__groupCount@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30035a3	other        	-1		12289	-1
0xb30035b3	return       	-1		12289	-1
0xb30035c3	other        	-1		12284	-1
0xb30035c5	patch        	-1		0	-1
0xb30035ca	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__JSSyntaxRegExp@0x36924d72_get__groupCount@0x36924d72' {
}
Variable Descriptors for function 'dart:core__JSSyntaxRegExp@0x36924d72_get__groupCount@0x36924d72' {
  stack var 'this' offset 2 (valid 11896-12289)
}
Exception Handlers for function 'dart:core__JSSyntaxRegExp@0x36924d72_get__groupCount@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__JSRegExpMatch@0x36924d72__start@0x36924d72' @ token 11581
Before Optimizations
==== dart:core__JSRegExpMatch@0x36924d72__start@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:_match@0x36924d72, t0)
    PushArgument:6(t0)
    t0 <- LoadLocal:7(groupIdx lvl:0)
    PushArgument:8(t0)
    t0 <- Constant:9(#2)
    PushArgument:10(t0)
    t0 <- InstanceCall:11(*, t0, t0)
    PushArgument:12(t0)
    t0 <- InstanceCall:13([], t0, t0)
    Return:14(t0)
--> 'dart:core__JSRegExpMatch@0x36924d72__start@0x36924d72' entry: 0xb30035e8 time: 256 us
Code for function 'dart:core__JSRegExpMatch@0x36924d72__start@0x36924d72' {
        ;; Enter frame
0xb30035e8    55                     push ebp
0xb30035e9    89e5                   mov ebp,esp
0xb30035eb    e800000000             call 0xb30035f0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30035f0    3b25bc195809           cmp esp,[0x95819bc]
0xb30035f6    0f8664000000           jna 0xb3003660
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb30035fc    8b450c                 mov eax,[ebp+0xc]
0xb30035ff    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:_match@0x36924d72, t0)
0xb3003600    b9492e28b3             mov ecx,0xb3282e49  'ICData target:'get:_match@0x36924d72' num-checks: 0'
0xb3003605    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300360a    e809ccffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300360f    83c404                 add esp,0x4
0xb3003612    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- LoadLocal:7(groupIdx lvl:0)
0xb3003613    8b4508                 mov eax,[ebp+0x8]
0xb3003616    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- Constant:9(#2)
0xb3003617    b804000000             mov eax,0x4
0xb300361c    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- InstanceCall:11(*, t0, t0)
0xb300361d    b9992e28b3             mov ecx,0xb3282e99  'ICData target:'*' num-checks: 0'
0xb3003622    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003627    e8acccffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300362c    83c408                 add esp,0x8
0xb300362f    50                     push eax
        ;; PushArgument:12(t0)
        ;; t0 <- InstanceCall:13([], t0, t0)
0xb3003630    b9f12e28b3             mov ecx,0xb3282ef1  'ICData target:'[]' num-checks: 0'
0xb3003635    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300363a    e8d9cbffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300363f    83c408                 add esp,0x8
0xb3003642    50                     push eax
        ;; Return:14(t0)
0xb3003643    58                     pop eax
0xb3003644    ba29aa12b3             mov edx,0xb312aa29  'Function '_start@0x36924d72':.'
0xb3003649    ff422b                 inc [edx+0x2b]
0xb300364c    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3003653    7c05                   jl 0xb300365a
0xb3003655    e85ed2ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300365a    89ec                   mov esp,ebp
0xb300365c    5d                     pop ebp
0xb300365d    c3                     ret
0xb300365e    90                     nop
0xb300365f    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3003660    b970d30a08             mov ecx,0x80ad370
0xb3003665    ba00000000             mov edx,0
0xb300366a    e8b9c93702             call 0xb5380028  [stub: CallToRuntime]
0xb300366f    eb8b                   jmp 0xb30035fc
0xb3003671    e9c2cd3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3003676    e99dce3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 25 : 0xb3003601 'ICData target:'get:_match@0x36924d72' num-checks: 0'
 30 : 0xb3003606 'ImmutableArray'
 54 : 0xb300361e 'ICData target:'*' num-checks: 0'
 59 : 0xb3003623 'ImmutableArray'
 73 : 0xb3003631 'ICData target:'[]' num-checks: 0'
 78 : 0xb3003636 'ImmutableArray'
 93 : 0xb3003645 'Function '_start@0x36924d72':.'
}
PC Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72__start@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3003600	deopt-before 	5		11588	-1
0xb300360f	ic-call      	5		11588	-1
0xb300360f	deopt-after  	5		11588	-1
0xb300361d	deopt-before 	11		11594	-1
0xb300362c	ic-call      	11		11594	-1
0xb300362c	deopt-after  	11		11594	-1
0xb3003630	deopt-before 	13		11590	-1
0xb300363f	ic-call      	13		11590	-1
0xb300363f	deopt-after  	13		11590	-1
0xb300365a	other        	-1		0	-1
0xb300365f	return       	-1		11587	-1
0xb300366f	other        	-1		11581	-1
0xb3003671	patch        	-1		0	-1
0xb3003676	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__JSRegExpMatch@0x36924d72__start@0x36924d72' {
}
Variable Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72__start@0x36924d72' {
  stack var 'this' offset 3 (valid 11537-11601)
  stack var 'groupIdx' offset 2 (valid 11583-11601)
}
Exception Handlers for function 'dart:core__JSRegExpMatch@0x36924d72__start@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__JSRegExpMatch@0x36924d72_get__match@0x36924d72' @ token 11875
Before Optimizations
==== dart:core__JSRegExpMatch@0x36924d72_get__match@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 16, immutable=0)
    Return:5(t0)
--> 'dart:core__JSRegExpMatch@0x36924d72_get__match@0x36924d72' entry: 0xb3003698 time: 44 us
Code for function 'dart:core__JSRegExpMatch@0x36924d72_get__match@0x36924d72' {
0xb3003698    8b442404               mov eax,[esp+0x4]
0xb300369c    8b400f                 mov eax,[eax+0xf]
0xb300369f    c3                     ret
0xb30036a0    cc                     int3
0xb30036a1    e992cd3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72_get__match@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__JSRegExpMatch@0x36924d72_get__match@0x36924d72' {
}
Variable Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72_get__match@0x36924d72' {
  stack var 'this' offset 2 (valid 11537-11875)
}
Exception Handlers for function 'dart:core__JSRegExpMatch@0x36924d72_get__match@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__IntegerImplementation@0x36924d72_*' @ token 8948
Before Optimizations
==== dart:core__IntegerImplementation@0x36924d72_*
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(other lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(this lvl:0)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(_mulFromInteger@0x36924d72, t0, t0)
    Return:8(t0)
--> 'dart:core__IntegerImplementation@0x36924d72_*' entry: 0xb30036b8 time: 102 us
Code for function 'dart:core__IntegerImplementation@0x36924d72_*' {
0xb30036b8    8b442404               mov eax,[esp+0x4]
0xb30036bc    8b5c2408               mov ebx,[esp+0x8]
0xb30036c0    0bd8                   or ebx,eax
0xb30036c2    f6c301                 test_b ebx,0x1
0xb30036c5    750a                   jnz 0xb30036d1
0xb30036c7    d1f8                   sar eax, 1
0xb30036c9    0faf442408             imul eax,[esp+0x8]
0xb30036ce    7001                   jo 0xb30036d1
0xb30036d0    c3                     ret
        ;; Enter frame
0xb30036d1    55                     push ebp
0xb30036d2    89e5                   mov ebp,esp
0xb30036d4    e800000000             call 0xb30036d9
0xb30036d9    830424e7               add [esp],0xe7
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30036dd    3b25bc195809           cmp esp,[0x95819bc]
0xb30036e3    0f8638000000           jna 0xb3003721
        ;; t0 <- LoadLocal:3(other lvl:0)
0xb30036e9    8b4508                 mov eax,[ebp+0x8]
0xb30036ec    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(this lvl:0)
0xb30036ed    8b450c                 mov eax,[ebp+0xc]
0xb30036f0    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(_mulFromInteger@0x36924d72, t0, t0)
0xb30036f1    b9493228b3             mov ecx,0xb3283249  'ICData target:'_mulFromInteger@0x36924d72' num-checks: 0'
0xb30036f6    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30036fb    e818cbffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003700    83c408                 add esp,0x8
0xb3003703    50                     push eax
        ;; Return:8(t0)
0xb3003704    58                     pop eax
0xb3003705    ba49631ab3             mov edx,0xb31a6349  'Function '*':.'
0xb300370a    ff422b                 inc [edx+0x2b]
0xb300370d    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3003714    7c05                   jl 0xb300371b
0xb3003716    e89dd1ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300371b    89ec                   mov esp,ebp
0xb300371d    5d                     pop ebp
0xb300371e    c3                     ret
0xb300371f    90                     nop
0xb3003720    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3003721    b970d30a08             mov ecx,0x80ad370
0xb3003726    ba00000000             mov edx,0
0xb300372b    e8f8c83702             call 0xb5380028  [stub: CallToRuntime]
0xb3003730    ebb7                   jmp 0xb30036e9
0xb3003732    e901cd3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3003737    e9dccd3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 58 : 0xb30036f2 'ICData target:'_mulFromInteger@0x36924d72' num-checks: 0'
 63 : 0xb30036f7 'ImmutableArray'
 78 : 0xb3003706 'Function '*':.'
}
PC Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_*' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30036f1	deopt-before 	7		8959	-1
0xb3003700	ic-call      	7		8959	-1
0xb3003700	deopt-after  	7		8959	-1
0xb300371b	other        	-1		0	-1
0xb3003720	return       	-1		8954	-1
0xb3003730	other        	-1		8948	-1
0xb3003732	patch        	-1		0	-1
0xb3003737	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__IntegerImplementation@0x36924d72_*' {
}
Variable Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_*' {
  stack var 'this' offset 3 (valid 8886-8964)
  stack var 'other' offset 2 (valid 8951-8964)
}
Exception Handlers for function 'dart:core__IntegerImplementation@0x36924d72_*' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__JSRegExpMatch@0x36924d72__end@0x36924d72' @ token 11604
Before Optimizations
==== dart:core__JSRegExpMatch@0x36924d72__end@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:_match@0x36924d72, t0)
    PushArgument:6(t0)
    t0 <- LoadLocal:7(groupIdx lvl:0)
    PushArgument:8(t0)
    t0 <- Constant:9(#2)
    PushArgument:10(t0)
    t0 <- InstanceCall:11(*, t0, t0)
    PushArgument:12(t0)
    t0 <- Constant:13(#1)
    PushArgument:14(t0)
    t0 <- InstanceCall:15(+, t0, t0)
    PushArgument:16(t0)
    t0 <- InstanceCall:17([], t0, t0)
    Return:18(t0)
--> 'dart:core__JSRegExpMatch@0x36924d72__end@0x36924d72' entry: 0xb3003758 time: 262 us
Code for function 'dart:core__JSRegExpMatch@0x36924d72__end@0x36924d72' {
        ;; Enter frame
0xb3003758    55                     push ebp
0xb3003759    89e5                   mov ebp,esp
0xb300375b    e800000000             call 0xb3003760
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3003760    3b25bc195809           cmp esp,[0x95819bc]
0xb3003766    0f867d000000           jna 0xb30037e9
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb300376c    8b450c                 mov eax,[ebp+0xc]
0xb300376f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:_match@0x36924d72, t0)
0xb3003770    b9813428b3             mov ecx,0xb3283481  'ICData target:'get:_match@0x36924d72' num-checks: 0'
0xb3003775    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300377a    e899caffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300377f    83c404                 add esp,0x4
0xb3003782    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- LoadLocal:7(groupIdx lvl:0)
0xb3003783    8b4508                 mov eax,[ebp+0x8]
0xb3003786    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- Constant:9(#2)
0xb3003787    b804000000             mov eax,0x4
0xb300378c    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- InstanceCall:11(*, t0, t0)
0xb300378d    b9d13428b3             mov ecx,0xb32834d1  'ICData target:'*' num-checks: 0'
0xb3003792    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003797    e83ccbffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300379c    83c408                 add esp,0x8
0xb300379f    50                     push eax
        ;; PushArgument:12(t0)
        ;; t0 <- Constant:13(#1)
0xb30037a0    b802000000             mov eax,0x2
0xb30037a5    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- InstanceCall:15(+, t0, t0)
0xb30037a6    b9293528b3             mov ecx,0xb3283529  'ICData target:'+' num-checks: 0'
0xb30037ab    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30037b0    e823cbffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30037b5    83c408                 add esp,0x8
0xb30037b8    50                     push eax
        ;; PushArgument:16(t0)
        ;; t0 <- InstanceCall:17([], t0, t0)
0xb30037b9    b9813528b3             mov ecx,0xb3283581  'ICData target:'[]' num-checks: 0'
0xb30037be    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30037c3    e850caffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30037c8    83c408                 add esp,0x8
0xb30037cb    50                     push eax
        ;; Return:18(t0)
0xb30037cc    58                     pop eax
0xb30037cd    ba91aa12b3             mov edx,0xb312aa91  'Function '_end@0x36924d72':.'
0xb30037d2    ff422b                 inc [edx+0x2b]
0xb30037d5    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30037dc    7c05                   jl 0xb30037e3
0xb30037de    e8d5d0ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30037e3    89ec                   mov esp,ebp
0xb30037e5    5d                     pop ebp
0xb30037e6    c3                     ret
0xb30037e7    90                     nop
0xb30037e8    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30037e9    b970d30a08             mov ecx,0x80ad370
0xb30037ee    ba00000000             mov edx,0
0xb30037f3    e830c83702             call 0xb5380028  [stub: CallToRuntime]
0xb30037f8    e96fffffff             jmp 0xb300376c
0xb30037fd    e936cc3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3003802    e911cd3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 25 : 0xb3003771 'ICData target:'get:_match@0x36924d72' num-checks: 0'
 30 : 0xb3003776 'ImmutableArray'
 54 : 0xb300378e 'ICData target:'*' num-checks: 0'
 59 : 0xb3003793 'ImmutableArray'
 79 : 0xb30037a7 'ICData target:'+' num-checks: 0'
 84 : 0xb30037ac 'ImmutableArray'
 98 : 0xb30037ba 'ICData target:'[]' num-checks: 0'
 103 : 0xb30037bf 'ImmutableArray'
 118 : 0xb30037ce 'Function '_end@0x36924d72':.'
}
PC Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72__end@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3003770	deopt-before 	5		11611	-1
0xb300377f	ic-call      	5		11611	-1
0xb300377f	deopt-after  	5		11611	-1
0xb300378d	deopt-before 	11		11617	-1
0xb300379c	ic-call      	11		11617	-1
0xb300379c	deopt-after  	11		11617	-1
0xb30037a6	deopt-before 	15		11621	-1
0xb30037b5	ic-call      	15		11621	-1
0xb30037b5	deopt-after  	15		11621	-1
0xb30037b9	deopt-before 	17		11613	-1
0xb30037c8	ic-call      	17		11613	-1
0xb30037c8	deopt-after  	17		11613	-1
0xb30037e3	other        	-1		0	-1
0xb30037e8	return       	-1		11610	-1
0xb30037f8	other        	-1		11604	-1
0xb30037fd	patch        	-1		0	-1
0xb3003802	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__JSRegExpMatch@0x36924d72__end@0x36924d72' {
}
Variable Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72__end@0x36924d72' {
  stack var 'this' offset 3 (valid 11537-11627)
  stack var 'groupIdx' offset 2 (valid 11606-11627)
}
Exception Handlers for function 'dart:core__JSRegExpMatch@0x36924d72__end@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:uri_Uri__emptyIfNull@0x715366f' @ token 261
Before Optimizations
==== dart:uri_Uri__emptyIfNull@0x715366f
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(val lvl:0)
    t1 <- Constant:4(#null)
    Branch if StrictCompare:6(!==, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:8(val lvl:0)
    StoreLocal:9(:expr_temp, t0, lvl: 0)
    goto:15 4
B3[target]
    t0 <- Constant:10(#)
    StoreLocal:11(:expr_temp, t0, lvl: 0)
    goto:16 4
B4[join] pred(B2, B3)
    t0 <- LoadLocal:17(:expr_temp lvl:0)
    Return:18(t0)
--> 'dart:uri_Uri__emptyIfNull@0x715366f' entry: 0xb3003818 time: 125 us
Code for function 'dart:uri_Uri__emptyIfNull@0x715366f' {
        ;; Enter frame
0xb3003818    55                     push ebp
0xb3003819    89e5                   mov ebp,esp
0xb300381b    e800000000             call 0xb3003820
0xb3003820    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb3003823    b8190040b5             mov eax,0xb5400019
0xb3003828    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300382b    3b25bc195809           cmp esp,[0x95819bc]
0xb3003831    0f8653000000           jna 0xb300388a
        ;; t0 <- LoadLocal:3(val lvl:0)
0xb3003837    8b4508                 mov eax,[ebp+0x8]
0xb300383a    50                     push eax
        ;; t1 <- Constant:4(#null)
0xb300383b    b8190040b5             mov eax,0xb5400019
0xb3003840    50                     push eax
        ;; Branch if StrictCompare:6(!==, t0, t1) goto (2, 3)
0xb3003841    58                     pop eax
0xb3003842    59                     pop ecx
0xb3003843    51                     push ecx
0xb3003844    50                     push eax
0xb3003845    e8becf3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb300384a    58                     pop eax
0xb300384b    59                     pop ecx
0xb300384c    0f840d000000           jz 0xb300385f
        ;; B2
        ;; t0 <- LoadLocal:8(val lvl:0)
0xb3003852    8b4508                 mov eax,[ebp+0x8]
0xb3003855    50                     push eax
        ;; StoreLocal:9(:expr_temp, t0, lvl: 0)
0xb3003856    58                     pop eax
0xb3003857    8945f8                 mov [ebp-0x8],eax
        ;; goto:15 4
0xb300385a    e90a000000             jmp 0xb3003869
        ;; B3
        ;; t0 <- Constant:10(#)
0xb300385f    b8e11240b5             mov eax,0xb54012e1
0xb3003864    50                     push eax
        ;; StoreLocal:11(:expr_temp, t0, lvl: 0)
0xb3003865    58                     pop eax
0xb3003866    8945f8                 mov [ebp-0x8],eax
        ;; goto:16 4
        ;; B4
        ;; t0 <- LoadLocal:17(:expr_temp lvl:0)
0xb3003869    8b45f8                 mov eax,[ebp-0x8]
0xb300386c    50                     push eax
        ;; Return:18(t0)
0xb300386d    58                     pop eax
0xb300386e    ba191c0bb3             mov edx,0xb30b1c19  'Function '_emptyIfNull@0x715366f': static.'
0xb3003873    ff422b                 inc [edx+0x2b]
0xb3003876    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300387d    7c05                   jl 0xb3003884
0xb300387f    e834d0ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3003884    89ec                   mov esp,ebp
0xb3003886    5d                     pop ebp
0xb3003887    c3                     ret
0xb3003888    90                     nop
0xb3003889    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300388a    b970d30a08             mov ecx,0x80ad370
0xb300388f    ba00000000             mov edx,0
0xb3003894    e88fc73702             call 0xb5380028  [stub: CallToRuntime]
0xb3003899    eb9c                   jmp 0xb3003837
0xb300389b    e998cb3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30038a0    e973cc3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 72 : 0xb3003860 ''
 87 : 0xb300386f 'Function '_emptyIfNull@0x715366f': static.'
}
PC Descriptors for function 'dart:uri_Uri__emptyIfNull@0x715366f' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300385a	deopt-before 	15		0	-1
0xb3003869	deopt-before 	16		0	-1
0xb3003884	other        	-1		0	-1
0xb3003889	return       	-1		267	-1
0xb3003899	other        	-1		261	-1
0xb300389b	patch        	-1		0	-1
0xb30038a0	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_Uri__emptyIfNull@0x715366f' {
}
Variable Descriptors for function 'dart:uri_Uri__emptyIfNull@0x715366f' {
  stack var 'val' offset 2 (valid 263-277)
}
Exception Handlers for function 'dart:uri_Uri__emptyIfNull@0x715366f' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb30030cf to 'dart:uri_Uri__emptyIfNull@0x715366f' 0xb3003818
PatchStaticCall: patching from 0xb30030fa to 'dart:uri_Uri__emptyIfNull@0x715366f' 0xb3003818
PatchStaticCall: patching from 0xb3003125 to 'dart:uri_Uri__emptyIfNull@0x715366f' 0xb3003818
Compiling function: 'dart:uri_Uri__parseIntOrZero@0x715366f' @ token 282
Before Optimizations
==== dart:uri_Uri__parseIntOrZero@0x715366f
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(val lvl:0)
    t1 <- Constant:4(#null)
    Branch if StrictCompare:6(!==, t0, t1) goto (2, 5)
B2[target]
    t0 <- LoadLocal:8(val lvl:0)
    t1 <- Constant:9(#)
    Branch if EqualityCompare:10(t0 != t1) goto (3, 6)
B3[target]
    t0 <- LoadLocal:13(val lvl:0)
    PushArgument:14(t0)
    t0 <- StaticCall:15(parse t0)
    Return:16(t0)
B6[target]
    goto:24 4
B5[target]
    goto:22 4
B4[join] pred(B5, B6)
    t0 <- Constant:17(#0)
    Return:18(t0)
--> 'dart:uri_Uri__parseIntOrZero@0x715366f' entry: 0xb30038b8 time: 168 us
Code for function 'dart:uri_Uri__parseIntOrZero@0x715366f' {
        ;; Enter frame
0xb30038b8    55                     push ebp
0xb30038b9    89e5                   mov ebp,esp
0xb30038bb    e800000000             call 0xb30038c0
0xb30038c0    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb30038c3    b8190040b5             mov eax,0xb5400019
0xb30038c8    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30038cb    3b25bc195809           cmp esp,[0x95819bc]
0xb30038d1    0f86c9000000           jna 0xb30039a0
        ;; t0 <- LoadLocal:3(val lvl:0)
0xb30038d7    8b4508                 mov eax,[ebp+0x8]
0xb30038da    50                     push eax
        ;; t1 <- Constant:4(#null)
0xb30038db    b8190040b5             mov eax,0xb5400019
0xb30038e0    50                     push eax
        ;; Branch if StrictCompare:6(!==, t0, t1) goto (2, 5)
0xb30038e1    58                     pop eax
0xb30038e2    59                     pop ecx
0xb30038e3    51                     push ecx
0xb30038e4    50                     push eax
0xb30038e5    e81ecf3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb30038ea    58                     pop eax
0xb30038eb    59                     pop ecx
0xb30038ec    0f848b000000           jz 0xb300397d
        ;; B2
        ;; t0 <- LoadLocal:8(val lvl:0)
0xb30038f2    8b4508                 mov eax,[ebp+0x8]
0xb30038f5    50                     push eax
        ;; t1 <- Constant:9(#)
0xb30038f6    b8e11240b5             mov eax,0xb54012e1
0xb30038fb    50                     push eax
        ;; Branch if EqualityCompare:10(t0 != t1) goto (3, 6)
0xb30038fc    5a                     pop edx
0xb30038fd    5b                     pop ebx
0xb30038fe    53                     push ebx
0xb30038ff    52                     push edx
0xb3003900    813c24190040b5         cmp [esp],0xb5400019
0xb3003907    0f8425000000           jz 0xb3003932
0xb300390d    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3003915    0f8417000000           jz 0xb3003932
0xb300391b    b9e13a28b3             mov ecx,0xb3283ae1  'ICData target:'==' num-checks: 0'
0xb3003920    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003925    e8aec9ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300392a    83c408                 add esp,0x8
0xb300392d    e90d000000             jmp 0xb300393f
0xb3003932    b9e13a28b3             mov ecx,0xb3283ae1  'ICData target:'==' num-checks: 0'
0xb3003937    e80cd0ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb300393c    83c408                 add esp,0x8
0xb300393f    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3003944    0f842e000000           jz 0xb3003978
        ;; B3
        ;; t0 <- LoadLocal:13(val lvl:0)
0xb300394a    8b4508                 mov eax,[ebp+0x8]
0xb300394d    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- StaticCall:15(parse t0)
0xb300394e    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003953    e8d0c93702             call 0xb5380328  [stub: CallStaticFunction]
0xb3003958    83c404                 add esp,0x4
0xb300395b    50                     push eax
        ;; Return:16(t0)
0xb300395c    58                     pop eax
0xb300395d    ba711c0bb3             mov edx,0xb30b1c71  'Function '_parseIntOrZero@0x715366f': static.'
0xb3003962    ff422b                 inc [edx+0x2b]
0xb3003965    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300396c    7c05                   jl 0xb3003973
0xb300396e    e845cfffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3003973    89ec                   mov esp,ebp
0xb3003975    5d                     pop ebp
0xb3003976    c3                     ret
0xb3003977    90                     nop
        ;; B6
        ;; goto:24 4
0xb3003978    e900000000             jmp 0xb300397d
        ;; B5
        ;; goto:22 4
        ;; B4
        ;; t0 <- Constant:17(#0)
0xb300397d    b800000000             mov eax,0
0xb3003982    50                     push eax
        ;; Return:18(t0)
0xb3003983    58                     pop eax
0xb3003984    ba711c0bb3             mov edx,0xb30b1c71  'Function '_parseIntOrZero@0x715366f': static.'
0xb3003989    ff422b                 inc [edx+0x2b]
0xb300398c    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3003993    7c05                   jl 0xb300399a
0xb3003995    e81ecfffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300399a    89ec                   mov esp,ebp
0xb300399c    5d                     pop ebp
0xb300399d    c3                     ret
0xb300399e    90                     nop
0xb300399f    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30039a0    b970d30a08             mov ecx,0x80ad370
0xb30039a5    ba00000000             mov edx,0
0xb30039aa    e879c63702             call 0xb5380028  [stub: CallToRuntime]
0xb30039af    e923ffffff             jmp 0xb30038d7
0xb30039b4    e97fca3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30039b9    e95acb3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 63 : 0xb30038f7 ''
 100 : 0xb300391c 'ICData target:'==' num-checks: 0'
 105 : 0xb3003921 'ImmutableArray'
 123 : 0xb3003933 'ICData target:'==' num-checks: 0'
 136 : 0xb3003940 'true'
 151 : 0xb300394f 'ImmutableArray'
 166 : 0xb300395e 'Function '_parseIntOrZero@0x715366f': static.'
 205 : 0xb3003985 'Function '_parseIntOrZero@0x715366f': static.'
}
PC Descriptors for function 'dart:uri_Uri__parseIntOrZero@0x715366f' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3003900	deopt-before 	10		297	-1
0xb300392a	ic-call      	10		297	-1
0xb300392a	deopt-after  	10		297	-1
0xb300393c	other        	-1		297	-1
0xb3003958	fn-call      	15		307	-1
0xb3003958	deopt-after  	15		307	-1
0xb3003973	other        	-1		0	-1
0xb3003978	return       	-1		302	-1
0xb3003978	deopt-before 	24		0	-1
0xb300397d	deopt-before 	22		0	-1
0xb300399a	other        	-1		0	-1
0xb300399f	return       	-1		315	-1
0xb30039af	other        	-1		282	-1
0xb30039b4	patch        	-1		0	-1
0xb30039b9	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_Uri__parseIntOrZero@0x715366f' {
}
Variable Descriptors for function 'dart:uri_Uri__parseIntOrZero@0x715366f' {
  stack var 'val' offset 2 (valid 284-321)
}
Exception Handlers for function 'dart:uri_Uri__parseIntOrZero@0x715366f' {
No exception handlers
}
Static call target functions {
  0xb3003958: dart:core_int_parse, 0xb5400019
}
PatchStaticCall: patching from 0xb3003150 to 'dart:uri_Uri__parseIntOrZero@0x715366f' 0xb30038b8
Compiling function: 'dart:core__JSRegExpMatch@0x36924d72_get_str' @ token 11866
Before Optimizations
==== dart:core__JSRegExpMatch@0x36924d72_get_str
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 12, immutable=0)
    Return:5(t0)
--> 'dart:core__JSRegExpMatch@0x36924d72_get_str' entry: 0xb30039d8 time: 43 us
Code for function 'dart:core__JSRegExpMatch@0x36924d72_get_str' {
0xb30039d8    8b442404               mov eax,[esp+0x4]
0xb30039dc    8b400b                 mov eax,[eax+0xb]
0xb30039df    c3                     ret
0xb30039e0    cc                     int3
0xb30039e1    e952ca3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72_get_str' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__JSRegExpMatch@0x36924d72_get_str' {
}
Variable Descriptors for function 'dart:core__JSRegExpMatch@0x36924d72_get_str' {
  stack var 'this' offset 2 (valid 11537-11866)
}
Exception Handlers for function 'dart:core__JSRegExpMatch@0x36924d72_get_str' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBase@0x36924d72__substringUnchecked@0x36924d72' @ token 13350
Before Optimizations
==== dart:core__StringBase@0x36924d72__substringUnchecked@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(startIndex lvl:0)
    t1 <- LoadLocal:4(endIndex lvl:0)
    Branch if EqualityCompare:5(t0 == t1) goto (2, 3)
B2[target]
    t0 <- Constant:7(#)
    Return:8(t0)
B3[target]
    t0 <- LoadLocal:11(startIndex lvl:0)
    PushArgument:12(t0)
    t0 <- Constant:13(#1)
    PushArgument:14(t0)
    t0 <- InstanceCall:15(+, t0, t0)
    t1 <- LoadLocal:16(endIndex lvl:0)
    Branch if EqualityCompare:17(t0 == t1) goto (4, 5)
B4[target]
    t0 <- LoadLocal:19(this lvl:0)
    PushArgument:20(t0)
    t0 <- LoadLocal:21(startIndex lvl:0)
    PushArgument:22(t0)
    t0 <- InstanceCall:23([], t0, t0)
    Return:24(t0)
B5[target]
    t0 <- LoadLocal:27(this lvl:0)
    PushArgument:28(t0)
    t0 <- LoadLocal:29(startIndex lvl:0)
    PushArgument:30(t0)
    t0 <- LoadLocal:31(endIndex lvl:0)
    PushArgument:32(t0)
    t0 <- InstanceCall:33(_substringUncheckedNative@0x36924d72, t0, t0, t0)
    Return:34(t0)
--> 'dart:core__StringBase@0x36924d72__substringUnchecked@0x36924d72' entry: 0xb30039f8 time: 351 us
Code for function 'dart:core__StringBase@0x36924d72__substringUnchecked@0x36924d72' {
        ;; Enter frame
0xb30039f8    55                     push ebp
0xb30039f9    89e5                   mov ebp,esp
0xb30039fb    e800000000             call 0xb3003a00
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3003a00    3b25bc195809           cmp esp,[0x95819bc]
0xb3003a06    0f865a010000           jna 0xb3003b66
        ;; t0 <- LoadLocal:3(startIndex lvl:0)
0xb3003a0c    8b450c                 mov eax,[ebp+0xc]
0xb3003a0f    50                     push eax
        ;; t1 <- LoadLocal:4(endIndex lvl:0)
0xb3003a10    8b4508                 mov eax,[ebp+0x8]
0xb3003a13    50                     push eax
        ;; Branch if EqualityCompare:5(t0 == t1) goto (2, 3)
0xb3003a14    5a                     pop edx
0xb3003a15    5b                     pop ebx
0xb3003a16    53                     push ebx
0xb3003a17    52                     push edx
0xb3003a18    813c24190040b5         cmp [esp],0xb5400019
0xb3003a1f    0f8425000000           jz 0xb3003a4a
0xb3003a25    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3003a2d    0f8417000000           jz 0xb3003a4a
0xb3003a33    b9813e28b3             mov ecx,0xb3283e81  'ICData target:'==' num-checks: 0'
0xb3003a38    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003a3d    e896c8ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3003a42    83c408                 add esp,0x8
0xb3003a45    e90d000000             jmp 0xb3003a57
0xb3003a4a    b9813e28b3             mov ecx,0xb3283e81  'ICData target:'==' num-checks: 0'
0xb3003a4f    e8f4ceffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3003a54    83c408                 add esp,0x8
0xb3003a57    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3003a5c    0f8522000000           jnz 0xb3003a84
        ;; B2
        ;; t0 <- Constant:7(#)
0xb3003a62    b8e11240b5             mov eax,0xb54012e1
0xb3003a67    50                     push eax
        ;; Return:8(t0)
0xb3003a68    58                     pop eax
0xb3003a69    ba59a81ab3             mov edx,0xb31aa859  'Function '_substringUnchecked@0x36924d72':.'
0xb3003a6e    ff422b                 inc [edx+0x2b]
0xb3003a71    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3003a78    7c05                   jl 0xb3003a7f
0xb3003a7a    e839ceffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3003a7f    89ec                   mov esp,ebp
0xb3003a81    5d                     pop ebp
0xb3003a82    c3                     ret
0xb3003a83    90                     nop
        ;; B3
        ;; t0 <- LoadLocal:11(startIndex lvl:0)
0xb3003a84    8b450c                 mov eax,[ebp+0xc]
0xb3003a87    50                     push eax
        ;; PushArgument:12(t0)
        ;; t0 <- Constant:13(#1)
0xb3003a88    b802000000             mov eax,0x2
0xb3003a8d    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- InstanceCall:15(+, t0, t0)
0xb3003a8e    b9d93e28b3             mov ecx,0xb3283ed9  'ICData target:'+' num-checks: 0'
0xb3003a93    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003a98    e83bc8ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3003a9d    83c408                 add esp,0x8
0xb3003aa0    50                     push eax
        ;; t1 <- LoadLocal:16(endIndex lvl:0)
0xb3003aa1    8b4508                 mov eax,[ebp+0x8]
0xb3003aa4    50                     push eax
        ;; Branch if EqualityCompare:17(t0 == t1) goto (4, 5)
0xb3003aa5    5a                     pop edx
0xb3003aa6    5b                     pop ebx
0xb3003aa7    53                     push ebx
0xb3003aa8    52                     push edx
0xb3003aa9    813c24190040b5         cmp [esp],0xb5400019
0xb3003ab0    0f8425000000           jz 0xb3003adb
0xb3003ab6    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3003abe    0f8417000000           jz 0xb3003adb
0xb3003ac4    b9313f28b3             mov ecx,0xb3283f31  'ICData target:'==' num-checks: 0'
0xb3003ac9    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003ace    e805c8ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3003ad3    83c408                 add esp,0x8
0xb3003ad6    e90d000000             jmp 0xb3003ae8
0xb3003adb    b9313f28b3             mov ecx,0xb3283f31  'ICData target:'==' num-checks: 0'
0xb3003ae0    e863ceffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3003ae5    83c408                 add esp,0x8
0xb3003ae8    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3003aed    0f8537000000           jnz 0xb3003b2a
        ;; B4
        ;; t0 <- LoadLocal:19(this lvl:0)
0xb3003af3    8b4510                 mov eax,[ebp+0x10]
0xb3003af6    50                     push eax
        ;; PushArgument:20(t0)
        ;; t0 <- LoadLocal:21(startIndex lvl:0)
0xb3003af7    8b450c                 mov eax,[ebp+0xc]
0xb3003afa    50                     push eax
        ;; PushArgument:22(t0)
        ;; t0 <- InstanceCall:23([], t0, t0)
0xb3003afb    b9893f28b3             mov ecx,0xb3283f89  'ICData target:'[]' num-checks: 0'
0xb3003b00    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003b05    e80ec7ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003b0a    83c408                 add esp,0x8
0xb3003b0d    50                     push eax
        ;; Return:24(t0)
0xb3003b0e    58                     pop eax
0xb3003b0f    ba59a81ab3             mov edx,0xb31aa859  'Function '_substringUnchecked@0x36924d72':.'
0xb3003b14    ff422b                 inc [edx+0x2b]
0xb3003b17    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3003b1e    7c05                   jl 0xb3003b25
0xb3003b20    e893cdffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3003b25    89ec                   mov esp,ebp
0xb3003b27    5d                     pop ebp
0xb3003b28    c3                     ret
0xb3003b29    90                     nop
        ;; B5
        ;; t0 <- LoadLocal:27(this lvl:0)
0xb3003b2a    8b4510                 mov eax,[ebp+0x10]
0xb3003b2d    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- LoadLocal:29(startIndex lvl:0)
0xb3003b2e    8b450c                 mov eax,[ebp+0xc]
0xb3003b31    50                     push eax
        ;; PushArgument:30(t0)
        ;; t0 <- LoadLocal:31(endIndex lvl:0)
0xb3003b32    8b4508                 mov eax,[ebp+0x8]
0xb3003b35    50                     push eax
        ;; PushArgument:32(t0)
        ;; t0 <- InstanceCall:33(_substringUncheckedNative@0x36924d72, t0, t0, t0)
0xb3003b36    b9d93f28b3             mov ecx,0xb3283fd9  'ICData target:'_substringUncheckedNative@0x36924d72' num-checks: 0'
0xb3003b3b    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3003b40    e8d3c6ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003b45    83c40c                 add esp,0xc
0xb3003b48    50                     push eax
        ;; Return:34(t0)
0xb3003b49    58                     pop eax
0xb3003b4a    ba59a81ab3             mov edx,0xb31aa859  'Function '_substringUnchecked@0x36924d72':.'
0xb3003b4f    ff422b                 inc [edx+0x2b]
0xb3003b52    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3003b59    7c05                   jl 0xb3003b60
0xb3003b5b    e858cdffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3003b60    89ec                   mov esp,ebp
0xb3003b62    5d                     pop ebp
0xb3003b63    c3                     ret
0xb3003b64    90                     nop
0xb3003b65    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3003b66    b970d30a08             mov ecx,0x80ad370
0xb3003b6b    ba00000000             mov edx,0
0xb3003b70    e8b3c43702             call 0xb5380028  [stub: CallToRuntime]
0xb3003b75    e992feffff             jmp 0xb3003a0c
0xb3003b7a    e9b9c83702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3003b7f    e994c93702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 60 : 0xb3003a34 'ICData target:'==' num-checks: 0'
 65 : 0xb3003a39 'ImmutableArray'
 83 : 0xb3003a4b 'ICData target:'==' num-checks: 0'
 96 : 0xb3003a58 'true'
 107 : 0xb3003a63 ''
 114 : 0xb3003a6a 'Function '_substringUnchecked@0x36924d72':.'
 151 : 0xb3003a8f 'ICData target:'+' num-checks: 0'
 156 : 0xb3003a94 'ImmutableArray'
 205 : 0xb3003ac5 'ICData target:'==' num-checks: 0'
 210 : 0xb3003aca 'ImmutableArray'
 228 : 0xb3003adc 'ICData target:'==' num-checks: 0'
 241 : 0xb3003ae9 'true'
 260 : 0xb3003afc 'ICData target:'[]' num-checks: 0'
 265 : 0xb3003b01 'ImmutableArray'
 280 : 0xb3003b10 'Function '_substringUnchecked@0x36924d72':.'
 319 : 0xb3003b37 'ICData target:'_substringUncheckedNative@0x36924d72' num-checks: 0'
 324 : 0xb3003b3c 'ImmutableArray'
 339 : 0xb3003b4b 'Function '_substringUnchecked@0x36924d72':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72__substringUnchecked@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3003a18	deopt-before 	5		13423	-1
0xb3003a42	ic-call      	5		13423	-1
0xb3003a42	deopt-after  	5		13423	-1
0xb3003a54	other        	-1		13423	-1
0xb3003a7f	other        	-1		0	-1
0xb3003a84	return       	-1		13428	-1
0xb3003a8e	deopt-before 	15		13438	-1
0xb3003a9d	ic-call      	15		13438	-1
0xb3003a9d	deopt-after  	15		13438	-1
0xb3003aa9	deopt-before 	17		13442	-1
0xb3003ad3	ic-call      	17		13442	-1
0xb3003ad3	deopt-after  	17		13442	-1
0xb3003ae5	other        	-1		13442	-1
0xb3003afb	deopt-before 	23		13449	-1
0xb3003b0a	ic-call      	23		13449	-1
0xb3003b0a	deopt-after  	23		13449	-1
0xb3003b25	other        	-1		0	-1
0xb3003b2a	return       	-1		13447	-1
0xb3003b36	deopt-before 	33		13458	-1
0xb3003b45	ic-call      	33		13458	-1
0xb3003b45	deopt-after  	33		13458	-1
0xb3003b60	other        	-1		0	-1
0xb3003b65	return       	-1		13455	-1
0xb3003b75	other        	-1		13350	-1
0xb3003b7a	patch        	-1		0	-1
0xb3003b7f	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72__substringUnchecked@0x36924d72' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72__substringUnchecked@0x36924d72' {
  stack var 'this' offset 4 (valid 12342-13467)
  stack var 'startIndex' offset 3 (valid 13352-13467)
  stack var 'endIndex' offset 2 (valid 13356-13467)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72__substringUnchecked@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__OneByteString@0x36924d72__substringUncheckedNative@0x36924d72' @ token 15132
Before Optimizations
==== dart:core__OneByteString@0x36924d72__substringUncheckedNative@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(OneByteString_substringUnchecked)
    Return:4(t0)
--> 'dart:core__OneByteString@0x36924d72__substringUncheckedNative@0x36924d72' entry: 0xb3003b98 time: 178 us
Code for function 'dart:core__OneByteString@0x36924d72__substringUncheckedNative@0x36924d72' {
        ;; Enter frame
0xb3003b98    55                     push ebp
0xb3003b99    89e5                   mov ebp,esp
0xb3003b9b    e800000000             call 0xb3003ba0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3003ba0    3b25bc195809           cmp esp,[0x95819bc]
0xb3003ba6    0f8628000000           jna 0xb3003bd4
        ;; t0 <- NativeCall:3(OneByteString_substringUnchecked)
0xb3003bac    68190040b5             push 0xb5400019
0xb3003bb1    8d4510                 lea eax,[ebp+0x10]
0xb3003bb4    b920334608             mov ecx,0x8463320
0xb3003bb9    ba03000001             mov edx,0x1000003
0xb3003bbe    e865c53702             call 0xb5380128  [stub: CallNativeCFunction]
0xb3003bc3    58                     pop eax
0xb3003bc4    50                     push eax
        ;; Return:4(t0)
0xb3003bc5    58                     pop eax
0xb3003bc6    ba41a01ab3             mov edx,0xb31aa041  'Function '_substringUncheckedNative@0x36924d72':.'
0xb3003bcb    ff422b                 inc [edx+0x2b]
0xb3003bce    89ec                   mov esp,ebp
0xb3003bd0    5d                     pop ebp
0xb3003bd1    c3                     ret
0xb3003bd2    90                     nop
0xb3003bd3    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3003bd4    b970d30a08             mov ecx,0x80ad370
0xb3003bd9    ba00000000             mov edx,0
0xb3003bde    e845c43702             call 0xb5380028  [stub: CallToRuntime]
0xb3003be3    ebc7                   jmp 0xb3003bac
0xb3003be5    e94ec83702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3003bea    e929c93702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 47 : 0xb3003bc7 'Function '_substringUncheckedNative@0x36924d72':.'
}
PC Descriptors for function 'dart:core__OneByteString@0x36924d72__substringUncheckedNative@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3003bc3	other        	-1		15146	-1
0xb3003bd3	return       	-1		15146	-1
0xb3003be3	other        	-1		15132	-1
0xb3003be5	patch        	-1		0	-1
0xb3003bea	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__OneByteString@0x36924d72__substringUncheckedNative@0x36924d72' {
}
Variable Descriptors for function 'dart:core__OneByteString@0x36924d72__substringUncheckedNative@0x36924d72' {
  stack var 'this' offset 4 (valid 15073-15146)
  stack var 'startIndex' offset 3 (valid 15134-15146)
  stack var 'endIndex' offset 2 (valid 15138-15146)
}
Exception Handlers for function 'dart:core__OneByteString@0x36924d72__substringUncheckedNative@0x36924d72' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb300317b to 'dart:uri_Uri__emptyIfNull@0x715366f' 0xb3003818
PatchStaticCall: patching from 0xb30031a6 to 'dart:uri_Uri__emptyIfNull@0x715366f' 0xb3003818
PatchStaticCall: patching from 0xb30031d1 to 'dart:uri_Uri__emptyIfNull@0x715366f' 0xb3003818
PatchStaticCall: patching from 0xb30031df to 'dart:uri_Uri_Uri.fromComponents' 0xb3002408
Compiling function: 'dart:uri_Uri_resolveUri' @ token 476
Before Optimizations
==== dart:uri_Uri_resolveUri
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#null)
    StoreLocal:4(targetScheme, t0, lvl: 0)
    t0 <- Constant:5(#null)
    StoreLocal:6(targetUserInfo, t0, lvl: 0)
    t0 <- Constant:7(#null)
    StoreLocal:8(targetDomain, t0, lvl: 0)
    t0 <- Constant:9(#null)
    StoreLocal:10(targetPort, t0, lvl: 0)
    t0 <- Constant:11(#null)
    StoreLocal:12(targetPath, t0, lvl: 0)
    t0 <- Constant:13(#null)
    StoreLocal:14(targetQuery, t0, lvl: 0)
    t0 <- LoadLocal:15(reference lvl:0)
    PushArgument:16(t0)
    t0 <- InstanceCall:17(get:scheme, t0)
    t1 <- Constant:18(#)
    Branch if EqualityCompare:19(t0 != t1) goto (14, 15)
B14[target]
    t0 <- LoadLocal:21(reference lvl:0)
    PushArgument:22(t0)
    t0 <- InstanceCall:23(get:scheme, t0)
    StoreLocal:24(targetScheme, t0, lvl: 0)
    t0 <- LoadLocal:25(reference lvl:0)
    PushArgument:26(t0)
    t0 <- InstanceCall:27(get:userInfo, t0)
    StoreLocal:28(targetUserInfo, t0, lvl: 0)
    t0 <- LoadLocal:29(reference lvl:0)
    PushArgument:30(t0)
    t0 <- InstanceCall:31(get:domain, t0)
    StoreLocal:32(targetDomain, t0, lvl: 0)
    t0 <- LoadLocal:33(reference lvl:0)
    PushArgument:34(t0)
    t0 <- InstanceCall:35(get:port, t0)
    StoreLocal:36(targetPort, t0, lvl: 0)
    t0 <- LoadLocal:37(reference lvl:0)
    PushArgument:38(t0)
    t0 <- InstanceCall:39(get:path, t0)
    PushArgument:40(t0)
    t0 <- StaticCall:41(removeDotSegments t0)
    StoreLocal:42(targetPath, t0, lvl: 0)
    t0 <- LoadLocal:43(reference lvl:0)
    PushArgument:44(t0)
    t0 <- InstanceCall:45(get:query, t0)
    StoreLocal:46(targetQuery, t0, lvl: 0)
    goto:170 16
B15[target]
    t0 <- LoadLocal:47(reference lvl:0)
    PushArgument:48(t0)
    t0 <- InstanceCall:49(hasAuthority, t0)
    t1 <- Constant:50(#true)
    Branch if StrictCompare:51(===, t0, t1) goto (11, 12)
B11[target]
    t0 <- LoadLocal:53(reference lvl:0)
    PushArgument:54(t0)
    t0 <- InstanceCall:55(get:userInfo, t0)
    StoreLocal:56(targetUserInfo, t0, lvl: 0)
    t0 <- LoadLocal:57(reference lvl:0)
    PushArgument:58(t0)
    t0 <- InstanceCall:59(get:domain, t0)
    StoreLocal:60(targetDomain, t0, lvl: 0)
    t0 <- LoadLocal:61(reference lvl:0)
    PushArgument:62(t0)
    t0 <- InstanceCall:63(get:port, t0)
    StoreLocal:64(targetPort, t0, lvl: 0)
    t0 <- LoadLocal:65(reference lvl:0)
    PushArgument:66(t0)
    t0 <- InstanceCall:67(get:path, t0)
    PushArgument:68(t0)
    t0 <- StaticCall:69(removeDotSegments t0)
    StoreLocal:70(targetPath, t0, lvl: 0)
    t0 <- LoadLocal:71(reference lvl:0)
    PushArgument:72(t0)
    t0 <- InstanceCall:73(get:query, t0)
    StoreLocal:74(targetQuery, t0, lvl: 0)
    goto:161 13
B12[target]
    t0 <- LoadLocal:75(reference lvl:0)
    PushArgument:76(t0)
    t0 <- InstanceCall:77(get:path, t0)
    t1 <- Constant:78(#)
    Branch if EqualityCompare:79(t0 == t1) goto (8, 9)
B8[target]
    t0 <- LoadLocal:81(this lvl:0)
    PushArgument:82(t0)
    t0 <- InstanceCall:83(get:path, t0)
    StoreLocal:84(targetPath, t0, lvl: 0)
    t0 <- LoadLocal:85(reference lvl:0)
    PushArgument:86(t0)
    t0 <- InstanceCall:87(get:query, t0)
    t1 <- Constant:88(#)
    Branch if EqualityCompare:89(t0 != t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:91(reference lvl:0)
    PushArgument:92(t0)
    t0 <- InstanceCall:93(get:query, t0)
    StoreLocal:94(targetQuery, t0, lvl: 0)
    goto:102 4
B3[target]
    t0 <- LoadLocal:95(this lvl:0)
    PushArgument:96(t0)
    t0 <- InstanceCall:97(get:query, t0)
    StoreLocal:98(targetQuery, t0, lvl: 0)
    goto:103 4
B4[join] pred(B2, B3)
    goto:144 10
B9[target]
    t0 <- LoadLocal:104(reference lvl:0)
    PushArgument:105(t0)
    t0 <- InstanceCall:106(get:path, t0)
    PushArgument:107(t0)
    t0 <- Constant:108(#/)
    PushArgument:109(t0)
    t0 <- InstanceCall:110(startsWith, t0, t0)
    t1 <- Constant:111(#true)
    Branch if StrictCompare:112(===, t0, t1) goto (5, 6)
B5[target]
    t0 <- LoadLocal:114(reference lvl:0)
    PushArgument:115(t0)
    t0 <- InstanceCall:116(get:path, t0)
    PushArgument:117(t0)
    t0 <- StaticCall:118(removeDotSegments t0)
    StoreLocal:119(targetPath, t0, lvl: 0)
    goto:135 7
B6[target]
    t0 <- LoadLocal:120(this lvl:0)
    PushArgument:121(t0)
    t0 <- InstanceCall:122(get:path, t0)
    PushArgument:123(t0)
    t0 <- LoadLocal:124(reference lvl:0)
    PushArgument:125(t0)
    t0 <- InstanceCall:126(get:path, t0)
    PushArgument:127(t0)
    t0 <- StaticCall:128(merge t0, t0)
    PushArgument:129(t0)
    t0 <- StaticCall:130(removeDotSegments t0)
    StoreLocal:131(targetPath, t0, lvl: 0)
    goto:136 7
B7[join] pred(B5, B6)
    t0 <- LoadLocal:137(reference lvl:0)
    PushArgument:138(t0)
    t0 <- InstanceCall:139(get:query, t0)
    StoreLocal:140(targetQuery, t0, lvl: 0)
    goto:145 10
B10[join] pred(B4, B7)
    t0 <- LoadLocal:146(this lvl:0)
    PushArgument:147(t0)
    t0 <- InstanceCall:148(get:userInfo, t0)
    StoreLocal:149(targetUserInfo, t0, lvl: 0)
    t0 <- LoadLocal:150(this lvl:0)
    PushArgument:151(t0)
    t0 <- InstanceCall:152(get:domain, t0)
    StoreLocal:153(targetDomain, t0, lvl: 0)
    t0 <- LoadLocal:154(this lvl:0)
    PushArgument:155(t0)
    t0 <- InstanceCall:156(get:port, t0)
    StoreLocal:157(targetPort, t0, lvl: 0)
    goto:162 13
B13[join] pred(B10, B11)
    t0 <- LoadLocal:163(this lvl:0)
    PushArgument:164(t0)
    t0 <- InstanceCall:165(get:scheme, t0)
    StoreLocal:166(targetScheme, t0, lvl: 0)
    goto:171 16
B16[join] pred(B13, B14)
    t0 <- AllocateObject:172(Library:'dart:uri' Class: Uri)
    t0 <- StoreLocal:173(:alloc772, t0, lvl: 0)
    PushArgument:174(t0)
    t0 <- Constant:175(#3)
    PushArgument:176(t0)
    t0 <- LoadLocal:177(targetScheme lvl:0)
    PushArgument:178(t0)
    t0 <- LoadLocal:179(targetUserInfo lvl:0)
    PushArgument:180(t0)
    t0 <- LoadLocal:181(targetDomain lvl:0)
    PushArgument:182(t0)
    t0 <- LoadLocal:183(targetPort lvl:0)
    PushArgument:184(t0)
    t0 <- LoadLocal:185(targetPath lvl:0)
    PushArgument:186(t0)
    t0 <- LoadLocal:187(targetQuery lvl:0)
    PushArgument:188(t0)
    t0 <- LoadLocal:189(reference lvl:0)
    PushArgument:190(t0)
    t0 <- InstanceCall:191(get:fragment, t0)
    PushArgument:192(t0)
    StaticCall:193(Uri.fromComponents t0, t0, t0, t0, t0, t0, t0, t0, t0)
    t0 <- LoadLocal:194(:alloc772 lvl:0)
    Return:195(t0)
--> 'dart:uri_Uri_resolveUri' entry: 0xb3003c08 time: 1285 us
Code for function 'dart:uri_Uri_resolveUri' {
        ;; Enter frame
0xb3003c08    55                     push ebp
0xb3003c09    89e5                   mov ebp,esp
0xb3003c0b    e800000000             call 0xb3003c10
0xb3003c10    83ec20                 sub esp,0x20
        ;; Initialize spill slots
0xb3003c13    b8190040b5             mov eax,0xb5400019
0xb3003c18    8945f8                 mov [ebp-0x8],eax
0xb3003c1b    8945f4                 mov [ebp-0xc],eax
0xb3003c1e    8945f0                 mov [ebp-0x10],eax
0xb3003c21    8945ec                 mov [ebp-0x14],eax
0xb3003c24    8945e8                 mov [ebp-0x18],eax
0xb3003c27    8945e4                 mov [ebp-0x1c],eax
0xb3003c2a    8945e0                 mov [ebp-0x20],eax
0xb3003c2d    8945dc                 mov [ebp-0x24],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3003c30    3b25bc195809           cmp esp,[0x95819bc]
0xb3003c36    0f860d050000           jna 0xb3004149
        ;; t0 <- Constant:3(#null)
0xb3003c3c    b8190040b5             mov eax,0xb5400019
0xb3003c41    50                     push eax
        ;; StoreLocal:4(targetScheme, t0, lvl: 0)
0xb3003c42    58                     pop eax
0xb3003c43    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- Constant:5(#null)
0xb3003c46    b8190040b5             mov eax,0xb5400019
0xb3003c4b    50                     push eax
        ;; StoreLocal:6(targetUserInfo, t0, lvl: 0)
0xb3003c4c    58                     pop eax
0xb3003c4d    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- Constant:7(#null)
0xb3003c50    b8190040b5             mov eax,0xb5400019
0xb3003c55    50                     push eax
        ;; StoreLocal:8(targetDomain, t0, lvl: 0)
0xb3003c56    58                     pop eax
0xb3003c57    8945ec                 mov [ebp-0x14],eax
        ;; t0 <- Constant:9(#null)
0xb3003c5a    b8190040b5             mov eax,0xb5400019
0xb3003c5f    50                     push eax
        ;; StoreLocal:10(targetPort, t0, lvl: 0)
0xb3003c60    58                     pop eax
0xb3003c61    8945e8                 mov [ebp-0x18],eax
        ;; t0 <- Constant:11(#null)
0xb3003c64    b8190040b5             mov eax,0xb5400019
0xb3003c69    50                     push eax
        ;; StoreLocal:12(targetPath, t0, lvl: 0)
0xb3003c6a    58                     pop eax
0xb3003c6b    8945e4                 mov [ebp-0x1c],eax
        ;; t0 <- Constant:13(#null)
0xb3003c6e    b8190040b5             mov eax,0xb5400019
0xb3003c73    50                     push eax
        ;; StoreLocal:14(targetQuery, t0, lvl: 0)
0xb3003c74    58                     pop eax
0xb3003c75    8945e0                 mov [ebp-0x20],eax
        ;; t0 <- LoadLocal:15(reference lvl:0)
0xb3003c78    8b4508                 mov eax,[ebp+0x8]
0xb3003c7b    50                     push eax
        ;; PushArgument:16(t0)
        ;; t0 <- InstanceCall:17(get:scheme, t0)
0xb3003c7c    b9614628b3             mov ecx,0xb3284661  'ICData target:'get:scheme' num-checks: 0'
0xb3003c81    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003c86    e88dc5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003c8b    83c404                 add esp,0x4
0xb3003c8e    50                     push eax
        ;; t1 <- Constant:18(#)
0xb3003c8f    b8e11240b5             mov eax,0xb54012e1
0xb3003c94    50                     push eax
        ;; Branch if EqualityCompare:19(t0 != t1) goto (14, 15)
0xb3003c95    5a                     pop edx
0xb3003c96    5b                     pop ebx
0xb3003c97    53                     push ebx
0xb3003c98    52                     push edx
0xb3003c99    813c24190040b5         cmp [esp],0xb5400019
0xb3003ca0    0f8425000000           jz 0xb3003ccb
0xb3003ca6    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3003cae    0f8417000000           jz 0xb3003ccb
0xb3003cb4    b9b14628b3             mov ecx,0xb32846b1  'ICData target:'==' num-checks: 0'
0xb3003cb9    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003cbe    e815c6ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3003cc3    83c408                 add esp,0x8
0xb3003cc6    e90d000000             jmp 0xb3003cd8
0xb3003ccb    b9b14628b3             mov ecx,0xb32846b1  'ICData target:'==' num-checks: 0'
0xb3003cd0    e873ccffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3003cd5    83c408                 add esp,0x8
0xb3003cd8    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3003cdd    0f84b5000000           jz 0xb3003d98
        ;; B14
        ;; t0 <- LoadLocal:21(reference lvl:0)
0xb3003ce3    8b4508                 mov eax,[ebp+0x8]
0xb3003ce6    50                     push eax
        ;; PushArgument:22(t0)
        ;; t0 <- InstanceCall:23(get:scheme, t0)
0xb3003ce7    b9094728b3             mov ecx,0xb3284709  'ICData target:'get:scheme' num-checks: 0'
0xb3003cec    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003cf1    e822c5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003cf6    83c404                 add esp,0x4
0xb3003cf9    50                     push eax
        ;; StoreLocal:24(targetScheme, t0, lvl: 0)
0xb3003cfa    58                     pop eax
0xb3003cfb    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- LoadLocal:25(reference lvl:0)
0xb3003cfe    8b4508                 mov eax,[ebp+0x8]
0xb3003d01    50                     push eax
        ;; PushArgument:26(t0)
        ;; t0 <- InstanceCall:27(get:userInfo, t0)
0xb3003d02    b9594728b3             mov ecx,0xb3284759  'ICData target:'get:userInfo' num-checks: 0'
0xb3003d07    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003d0c    e807c5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003d11    83c404                 add esp,0x4
0xb3003d14    50                     push eax
        ;; StoreLocal:28(targetUserInfo, t0, lvl: 0)
0xb3003d15    58                     pop eax
0xb3003d16    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:29(reference lvl:0)
0xb3003d19    8b4508                 mov eax,[ebp+0x8]
0xb3003d1c    50                     push eax
        ;; PushArgument:30(t0)
        ;; t0 <- InstanceCall:31(get:domain, t0)
0xb3003d1d    b9a94728b3             mov ecx,0xb32847a9  'ICData target:'get:domain' num-checks: 0'
0xb3003d22    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003d27    e8ecc4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003d2c    83c404                 add esp,0x4
0xb3003d2f    50                     push eax
        ;; StoreLocal:32(targetDomain, t0, lvl: 0)
0xb3003d30    58                     pop eax
0xb3003d31    8945ec                 mov [ebp-0x14],eax
        ;; t0 <- LoadLocal:33(reference lvl:0)
0xb3003d34    8b4508                 mov eax,[ebp+0x8]
0xb3003d37    50                     push eax
        ;; PushArgument:34(t0)
        ;; t0 <- InstanceCall:35(get:port, t0)
0xb3003d38    b9f94728b3             mov ecx,0xb32847f9  'ICData target:'get:port' num-checks: 0'
0xb3003d3d    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003d42    e8d1c4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003d47    83c404                 add esp,0x4
0xb3003d4a    50                     push eax
        ;; StoreLocal:36(targetPort, t0, lvl: 0)
0xb3003d4b    58                     pop eax
0xb3003d4c    8945e8                 mov [ebp-0x18],eax
        ;; t0 <- LoadLocal:37(reference lvl:0)
0xb3003d4f    8b4508                 mov eax,[ebp+0x8]
0xb3003d52    50                     push eax
        ;; PushArgument:38(t0)
        ;; t0 <- InstanceCall:39(get:path, t0)
0xb3003d53    b9494828b3             mov ecx,0xb3284849  'ICData target:'get:path' num-checks: 0'
0xb3003d58    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003d5d    e8b6c4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003d62    83c404                 add esp,0x4
0xb3003d65    50                     push eax
        ;; PushArgument:40(t0)
        ;; t0 <- StaticCall:41(removeDotSegments t0)
0xb3003d66    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003d6b    e8b8c53702             call 0xb5380328  [stub: CallStaticFunction]
0xb3003d70    83c404                 add esp,0x4
0xb3003d73    50                     push eax
        ;; StoreLocal:42(targetPath, t0, lvl: 0)
0xb3003d74    58                     pop eax
0xb3003d75    8945e4                 mov [ebp-0x1c],eax
        ;; t0 <- LoadLocal:43(reference lvl:0)
0xb3003d78    8b4508                 mov eax,[ebp+0x8]
0xb3003d7b    50                     push eax
        ;; PushArgument:44(t0)
        ;; t0 <- InstanceCall:45(get:query, t0)
0xb3003d7c    b9b14828b3             mov ecx,0xb32848b1  'ICData target:'get:query' num-checks: 0'
0xb3003d81    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003d86    e88dc4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003d8b    83c404                 add esp,0x4
0xb3003d8e    50                     push eax
        ;; StoreLocal:46(targetQuery, t0, lvl: 0)
0xb3003d8f    58                     pop eax
0xb3003d90    8945e0                 mov [ebp-0x20],eax
        ;; goto:170 16
0xb3003d93    e943030000             jmp 0xb30040db
        ;; B15
        ;; t0 <- LoadLocal:47(reference lvl:0)
0xb3003d98    8b4508                 mov eax,[ebp+0x8]
0xb3003d9b    50                     push eax
        ;; PushArgument:48(t0)
        ;; t0 <- InstanceCall:49(hasAuthority, t0)
0xb3003d9c    b9014928b3             mov ecx,0xb3284901  'ICData target:'hasAuthority' num-checks: 0'
0xb3003da1    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003da6    e86dc4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003dab    83c404                 add esp,0x4
0xb3003dae    50                     push eax
        ;; t1 <- Constant:50(#true)
0xb3003daf    b8391030b3             mov eax,0xb3301039  'true'
0xb3003db4    50                     push eax
        ;; Branch if StrictCompare:51(===, t0, t1) goto (11, 12)
0xb3003db5    58                     pop eax
0xb3003db6    59                     pop ecx
0xb3003db7    51                     push ecx
0xb3003db8    50                     push eax
0xb3003db9    e84aca3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3003dbe    58                     pop eax
0xb3003dbf    59                     pop ecx
0xb3003dc0    0f859a000000           jnz 0xb3003e60
        ;; B11
        ;; t0 <- LoadLocal:53(reference lvl:0)
0xb3003dc6    8b4508                 mov eax,[ebp+0x8]
0xb3003dc9    50                     push eax
        ;; PushArgument:54(t0)
        ;; t0 <- InstanceCall:55(get:userInfo, t0)
0xb3003dca    b9514928b3             mov ecx,0xb3284951  'ICData target:'get:userInfo' num-checks: 0'
0xb3003dcf    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003dd4    e83fc4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003dd9    83c404                 add esp,0x4
0xb3003ddc    50                     push eax
        ;; StoreLocal:56(targetUserInfo, t0, lvl: 0)
0xb3003ddd    58                     pop eax
0xb3003dde    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:57(reference lvl:0)
0xb3003de1    8b4508                 mov eax,[ebp+0x8]
0xb3003de4    50                     push eax
        ;; PushArgument:58(t0)
        ;; t0 <- InstanceCall:59(get:domain, t0)
0xb3003de5    b9a14928b3             mov ecx,0xb32849a1  'ICData target:'get:domain' num-checks: 0'
0xb3003dea    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003def    e824c4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003df4    83c404                 add esp,0x4
0xb3003df7    50                     push eax
        ;; StoreLocal:60(targetDomain, t0, lvl: 0)
0xb3003df8    58                     pop eax
0xb3003df9    8945ec                 mov [ebp-0x14],eax
        ;; t0 <- LoadLocal:61(reference lvl:0)
0xb3003dfc    8b4508                 mov eax,[ebp+0x8]
0xb3003dff    50                     push eax
        ;; PushArgument:62(t0)
        ;; t0 <- InstanceCall:63(get:port, t0)
0xb3003e00    b9f14928b3             mov ecx,0xb32849f1  'ICData target:'get:port' num-checks: 0'
0xb3003e05    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003e0a    e809c4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003e0f    83c404                 add esp,0x4
0xb3003e12    50                     push eax
        ;; StoreLocal:64(targetPort, t0, lvl: 0)
0xb3003e13    58                     pop eax
0xb3003e14    8945e8                 mov [ebp-0x18],eax
        ;; t0 <- LoadLocal:65(reference lvl:0)
0xb3003e17    8b4508                 mov eax,[ebp+0x8]
0xb3003e1a    50                     push eax
        ;; PushArgument:66(t0)
        ;; t0 <- InstanceCall:67(get:path, t0)
0xb3003e1b    b9414a28b3             mov ecx,0xb3284a41  'ICData target:'get:path' num-checks: 0'
0xb3003e20    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003e25    e8eec3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003e2a    83c404                 add esp,0x4
0xb3003e2d    50                     push eax
        ;; PushArgument:68(t0)
        ;; t0 <- StaticCall:69(removeDotSegments t0)
0xb3003e2e    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003e33    e8f0c43702             call 0xb5380328  [stub: CallStaticFunction]
0xb3003e38    83c404                 add esp,0x4
0xb3003e3b    50                     push eax
        ;; StoreLocal:70(targetPath, t0, lvl: 0)
0xb3003e3c    58                     pop eax
0xb3003e3d    8945e4                 mov [ebp-0x1c],eax
        ;; t0 <- LoadLocal:71(reference lvl:0)
0xb3003e40    8b4508                 mov eax,[ebp+0x8]
0xb3003e43    50                     push eax
        ;; PushArgument:72(t0)
        ;; t0 <- InstanceCall:73(get:query, t0)
0xb3003e44    b9a94a28b3             mov ecx,0xb3284aa9  'ICData target:'get:query' num-checks: 0'
0xb3003e49    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003e4e    e8c5c3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003e53    83c404                 add esp,0x4
0xb3003e56    50                     push eax
        ;; StoreLocal:74(targetQuery, t0, lvl: 0)
0xb3003e57    58                     pop eax
0xb3003e58    8945e0                 mov [ebp-0x20],eax
        ;; goto:161 13
0xb3003e5b    e960020000             jmp 0xb30040c0
        ;; B12
        ;; t0 <- LoadLocal:75(reference lvl:0)
0xb3003e60    8b4508                 mov eax,[ebp+0x8]
0xb3003e63    50                     push eax
        ;; PushArgument:76(t0)
        ;; t0 <- InstanceCall:77(get:path, t0)
0xb3003e64    b9f94a28b3             mov ecx,0xb3284af9  'ICData target:'get:path' num-checks: 0'
0xb3003e69    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003e6e    e8a5c3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003e73    83c404                 add esp,0x4
0xb3003e76    50                     push eax
        ;; t1 <- Constant:78(#)
0xb3003e77    b8e11240b5             mov eax,0xb54012e1
0xb3003e7c    50                     push eax
        ;; Branch if EqualityCompare:79(t0 == t1) goto (8, 9)
0xb3003e7d    5a                     pop edx
0xb3003e7e    5b                     pop ebx
0xb3003e7f    53                     push ebx
0xb3003e80    52                     push edx
0xb3003e81    813c24190040b5         cmp [esp],0xb5400019
0xb3003e88    0f8425000000           jz 0xb3003eb3
0xb3003e8e    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3003e96    0f8417000000           jz 0xb3003eb3
0xb3003e9c    b9494b28b3             mov ecx,0xb3284b49  'ICData target:'==' num-checks: 0'
0xb3003ea1    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003ea6    e82dc4ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3003eab    83c408                 add esp,0x8
0xb3003eae    e90d000000             jmp 0xb3003ec0
0xb3003eb3    b9494b28b3             mov ecx,0xb3284b49  'ICData target:'==' num-checks: 0'
0xb3003eb8    e88bcaffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3003ebd    83c408                 add esp,0x8
0xb3003ec0    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3003ec5    0f85c6000000           jnz 0xb3003f91
        ;; B8
        ;; t0 <- LoadLocal:81(this lvl:0)
0xb3003ecb    8b450c                 mov eax,[ebp+0xc]
0xb3003ece    50                     push eax
        ;; PushArgument:82(t0)
        ;; t0 <- InstanceCall:83(get:path, t0)
0xb3003ecf    b9a14b28b3             mov ecx,0xb3284ba1  'ICData target:'get:path' num-checks: 0'
0xb3003ed4    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003ed9    e83ac3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003ede    83c404                 add esp,0x4
0xb3003ee1    50                     push eax
        ;; StoreLocal:84(targetPath, t0, lvl: 0)
0xb3003ee2    58                     pop eax
0xb3003ee3    8945e4                 mov [ebp-0x1c],eax
        ;; t0 <- LoadLocal:85(reference lvl:0)
0xb3003ee6    8b4508                 mov eax,[ebp+0x8]
0xb3003ee9    50                     push eax
        ;; PushArgument:86(t0)
        ;; t0 <- InstanceCall:87(get:query, t0)
0xb3003eea    b9f14b28b3             mov ecx,0xb3284bf1  'ICData target:'get:query' num-checks: 0'
0xb3003eef    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003ef4    e81fc3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003ef9    83c404                 add esp,0x4
0xb3003efc    50                     push eax
        ;; t1 <- Constant:88(#)
0xb3003efd    b8e11240b5             mov eax,0xb54012e1
0xb3003f02    50                     push eax
        ;; Branch if EqualityCompare:89(t0 != t1) goto (2, 3)
0xb3003f03    5a                     pop edx
0xb3003f04    5b                     pop ebx
0xb3003f05    53                     push ebx
0xb3003f06    52                     push edx
0xb3003f07    813c24190040b5         cmp [esp],0xb5400019
0xb3003f0e    0f8425000000           jz 0xb3003f39
0xb3003f14    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3003f1c    0f8417000000           jz 0xb3003f39
0xb3003f22    b9414c28b3             mov ecx,0xb3284c41  'ICData target:'==' num-checks: 0'
0xb3003f27    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003f2c    e8a7c3ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3003f31    83c408                 add esp,0x8
0xb3003f34    e90d000000             jmp 0xb3003f46
0xb3003f39    b9414c28b3             mov ecx,0xb3284c41  'ICData target:'==' num-checks: 0'
0xb3003f3e    e805caffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3003f43    83c408                 add esp,0x8
0xb3003f46    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3003f4b    0f8420000000           jz 0xb3003f71
        ;; B2
        ;; t0 <- LoadLocal:91(reference lvl:0)
0xb3003f51    8b4508                 mov eax,[ebp+0x8]
0xb3003f54    50                     push eax
        ;; PushArgument:92(t0)
        ;; t0 <- InstanceCall:93(get:query, t0)
0xb3003f55    b9994c28b3             mov ecx,0xb3284c99  'ICData target:'get:query' num-checks: 0'
0xb3003f5a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003f5f    e8b4c2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003f64    83c404                 add esp,0x4
0xb3003f67    50                     push eax
        ;; StoreLocal:94(targetQuery, t0, lvl: 0)
0xb3003f68    58                     pop eax
0xb3003f69    8945e0                 mov [ebp-0x20],eax
        ;; goto:102 4
0xb3003f6c    e91b000000             jmp 0xb3003f8c
        ;; B3
        ;; t0 <- LoadLocal:95(this lvl:0)
0xb3003f71    8b450c                 mov eax,[ebp+0xc]
0xb3003f74    50                     push eax
        ;; PushArgument:96(t0)
        ;; t0 <- InstanceCall:97(get:query, t0)
0xb3003f75    b9e94c28b3             mov ecx,0xb3284ce9  'ICData target:'get:query' num-checks: 0'
0xb3003f7a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003f7f    e894c2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003f84    83c404                 add esp,0x4
0xb3003f87    50                     push eax
        ;; StoreLocal:98(targetQuery, t0, lvl: 0)
0xb3003f88    58                     pop eax
0xb3003f89    8945e0                 mov [ebp-0x20],eax
        ;; goto:103 4
        ;; B4
        ;; goto:144 10
0xb3003f8c    e9de000000             jmp 0xb300406f
        ;; B9
        ;; t0 <- LoadLocal:104(reference lvl:0)
0xb3003f91    8b4508                 mov eax,[ebp+0x8]
0xb3003f94    50                     push eax
        ;; PushArgument:105(t0)
        ;; t0 <- InstanceCall:106(get:path, t0)
0xb3003f95    b9394d28b3             mov ecx,0xb3284d39  'ICData target:'get:path' num-checks: 0'
0xb3003f9a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003f9f    e874c2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003fa4    83c404                 add esp,0x4
0xb3003fa7    50                     push eax
        ;; PushArgument:107(t0)
        ;; t0 <- Constant:108(#/)
0xb3003fa8    b8812340b5             mov eax,0xb5402381
0xb3003fad    50                     push eax
        ;; PushArgument:109(t0)
        ;; t0 <- InstanceCall:110(startsWith, t0, t0)
0xb3003fae    b9894d28b3             mov ecx,0xb3284d89  'ICData target:'startsWith' num-checks: 0'
0xb3003fb3    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3003fb8    e85bc2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003fbd    83c408                 add esp,0x8
0xb3003fc0    50                     push eax
        ;; t1 <- Constant:111(#true)
0xb3003fc1    b8391030b3             mov eax,0xb3301039  'true'
0xb3003fc6    50                     push eax
        ;; Branch if StrictCompare:112(===, t0, t1) goto (5, 6)
0xb3003fc7    58                     pop eax
0xb3003fc8    59                     pop ecx
0xb3003fc9    51                     push ecx
0xb3003fca    50                     push eax
0xb3003fcb    e838c83702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3003fd0    58                     pop eax
0xb3003fd1    59                     pop ecx
0xb3003fd2    0f852e000000           jnz 0xb3004006
        ;; B5
        ;; t0 <- LoadLocal:114(reference lvl:0)
0xb3003fd8    8b4508                 mov eax,[ebp+0x8]
0xb3003fdb    50                     push eax
        ;; PushArgument:115(t0)
        ;; t0 <- InstanceCall:116(get:path, t0)
0xb3003fdc    b9d94d28b3             mov ecx,0xb3284dd9  'ICData target:'get:path' num-checks: 0'
0xb3003fe1    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003fe6    e82dc2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3003feb    83c404                 add esp,0x4
0xb3003fee    50                     push eax
        ;; PushArgument:117(t0)
        ;; t0 <- StaticCall:118(removeDotSegments t0)
0xb3003fef    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3003ff4    e82fc33702             call 0xb5380328  [stub: CallStaticFunction]
0xb3003ff9    83c404                 add esp,0x4
0xb3003ffc    50                     push eax
        ;; StoreLocal:119(targetPath, t0, lvl: 0)
0xb3003ffd    58                     pop eax
0xb3003ffe    8945e4                 mov [ebp-0x1c],eax
        ;; goto:135 7
0xb3004001    e94e000000             jmp 0xb3004054
        ;; B6
        ;; t0 <- LoadLocal:120(this lvl:0)
0xb3004006    8b450c                 mov eax,[ebp+0xc]
0xb3004009    50                     push eax
        ;; PushArgument:121(t0)
        ;; t0 <- InstanceCall:122(get:path, t0)
0xb300400a    b9414e28b3             mov ecx,0xb3284e41  'ICData target:'get:path' num-checks: 0'
0xb300400f    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004014    e8ffc1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004019    83c404                 add esp,0x4
0xb300401c    50                     push eax
        ;; PushArgument:123(t0)
        ;; t0 <- LoadLocal:124(reference lvl:0)
0xb300401d    8b4508                 mov eax,[ebp+0x8]
0xb3004020    50                     push eax
        ;; PushArgument:125(t0)
        ;; t0 <- InstanceCall:126(get:path, t0)
0xb3004021    b9914e28b3             mov ecx,0xb3284e91  'ICData target:'get:path' num-checks: 0'
0xb3004026    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300402b    e8e8c1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004030    83c404                 add esp,0x4
0xb3004033    50                     push eax
        ;; PushArgument:127(t0)
        ;; t0 <- StaticCall:128(merge t0, t0)
0xb3004034    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004039    e8eac23702             call 0xb5380328  [stub: CallStaticFunction]
0xb300403e    83c408                 add esp,0x8
0xb3004041    50                     push eax
        ;; PushArgument:129(t0)
        ;; t0 <- StaticCall:130(removeDotSegments t0)
0xb3004042    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004047    e8dcc23702             call 0xb5380328  [stub: CallStaticFunction]
0xb300404c    83c404                 add esp,0x4
0xb300404f    50                     push eax
        ;; StoreLocal:131(targetPath, t0, lvl: 0)
0xb3004050    58                     pop eax
0xb3004051    8945e4                 mov [ebp-0x1c],eax
        ;; goto:136 7
        ;; B7
        ;; t0 <- LoadLocal:137(reference lvl:0)
0xb3004054    8b4508                 mov eax,[ebp+0x8]
0xb3004057    50                     push eax
        ;; PushArgument:138(t0)
        ;; t0 <- InstanceCall:139(get:query, t0)
0xb3004058    b9114f28b3             mov ecx,0xb3284f11  'ICData target:'get:query' num-checks: 0'
0xb300405d    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004062    e8b1c1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004067    83c404                 add esp,0x4
0xb300406a    50                     push eax
        ;; StoreLocal:140(targetQuery, t0, lvl: 0)
0xb300406b    58                     pop eax
0xb300406c    8945e0                 mov [ebp-0x20],eax
        ;; goto:145 10
        ;; B10
        ;; t0 <- LoadLocal:146(this lvl:0)
0xb300406f    8b450c                 mov eax,[ebp+0xc]
0xb3004072    50                     push eax
        ;; PushArgument:147(t0)
        ;; t0 <- InstanceCall:148(get:userInfo, t0)
0xb3004073    b9614f28b3             mov ecx,0xb3284f61  'ICData target:'get:userInfo' num-checks: 0'
0xb3004078    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300407d    e896c1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004082    83c404                 add esp,0x4
0xb3004085    50                     push eax
        ;; StoreLocal:149(targetUserInfo, t0, lvl: 0)
0xb3004086    58                     pop eax
0xb3004087    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:150(this lvl:0)
0xb300408a    8b450c                 mov eax,[ebp+0xc]
0xb300408d    50                     push eax
        ;; PushArgument:151(t0)
        ;; t0 <- InstanceCall:152(get:domain, t0)
0xb300408e    b9b14f28b3             mov ecx,0xb3284fb1  'ICData target:'get:domain' num-checks: 0'
0xb3004093    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004098    e87bc1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300409d    83c404                 add esp,0x4
0xb30040a0    50                     push eax
        ;; StoreLocal:153(targetDomain, t0, lvl: 0)
0xb30040a1    58                     pop eax
0xb30040a2    8945ec                 mov [ebp-0x14],eax
        ;; t0 <- LoadLocal:154(this lvl:0)
0xb30040a5    8b450c                 mov eax,[ebp+0xc]
0xb30040a8    50                     push eax
        ;; PushArgument:155(t0)
        ;; t0 <- InstanceCall:156(get:port, t0)
0xb30040a9    b9015028b3             mov ecx,0xb3285001  'ICData target:'get:port' num-checks: 0'
0xb30040ae    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30040b3    e860c1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30040b8    83c404                 add esp,0x4
0xb30040bb    50                     push eax
        ;; StoreLocal:157(targetPort, t0, lvl: 0)
0xb30040bc    58                     pop eax
0xb30040bd    8945e8                 mov [ebp-0x18],eax
        ;; goto:162 13
        ;; B13
        ;; t0 <- LoadLocal:163(this lvl:0)
0xb30040c0    8b450c                 mov eax,[ebp+0xc]
0xb30040c3    50                     push eax
        ;; PushArgument:164(t0)
        ;; t0 <- InstanceCall:165(get:scheme, t0)
0xb30040c4    b9515028b3             mov ecx,0xb3285051  'ICData target:'get:scheme' num-checks: 0'
0xb30040c9    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30040ce    e845c1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30040d3    83c404                 add esp,0x4
0xb30040d6    50                     push eax
        ;; StoreLocal:166(targetScheme, t0, lvl: 0)
0xb30040d7    58                     pop eax
0xb30040d8    8945f4                 mov [ebp-0xc],eax
        ;; goto:171 16
        ;; B16
        ;; t0 <- AllocateObject:172(Library:'dart:uri' Class: Uri)
0xb30040db    e878cbffff             call 0xb3000c58 [ stub ]
0xb30040e0    50                     push eax
        ;; t0 <- StoreLocal:173(:alloc772, t0, lvl: 0)
0xb30040e1    58                     pop eax
0xb30040e2    8945dc                 mov [ebp-0x24],eax
0xb30040e5    50                     push eax
        ;; PushArgument:174(t0)
        ;; t0 <- Constant:175(#3)
0xb30040e6    b806000000             mov eax,0x6
0xb30040eb    50                     push eax
        ;; PushArgument:176(t0)
        ;; t0 <- LoadLocal:177(targetScheme lvl:0)
0xb30040ec    8b45f4                 mov eax,[ebp-0xc]
0xb30040ef    50                     push eax
        ;; PushArgument:178(t0)
        ;; t0 <- LoadLocal:179(targetUserInfo lvl:0)
0xb30040f0    8b45f0                 mov eax,[ebp-0x10]
0xb30040f3    50                     push eax
        ;; PushArgument:180(t0)
        ;; t0 <- LoadLocal:181(targetDomain lvl:0)
0xb30040f4    8b45ec                 mov eax,[ebp-0x14]
0xb30040f7    50                     push eax
        ;; PushArgument:182(t0)
        ;; t0 <- LoadLocal:183(targetPort lvl:0)
0xb30040f8    8b45e8                 mov eax,[ebp-0x18]
0xb30040fb    50                     push eax
        ;; PushArgument:184(t0)
        ;; t0 <- LoadLocal:185(targetPath lvl:0)
0xb30040fc    8b45e4                 mov eax,[ebp-0x1c]
0xb30040ff    50                     push eax
        ;; PushArgument:186(t0)
        ;; t0 <- LoadLocal:187(targetQuery lvl:0)
0xb3004100    8b45e0                 mov eax,[ebp-0x20]
0xb3004103    50                     push eax
        ;; PushArgument:188(t0)
        ;; t0 <- LoadLocal:189(reference lvl:0)
0xb3004104    8b4508                 mov eax,[ebp+0x8]
0xb3004107    50                     push eax
        ;; PushArgument:190(t0)
        ;; t0 <- InstanceCall:191(get:fragment, t0)
0xb3004108    b9a15028b3             mov ecx,0xb32850a1  'ICData target:'get:fragment' num-checks: 0'
0xb300410d    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004112    e801c1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004117    83c404                 add esp,0x4
0xb300411a    50                     push eax
        ;; PushArgument:192(t0)
        ;; StaticCall:193(Uri.fromComponents t0, t0, t0, t0, t0, t0, t0, t0, t0)
0xb300411b    ba191c28b3             mov edx,0xb3281c19  Array[9, 2, domain, 4, fragment, ...]
0xb3004120    e803c23702             call 0xb5380328  [stub: CallStaticFunction]
0xb3004125    83c424                 add esp,0x24
        ;; t0 <- LoadLocal:194(:alloc772 lvl:0)
0xb3004128    8b45dc                 mov eax,[ebp-0x24]
0xb300412b    50                     push eax
        ;; Return:195(t0)
0xb300412c    58                     pop eax
0xb300412d    bac11d0bb3             mov edx,0xb30b1dc1  'Function 'resolveUri':.'
0xb3004132    ff422b                 inc [edx+0x2b]
0xb3004135    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300413c    7c05                   jl 0xb3004143
0xb300413e    e875c7ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3004143    89ec                   mov esp,ebp
0xb3004145    5d                     pop ebp
0xb3004146    c3                     ret
0xb3004147    90                     nop
0xb3004148    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3004149    b970d30a08             mov ecx,0x80ad370
0xb300414e    ba00000000             mov edx,0
0xb3004153    e8d0be3702             call 0xb5380028  [stub: CallToRuntime]
0xb3004158    e9dffaffff             jmp 0xb3003c3c
0xb300415d    e9d6c23702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3004162    e9b1c33702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 117 : 0xb3003c7d 'ICData target:'get:scheme' num-checks: 0'
 122 : 0xb3003c82 'ImmutableArray'
 136 : 0xb3003c90 ''
 173 : 0xb3003cb5 'ICData target:'==' num-checks: 0'
 178 : 0xb3003cba 'ImmutableArray'
 196 : 0xb3003ccc 'ICData target:'==' num-checks: 0'
 209 : 0xb3003cd9 'true'
 224 : 0xb3003ce8 'ICData target:'get:scheme' num-checks: 0'
 229 : 0xb3003ced 'ImmutableArray'
 251 : 0xb3003d03 'ICData target:'get:userInfo' num-checks: 0'
 256 : 0xb3003d08 'ImmutableArray'
 278 : 0xb3003d1e 'ICData target:'get:domain' num-checks: 0'
 283 : 0xb3003d23 'ImmutableArray'
 305 : 0xb3003d39 'ICData target:'get:port' num-checks: 0'
 310 : 0xb3003d3e 'ImmutableArray'
 332 : 0xb3003d54 'ICData target:'get:path' num-checks: 0'
 337 : 0xb3003d59 'ImmutableArray'
 351 : 0xb3003d67 'ImmutableArray'
 373 : 0xb3003d7d 'ICData target:'get:query' num-checks: 0'
 378 : 0xb3003d82 'ImmutableArray'
 405 : 0xb3003d9d 'ICData target:'hasAuthority' num-checks: 0'
 410 : 0xb3003da2 'ImmutableArray'
 424 : 0xb3003db0 'true'
 451 : 0xb3003dcb 'ICData target:'get:userInfo' num-checks: 0'
 456 : 0xb3003dd0 'ImmutableArray'
 478 : 0xb3003de6 'ICData target:'get:domain' num-checks: 0'
 483 : 0xb3003deb 'ImmutableArray'
 505 : 0xb3003e01 'ICData target:'get:port' num-checks: 0'
 510 : 0xb3003e06 'ImmutableArray'
 532 : 0xb3003e1c 'ICData target:'get:path' num-checks: 0'
 537 : 0xb3003e21 'ImmutableArray'
 551 : 0xb3003e2f 'ImmutableArray'
 573 : 0xb3003e45 'ICData target:'get:query' num-checks: 0'
 578 : 0xb3003e4a 'ImmutableArray'
 605 : 0xb3003e65 'ICData target:'get:path' num-checks: 0'
 610 : 0xb3003e6a 'ImmutableArray'
 624 : 0xb3003e78 ''
 661 : 0xb3003e9d 'ICData target:'==' num-checks: 0'
 666 : 0xb3003ea2 'ImmutableArray'
 684 : 0xb3003eb4 'ICData target:'==' num-checks: 0'
 697 : 0xb3003ec1 'true'
 712 : 0xb3003ed0 'ICData target:'get:path' num-checks: 0'
 717 : 0xb3003ed5 'ImmutableArray'
 739 : 0xb3003eeb 'ICData target:'get:query' num-checks: 0'
 744 : 0xb3003ef0 'ImmutableArray'
 758 : 0xb3003efe ''
 795 : 0xb3003f23 'ICData target:'==' num-checks: 0'
 800 : 0xb3003f28 'ImmutableArray'
 818 : 0xb3003f3a 'ICData target:'==' num-checks: 0'
 831 : 0xb3003f47 'true'
 846 : 0xb3003f56 'ICData target:'get:query' num-checks: 0'
 851 : 0xb3003f5b 'ImmutableArray'
 878 : 0xb3003f76 'ICData target:'get:query' num-checks: 0'
 883 : 0xb3003f7b 'ImmutableArray'
 910 : 0xb3003f96 'ICData target:'get:path' num-checks: 0'
 915 : 0xb3003f9b 'ImmutableArray'
 929 : 0xb3003fa9 '/'
 935 : 0xb3003faf 'ICData target:'startsWith' num-checks: 0'
 940 : 0xb3003fb4 'ImmutableArray'
 954 : 0xb3003fc2 'true'
 981 : 0xb3003fdd 'ICData target:'get:path' num-checks: 0'
 986 : 0xb3003fe2 'ImmutableArray'
 1000 : 0xb3003ff0 'ImmutableArray'
 1027 : 0xb300400b 'ICData target:'get:path' num-checks: 0'
 1032 : 0xb3004010 'ImmutableArray'
 1050 : 0xb3004022 'ICData target:'get:path' num-checks: 0'
 1055 : 0xb3004027 'ImmutableArray'
 1069 : 0xb3004035 'ImmutableArray'
 1083 : 0xb3004043 'ImmutableArray'
 1105 : 0xb3004059 'ICData target:'get:query' num-checks: 0'
 1110 : 0xb300405e 'ImmutableArray'
 1132 : 0xb3004074 'ICData target:'get:userInfo' num-checks: 0'
 1137 : 0xb3004079 'ImmutableArray'
 1159 : 0xb300408f 'ICData target:'get:domain' num-checks: 0'
 1164 : 0xb3004094 'ImmutableArray'
 1186 : 0xb30040aa 'ICData target:'get:port' num-checks: 0'
 1191 : 0xb30040af 'ImmutableArray'
 1213 : 0xb30040c5 'ICData target:'get:scheme' num-checks: 0'
 1218 : 0xb30040ca 'ImmutableArray'
 1281 : 0xb3004109 'ICData target:'get:fragment' num-checks: 0'
 1286 : 0xb300410e 'ImmutableArray'
 1300 : 0xb300411c 'ImmutableArray'
 1318 : 0xb300412e 'Function 'resolveUri':.'
}
PC Descriptors for function 'dart:uri_Uri_resolveUri' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3003c7c	deopt-before 	17		511	-1
0xb3003c8b	ic-call      	17		511	-1
0xb3003c8b	deopt-after  	17		511	-1
0xb3003c99	deopt-before 	19		512	-1
0xb3003cc3	ic-call      	19		512	-1
0xb3003cc3	deopt-after  	19		512	-1
0xb3003cd5	other        	-1		512	-1
0xb3003ce7	deopt-before 	23		523	-1
0xb3003cf6	ic-call      	23		523	-1
0xb3003cf6	deopt-after  	23		523	-1
0xb3003d02	deopt-before 	27		531	-1
0xb3003d11	ic-call      	27		531	-1
0xb3003d11	deopt-after  	27		531	-1
0xb3003d1d	deopt-before 	31		539	-1
0xb3003d2c	ic-call      	31		539	-1
0xb3003d2c	deopt-after  	31		539	-1
0xb3003d38	deopt-before 	35		547	-1
0xb3003d47	ic-call      	35		547	-1
0xb3003d47	deopt-after  	35		547	-1
0xb3003d53	deopt-before 	39		558	-1
0xb3003d62	ic-call      	39		558	-1
0xb3003d62	deopt-after  	39		558	-1
0xb3003d70	fn-call      	41		554	-1
0xb3003d70	deopt-after  	41		554	-1
0xb3003d7c	deopt-before 	45		567	-1
0xb3003d8b	ic-call      	45		567	-1
0xb3003d8b	deopt-after  	45		567	-1
0xb3003d93	deopt-before 	170		0	-1
0xb3003d9c	deopt-before 	49		579	-1
0xb3003dab	ic-call      	49		579	-1
0xb3003dab	deopt-after  	49		579	-1
0xb3003dca	deopt-before 	55		589	-1
0xb3003dd9	ic-call      	55		589	-1
0xb3003dd9	deopt-after  	55		589	-1
0xb3003de5	deopt-before 	59		597	-1
0xb3003df4	ic-call      	59		597	-1
0xb3003df4	deopt-after  	59		597	-1
0xb3003e00	deopt-before 	63		605	-1
0xb3003e0f	ic-call      	63		605	-1
0xb3003e0f	deopt-after  	63		605	-1
0xb3003e1b	deopt-before 	67		616	-1
0xb3003e2a	ic-call      	67		616	-1
0xb3003e2a	deopt-after  	67		616	-1
0xb3003e38	fn-call      	69		612	-1
0xb3003e38	deopt-after  	69		612	-1
0xb3003e44	deopt-before 	73		625	-1
0xb3003e53	ic-call      	73		625	-1
0xb3003e53	deopt-after  	73		625	-1
0xb3003e5b	deopt-before 	161		0	-1
0xb3003e64	deopt-before 	77		635	-1
0xb3003e73	ic-call      	77		635	-1
0xb3003e73	deopt-after  	77		635	-1
0xb3003e81	deopt-before 	79		636	-1
0xb3003eab	ic-call      	79		636	-1
0xb3003eab	deopt-after  	79		636	-1
0xb3003ebd	other        	-1		636	-1
0xb3003ecf	deopt-before 	83		646	-1
0xb3003ede	ic-call      	83		646	-1
0xb3003ede	deopt-after  	83		646	-1
0xb3003eea	deopt-before 	87		653	-1
0xb3003ef9	ic-call      	87		653	-1
0xb3003ef9	deopt-after  	87		653	-1
0xb3003f07	deopt-before 	89		654	-1
0xb3003f31	ic-call      	89		654	-1
0xb3003f31	deopt-after  	89		654	-1
0xb3003f43	other        	-1		654	-1
0xb3003f55	deopt-before 	93		665	-1
0xb3003f64	ic-call      	93		665	-1
0xb3003f64	deopt-after  	93		665	-1
0xb3003f6c	deopt-before 	102		0	-1
0xb3003f75	deopt-before 	97		675	-1
0xb3003f84	ic-call      	97		675	-1
0xb3003f84	deopt-after  	97		675	-1
0xb3003f8c	deopt-before 	103		0	-1
0xb3003f8c	deopt-before 	144		0	-1
0xb3003f95	deopt-before 	106		686	-1
0xb3003fa4	ic-call      	106		686	-1
0xb3003fa4	deopt-after  	106		686	-1
0xb3003fae	deopt-before 	110		690	-1
0xb3003fbd	ic-call      	110		690	-1
0xb3003fbd	deopt-after  	110		690	-1
0xb3003fdc	deopt-before 	116		705	-1
0xb3003feb	ic-call      	116		705	-1
0xb3003feb	deopt-after  	116		705	-1
0xb3003ff9	fn-call      	118		701	-1
0xb3003ff9	deopt-after  	118		701	-1
0xb3004001	deopt-before 	135		0	-1
0xb300400a	deopt-before 	122		722	-1
0xb3004019	ic-call      	122		722	-1
0xb3004019	deopt-after  	122		722	-1
0xb3004021	deopt-before 	126		727	-1
0xb3004030	ic-call      	126		727	-1
0xb3004030	deopt-after  	126		727	-1
0xb300403e	fn-call      	128		719	-1
0xb300403e	deopt-after  	128		719	-1
0xb300404c	fn-call      	130		716	-1
0xb300404c	deopt-after  	130		716	-1
0xb3004054	deopt-before 	136		0	-1
0xb3004058	deopt-before 	139		738	-1
0xb3004067	ic-call      	139		738	-1
0xb3004067	deopt-after  	139		738	-1
0xb300406f	deopt-before 	145		0	-1
0xb3004073	deopt-before 	148		746	-1
0xb3004082	ic-call      	148		746	-1
0xb3004082	deopt-after  	148		746	-1
0xb300408e	deopt-before 	152		753	-1
0xb300409d	ic-call      	152		753	-1
0xb300409d	deopt-after  	152		753	-1
0xb30040a9	deopt-before 	156		760	-1
0xb30040b8	ic-call      	156		760	-1
0xb30040b8	deopt-after  	156		760	-1
0xb30040c0	deopt-before 	162		0	-1
0xb30040c4	deopt-before 	165		768	-1
0xb30040d3	ic-call      	165		768	-1
0xb30040d3	deopt-after  	165		768	-1
0xb30040db	deopt-before 	171		0	-1
0xb30040e0	other        	-1		772	-1
0xb3004108	deopt-before 	191		814	-1
0xb3004117	ic-call      	191		814	-1
0xb3004117	deopt-after  	191		814	-1
0xb3004125	fn-call      	193		772	-1
0xb3004125	deopt-after  	193		772	-1
0xb3004143	other        	-1		0	-1
0xb3004148	return       	-1		771	-1
0xb3004158	other        	-1		476	-1
0xb300415d	patch        	-1		0	-1
0xb3004162	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_Uri_resolveUri' {
}
Variable Descriptors for function 'dart:uri_Uri_resolveUri' {
  stack var 'this' offset 3 (valid 21-819)
  stack var 'reference' offset 2 (valid 478-819)
  stack var 'targetScheme' offset -3 (valid 483-819)
  stack var 'targetUserInfo' offset -4 (valid 487-819)
  stack var 'targetDomain' offset -5 (valid 491-819)
  stack var 'targetPort' offset -6 (valid 495-819)
  stack var 'targetPath' offset -7 (valid 499-819)
  stack var 'targetQuery' offset -8 (valid 503-819)
}
Exception Handlers for function 'dart:uri_Uri_resolveUri' {
No exception handlers
}
Static call target functions {
  0xb3003d70: dart:uri_::_removeDotSegments, 0xb5400019
  0xb3003e38: dart:uri_::_removeDotSegments, 0xb5400019
  0xb3003ff9: dart:uri_::_removeDotSegments, 0xb5400019
  0xb300403e: dart:uri_::_merge, 0xb5400019
  0xb300404c: dart:uri_::_removeDotSegments, 0xb5400019
  0xb3004125: dart:uri_Uri_Uri.fromComponents, 0xb5400019
}
Compiling function: 'dart:uri_Uri_get_scheme' @ token 20
Before Optimizations
==== dart:uri_Uri_get_scheme
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 8, immutable=0)
    Return:5(t0)
--> 'dart:uri_Uri_get_scheme' entry: 0xb3004178 time: 43 us
Code for function 'dart:uri_Uri_get_scheme' {
0xb3004178    8b442404               mov eax,[esp+0x4]
0xb300417c    8b4007                 mov eax,[eax+0x7]
0xb300417f    c3                     ret
0xb3004180    cc                     int3
0xb3004181    e9b2c23702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:uri_Uri_get_scheme' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:uri_Uri_get_scheme' {
}
Variable Descriptors for function 'dart:uri_Uri_get_scheme' {
  stack var 'this' offset 2 (valid 21-20)
}
Exception Handlers for function 'dart:uri_Uri_get_scheme' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBase@0x36924d72_==' @ token 12570
Before Optimizations
==== dart:core__StringBase@0x36924d72_==
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t1 <- LoadLocal:4(other lvl:0)
    Branch if StrictCompare:6(===, t0, t1) goto (2, 3)
B2[target]
    t0 <- Constant:8(#true)
    Return:9(t0)
B3[target]
    t0 <- LoadLocal:12(other lvl:0)
    t1 <- Constant:13(#null)
    t2 <- Constant:14(#null)
    t0 <- InstanceOf:15(t0 ISNOT String instantiator(t1) type-arg(t2))
    t1 <- Constant:16(#true)
    Branch if StrictCompare:17(===, t0, t1) goto (6, 4)
B6[target]
    goto:32 5
B4[target]
    t0 <- LoadLocal:19(this lvl:0)
    PushArgument:20(t0)
    t0 <- InstanceCall:21(get:length, t0)
    t1 <- LoadLocal:22(other lvl:0)
    PushArgument:23(t1)
    t1 <- InstanceCall:24(get:length, t1)
    Branch if EqualityCompare:25(t0 != t1) goto (7, 8)
B7[target]
    goto:34 5
B5[join] pred(B6, B7)
    t0 <- Constant:28(#false)
    Return:29(t0)
B8[target]
    t0 <- LoadLocal:36(this lvl:0)
    PushArgument:37(t0)
    t0 <- LoadLocal:38(other lvl:0)
    PushArgument:39(t0)
    t0 <- InstanceCall:40(compareTo, t0, t0)
    t1 <- Constant:41(#0)
    t0 <- EqualityCompare:42(t0 == t1)
    Return:43(t0)
--> 'dart:core__StringBase@0x36924d72_==' entry: 0xb3004198 time: 400 us
Code for function 'dart:core__StringBase@0x36924d72_==' {
        ;; Enter frame
0xb3004198    55                     push ebp
0xb3004199    89e5                   mov ebp,esp
0xb300419b    e800000000             call 0xb30041a0
0xb30041a0    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb30041a3    b8190040b5             mov eax,0xb5400019
0xb30041a8    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30041ab    3b25bc195809           cmp esp,[0x95819bc]
0xb30041b1    0f86e5010000           jna 0xb300439c
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb30041b7    8b450c                 mov eax,[ebp+0xc]
0xb30041ba    50                     push eax
        ;; t1 <- LoadLocal:4(other lvl:0)
0xb30041bb    8b4508                 mov eax,[ebp+0x8]
0xb30041be    50                     push eax
        ;; Branch if StrictCompare:6(===, t0, t1) goto (2, 3)
0xb30041bf    58                     pop eax
0xb30041c0    59                     pop ecx
0xb30041c1    51                     push ecx
0xb30041c2    50                     push eax
0xb30041c3    e840c63702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb30041c8    58                     pop eax
0xb30041c9    59                     pop ecx
0xb30041ca    0f8522000000           jnz 0xb30041f2
        ;; B2
        ;; t0 <- Constant:8(#true)
0xb30041d0    b8391030b3             mov eax,0xb3301039  'true'
0xb30041d5    50                     push eax
        ;; Return:9(t0)
0xb30041d6    58                     pop eax
0xb30041d7    ba19a51ab3             mov edx,0xb31aa519  'Function '==':.'
0xb30041dc    ff422b                 inc [edx+0x2b]
0xb30041df    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30041e6    7c05                   jl 0xb30041ed
0xb30041e8    e8cbc6ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30041ed    89ec                   mov esp,ebp
0xb30041ef    5d                     pop ebp
0xb30041f0    c3                     ret
0xb30041f1    90                     nop
        ;; B3
        ;; t0 <- LoadLocal:12(other lvl:0)
0xb30041f2    8b4508                 mov eax,[ebp+0x8]
0xb30041f5    50                     push eax
        ;; t1 <- Constant:13(#null)
0xb30041f6    b8190040b5             mov eax,0xb5400019
0xb30041fb    50                     push eax
        ;; t2 <- Constant:14(#null)
0xb30041fc    b8190040b5             mov eax,0xb5400019
0xb3004201    50                     push eax
        ;; t0 <- InstanceOf:15(t0 ISNOT String instantiator(t1) type-arg(t2))
0xb3004202    5a                     pop edx
0xb3004203    59                     pop ecx
0xb3004204    58                     pop eax
0xb3004205    51                     push ecx
0xb3004206    52                     push edx
0xb3004207    3d190040b5             cmp eax, 0xb5400019
0xb300420c    0f843f000000           jz 0xb3004251
        ;; InlineInstanceof
        ;; InstantiatedTypeNoArgumentsTest
0xb3004212    a801                   test al,0x1
0xb3004214    7505                   jnz 0xb300421b
0xb3004216    e936000000             jmp 0xb3004251
0xb300421b    0fb74801               movzx_w ecx,[eax+0x1]
0xb300421f    83f958                 cmp ecx,0x58
0xb3004222    0f8430000000           jz 0xb3004258
        ;; StringTypeCheck
0xb3004228    83f94d                 cmp ecx,0x4d
0xb300422b    0f8427000000           jz 0xb3004258
0xb3004231    83f94e                 cmp ecx,0x4e
0xb3004234    0f841e000000           jz 0xb3004258
0xb300423a    83f94f                 cmp ecx,0x4f
0xb300423d    0f8415000000           jz 0xb3004258
0xb3004243    83f950                 cmp ecx,0x50
0xb3004246    0f840c000000           jz 0xb3004258
0xb300424c    e900000000             jmp 0xb3004251
0xb3004251    b8391030b3             mov eax,0xb3301039  'true'
0xb3004256    eb05                   jmp 0xb300425d
0xb3004258    b8411030b3             mov eax,0xb3301041  'false'
0xb300425d    5a                     pop edx
0xb300425e    59                     pop ecx
0xb300425f    50                     push eax
        ;; t1 <- Constant:16(#true)
0xb3004260    b8391030b3             mov eax,0xb3301039  'true'
0xb3004265    50                     push eax
        ;; Branch if StrictCompare:17(===, t0, t1) goto (6, 4)
0xb3004266    58                     pop eax
0xb3004267    59                     pop ecx
0xb3004268    51                     push ecx
0xb3004269    50                     push eax
0xb300426a    e899c53702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb300426f    58                     pop eax
0xb3004270    59                     pop ecx
0xb3004271    0f8505000000           jnz 0xb300427c
        ;; B6
        ;; goto:32 5
0xb3004277    e97c000000             jmp 0xb30042f8
        ;; B4
        ;; t0 <- LoadLocal:19(this lvl:0)
0xb300427c    8b450c                 mov eax,[ebp+0xc]
0xb300427f    50                     push eax
        ;; PushArgument:20(t0)
        ;; t0 <- InstanceCall:21(get:length, t0)
0xb3004280    b9f15e28b3             mov ecx,0xb3285ef1  'ICData target:'get:length' num-checks: 0'
0xb3004285    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300428a    e889bfffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300428f    83c404                 add esp,0x4
0xb3004292    50                     push eax
        ;; t1 <- LoadLocal:22(other lvl:0)
0xb3004293    8b4508                 mov eax,[ebp+0x8]
0xb3004296    50                     push eax
        ;; PushArgument:23(t1)
        ;; t1 <- InstanceCall:24(get:length, t1)
0xb3004297    b9415f28b3             mov ecx,0xb3285f41  'ICData target:'get:length' num-checks: 0'
0xb300429c    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30042a1    e872bfffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30042a6    83c404                 add esp,0x4
0xb30042a9    50                     push eax
        ;; Branch if EqualityCompare:25(t0 != t1) goto (7, 8)
0xb30042aa    5a                     pop edx
0xb30042ab    5b                     pop ebx
0xb30042ac    53                     push ebx
0xb30042ad    52                     push edx
0xb30042ae    813c24190040b5         cmp [esp],0xb5400019
0xb30042b5    0f8425000000           jz 0xb30042e0
0xb30042bb    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb30042c3    0f8417000000           jz 0xb30042e0
0xb30042c9    b9915f28b3             mov ecx,0xb3285f91  'ICData target:'==' num-checks: 0'
0xb30042ce    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30042d3    e800c0ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30042d8    83c408                 add esp,0x8
0xb30042db    e90d000000             jmp 0xb30042ed
0xb30042e0    b9915f28b3             mov ecx,0xb3285f91  'ICData target:'==' num-checks: 0'
0xb30042e5    e85ec6ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb30042ea    83c408                 add esp,0x8
0xb30042ed    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30042f2    0f8422000000           jz 0xb300431a
        ;; B7
        ;; goto:34 5
        ;; B5
        ;; t0 <- Constant:28(#false)
0xb30042f8    b8411030b3             mov eax,0xb3301041  'false'
0xb30042fd    50                     push eax
        ;; Return:29(t0)
0xb30042fe    58                     pop eax
0xb30042ff    ba19a51ab3             mov edx,0xb31aa519  'Function '==':.'
0xb3004304    ff422b                 inc [edx+0x2b]
0xb3004307    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300430e    7c05                   jl 0xb3004315
0xb3004310    e8a3c5ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3004315    89ec                   mov esp,ebp
0xb3004317    5d                     pop ebp
0xb3004318    c3                     ret
0xb3004319    90                     nop
        ;; B8
        ;; t0 <- LoadLocal:36(this lvl:0)
0xb300431a    8b450c                 mov eax,[ebp+0xc]
0xb300431d    50                     push eax
        ;; PushArgument:37(t0)
        ;; t0 <- LoadLocal:38(other lvl:0)
0xb300431e    8b4508                 mov eax,[ebp+0x8]
0xb3004321    50                     push eax
        ;; PushArgument:39(t0)
        ;; t0 <- InstanceCall:40(compareTo, t0, t0)
0xb3004322    b9e95f28b3             mov ecx,0xb3285fe9  'ICData target:'compareTo' num-checks: 0'
0xb3004327    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300432c    e8e7beffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004331    83c408                 add esp,0x8
0xb3004334    50                     push eax
        ;; t1 <- Constant:41(#0)
0xb3004335    b800000000             mov eax,0
0xb300433a    50                     push eax
        ;; t0 <- EqualityCompare:42(t0 == t1)
0xb300433b    5a                     pop edx
0xb300433c    5b                     pop ebx
0xb300433d    53                     push ebx
0xb300433e    52                     push edx
0xb300433f    813c24190040b5         cmp [esp],0xb5400019
0xb3004346    0f8425000000           jz 0xb3004371
0xb300434c    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3004354    0f8417000000           jz 0xb3004371
0xb300435a    b9396028b3             mov ecx,0xb3286039  'ICData target:'==' num-checks: 0'
0xb300435f    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004364    e86fbfffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004369    83c408                 add esp,0x8
0xb300436c    e90d000000             jmp 0xb300437e
0xb3004371    b9396028b3             mov ecx,0xb3286039  'ICData target:'==' num-checks: 0'
0xb3004376    e8cdc5ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb300437b    83c408                 add esp,0x8
0xb300437e    50                     push eax
        ;; Return:43(t0)
0xb300437f    58                     pop eax
0xb3004380    ba19a51ab3             mov edx,0xb31aa519  'Function '==':.'
0xb3004385    ff422b                 inc [edx+0x2b]
0xb3004388    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300438f    7c05                   jl 0xb3004396
0xb3004391    e822c5ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3004396    89ec                   mov esp,ebp
0xb3004398    5d                     pop ebp
0xb3004399    c3                     ret
0xb300439a    90                     nop
0xb300439b    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300439c    b970d30a08             mov ecx,0x80ad370
0xb30043a1    ba00000000             mov edx,0
0xb30043a6    e87dbc3702             call 0xb5380028  [stub: CallToRuntime]
0xb30043ab    e907feffff             jmp 0xb30041b7
0xb30043b0    e983c03702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30043b5    e95ec13702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 57 : 0xb30041d1 'true'
 64 : 0xb30041d8 'Function '==':.'
 186 : 0xb3004252 'true'
 193 : 0xb3004259 'false'
 201 : 0xb3004261 'true'
 233 : 0xb3004281 'ICData target:'get:length' num-checks: 0'
 238 : 0xb3004286 'ImmutableArray'
 256 : 0xb3004298 'ICData target:'get:length' num-checks: 0'
 261 : 0xb300429d 'ImmutableArray'
 306 : 0xb30042ca 'ICData target:'==' num-checks: 0'
 311 : 0xb30042cf 'ImmutableArray'
 329 : 0xb30042e1 'ICData target:'==' num-checks: 0'
 342 : 0xb30042ee 'true'
 353 : 0xb30042f9 'false'
 360 : 0xb3004300 'Function '==':.'
 395 : 0xb3004323 'ICData target:'compareTo' num-checks: 0'
 400 : 0xb3004328 'ImmutableArray'
 451 : 0xb300435b 'ICData target:'==' num-checks: 0'
 456 : 0xb3004360 'ImmutableArray'
 474 : 0xb3004372 'ICData target:'==' num-checks: 0'
 489 : 0xb3004381 'Function '==':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_==' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30041ed	other        	-1		0	-1
0xb30041f2	return       	-1		12586	-1
0xb3004277	deopt-before 	32		0	-1
0xb3004280	deopt-before 	21		12603	-1
0xb300428f	ic-call      	21		12603	-1
0xb300428f	deopt-after  	21		12603	-1
0xb3004297	deopt-before 	24		12608	-1
0xb30042a6	ic-call      	24		12608	-1
0xb30042a6	deopt-after  	24		12608	-1
0xb30042ae	deopt-before 	25		12605	-1
0xb30042d8	ic-call      	25		12605	-1
0xb30042d8	deopt-after  	25		12605	-1
0xb30042ea	other        	-1		12605	-1
0xb30042f8	deopt-before 	34		0	-1
0xb3004315	other        	-1		0	-1
0xb300431a	return       	-1		12613	-1
0xb3004322	deopt-before 	40		12622	-1
0xb3004331	ic-call      	40		12622	-1
0xb3004331	deopt-after  	40		12622	-1
0xb300433f	deopt-before 	42		12625	-1
0xb3004369	ic-call      	42		12625	-1
0xb3004369	deopt-after  	42		12625	-1
0xb300437b	other        	-1		12625	-1
0xb3004396	other        	-1		0	-1
0xb300439b	return       	-1		12617	-1
0xb30043ab	other        	-1		12570	-1
0xb30043b0	patch        	-1		0	-1
0xb30043b5	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_==' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_==' {
  stack var 'this' offset 3 (valid 12342-12630)
  stack var 'other' offset 2 (valid 12573-12630)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_==' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:uri_Uri_hasAuthority' @ token 823
Before Optimizations
==== dart:uri_Uri_hasAuthority
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:userInfo, t0)
    t1 <- Constant:6(#)
    Branch if EqualityCompare:7(t0 != t1) goto (4, 2)
B4[target]
    goto:28 3
B2[target]
    t0 <- LoadLocal:9(this lvl:0)
    PushArgument:10(t0)
    t0 <- InstanceCall:11(get:domain, t0)
    t1 <- Constant:12(#)
    Branch if EqualityCompare:13(t0 != t1) goto (5, 6)
B5[target]
    goto:30 3
B3[join] pred(B4, B5)
    t0 <- Constant:24(#true)
    StoreLocal:25(:expr_temp, t0, lvl: 0)
    goto:33 7
B6[target]
    t0 <- LoadLocal:16(this lvl:0)
    PushArgument:17(t0)
    t0 <- InstanceCall:18(get:port, t0)
    t1 <- Constant:19(#0)
    t0 <- EqualityCompare:20(t0 != t1)
    t1 <- Constant:21(#true)
    t0 <- StrictCompare:22(===, t0, t1)
    StoreLocal:23(:expr_temp, t0, lvl: 0)
    goto:34 7
B7[join] pred(B3, B6)
    t0 <- LoadLocal:35(:expr_temp lvl:0)
    Return:36(t0)
--> 'dart:uri_Uri_hasAuthority' entry: 0xb30043d8 time: 225 us
Code for function 'dart:uri_Uri_hasAuthority' {
        ;; Enter frame
0xb30043d8    55                     push ebp
0xb30043d9    89e5                   mov ebp,esp
0xb30043db    e800000000             call 0xb30043e0
0xb30043e0    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb30043e3    b8190040b5             mov eax,0xb5400019
0xb30043e8    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30043eb    3b25bc195809           cmp esp,[0x95819bc]
0xb30043f1    0f86a3010000           jna 0xb300459a
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb30043f7    8b4508                 mov eax,[ebp+0x8]
0xb30043fa    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:userInfo, t0)
0xb30043fb    b9016428b3             mov ecx,0xb3286401  'ICData target:'get:userInfo' num-checks: 0'
0xb3004400    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004405    e80ebeffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300440a    83c404                 add esp,0x4
0xb300440d    50                     push eax
        ;; t1 <- Constant:6(#)
0xb300440e    b8e11240b5             mov eax,0xb54012e1
0xb3004413    50                     push eax
        ;; Branch if EqualityCompare:7(t0 != t1) goto (4, 2)
0xb3004414    5a                     pop edx
0xb3004415    5b                     pop ebx
0xb3004416    53                     push ebx
0xb3004417    52                     push edx
0xb3004418    813c24190040b5         cmp [esp],0xb5400019
0xb300441f    0f8425000000           jz 0xb300444a
0xb3004425    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb300442d    0f8417000000           jz 0xb300444a
0xb3004433    b9516428b3             mov ecx,0xb3286451  'ICData target:'==' num-checks: 0'
0xb3004438    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300443d    e896beffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004442    83c408                 add esp,0x8
0xb3004445    e90d000000             jmp 0xb3004457
0xb300444a    b9516428b3             mov ecx,0xb3286451  'ICData target:'==' num-checks: 0'
0xb300444f    e8f4c4ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3004454    83c408                 add esp,0x8
0xb3004457    3d391030b3             cmp eax, 0xb3301039  'true'
0xb300445c    0f8405000000           jz 0xb3004467
        ;; B4
        ;; goto:28 3
0xb3004462    e96b000000             jmp 0xb30044d2
        ;; B2
        ;; t0 <- LoadLocal:9(this lvl:0)
0xb3004467    8b4508                 mov eax,[ebp+0x8]
0xb300446a    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- InstanceCall:11(get:domain, t0)
0xb300446b    b9a96428b3             mov ecx,0xb32864a9  'ICData target:'get:domain' num-checks: 0'
0xb3004470    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004475    e89ebdffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300447a    83c404                 add esp,0x4
0xb300447d    50                     push eax
        ;; t1 <- Constant:12(#)
0xb300447e    b8e11240b5             mov eax,0xb54012e1
0xb3004483    50                     push eax
        ;; Branch if EqualityCompare:13(t0 != t1) goto (5, 6)
0xb3004484    5a                     pop edx
0xb3004485    5b                     pop ebx
0xb3004486    53                     push ebx
0xb3004487    52                     push edx
0xb3004488    813c24190040b5         cmp [esp],0xb5400019
0xb300448f    0f8425000000           jz 0xb30044ba
0xb3004495    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb300449d    0f8417000000           jz 0xb30044ba
0xb30044a3    b9f96428b3             mov ecx,0xb32864f9  'ICData target:'==' num-checks: 0'
0xb30044a8    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30044ad    e826beffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30044b2    83c408                 add esp,0x8
0xb30044b5    e90d000000             jmp 0xb30044c7
0xb30044ba    b9f96428b3             mov ecx,0xb32864f9  'ICData target:'==' num-checks: 0'
0xb30044bf    e884c4ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb30044c4    83c408                 add esp,0x8
0xb30044c7    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30044cc    0f840f000000           jz 0xb30044e1
        ;; B5
        ;; goto:30 3
        ;; B3
        ;; t0 <- Constant:24(#true)
0xb30044d2    b8391030b3             mov eax,0xb3301039  'true'
0xb30044d7    50                     push eax
        ;; StoreLocal:25(:expr_temp, t0, lvl: 0)
0xb30044d8    58                     pop eax
0xb30044d9    8945f8                 mov [ebp-0x8],eax
        ;; goto:33 7
0xb30044dc    e998000000             jmp 0xb3004579
        ;; B6
        ;; t0 <- LoadLocal:16(this lvl:0)
0xb30044e1    8b4508                 mov eax,[ebp+0x8]
0xb30044e4    50                     push eax
        ;; PushArgument:17(t0)
        ;; t0 <- InstanceCall:18(get:port, t0)
0xb30044e5    b9516528b3             mov ecx,0xb3286551  'ICData target:'get:port' num-checks: 0'
0xb30044ea    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30044ef    e824bdffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30044f4    83c404                 add esp,0x4
0xb30044f7    50                     push eax
        ;; t1 <- Constant:19(#0)
0xb30044f8    b800000000             mov eax,0
0xb30044fd    50                     push eax
        ;; t0 <- EqualityCompare:20(t0 != t1)
0xb30044fe    5a                     pop edx
0xb30044ff    5b                     pop ebx
0xb3004500    53                     push ebx
0xb3004501    52                     push edx
0xb3004502    813c24190040b5         cmp [esp],0xb5400019
0xb3004509    0f8425000000           jz 0xb3004534
0xb300450f    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3004517    0f8417000000           jz 0xb3004534
0xb300451d    b9a16528b3             mov ecx,0xb32865a1  'ICData target:'==' num-checks: 0'
0xb3004522    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004527    e8acbdffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300452c    83c408                 add esp,0x8
0xb300452f    e90d000000             jmp 0xb3004541
0xb3004534    b9a16528b3             mov ecx,0xb32865a1  'ICData target:'==' num-checks: 0'
0xb3004539    e80ac4ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb300453e    83c408                 add esp,0x8
0xb3004541    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3004546    7407                   jz 0xb300454f
0xb3004548    b8391030b3             mov eax,0xb3301039  'true'
0xb300454d    eb05                   jmp 0xb3004554
0xb300454f    b8411030b3             mov eax,0xb3301041  'false'
0xb3004554    50                     push eax
        ;; t1 <- Constant:21(#true)
0xb3004555    b8391030b3             mov eax,0xb3301039  'true'
0xb300455a    50                     push eax
        ;; t0 <- StrictCompare:22(===, t0, t1)
0xb300455b    58                     pop eax
0xb300455c    59                     pop ecx
0xb300455d    51                     push ecx
0xb300455e    50                     push eax
0xb300455f    e8a4c23702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3004564    58                     pop eax
0xb3004565    59                     pop ecx
0xb3004566    7407                   jz 0xb300456f
0xb3004568    ba411030b3             mov edx,0xb3301041  'false'
0xb300456d    eb05                   jmp 0xb3004574
0xb300456f    ba391030b3             mov edx,0xb3301039  'true'
0xb3004574    52                     push edx
        ;; StoreLocal:23(:expr_temp, t0, lvl: 0)
0xb3004575    58                     pop eax
0xb3004576    8945f8                 mov [ebp-0x8],eax
        ;; goto:34 7
        ;; B7
        ;; t0 <- LoadLocal:35(:expr_temp lvl:0)
0xb3004579    8b45f8                 mov eax,[ebp-0x8]
0xb300457c    50                     push eax
        ;; Return:36(t0)
0xb300457d    58                     pop eax
0xb300457e    ba291e0bb3             mov edx,0xb30b1e29  'Function 'hasAuthority':.'
0xb3004583    ff422b                 inc [edx+0x2b]
0xb3004586    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300458d    7c05                   jl 0xb3004594
0xb300458f    e824c3ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3004594    89ec                   mov esp,ebp
0xb3004596    5d                     pop ebp
0xb3004597    c3                     ret
0xb3004598    90                     nop
0xb3004599    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300459a    b970d30a08             mov ecx,0x80ad370
0xb300459f    ba00000000             mov edx,0
0xb30045a4    e87fba3702             call 0xb5380028  [stub: CallToRuntime]
0xb30045a9    e949feffff             jmp 0xb30043f7
0xb30045ae    e985be3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30045b3    e960bf3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 36 : 0xb30043fc 'ICData target:'get:userInfo' num-checks: 0'
 41 : 0xb3004401 'ImmutableArray'
 55 : 0xb300440f ''
 92 : 0xb3004434 'ICData target:'==' num-checks: 0'
 97 : 0xb3004439 'ImmutableArray'
 115 : 0xb300444b 'ICData target:'==' num-checks: 0'
 128 : 0xb3004458 'true'
 148 : 0xb300446c 'ICData target:'get:domain' num-checks: 0'
 153 : 0xb3004471 'ImmutableArray'
 167 : 0xb300447f ''
 204 : 0xb30044a4 'ICData target:'==' num-checks: 0'
 209 : 0xb30044a9 'ImmutableArray'
 227 : 0xb30044bb 'ICData target:'==' num-checks: 0'
 240 : 0xb30044c8 'true'
 251 : 0xb30044d3 'true'
 270 : 0xb30044e6 'ICData target:'get:port' num-checks: 0'
 275 : 0xb30044eb 'ImmutableArray'
 326 : 0xb300451e 'ICData target:'==' num-checks: 0'
 331 : 0xb3004523 'ImmutableArray'
 349 : 0xb3004535 'ICData target:'==' num-checks: 0'
 362 : 0xb3004542 'true'
 369 : 0xb3004549 'true'
 376 : 0xb3004550 'false'
 382 : 0xb3004556 'true'
 401 : 0xb3004569 'false'
 408 : 0xb3004570 'true'
 423 : 0xb300457f 'Function 'hasAuthority':.'
}
PC Descriptors for function 'dart:uri_Uri_hasAuthority' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30043fb	deopt-before 	5		828	-1
0xb300440a	ic-call      	5		828	-1
0xb300440a	deopt-after  	5		828	-1
0xb3004418	deopt-before 	7		829	-1
0xb3004442	ic-call      	7		829	-1
0xb3004442	deopt-after  	7		829	-1
0xb3004454	other        	-1		829	-1
0xb3004462	deopt-before 	28		0	-1
0xb300446b	deopt-before 	11		835	-1
0xb300447a	ic-call      	11		835	-1
0xb300447a	deopt-after  	11		835	-1
0xb3004488	deopt-before 	13		836	-1
0xb30044b2	ic-call      	13		836	-1
0xb30044b2	deopt-after  	13		836	-1
0xb30044c4	other        	-1		836	-1
0xb30044d2	deopt-before 	30		0	-1
0xb30044dc	deopt-before 	33		0	-1
0xb30044e5	deopt-before 	18		842	-1
0xb30044f4	ic-call      	18		842	-1
0xb30044f4	deopt-after  	18		842	-1
0xb3004502	deopt-before 	20		843	-1
0xb300452c	ic-call      	20		843	-1
0xb300452c	deopt-after  	20		843	-1
0xb300453e	other        	-1		843	-1
0xb3004579	deopt-before 	34		0	-1
0xb3004594	other        	-1		0	-1
0xb3004599	return       	-1		826	-1
0xb30045a9	other        	-1		823	-1
0xb30045ae	patch        	-1		0	-1
0xb30045b3	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_Uri_hasAuthority' {
}
Variable Descriptors for function 'dart:uri_Uri_hasAuthority' {
  stack var 'this' offset 2 (valid 21-849)
}
Exception Handlers for function 'dart:uri_Uri_hasAuthority' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:uri_Uri_get_userInfo' @ token 24
Before Optimizations
==== dart:uri_Uri_get_userInfo
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 12, immutable=0)
    Return:5(t0)
--> 'dart:uri_Uri_get_userInfo' entry: 0xb30045c8 time: 41 us
Code for function 'dart:uri_Uri_get_userInfo' {
0xb30045c8    8b442404               mov eax,[esp+0x4]
0xb30045cc    8b400b                 mov eax,[eax+0xb]
0xb30045cf    c3                     ret
0xb30045d0    cc                     int3
0xb30045d1    e962be3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:uri_Uri_get_userInfo' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:uri_Uri_get_userInfo' {
}
Variable Descriptors for function 'dart:uri_Uri_get_userInfo' {
  stack var 'this' offset 2 (valid 21-24)
}
Exception Handlers for function 'dart:uri_Uri_get_userInfo' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:uri_Uri_get_domain' @ token 28
Before Optimizations
==== dart:uri_Uri_get_domain
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 16, immutable=0)
    Return:5(t0)
--> 'dart:uri_Uri_get_domain' entry: 0xb30045e8 time: 39 us
Code for function 'dart:uri_Uri_get_domain' {
0xb30045e8    8b442404               mov eax,[esp+0x4]
0xb30045ec    8b400f                 mov eax,[eax+0xf]
0xb30045ef    c3                     ret
0xb30045f0    cc                     int3
0xb30045f1    e942be3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:uri_Uri_get_domain' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:uri_Uri_get_domain' {
}
Variable Descriptors for function 'dart:uri_Uri_get_domain' {
  stack var 'this' offset 2 (valid 21-28)
}
Exception Handlers for function 'dart:uri_Uri_get_domain' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:uri_Uri_get_port' @ token 32
Before Optimizations
==== dart:uri_Uri_get_port
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 20, immutable=0)
    Return:5(t0)
--> 'dart:uri_Uri_get_port' entry: 0xb3004608 time: 39 us
Code for function 'dart:uri_Uri_get_port' {
0xb3004608    8b442404               mov eax,[esp+0x4]
0xb300460c    8b4013                 mov eax,[eax+0x13]
0xb300460f    c3                     ret
0xb3004610    cc                     int3
0xb3004611    e922be3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:uri_Uri_get_port' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:uri_Uri_get_port' {
}
Variable Descriptors for function 'dart:uri_Uri_get_port' {
  stack var 'this' offset 2 (valid 21-32)
}
Exception Handlers for function 'dart:uri_Uri_get_port' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:uri_Uri_get_path' @ token 36
Before Optimizations
==== dart:uri_Uri_get_path
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 24, immutable=0)
    Return:5(t0)
--> 'dart:uri_Uri_get_path' entry: 0xb3004628 time: 39 us
Code for function 'dart:uri_Uri_get_path' {
0xb3004628    8b442404               mov eax,[esp+0x4]
0xb300462c    8b4017                 mov eax,[eax+0x17]
0xb300462f    c3                     ret
0xb3004630    cc                     int3
0xb3004631    e902be3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:uri_Uri_get_path' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:uri_Uri_get_path' {
}
Variable Descriptors for function 'dart:uri_Uri_get_path' {
  stack var 'this' offset 2 (valid 21-36)
}
Exception Handlers for function 'dart:uri_Uri_get_path' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBase@0x36924d72_startsWith' @ token 12942
Before Optimizations
==== dart:core__StringBase@0x36924d72_startsWith
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#0)
    PushArgument:6(t0)
    t0 <- LoadLocal:7(other lvl:0)
    PushArgument:8(t0)
    t0 <- InstanceCall:9(_substringMatches@0x36924d72, t0, t0, t0)
    Return:10(t0)
--> 'dart:core__StringBase@0x36924d72_startsWith' entry: 0xb3004648 time: 211 us
Code for function 'dart:core__StringBase@0x36924d72_startsWith' {
        ;; Enter frame
0xb3004648    55                     push ebp
0xb3004649    89e5                   mov ebp,esp
0xb300464b    e800000000             call 0xb3004650
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3004650    3b25bc195809           cmp esp,[0x95819bc]
0xb3004656    0f863e000000           jna 0xb300469a
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb300465c    8b450c                 mov eax,[ebp+0xc]
0xb300465f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#0)
0xb3004660    b800000000             mov eax,0
0xb3004665    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- LoadLocal:7(other lvl:0)
0xb3004666    8b4508                 mov eax,[ebp+0x8]
0xb3004669    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- InstanceCall:9(_substringMatches@0x36924d72, t0, t0, t0)
0xb300466a    b9396e28b3             mov ecx,0xb3286e39  'ICData target:'_substringMatches@0x36924d72' num-checks: 0'
0xb300466f    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3004674    e89fbbffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004679    83c40c                 add esp,0xc
0xb300467c    50                     push eax
        ;; Return:10(t0)
0xb300467d    58                     pop eax
0xb300467e    bab9a61ab3             mov edx,0xb31aa6b9  'Function 'startsWith':.'
0xb3004683    ff422b                 inc [edx+0x2b]
0xb3004686    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300468d    7c05                   jl 0xb3004694
0xb300468f    e824c2ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3004694    89ec                   mov esp,ebp
0xb3004696    5d                     pop ebp
0xb3004697    c3                     ret
0xb3004698    90                     nop
0xb3004699    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300469a    b970d30a08             mov ecx,0x80ad370
0xb300469f    ba00000000             mov edx,0
0xb30046a4    e87fb93702             call 0xb5380028  [stub: CallToRuntime]
0xb30046a9    ebb1                   jmp 0xb300465c
0xb30046ab    e988bd3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30046b0    e963be3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 35 : 0xb300466b 'ICData target:'_substringMatches@0x36924d72' num-checks: 0'
 40 : 0xb3004670 'ImmutableArray'
 55 : 0xb300467f 'Function 'startsWith':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_startsWith' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300466a	deopt-before 	9		12951	-1
0xb3004679	ic-call      	9		12951	-1
0xb3004679	deopt-after  	9		12951	-1
0xb3004694	other        	-1		0	-1
0xb3004699	return       	-1		12948	-1
0xb30046a9	other        	-1		12942	-1
0xb30046ab	patch        	-1		0	-1
0xb30046b0	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_startsWith' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_startsWith' {
  stack var 'this' offset 3 (valid 12342-12959)
  stack var 'other' offset 2 (valid 12945-12959)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_startsWith' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:uri_::_merge' @ token 1258
Before Optimizations
==== dart:uri_::_merge
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(base lvl:0)
    t1 <- Constant:4(#)
    Branch if EqualityCompare:5(t0 == t1) goto (2, 3)
B2[target]
    t0 <- Constant:7(#/)
    PushArgument:8(t0)
    t0 <- LoadLocal:9(reference lvl:0)
    PushArgument:10(t0)
    t0 <- Constant:11(#)
    PushArgument:12(t0)
    t0 <- Constant:13(#NULL AbstractTypeArguments)
    t0 <- CreateArray:14(t0, t0, t0, t0)
    PushArgument:15(t0)
    t0 <- StaticCall:16(_interpolate@0x36924d72 t0)
    Return:17(t0)
B3[target]
    t0 <- Constant:20(#)
    PushArgument:21(t0)
    t0 <- LoadLocal:22(base lvl:0)
    PushArgument:23(t0)
    t0 <- Constant:24(#0)
    PushArgument:25(t0)
    t0 <- LoadLocal:26(base lvl:0)
    PushArgument:27(t0)
    t0 <- Constant:28(#/)
    PushArgument:29(t0)
    t0 <- InstanceCall:30(lastIndexOf, t0, t0)
    PushArgument:31(t0)
    t0 <- Constant:32(#1)
    PushArgument:33(t0)
    t0 <- InstanceCall:34(+, t0, t0)
    PushArgument:35(t0)
    t0 <- InstanceCall:36(substring, t0, t0, t0)
    PushArgument:37(t0)
    t0 <- LoadLocal:38(reference lvl:0)
    PushArgument:39(t0)
    t0 <- Constant:40(#)
    PushArgument:41(t0)
    t0 <- Constant:42(#NULL AbstractTypeArguments)
    t0 <- CreateArray:43(t0, t0, t0, t0, t0)
    PushArgument:44(t0)
    t0 <- StaticCall:45(_interpolate@0x36924d72 t0)
    Return:46(t0)
--> 'dart:uri_::_merge' entry: 0xb30046c8 time: 316 us
Code for function 'dart:uri_::_merge' {
        ;; Enter frame
0xb30046c8    55                     push ebp
0xb30046c9    89e5                   mov ebp,esp
0xb30046cb    e800000000             call 0xb30046d0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30046d0    3b25bc195809           cmp esp,[0x95819bc]
0xb30046d6    0f865d010000           jna 0xb3004839
        ;; t0 <- LoadLocal:3(base lvl:0)
0xb30046dc    8b450c                 mov eax,[ebp+0xc]
0xb30046df    50                     push eax
        ;; t1 <- Constant:4(#)
0xb30046e0    b8e11240b5             mov eax,0xb54012e1
0xb30046e5    50                     push eax
        ;; Branch if EqualityCompare:5(t0 == t1) goto (2, 3)
0xb30046e6    5a                     pop edx
0xb30046e7    5b                     pop ebx
0xb30046e8    53                     push ebx
0xb30046e9    52                     push edx
0xb30046ea    813c24190040b5         cmp [esp],0xb5400019
0xb30046f1    0f8425000000           jz 0xb300471c
0xb30046f7    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb30046ff    0f8417000000           jz 0xb300471c
0xb3004705    b9c97028b3             mov ecx,0xb32870c9  'ICData target:'==' num-checks: 0'
0xb300470a    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300470f    e8c4bbffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004714    83c408                 add esp,0x8
0xb3004717    e90d000000             jmp 0xb3004729
0xb300471c    b9c97028b3             mov ecx,0xb32870c9  'ICData target:'==' num-checks: 0'
0xb3004721    e822c2ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3004726    83c408                 add esp,0x8
0xb3004729    3d391030b3             cmp eax, 0xb3301039  'true'
0xb300472e    0f8557000000           jnz 0xb300478b
        ;; B2
        ;; t0 <- Constant:7(#/)
0xb3004734    b8812340b5             mov eax,0xb5402381
0xb3004739    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- LoadLocal:9(reference lvl:0)
0xb300473a    8b4508                 mov eax,[ebp+0x8]
0xb300473d    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- Constant:11(#)
0xb300473e    b8e11240b5             mov eax,0xb54012e1
0xb3004743    50                     push eax
        ;; PushArgument:12(t0)
        ;; t0 <- Constant:13(#NULL AbstractTypeArguments)
0xb3004744    b8190040b5             mov eax,0xb5400019
0xb3004749    50                     push eax
        ;; t0 <- CreateArray:14(t0, t0, t0, t0)
0xb300474a    59                     pop ecx
0xb300474b    ba06000000             mov edx,0x6
0xb3004750    e843ba3702             call 0xb5380198  [stub: AllocateArray]
0xb3004755    8d500b                 lea edx,[eax+0xb]
0xb3004758    8f4208                 pop [edx+0x8]
0xb300475b    8f4204                 pop [edx+0x4]
0xb300475e    8f02                   pop [edx]
0xb3004760    50                     push eax
        ;; PushArgument:15(t0)
        ;; t0 <- StaticCall:16(_interpolate@0x36924d72 t0)
0xb3004761    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004766    e8bdbb3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300476b    83c404                 add esp,0x4
0xb300476e    50                     push eax
        ;; Return:17(t0)
0xb300476f    58                     pop eax
0xb3004770    ba110612b3             mov edx,0xb3120611  'Function 'merge': static.'
0xb3004775    ff422b                 inc [edx+0x2b]
0xb3004778    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300477f    7c05                   jl 0xb3004786
0xb3004781    e832c1ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3004786    89ec                   mov esp,ebp
0xb3004788    5d                     pop ebp
0xb3004789    c3                     ret
0xb300478a    90                     nop
        ;; B3
        ;; t0 <- Constant:20(#)
0xb300478b    b8e11240b5             mov eax,0xb54012e1
0xb3004790    50                     push eax
        ;; PushArgument:21(t0)
        ;; t0 <- LoadLocal:22(base lvl:0)
0xb3004791    8b450c                 mov eax,[ebp+0xc]
0xb3004794    50                     push eax
        ;; PushArgument:23(t0)
        ;; t0 <- Constant:24(#0)
0xb3004795    b800000000             mov eax,0
0xb300479a    50                     push eax
        ;; PushArgument:25(t0)
        ;; t0 <- LoadLocal:26(base lvl:0)
0xb300479b    8b450c                 mov eax,[ebp+0xc]
0xb300479e    50                     push eax
        ;; PushArgument:27(t0)
        ;; t0 <- Constant:28(#/)
0xb300479f    b8812340b5             mov eax,0xb5402381
0xb30047a4    50                     push eax
        ;; PushArgument:29(t0)
        ;; t0 <- InstanceCall:30(lastIndexOf, t0, t0)
0xb30047a5    b9397128b3             mov ecx,0xb3287139  'ICData target:'lastIndexOf' num-checks: 0'
0xb30047aa    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30047af    e864baffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30047b4    83c408                 add esp,0x8
0xb30047b7    50                     push eax
        ;; PushArgument:31(t0)
        ;; t0 <- Constant:32(#1)
0xb30047b8    b802000000             mov eax,0x2
0xb30047bd    50                     push eax
        ;; PushArgument:33(t0)
        ;; t0 <- InstanceCall:34(+, t0, t0)
0xb30047be    b9897128b3             mov ecx,0xb3287189  'ICData target:'+' num-checks: 0'
0xb30047c3    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30047c8    e80bbbffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30047cd    83c408                 add esp,0x8
0xb30047d0    50                     push eax
        ;; PushArgument:35(t0)
        ;; t0 <- InstanceCall:36(substring, t0, t0, t0)
0xb30047d1    b9e17128b3             mov ecx,0xb32871e1  'ICData target:'substring' num-checks: 0'
0xb30047d6    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb30047db    e838baffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30047e0    83c40c                 add esp,0xc
0xb30047e3    50                     push eax
        ;; PushArgument:37(t0)
        ;; t0 <- LoadLocal:38(reference lvl:0)
0xb30047e4    8b4508                 mov eax,[ebp+0x8]
0xb30047e7    50                     push eax
        ;; PushArgument:39(t0)
        ;; t0 <- Constant:40(#)
0xb30047e8    b8e11240b5             mov eax,0xb54012e1
0xb30047ed    50                     push eax
        ;; PushArgument:41(t0)
        ;; t0 <- Constant:42(#NULL AbstractTypeArguments)
0xb30047ee    b8190040b5             mov eax,0xb5400019
0xb30047f3    50                     push eax
        ;; t0 <- CreateArray:43(t0, t0, t0, t0, t0)
0xb30047f4    59                     pop ecx
0xb30047f5    ba08000000             mov edx,0x8
0xb30047fa    e899b93702             call 0xb5380198  [stub: AllocateArray]
0xb30047ff    8d500b                 lea edx,[eax+0xb]
0xb3004802    8f420c                 pop [edx+0xc]
0xb3004805    8f4208                 pop [edx+0x8]
0xb3004808    8f4204                 pop [edx+0x4]
0xb300480b    8f02                   pop [edx]
0xb300480d    50                     push eax
        ;; PushArgument:44(t0)
        ;; t0 <- StaticCall:45(_interpolate@0x36924d72 t0)
0xb300480e    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004813    e810bb3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3004818    83c404                 add esp,0x4
0xb300481b    50                     push eax
        ;; Return:46(t0)
0xb300481c    58                     pop eax
0xb300481d    ba110612b3             mov edx,0xb3120611  'Function 'merge': static.'
0xb3004822    ff422b                 inc [edx+0x2b]
0xb3004825    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300482c    7c05                   jl 0xb3004833
0xb300482e    e885c0ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3004833    89ec                   mov esp,ebp
0xb3004835    5d                     pop ebp
0xb3004836    c3                     ret
0xb3004837    90                     nop
0xb3004838    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3004839    b970d30a08             mov ecx,0x80ad370
0xb300483e    ba00000000             mov edx,0
0xb3004843    e8e0b73702             call 0xb5380028  [stub: CallToRuntime]
0xb3004848    e98ffeffff             jmp 0xb30046dc
0xb300484d    e9e6bb3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3004852    e9c1bc3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 25 : 0xb30046e1 ''
 62 : 0xb3004706 'ICData target:'==' num-checks: 0'
 67 : 0xb300470b 'ImmutableArray'
 85 : 0xb300471d 'ICData target:'==' num-checks: 0'
 98 : 0xb300472a 'true'
 109 : 0xb3004735 '/'
 119 : 0xb300473f ''
 154 : 0xb3004762 'ImmutableArray'
 169 : 0xb3004771 'Function 'merge': static.'
 196 : 0xb300478c ''
 216 : 0xb30047a0 '/'
 222 : 0xb30047a6 'ICData target:'lastIndexOf' num-checks: 0'
 227 : 0xb30047ab 'ImmutableArray'
 247 : 0xb30047bf 'ICData target:'+' num-checks: 0'
 252 : 0xb30047c4 'ImmutableArray'
 266 : 0xb30047d2 'ICData target:'substring' num-checks: 0'
 271 : 0xb30047d7 'ImmutableArray'
 289 : 0xb30047e9 ''
 327 : 0xb300480f 'ImmutableArray'
 342 : 0xb300481e 'Function 'merge': static.'
}
PC Descriptors for function 'dart:uri_::_merge' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30046ea	deopt-before 	5		1272	-1
0xb3004714	ic-call      	5		1272	-1
0xb3004714	deopt-after  	5		1272	-1
0xb3004726	other        	-1		1272	-1
0xb3004755	other        	-1		1277	-1
0xb300476b	fn-call      	16		1277	-1
0xb300476b	deopt-after  	16		1277	-1
0xb3004786	other        	-1		0	-1
0xb300478b	return       	-1		1276	-1
0xb30047a5	deopt-before 	30		1302	-1
0xb30047b4	ic-call      	30		1302	-1
0xb30047b4	deopt-after  	30		1302	-1
0xb30047be	deopt-before 	34		1306	-1
0xb30047cd	ic-call      	34		1306	-1
0xb30047cd	deopt-after  	34		1306	-1
0xb30047d1	deopt-before 	36		1293	-1
0xb30047e0	ic-call      	36		1293	-1
0xb30047e0	deopt-after  	36		1293	-1
0xb30047ff	other        	-1		1285	-1
0xb3004818	fn-call      	45		1285	-1
0xb3004818	deopt-after  	45		1285	-1
0xb3004833	other        	-1		0	-1
0xb3004838	return       	-1		1284	-1
0xb3004848	other        	-1		1258	-1
0xb300484d	patch        	-1		0	-1
0xb3004852	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_::_merge' {
}
Variable Descriptors for function 'dart:uri_::_merge' {
  stack var 'base' offset 3 (valid 1260-1317)
  stack var 'reference' offset 2 (valid 1264-1317)
}
Exception Handlers for function 'dart:uri_::_merge' {
No exception handlers
}
Static call target functions {
  0xb300476b: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3004818: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
}
PatchStaticCall: patching from 0xb300403e to 'dart:uri_::_merge' 0xb30046c8
Compiling function: 'dart:core__StringBase@0x36924d72_lastIndexOf' @ token 13094
Before Optimizations
==== dart:core__StringBase@0x36924d72_lastIndexOf
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(start lvl:0)
    t1 <- Constant:4(#null)
    Branch if StrictCompare:6(===, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:8(this lvl:0)
    PushArgument:9(t0)
    t0 <- InstanceCall:10(get:length, t0)
    PushArgument:11(t0)
    t0 <- Constant:12(#1)
    PushArgument:13(t0)
    t0 <- InstanceCall:14(-, t0, t0)
    StoreLocal:15(start, t0, lvl: 0)
    goto:19 4
B3[target]
    goto:20 4
B4[join] pred(B2, B3)
    t0 <- LoadLocal:21(other lvl:0)
    PushArgument:22(t0)
    t0 <- InstanceCall:23(get:isEmpty, t0)
    t1 <- Constant:24(#true)
    Branch if StrictCompare:25(===, t0, t1) goto (5, 6)
B5[target]
    t0 <- LoadLocal:27(this lvl:0)
    PushArgument:28(t0)
    t0 <- InstanceCall:29(get:length, t0)
    PushArgument:30(t0)
    t0 <- LoadLocal:31(start lvl:0)
    PushArgument:32(t0)
    t0 <- StaticCall:33(min t0, t0)
    Return:34(t0)
B6[target]
    t0 <- LoadLocal:37(start lvl:0)
    t1 <- LoadLocal:38(this lvl:0)
    PushArgument:39(t1)
    t1 <- InstanceCall:40(get:length, t1)
    Branch if RelationalOp:41(>=, t0, t1) goto (7, 8)
B7[target]
    t0 <- LoadLocal:43(this lvl:0)
    PushArgument:44(t0)
    t0 <- InstanceCall:45(get:length, t0)
    PushArgument:46(t0)
    t0 <- Constant:47(#1)
    PushArgument:48(t0)
    t0 <- InstanceCall:49(-, t0, t0)
    StoreLocal:50(start, t0, lvl: 0)
    goto:54 9
B8[target]
    goto:55 9
B9[join] pred(B7, B8)
    t0 <- LoadLocal:56(start lvl:0)
    StoreLocal:57(index, t0, lvl: 0)
    goto:81 12
B12[join] pred(B9, B11)
    t0 <- LoadLocal:83(index lvl:0)
    t1 <- Constant:84(#0)
    Branch if RelationalOp:85(>=, t0, t1) goto (13, 14)
B13[target]
    CheckStackOverflow:58()
    t0 <- LoadLocal:59(this lvl:0)
    PushArgument:60(t0)
    t0 <- LoadLocal:61(index lvl:0)
    PushArgument:62(t0)
    t0 <- LoadLocal:63(other lvl:0)
    PushArgument:64(t0)
    t0 <- InstanceCall:65(_substringMatches@0x36924d72, t0, t0, t0)
    t1 <- Constant:66(#true)
    Branch if StrictCompare:67(===, t0, t1) goto (10, 11)
B10[target]
    t0 <- LoadLocal:69(index lvl:0)
    Return:70(t0)
B11[target]
    t0 <- LoadLocal:73(index lvl:0)
    t0 <- StoreLocal:74(:expr_temp, t0, lvl: 0)
    PushArgument:75(t0)
    t0 <- Constant:76(#1)
    PushArgument:77(t0)
    t0 <- InstanceCall:78(-, t0, t0)
    StoreLocal:79(index, t0, lvl: 0)
    goto:82 12
B14[target]
    t0 <- Constant:89(#-1)
    Return:90(t0)
--> 'dart:core__StringBase@0x36924d72_lastIndexOf' entry: 0xb3004868 time: 756 us
Code for function 'dart:core__StringBase@0x36924d72_lastIndexOf' {
        ;; Enter frame
0xb3004868    55                     push ebp
0xb3004869    89e5                   mov ebp,esp
0xb300486b    e800000000             call 0xb3004870
0xb3004870    83ec14                 sub esp,0x14
        ;; Copy parameters
0xb3004873    8b4a0f                 mov ecx,[edx+0xf]
0xb3004876    83f904                 cmp ecx,0x4
0xb3004879    0f8c41000000           jl 0xb30048c0
0xb300487f    83f906                 cmp ecx,0x6
0xb3004882    0f8f38000000           jg 0xb30048c0
0xb3004888    8b5a0b                 mov ebx,[edx+0xb]
0xb300488b    2bd9                   sub ebx,ecx
0xb300488d    8d5c5d08               lea ebx,[ebp+ebx*0x2+0x8]
0xb3004891    8d7dfc                 lea edi,[ebp-0x4]
0xb3004894    2bf9                   sub edi,ecx
0xb3004896    2bf9                   sub edi,ecx
0xb3004898    d1f9                   sar ecx, 1
0xb300489a    eb06                   jmp 0xb30048a2
0xb300489c    8b048b                 mov eax,[ebx+ecx*0x4]
0xb300489f    89048f                 mov [edi+ecx*0x4],eax
0xb30048a2    49                     dec ecx
0xb30048a3    79f7                   jns 0xb300489c
0xb30048a5    8b4a0f                 mov ecx,[edx+0xf]
0xb30048a8    d1f9                   sar ecx, 1
0xb30048aa    83f902                 cmp ecx,0x2
0xb30048ad    7f08                   jg 0xb30048b7
0xb30048af    b8190040b5             mov eax,0xb5400019
0xb30048b4    8945f0                 mov [ebp-0x10],eax
0xb30048b7    8b5a0b                 mov ebx,[edx+0xb]
0xb30048ba    d1fb                   sar ebx, 1
0xb30048bc    3bcb                   cmp ecx,ebx
0xb30048be    7411                   jz 0xb30048d1
0xb30048c0    83c414                 add esp,0x14
0xb30048c3    b9d97528b3             mov ecx,0xb32875d9  'ICData target:'lastIndexOf' num-checks: 0'
0xb30048c8    e87bb93702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb30048cd    89ec                   mov esp,ebp
0xb30048cf    5d                     pop ebp
0xb30048d0    c3                     ret
0xb30048d1    8b4a0b                 mov ecx,[edx+0xb]
0xb30048d4    d1f9                   sar ecx, 1
0xb30048d6    eb08                   jmp 0xb30048e0
0xb30048d8    c7448d08190040b5       mov [ebp+ecx*0x4+0x8],0xb5400019
0xb30048e0    49                     dec ecx
0xb30048e1    79f5                   jns 0xb30048d8
        ;; Initialize spill slots
0xb30048e3    b8190040b5             mov eax,0xb5400019
0xb30048e8    8945ec                 mov [ebp-0x14],eax
0xb30048eb    8945e8                 mov [ebp-0x18],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30048ee    3b25bc195809           cmp esp,[0x95819bc]
0xb30048f4    0f861f020000           jna 0xb3004b19
        ;; t0 <- LoadLocal:3(start lvl:0)
0xb30048fa    8b45f0                 mov eax,[ebp-0x10]
0xb30048fd    50                     push eax
        ;; t1 <- Constant:4(#null)
0xb30048fe    b8190040b5             mov eax,0xb5400019
0xb3004903    50                     push eax
        ;; Branch if StrictCompare:6(===, t0, t1) goto (2, 3)
0xb3004904    58                     pop eax
0xb3004905    59                     pop ecx
0xb3004906    51                     push ecx
0xb3004907    50                     push eax
0xb3004908    e8fbbe3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb300490d    58                     pop eax
0xb300490e    59                     pop ecx
0xb300490f    0f8539000000           jnz 0xb300494e
        ;; B2
        ;; t0 <- LoadLocal:8(this lvl:0)
0xb3004915    8b45f8                 mov eax,[ebp-0x8]
0xb3004918    50                     push eax
        ;; PushArgument:9(t0)
        ;; t0 <- InstanceCall:10(get:length, t0)
0xb3004919    b9117628b3             mov ecx,0xb3287611  'ICData target:'get:length' num-checks: 0'
0xb300491e    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004923    e8f0b8ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004928    83c404                 add esp,0x4
0xb300492b    50                     push eax
        ;; PushArgument:11(t0)
        ;; t0 <- Constant:12(#1)
0xb300492c    b802000000             mov eax,0x2
0xb3004931    50                     push eax
        ;; PushArgument:13(t0)
        ;; t0 <- InstanceCall:14(-, t0, t0)
0xb3004932    b9617628b3             mov ecx,0xb3287661  'ICData target:'-' num-checks: 0'
0xb3004937    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300493c    e897b9ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004941    83c408                 add esp,0x8
0xb3004944    50                     push eax
        ;; StoreLocal:15(start, t0, lvl: 0)
0xb3004945    58                     pop eax
0xb3004946    8945f0                 mov [ebp-0x10],eax
        ;; goto:19 4
0xb3004949    e900000000             jmp 0xb300494e
        ;; B3
        ;; goto:20 4
        ;; B4
        ;; t0 <- LoadLocal:21(other lvl:0)
0xb300494e    8b45f4                 mov eax,[ebp-0xc]
0xb3004951    50                     push eax
        ;; PushArgument:22(t0)
        ;; t0 <- InstanceCall:23(get:isEmpty, t0)
0xb3004952    b9b97628b3             mov ecx,0xb32876b9  'ICData target:'get:isEmpty' num-checks: 0'
0xb3004957    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300495c    e8b7b8ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004961    83c404                 add esp,0x4
0xb3004964    50                     push eax
        ;; t1 <- Constant:24(#true)
0xb3004965    b8391030b3             mov eax,0xb3301039  'true'
0xb300496a    50                     push eax
        ;; Branch if StrictCompare:25(===, t0, t1) goto (5, 6)
0xb300496b    58                     pop eax
0xb300496c    59                     pop ecx
0xb300496d    51                     push ecx
0xb300496e    50                     push eax
0xb300496f    e894be3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3004974    58                     pop eax
0xb3004975    59                     pop ecx
0xb3004976    0f8545000000           jnz 0xb30049c1
        ;; B5
        ;; t0 <- LoadLocal:27(this lvl:0)
0xb300497c    8b45f8                 mov eax,[ebp-0x8]
0xb300497f    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- InstanceCall:29(get:length, t0)
0xb3004980    b9097728b3             mov ecx,0xb3287709  'ICData target:'get:length' num-checks: 0'
0xb3004985    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300498a    e889b8ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300498f    83c404                 add esp,0x4
0xb3004992    50                     push eax
        ;; PushArgument:30(t0)
        ;; t0 <- LoadLocal:31(start lvl:0)
0xb3004993    8b45f0                 mov eax,[ebp-0x10]
0xb3004996    50                     push eax
        ;; PushArgument:32(t0)
        ;; t0 <- StaticCall:33(min t0, t0)
0xb3004997    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300499c    e887b93702             call 0xb5380328  [stub: CallStaticFunction]
0xb30049a1    83c408                 add esp,0x8
0xb30049a4    50                     push eax
        ;; Return:34(t0)
0xb30049a5    58                     pop eax
0xb30049a6    ba89a71ab3             mov edx,0xb31aa789  'Function 'lastIndexOf':.'
0xb30049ab    ff422b                 inc [edx+0x2b]
0xb30049ae    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30049b5    7c05                   jl 0xb30049bc
0xb30049b7    e8fcbeffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30049bc    89ec                   mov esp,ebp
0xb30049be    5d                     pop ebp
0xb30049bf    c3                     ret
0xb30049c0    90                     nop
        ;; B6
        ;; t0 <- LoadLocal:37(start lvl:0)
0xb30049c1    8b45f0                 mov eax,[ebp-0x10]
0xb30049c4    50                     push eax
        ;; t1 <- LoadLocal:38(this lvl:0)
0xb30049c5    8b45f8                 mov eax,[ebp-0x8]
0xb30049c8    50                     push eax
        ;; PushArgument:39(t1)
        ;; t1 <- InstanceCall:40(get:length, t1)
0xb30049c9    b9717728b3             mov ecx,0xb3287771  'ICData target:'get:length' num-checks: 0'
0xb30049ce    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30049d3    e840b8ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30049d8    83c404                 add esp,0x4
0xb30049db    50                     push eax
        ;; Branch if RelationalOp:41(>=, t0, t1) goto (7, 8)
0xb30049dc    59                     pop ecx
0xb30049dd    58                     pop eax
0xb30049de    50                     push eax
0xb30049df    51                     push ecx
0xb30049e0    b9c17728b3             mov ecx,0xb32877c1  'ICData target:'>=' num-checks: 0'
0xb30049e5    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30049ea    e8e9b8ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30049ef    83c408                 add esp,0x8
0xb30049f2    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30049f7    0f8539000000           jnz 0xb3004a36
        ;; B7
        ;; t0 <- LoadLocal:43(this lvl:0)
0xb30049fd    8b45f8                 mov eax,[ebp-0x8]
0xb3004a00    50                     push eax
        ;; PushArgument:44(t0)
        ;; t0 <- InstanceCall:45(get:length, t0)
0xb3004a01    b9197828b3             mov ecx,0xb3287819  'ICData target:'get:length' num-checks: 0'
0xb3004a06    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004a0b    e808b8ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004a10    83c404                 add esp,0x4
0xb3004a13    50                     push eax
        ;; PushArgument:46(t0)
        ;; t0 <- Constant:47(#1)
0xb3004a14    b802000000             mov eax,0x2
0xb3004a19    50                     push eax
        ;; PushArgument:48(t0)
        ;; t0 <- InstanceCall:49(-, t0, t0)
0xb3004a1a    b9697828b3             mov ecx,0xb3287869  'ICData target:'-' num-checks: 0'
0xb3004a1f    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004a24    e8afb8ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004a29    83c408                 add esp,0x8
0xb3004a2c    50                     push eax
        ;; StoreLocal:50(start, t0, lvl: 0)
0xb3004a2d    58                     pop eax
0xb3004a2e    8945f0                 mov [ebp-0x10],eax
        ;; goto:54 9
0xb3004a31    e900000000             jmp 0xb3004a36
        ;; B8
        ;; goto:55 9
        ;; B9
        ;; t0 <- LoadLocal:56(start lvl:0)
0xb3004a36    8b45f0                 mov eax,[ebp-0x10]
0xb3004a39    50                     push eax
        ;; StoreLocal:57(index, t0, lvl: 0)
0xb3004a3a    58                     pop eax
0xb3004a3b    8945e8                 mov [ebp-0x18],eax
        ;; goto:81 12
        ;; B12
        ;; t0 <- LoadLocal:83(index lvl:0)
0xb3004a3e    8b45e8                 mov eax,[ebp-0x18]
0xb3004a41    50                     push eax
        ;; t1 <- Constant:84(#0)
0xb3004a42    b800000000             mov eax,0
0xb3004a47    50                     push eax
        ;; Branch if RelationalOp:85(>=, t0, t1) goto (13, 14)
0xb3004a48    59                     pop ecx
0xb3004a49    58                     pop eax
0xb3004a4a    50                     push eax
0xb3004a4b    51                     push ecx
0xb3004a4c    b9c17828b3             mov ecx,0xb32878c1  'ICData target:'>=' num-checks: 0'
0xb3004a51    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004a56    e87db8ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004a5b    83c408                 add esp,0x8
0xb3004a5e    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3004a63    0f858d000000           jnz 0xb3004af6
        ;; B13
        ;; CheckStackOverflow:58()
0xb3004a69    3b25bc195809           cmp esp,[0x95819bc]
0xb3004a6f    0f86b8000000           jna 0xb3004b2d
        ;; t0 <- LoadLocal:59(this lvl:0)
0xb3004a75    8b45f8                 mov eax,[ebp-0x8]
0xb3004a78    50                     push eax
        ;; PushArgument:60(t0)
        ;; t0 <- LoadLocal:61(index lvl:0)
0xb3004a79    8b45e8                 mov eax,[ebp-0x18]
0xb3004a7c    50                     push eax
        ;; PushArgument:62(t0)
        ;; t0 <- LoadLocal:63(other lvl:0)
0xb3004a7d    8b45f4                 mov eax,[ebp-0xc]
0xb3004a80    50                     push eax
        ;; PushArgument:64(t0)
        ;; t0 <- InstanceCall:65(_substringMatches@0x36924d72, t0, t0, t0)
0xb3004a81    b9197928b3             mov ecx,0xb3287919  'ICData target:'_substringMatches@0x36924d72' num-checks: 0'
0xb3004a86    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3004a8b    e888b7ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004a90    83c40c                 add esp,0xc
0xb3004a93    50                     push eax
        ;; t1 <- Constant:66(#true)
0xb3004a94    b8391030b3             mov eax,0xb3301039  'true'
0xb3004a99    50                     push eax
        ;; Branch if StrictCompare:67(===, t0, t1) goto (10, 11)
0xb3004a9a    58                     pop eax
0xb3004a9b    59                     pop ecx
0xb3004a9c    51                     push ecx
0xb3004a9d    50                     push eax
0xb3004a9e    e865bd3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3004aa3    58                     pop eax
0xb3004aa4    59                     pop ecx
0xb3004aa5    0f8520000000           jnz 0xb3004acb
        ;; B10
        ;; t0 <- LoadLocal:69(index lvl:0)
0xb3004aab    8b45e8                 mov eax,[ebp-0x18]
0xb3004aae    50                     push eax
        ;; Return:70(t0)
0xb3004aaf    58                     pop eax
0xb3004ab0    ba89a71ab3             mov edx,0xb31aa789  'Function 'lastIndexOf':.'
0xb3004ab5    ff422b                 inc [edx+0x2b]
0xb3004ab8    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3004abf    7c05                   jl 0xb3004ac6
0xb3004ac1    e8f2bdffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3004ac6    89ec                   mov esp,ebp
0xb3004ac8    5d                     pop ebp
0xb3004ac9    c3                     ret
0xb3004aca    90                     nop
        ;; B11
        ;; t0 <- LoadLocal:73(index lvl:0)
0xb3004acb    8b45e8                 mov eax,[ebp-0x18]
0xb3004ace    50                     push eax
        ;; t0 <- StoreLocal:74(:expr_temp, t0, lvl: 0)
0xb3004acf    58                     pop eax
0xb3004ad0    8945ec                 mov [ebp-0x14],eax
0xb3004ad3    50                     push eax
        ;; PushArgument:75(t0)
        ;; t0 <- Constant:76(#1)
0xb3004ad4    b802000000             mov eax,0x2
0xb3004ad9    50                     push eax
        ;; PushArgument:77(t0)
        ;; t0 <- InstanceCall:78(-, t0, t0)
0xb3004ada    b9697928b3             mov ecx,0xb3287969  'ICData target:'-' num-checks: 0'
0xb3004adf    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004ae4    e8efb7ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004ae9    83c408                 add esp,0x8
0xb3004aec    50                     push eax
        ;; StoreLocal:79(index, t0, lvl: 0)
0xb3004aed    58                     pop eax
0xb3004aee    8945e8                 mov [ebp-0x18],eax
        ;; goto:82 12
0xb3004af1    e948ffffff             jmp 0xb3004a3e
        ;; B14
        ;; t0 <- Constant:89(#-1)
0xb3004af6    b8feffffff             mov eax,0xfffffffe
0xb3004afb    50                     push eax
        ;; Return:90(t0)
0xb3004afc    58                     pop eax
0xb3004afd    ba89a71ab3             mov edx,0xb31aa789  'Function 'lastIndexOf':.'
0xb3004b02    ff422b                 inc [edx+0x2b]
0xb3004b05    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3004b0c    7c05                   jl 0xb3004b13
0xb3004b0e    e8a5bdffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3004b13    89ec                   mov esp,ebp
0xb3004b15    5d                     pop ebp
0xb3004b16    c3                     ret
0xb3004b17    90                     nop
0xb3004b18    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3004b19    b970d30a08             mov ecx,0x80ad370
0xb3004b1e    ba00000000             mov edx,0
0xb3004b23    e800b53702             call 0xb5380028  [stub: CallToRuntime]
0xb3004b28    e9cdfdffff             jmp 0xb30048fa
        ;; CheckStackOverflowSlowPath
0xb3004b2d    b970d30a08             mov ecx,0x80ad370
0xb3004b32    ba00000000             mov edx,0
0xb3004b37    e8ecb43702             call 0xb5380028  [stub: CallToRuntime]
0xb3004b3c    e934ffffff             jmp 0xb3004a75
0xb3004b41    e9f2b83702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3004b46    e9cdb93702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 92 : 0xb30048c4 'ICData target:'lastIndexOf' num-checks: 0'
 178 : 0xb300491a 'ICData target:'get:length' num-checks: 0'
 183 : 0xb300491f 'ImmutableArray'
 203 : 0xb3004933 'ICData target:'-' num-checks: 0'
 208 : 0xb3004938 'ImmutableArray'
 235 : 0xb3004953 'ICData target:'get:isEmpty' num-checks: 0'
 240 : 0xb3004958 'ImmutableArray'
 254 : 0xb3004966 'true'
 281 : 0xb3004981 'ICData target:'get:length' num-checks: 0'
 286 : 0xb3004986 'ImmutableArray'
 304 : 0xb3004998 'ImmutableArray'
 319 : 0xb30049a7 'Function 'lastIndexOf':.'
 354 : 0xb30049ca 'ICData target:'get:length' num-checks: 0'
 359 : 0xb30049cf 'ImmutableArray'
 377 : 0xb30049e1 'ICData target:'>=' num-checks: 0'
 382 : 0xb30049e6 'ImmutableArray'
 395 : 0xb30049f3 'true'
 410 : 0xb3004a02 'ICData target:'get:length' num-checks: 0'
 415 : 0xb3004a07 'ImmutableArray'
 435 : 0xb3004a1b 'ICData target:'-' num-checks: 0'
 440 : 0xb3004a20 'ImmutableArray'
 485 : 0xb3004a4d 'ICData target:'>=' num-checks: 0'
 490 : 0xb3004a52 'ImmutableArray'
 503 : 0xb3004a5f 'true'
 538 : 0xb3004a82 'ICData target:'_substringMatches@0x36924d72' num-checks: 0'
 543 : 0xb3004a87 'ImmutableArray'
 557 : 0xb3004a95 'true'
 585 : 0xb3004ab1 'Function 'lastIndexOf':.'
 627 : 0xb3004adb 'ICData target:'-' num-checks: 0'
 632 : 0xb3004ae0 'ImmutableArray'
 662 : 0xb3004afe 'Function 'lastIndexOf':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_lastIndexOf' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3004919	deopt-before 	10		13118	-1
0xb3004928	ic-call      	10		13118	-1
0xb3004928	deopt-after  	10		13118	-1
0xb3004932	deopt-before 	14		13120	-1
0xb3004941	ic-call      	14		13120	-1
0xb3004941	deopt-after  	14		13120	-1
0xb3004949	deopt-before 	19		0	-1
0xb300494e	deopt-before 	20		0	-1
0xb3004952	deopt-before 	23		13128	-1
0xb3004961	ic-call      	23		13128	-1
0xb3004961	deopt-after  	23		13128	-1
0xb3004980	deopt-before 	29		13138	-1
0xb300498f	ic-call      	29		13138	-1
0xb300498f	deopt-after  	29		13138	-1
0xb30049a1	fn-call      	33		13135	-1
0xb30049a1	deopt-after  	33		13135	-1
0xb30049bc	other        	-1		0	-1
0xb30049c1	return       	-1		13132	-1
0xb30049c9	deopt-before 	40		13153	-1
0xb30049d8	ic-call      	40		13153	-1
0xb30049d8	deopt-after  	40		13153	-1
0xb30049e0	deopt-before 	41		13150	-1
0xb30049ef	ic-call      	41		13150	-1
0xb30049ef	deopt-after  	41		13150	-1
0xb3004a01	deopt-before 	45		13162	-1
0xb3004a10	ic-call      	45		13162	-1
0xb3004a10	deopt-after  	45		13162	-1
0xb3004a1a	deopt-before 	49		13164	-1
0xb3004a29	ic-call      	49		13164	-1
0xb3004a29	deopt-after  	49		13164	-1
0xb3004a31	deopt-before 	54		0	-1
0xb3004a36	deopt-before 	55		0	-1
0xb3004a3e	deopt-before 	81		0	-1
0xb3004a4c	deopt-before 	85		13180	-1
0xb3004a5b	ic-call      	85		13180	-1
0xb3004a5b	deopt-after  	85		13180	-1
0xb3004a81	deopt-before 	65		13193	-1
0xb3004a90	ic-call      	65		13193	-1
0xb3004a90	deopt-after  	65		13193	-1
0xb3004ac6	other        	-1		0	-1
0xb3004acb	return       	-1		13201	-1
0xb3004ada	deopt-before 	78		13184	-1
0xb3004ae9	ic-call      	78		13184	-1
0xb3004ae9	deopt-after  	78		13184	-1
0xb3004af1	deopt-before 	82		0	-1
0xb3004b13	other        	-1		0	-1
0xb3004b18	return       	-1		13207	-1
0xb3004b28	other        	-1		13094	-1
0xb3004b3c	other        	-1		13169	-1
0xb3004b41	patch        	-1		0	-1
0xb3004b46	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_lastIndexOf' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_lastIndexOf' {
  stack var 'this' offset -2 (valid 12342-13213)
  stack var 'other' offset -3 (valid 13097-13213)
  stack var 'start' offset -4 (valid 13101-13213)
  stack var 'index' offset -6 (valid 13172-13207)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_lastIndexOf' {
No exception handlers
}
Static call target functions {
  0xb30049a1: dart:math_::_min, 0xb5400019
}
Compiling function: 'dart:core__StringBase@0x36924d72_substring' @ token 13217
Before Optimizations
==== dart:core__StringBase@0x36924d72_substring
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(endIndex lvl:0)
    t1 <- Constant:4(#null)
    Branch if StrictCompare:6(===, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:8(this lvl:0)
    PushArgument:9(t0)
    t0 <- InstanceCall:10(get:length, t0)
    StoreLocal:11(endIndex, t0, lvl: 0)
    goto:15 4
B3[target]
    goto:16 4
B4[join] pred(B2, B3)
    t0 <- LoadLocal:17(startIndex lvl:0)
    t1 <- Constant:18(#0)
    Branch if RelationalOp:19(<, t0, t1) goto (7, 5)
B7[target]
    goto:41 6
B5[target]
    t0 <- LoadLocal:21(startIndex lvl:0)
    t1 <- LoadLocal:22(this lvl:0)
    PushArgument:23(t1)
    t1 <- InstanceCall:24(get:length, t1)
    Branch if RelationalOp:25(>, t0, t1) goto (8, 9)
B8[target]
    goto:43 6
B6[join] pred(B7, B8)
    t0 <- AllocateObject:28(Library:'dart:core' Class: RangeError)
    t0 <- StoreLocal:29(:alloc13266, t0, lvl: 0)
    PushArgument:30(t0)
    t0 <- Constant:31(#3)
    PushArgument:32(t0)
    t0 <- LoadLocal:33(startIndex lvl:0)
    PushArgument:34(t0)
    StaticCall:35(RangeError.value t0, t0, t0)
    t0 <- LoadLocal:36(:alloc13266 lvl:0)
    PushArgument:37(t0)
    Throw:38()
B9[target]
    t0 <- LoadLocal:45(endIndex lvl:0)
    t1 <- Constant:46(#0)
    Branch if RelationalOp:47(<, t0, t1) goto (12, 10)
B12[target]
    goto:69 11
B10[target]
    t0 <- LoadLocal:49(endIndex lvl:0)
    t1 <- LoadLocal:50(this lvl:0)
    PushArgument:51(t1)
    t1 <- InstanceCall:52(get:length, t1)
    Branch if RelationalOp:53(>, t0, t1) goto (13, 14)
B13[target]
    goto:71 11
B11[join] pred(B12, B13)
    t0 <- AllocateObject:56(Library:'dart:core' Class: RangeError)
    t0 <- StoreLocal:57(:alloc13300, t0, lvl: 0)
    PushArgument:58(t0)
    t0 <- Constant:59(#3)
    PushArgument:60(t0)
    t0 <- LoadLocal:61(endIndex lvl:0)
    PushArgument:62(t0)
    StaticCall:63(RangeError.value t0, t0, t0)
    t0 <- LoadLocal:64(:alloc13300 lvl:0)
    PushArgument:65(t0)
    Throw:66()
B14[target]
    t0 <- LoadLocal:73(startIndex lvl:0)
    t1 <- LoadLocal:74(endIndex lvl:0)
    Branch if RelationalOp:75(>, t0, t1) goto (15, 16)
B15[target]
    t0 <- AllocateObject:77(Library:'dart:core' Class: RangeError)
    t0 <- StoreLocal:78(:alloc13322, t0, lvl: 0)
    PushArgument:79(t0)
    t0 <- Constant:80(#3)
    PushArgument:81(t0)
    t0 <- LoadLocal:82(startIndex lvl:0)
    PushArgument:83(t0)
    StaticCall:84(RangeError.value t0, t0, t0)
    t0 <- LoadLocal:85(:alloc13322 lvl:0)
    PushArgument:86(t0)
    Throw:87()
B16[target]
    t0 <- LoadLocal:90(this lvl:0)
    PushArgument:91(t0)
    t0 <- LoadLocal:92(startIndex lvl:0)
    PushArgument:93(t0)
    t0 <- LoadLocal:94(endIndex lvl:0)
    PushArgument:95(t0)
    t0 <- InstanceCall:96(_substringUnchecked@0x36924d72, t0, t0, t0)
    Return:97(t0)
--> 'dart:core__StringBase@0x36924d72_substring' entry: 0xb3004b68 time: 728 us
Code for function 'dart:core__StringBase@0x36924d72_substring' {
        ;; Enter frame
0xb3004b68    55                     push ebp
0xb3004b69    89e5                   mov ebp,esp
0xb3004b6b    e800000000             call 0xb3004b70
0xb3004b70    83ec14                 sub esp,0x14
        ;; Copy parameters
0xb3004b73    8b4a0f                 mov ecx,[edx+0xf]
0xb3004b76    83f904                 cmp ecx,0x4
0xb3004b79    0f8c41000000           jl 0xb3004bc0
0xb3004b7f    83f906                 cmp ecx,0x6
0xb3004b82    0f8f38000000           jg 0xb3004bc0
0xb3004b88    8b5a0b                 mov ebx,[edx+0xb]
0xb3004b8b    2bd9                   sub ebx,ecx
0xb3004b8d    8d5c5d08               lea ebx,[ebp+ebx*0x2+0x8]
0xb3004b91    8d7dfc                 lea edi,[ebp-0x4]
0xb3004b94    2bf9                   sub edi,ecx
0xb3004b96    2bf9                   sub edi,ecx
0xb3004b98    d1f9                   sar ecx, 1
0xb3004b9a    eb06                   jmp 0xb3004ba2
0xb3004b9c    8b048b                 mov eax,[ebx+ecx*0x4]
0xb3004b9f    89048f                 mov [edi+ecx*0x4],eax
0xb3004ba2    49                     dec ecx
0xb3004ba3    79f7                   jns 0xb3004b9c
0xb3004ba5    8b4a0f                 mov ecx,[edx+0xf]
0xb3004ba8    d1f9                   sar ecx, 1
0xb3004baa    83f902                 cmp ecx,0x2
0xb3004bad    7f08                   jg 0xb3004bb7
0xb3004baf    b8190040b5             mov eax,0xb5400019
0xb3004bb4    8945f0                 mov [ebp-0x10],eax
0xb3004bb7    8b5a0b                 mov ebx,[edx+0xb]
0xb3004bba    d1fb                   sar ebx, 1
0xb3004bbc    3bcb                   cmp ecx,ebx
0xb3004bbe    7411                   jz 0xb3004bd1
0xb3004bc0    83c414                 add esp,0x14
0xb3004bc3    b9e98128b3             mov ecx,0xb32881e9  'ICData target:'substring' num-checks: 0'
0xb3004bc8    e87bb63702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb3004bcd    89ec                   mov esp,ebp
0xb3004bcf    5d                     pop ebp
0xb3004bd0    c3                     ret
0xb3004bd1    8b4a0b                 mov ecx,[edx+0xb]
0xb3004bd4    d1f9                   sar ecx, 1
0xb3004bd6    eb08                   jmp 0xb3004be0
0xb3004bd8    c7448d08190040b5       mov [ebp+ecx*0x4+0x8],0xb5400019
0xb3004be0    49                     dec ecx
0xb3004be1    79f5                   jns 0xb3004bd8
        ;; Initialize spill slots
0xb3004be3    b8190040b5             mov eax,0xb5400019
0xb3004be8    8945ec                 mov [ebp-0x14],eax
0xb3004beb    8945e8                 mov [ebp-0x18],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3004bee    3b25bc195809           cmp esp,[0x95819bc]
0xb3004bf4    0f861a020000           jna 0xb3004e14
        ;; t0 <- LoadLocal:3(endIndex lvl:0)
0xb3004bfa    8b45f0                 mov eax,[ebp-0x10]
0xb3004bfd    50                     push eax
        ;; t1 <- Constant:4(#null)
0xb3004bfe    b8190040b5             mov eax,0xb5400019
0xb3004c03    50                     push eax
        ;; Branch if StrictCompare:6(===, t0, t1) goto (2, 3)
0xb3004c04    58                     pop eax
0xb3004c05    59                     pop ecx
0xb3004c06    51                     push ecx
0xb3004c07    50                     push eax
0xb3004c08    e8fbbb3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3004c0d    58                     pop eax
0xb3004c0e    59                     pop ecx
0xb3004c0f    0f8520000000           jnz 0xb3004c35
        ;; B2
        ;; t0 <- LoadLocal:8(this lvl:0)
0xb3004c15    8b45f8                 mov eax,[ebp-0x8]
0xb3004c18    50                     push eax
        ;; PushArgument:9(t0)
        ;; t0 <- InstanceCall:10(get:length, t0)
0xb3004c19    b9218228b3             mov ecx,0xb3288221  'ICData target:'get:length' num-checks: 0'
0xb3004c1e    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004c23    e8f0b5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004c28    83c404                 add esp,0x4
0xb3004c2b    50                     push eax
        ;; StoreLocal:11(endIndex, t0, lvl: 0)
0xb3004c2c    58                     pop eax
0xb3004c2d    8945f0                 mov [ebp-0x10],eax
        ;; goto:15 4
0xb3004c30    e900000000             jmp 0xb3004c35
        ;; B3
        ;; goto:16 4
        ;; B4
        ;; t0 <- LoadLocal:17(startIndex lvl:0)
0xb3004c35    8b45f4                 mov eax,[ebp-0xc]
0xb3004c38    50                     push eax
        ;; t1 <- Constant:18(#0)
0xb3004c39    b800000000             mov eax,0
0xb3004c3e    50                     push eax
        ;; Branch if RelationalOp:19(<, t0, t1) goto (7, 5)
0xb3004c3f    59                     pop ecx
0xb3004c40    58                     pop eax
0xb3004c41    50                     push eax
0xb3004c42    51                     push ecx
0xb3004c43    b9718228b3             mov ecx,0xb3288271  'ICData target:'<' num-checks: 0'
0xb3004c48    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004c4d    e886b6ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004c52    83c408                 add esp,0x8
0xb3004c55    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3004c5a    0f8505000000           jnz 0xb3004c65
        ;; B7
        ;; goto:41 6
0xb3004c60    e93c000000             jmp 0xb3004ca1
        ;; B5
        ;; t0 <- LoadLocal:21(startIndex lvl:0)
0xb3004c65    8b45f4                 mov eax,[ebp-0xc]
0xb3004c68    50                     push eax
        ;; t1 <- LoadLocal:22(this lvl:0)
0xb3004c69    8b45f8                 mov eax,[ebp-0x8]
0xb3004c6c    50                     push eax
        ;; PushArgument:23(t1)
        ;; t1 <- InstanceCall:24(get:length, t1)
0xb3004c6d    b9c98228b3             mov ecx,0xb32882c9  'ICData target:'get:length' num-checks: 0'
0xb3004c72    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004c77    e89cb5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004c7c    83c404                 add esp,0x4
0xb3004c7f    50                     push eax
        ;; Branch if RelationalOp:25(>, t0, t1) goto (8, 9)
0xb3004c80    59                     pop ecx
0xb3004c81    58                     pop eax
0xb3004c82    50                     push eax
0xb3004c83    51                     push ecx
0xb3004c84    b9198328b3             mov ecx,0xb3288319  'ICData target:'>' num-checks: 0'
0xb3004c89    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004c8e    e845b6ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004c93    83c408                 add esp,0x8
0xb3004c96    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3004c9b    0f8536000000           jnz 0xb3004cd7
        ;; B8
        ;; goto:43 6
        ;; B6
        ;; t0 <- AllocateObject:28(Library:'dart:core' Class: RangeError)
0xb3004ca1    e812e6ffff             call 0xb30032b8 [ stub ]
0xb3004ca6    50                     push eax
        ;; t0 <- StoreLocal:29(:alloc13266, t0, lvl: 0)
0xb3004ca7    58                     pop eax
0xb3004ca8    8945e8                 mov [ebp-0x18],eax
0xb3004cab    50                     push eax
        ;; PushArgument:30(t0)
        ;; t0 <- Constant:31(#3)
0xb3004cac    b806000000             mov eax,0x6
0xb3004cb1    50                     push eax
        ;; PushArgument:32(t0)
        ;; t0 <- LoadLocal:33(startIndex lvl:0)
0xb3004cb2    8b45f4                 mov eax,[ebp-0xc]
0xb3004cb5    50                     push eax
        ;; PushArgument:34(t0)
        ;; StaticCall:35(RangeError.value t0, t0, t0)
0xb3004cb6    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3004cbb    e868b63702             call 0xb5380328  [stub: CallStaticFunction]
0xb3004cc0    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:36(:alloc13266 lvl:0)
0xb3004cc3    8b45e8                 mov eax,[ebp-0x18]
0xb3004cc6    50                     push eax
        ;; PushArgument:37(t0)
        ;; Throw:38()
0xb3004cc7    b9a0d70a08             mov ecx,0x80ad7a0
0xb3004ccc    ba01000000             mov edx,0x1
0xb3004cd1    e852b33702             call 0xb5380028  [stub: CallToRuntime]
0xb3004cd6    cc                     int3
        ;; B9
        ;; t0 <- LoadLocal:45(endIndex lvl:0)
0xb3004cd7    8b45f0                 mov eax,[ebp-0x10]
0xb3004cda    50                     push eax
        ;; t1 <- Constant:46(#0)
0xb3004cdb    b800000000             mov eax,0
0xb3004ce0    50                     push eax
        ;; Branch if RelationalOp:47(<, t0, t1) goto (12, 10)
0xb3004ce1    59                     pop ecx
0xb3004ce2    58                     pop eax
0xb3004ce3    50                     push eax
0xb3004ce4    51                     push ecx
0xb3004ce5    b9898328b3             mov ecx,0xb3288389  'ICData target:'<' num-checks: 0'
0xb3004cea    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004cef    e8e4b5ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004cf4    83c408                 add esp,0x8
0xb3004cf7    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3004cfc    0f8505000000           jnz 0xb3004d07
        ;; B12
        ;; goto:69 11
0xb3004d02    e93c000000             jmp 0xb3004d43
        ;; B10
        ;; t0 <- LoadLocal:49(endIndex lvl:0)
0xb3004d07    8b45f0                 mov eax,[ebp-0x10]
0xb3004d0a    50                     push eax
        ;; t1 <- LoadLocal:50(this lvl:0)
0xb3004d0b    8b45f8                 mov eax,[ebp-0x8]
0xb3004d0e    50                     push eax
        ;; PushArgument:51(t1)
        ;; t1 <- InstanceCall:52(get:length, t1)
0xb3004d0f    b9e18328b3             mov ecx,0xb32883e1  'ICData target:'get:length' num-checks: 0'
0xb3004d14    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004d19    e8fab4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004d1e    83c404                 add esp,0x4
0xb3004d21    50                     push eax
        ;; Branch if RelationalOp:53(>, t0, t1) goto (13, 14)
0xb3004d22    59                     pop ecx
0xb3004d23    58                     pop eax
0xb3004d24    50                     push eax
0xb3004d25    51                     push ecx
0xb3004d26    b9318428b3             mov ecx,0xb3288431  'ICData target:'>' num-checks: 0'
0xb3004d2b    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004d30    e8a3b5ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004d35    83c408                 add esp,0x8
0xb3004d38    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3004d3d    0f8536000000           jnz 0xb3004d79
        ;; B13
        ;; goto:71 11
        ;; B11
        ;; t0 <- AllocateObject:56(Library:'dart:core' Class: RangeError)
0xb3004d43    e870e5ffff             call 0xb30032b8 [ stub ]
0xb3004d48    50                     push eax
        ;; t0 <- StoreLocal:57(:alloc13300, t0, lvl: 0)
0xb3004d49    58                     pop eax
0xb3004d4a    8945e8                 mov [ebp-0x18],eax
0xb3004d4d    50                     push eax
        ;; PushArgument:58(t0)
        ;; t0 <- Constant:59(#3)
0xb3004d4e    b806000000             mov eax,0x6
0xb3004d53    50                     push eax
        ;; PushArgument:60(t0)
        ;; t0 <- LoadLocal:61(endIndex lvl:0)
0xb3004d54    8b45f0                 mov eax,[ebp-0x10]
0xb3004d57    50                     push eax
        ;; PushArgument:62(t0)
        ;; StaticCall:63(RangeError.value t0, t0, t0)
0xb3004d58    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3004d5d    e8c6b53702             call 0xb5380328  [stub: CallStaticFunction]
0xb3004d62    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:64(:alloc13300 lvl:0)
0xb3004d65    8b45e8                 mov eax,[ebp-0x18]
0xb3004d68    50                     push eax
        ;; PushArgument:65(t0)
        ;; Throw:66()
0xb3004d69    b9a0d70a08             mov ecx,0x80ad7a0
0xb3004d6e    ba01000000             mov edx,0x1
0xb3004d73    e8b0b23702             call 0xb5380028  [stub: CallToRuntime]
0xb3004d78    cc                     int3
        ;; B14
        ;; t0 <- LoadLocal:73(startIndex lvl:0)
0xb3004d79    8b45f4                 mov eax,[ebp-0xc]
0xb3004d7c    50                     push eax
        ;; t1 <- LoadLocal:74(endIndex lvl:0)
0xb3004d7d    8b45f0                 mov eax,[ebp-0x10]
0xb3004d80    50                     push eax
        ;; Branch if RelationalOp:75(>, t0, t1) goto (15, 16)
0xb3004d81    59                     pop ecx
0xb3004d82    58                     pop eax
0xb3004d83    50                     push eax
0xb3004d84    51                     push ecx
0xb3004d85    b9a18428b3             mov ecx,0xb32884a1  'ICData target:'>' num-checks: 0'
0xb3004d8a    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004d8f    e844b5ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004d94    83c408                 add esp,0x8
0xb3004d97    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3004d9c    0f8536000000           jnz 0xb3004dd8
        ;; B15
        ;; t0 <- AllocateObject:77(Library:'dart:core' Class: RangeError)
0xb3004da2    e811e5ffff             call 0xb30032b8 [ stub ]
0xb3004da7    50                     push eax
        ;; t0 <- StoreLocal:78(:alloc13322, t0, lvl: 0)
0xb3004da8    58                     pop eax
0xb3004da9    8945e8                 mov [ebp-0x18],eax
0xb3004dac    50                     push eax
        ;; PushArgument:79(t0)
        ;; t0 <- Constant:80(#3)
0xb3004dad    b806000000             mov eax,0x6
0xb3004db2    50                     push eax
        ;; PushArgument:81(t0)
        ;; t0 <- LoadLocal:82(startIndex lvl:0)
0xb3004db3    8b45f4                 mov eax,[ebp-0xc]
0xb3004db6    50                     push eax
        ;; PushArgument:83(t0)
        ;; StaticCall:84(RangeError.value t0, t0, t0)
0xb3004db7    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3004dbc    e867b53702             call 0xb5380328  [stub: CallStaticFunction]
0xb3004dc1    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:85(:alloc13322 lvl:0)
0xb3004dc4    8b45e8                 mov eax,[ebp-0x18]
0xb3004dc7    50                     push eax
        ;; PushArgument:86(t0)
        ;; Throw:87()
0xb3004dc8    b9a0d70a08             mov ecx,0x80ad7a0
0xb3004dcd    ba01000000             mov edx,0x1
0xb3004dd2    e851b23702             call 0xb5380028  [stub: CallToRuntime]
0xb3004dd7    cc                     int3
        ;; B16
        ;; t0 <- LoadLocal:90(this lvl:0)
0xb3004dd8    8b45f8                 mov eax,[ebp-0x8]
0xb3004ddb    50                     push eax
        ;; PushArgument:91(t0)
        ;; t0 <- LoadLocal:92(startIndex lvl:0)
0xb3004ddc    8b45f4                 mov eax,[ebp-0xc]
0xb3004ddf    50                     push eax
        ;; PushArgument:93(t0)
        ;; t0 <- LoadLocal:94(endIndex lvl:0)
0xb3004de0    8b45f0                 mov eax,[ebp-0x10]
0xb3004de3    50                     push eax
        ;; PushArgument:95(t0)
        ;; t0 <- InstanceCall:96(_substringUnchecked@0x36924d72, t0, t0, t0)
0xb3004de4    b9118528b3             mov ecx,0xb3288511  'ICData target:'_substringUnchecked@0x36924d72' num-checks: 0'
0xb3004de9    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3004dee    e825b4ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004df3    83c40c                 add esp,0xc
0xb3004df6    50                     push eax
        ;; Return:97(t0)
0xb3004df7    58                     pop eax
0xb3004df8    baf1a71ab3             mov edx,0xb31aa7f1  'Function 'substring':.'
0xb3004dfd    ff422b                 inc [edx+0x2b]
0xb3004e00    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3004e07    7c05                   jl 0xb3004e0e
0xb3004e09    e8aabaffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3004e0e    89ec                   mov esp,ebp
0xb3004e10    5d                     pop ebp
0xb3004e11    c3                     ret
0xb3004e12    90                     nop
0xb3004e13    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3004e14    b970d30a08             mov ecx,0x80ad370
0xb3004e19    ba00000000             mov edx,0
0xb3004e1e    e805b23702             call 0xb5380028  [stub: CallToRuntime]
0xb3004e23    e9d2fdffff             jmp 0xb3004bfa
0xb3004e28    e90bb63702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3004e2d    e9e6b63702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 92 : 0xb3004bc4 'ICData target:'substring' num-checks: 0'
 178 : 0xb3004c1a 'ICData target:'get:length' num-checks: 0'
 183 : 0xb3004c1f 'ImmutableArray'
 220 : 0xb3004c44 'ICData target:'<' num-checks: 0'
 225 : 0xb3004c49 'ImmutableArray'
 238 : 0xb3004c56 'true'
 262 : 0xb3004c6e 'ICData target:'get:length' num-checks: 0'
 267 : 0xb3004c73 'ImmutableArray'
 285 : 0xb3004c85 'ICData target:'>' num-checks: 0'
 290 : 0xb3004c8a 'ImmutableArray'
 303 : 0xb3004c97 'true'
 335 : 0xb3004cb7 'ImmutableArray'
 382 : 0xb3004ce6 'ICData target:'<' num-checks: 0'
 387 : 0xb3004ceb 'ImmutableArray'
 400 : 0xb3004cf8 'true'
 424 : 0xb3004d10 'ICData target:'get:length' num-checks: 0'
 429 : 0xb3004d15 'ImmutableArray'
 447 : 0xb3004d27 'ICData target:'>' num-checks: 0'
 452 : 0xb3004d2c 'ImmutableArray'
 465 : 0xb3004d39 'true'
 497 : 0xb3004d59 'ImmutableArray'
 542 : 0xb3004d86 'ICData target:'>' num-checks: 0'
 547 : 0xb3004d8b 'ImmutableArray'
 560 : 0xb3004d98 'true'
 592 : 0xb3004db8 'ImmutableArray'
 637 : 0xb3004de5 'ICData target:'_substringUnchecked@0x36924d72' num-checks: 0'
 642 : 0xb3004dea 'ImmutableArray'
 657 : 0xb3004df9 'Function 'substring':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_substring' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3004c19	deopt-before 	10		13241	-1
0xb3004c28	ic-call      	10		13241	-1
0xb3004c28	deopt-after  	10		13241	-1
0xb3004c30	deopt-before 	15		0	-1
0xb3004c35	deopt-before 	16		0	-1
0xb3004c43	deopt-before 	19		13249	-1
0xb3004c52	ic-call      	19		13249	-1
0xb3004c52	deopt-after  	19		13249	-1
0xb3004c60	deopt-before 	41		0	-1
0xb3004c6d	deopt-before 	24		13260	-1
0xb3004c7c	ic-call      	24		13260	-1
0xb3004c7c	deopt-after  	24		13260	-1
0xb3004c84	deopt-before 	25		13257	-1
0xb3004c93	ic-call      	25		13257	-1
0xb3004c93	deopt-after  	25		13257	-1
0xb3004ca1	deopt-before 	43		0	-1
0xb3004ca6	other        	-1		13266	-1
0xb3004cc0	fn-call      	35		13266	-1
0xb3004cc0	deopt-after  	35		13266	-1
0xb3004cd6	other        	-1		13265	-1
0xb3004ce5	deopt-before 	47		13283	-1
0xb3004cf4	ic-call      	47		13283	-1
0xb3004cf4	deopt-after  	47		13283	-1
0xb3004d02	deopt-before 	69		0	-1
0xb3004d0f	deopt-before 	52		13294	-1
0xb3004d1e	ic-call      	52		13294	-1
0xb3004d1e	deopt-after  	52		13294	-1
0xb3004d26	deopt-before 	53		13291	-1
0xb3004d35	ic-call      	53		13291	-1
0xb3004d35	deopt-after  	53		13291	-1
0xb3004d43	deopt-before 	71		0	-1
0xb3004d48	other        	-1		13300	-1
0xb3004d62	fn-call      	63		13300	-1
0xb3004d62	deopt-after  	63		13300	-1
0xb3004d78	other        	-1		13299	-1
0xb3004d85	deopt-before 	75		13316	-1
0xb3004d94	ic-call      	75		13316	-1
0xb3004d94	deopt-after  	75		13316	-1
0xb3004da7	other        	-1		13322	-1
0xb3004dc1	fn-call      	84		13322	-1
0xb3004dc1	deopt-after  	84		13322	-1
0xb3004dd7	other        	-1		13321	-1
0xb3004de4	deopt-before 	96		13337	-1
0xb3004df3	ic-call      	96		13337	-1
0xb3004df3	deopt-after  	96		13337	-1
0xb3004e0e	other        	-1		0	-1
0xb3004e13	return       	-1		13334	-1
0xb3004e23	other        	-1		13217	-1
0xb3004e28	patch        	-1		0	-1
0xb3004e2d	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_substring' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_substring' {
  stack var 'this' offset -2 (valid 12342-13346)
  stack var 'startIndex' offset -3 (valid 13219-13346)
  stack var 'endIndex' offset -4 (valid 13224-13346)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_substring' {
No exception handlers
}
Static call target functions {
  0xb3004cc0: dart:core_RangeError_RangeError.value, 0xb5400019
  0xb3004d62: dart:core_RangeError_RangeError.value, 0xb5400019
  0xb3004dc1: dart:core_RangeError_RangeError.value, 0xb5400019
}
PatchStaticCall: patching from 0xb3004818 to 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' 0xb30011a8
Compiling function: 'dart:uri_::_removeDotSegments' @ token 1320
Before Optimizations
==== dart:uri_::_removeDotSegments
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#NULL AbstractTypeArguments)
    PushArgument:4(t0)
    t0 <- Constant:5(#NULL AbstractTypeArguments)
    t0 <- CreateArray:6(t0)
    PushArgument:7(t0)
    t0 <- StaticCall:8(List._fromLiteral@0x36924d72 t0, t0)
    StoreLocal:9(output, t0, lvl: 0)
    t0 <- Constant:10(#false)
    StoreLocal:11(appendSlash, t0, lvl: 0)
    t0 <- LoadLocal:12(path lvl:0)
    PushArgument:13(t0)
    t0 <- Constant:14(#/)
    PushArgument:15(t0)
    t0 <- InstanceCall:16(split, t0, t0)
    PushArgument:17(t0)
    t0 <- InstanceCall:18(iterator, t0)
    StoreLocal:19(:for-in-iter, t0, lvl: 0)
    goto:101 18
B18[join] pred(B1, B16)
    t0 <- LoadLocal:20(:for-in-iter lvl:0)
    PushArgument:21(t0)
    t0 <- InstanceCall:22(get:hasNext, t0)
    t1 <- Constant:23(#true)
    Branch if StrictCompare:24(===, t0, t1) goto (17, 19)
B17[target]
    CheckStackOverflow:26()
    t0 <- LoadLocal:27(:for-in-iter lvl:0)
    PushArgument:28(t0)
    t0 <- InstanceCall:29(next, t0)
    StoreLocal:30(segment, t0, lvl: 0)
    t0 <- Constant:31(#false)
    StoreLocal:32(appendSlash, t0, lvl: 0)
    t0 <- LoadLocal:33(segment lvl:0)
    t1 <- Constant:34(#..)
    Branch if EqualityCompare:35(t0 == t1) goto (14, 15)
B14[target]
    t0 <- LoadLocal:37(output lvl:0)
    PushArgument:38(t0)
    t0 <- InstanceCall:39(get:isEmpty, t0)
    t1 <- Constant:41(#true)
    Branch if StrictCompare:42(!==, t0, t1) goto (3, 8)
B3[target]
    t0 <- LoadLocal:44(output lvl:0)
    PushArgument:45(t0)
    t0 <- InstanceCall:46(get:length, t0)
    t1 <- Constant:47(#1)
    Branch if EqualityCompare:48(t0 != t1) goto (5, 2)
B5[target]
    goto:65 4
B2[target]
    t0 <- LoadLocal:50(output lvl:0)
    PushArgument:51(t0)
    t0 <- Constant:52(#0)
    PushArgument:53(t0)
    t0 <- InstanceCall:54([], t0, t0)
    t1 <- Constant:55(#)
    Branch if EqualityCompare:56(t0 != t1) goto (6, 9)
B6[target]
    goto:67 4
B4[join] pred(B5, B6)
    t0 <- LoadLocal:60(output lvl:0)
    PushArgument:61(t0)
    InstanceCall:62(removeLast, t0)
    goto:74 10
B9[target]
    goto:72 7
B8[target]
    goto:70 7
B7[join] pred(B8, B9)
    goto:75 10
B10[join] pred(B4, B7)
    t0 <- Constant:76(#true)
    StoreLocal:77(appendSlash, t0, lvl: 0)
    goto:97 16
B15[target]
    t0 <- Constant:78(#.)
    t1 <- LoadLocal:79(segment lvl:0)
    Branch if EqualityCompare:80(t0 == t1) goto (11, 12)
B11[target]
    t0 <- Constant:82(#true)
    StoreLocal:83(appendSlash, t0, lvl: 0)
    goto:92 13
B12[target]
    t0 <- LoadLocal:84(output lvl:0)
    PushArgument:85(t0)
    t0 <- LoadLocal:86(segment lvl:0)
    PushArgument:87(t0)
    InstanceCall:88(add, t0, t0)
    goto:93 13
B13[join] pred(B11, B12)
    goto:98 16
B16[join] pred(B10, B13)
    goto:102 18
B19[target]
    t0 <- LoadLocal:104(appendSlash lvl:0)
    t1 <- Constant:105(#true)
    Branch if StrictCompare:106(===, t0, t1) goto (20, 21)
B20[target]
    t0 <- LoadLocal:108(output lvl:0)
    PushArgument:109(t0)
    t0 <- Constant:110(#)
    PushArgument:111(t0)
    InstanceCall:112(add, t0, t0)
    goto:116 22
B21[target]
    goto:117 22
B22[join] pred(B20, B21)
    t0 <- LoadLocal:118(output lvl:0)
    PushArgument:119(t0)
    t0 <- Constant:120(#/)
    PushArgument:121(t0)
    t0 <- StaticCall:122(join t0, t0)
    Return:123(t0)
--> 'dart:uri_::_removeDotSegments' entry: 0xb3004e48 time: 732 us
Code for function 'dart:uri_::_removeDotSegments' {
        ;; Enter frame
0xb3004e48    55                     push ebp
0xb3004e49    89e5                   mov ebp,esp
0xb3004e4b    e800000000             call 0xb3004e50
0xb3004e50    83ec18                 sub esp,0x18
        ;; Initialize spill slots
0xb3004e53    b8190040b5             mov eax,0xb5400019
0xb3004e58    8945f8                 mov [ebp-0x8],eax
0xb3004e5b    8945f4                 mov [ebp-0xc],eax
0xb3004e5e    8945f0                 mov [ebp-0x10],eax
0xb3004e61    8945ec                 mov [ebp-0x14],eax
0xb3004e64    8945e8                 mov [ebp-0x18],eax
0xb3004e67    8945e4                 mov [ebp-0x1c],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3004e6a    3b25bc195809           cmp esp,[0x95819bc]
0xb3004e70    0f8657030000           jna 0xb30051cd
        ;; t0 <- Constant:3(#NULL AbstractTypeArguments)
0xb3004e76    b8190040b5             mov eax,0xb5400019
0xb3004e7b    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#NULL AbstractTypeArguments)
0xb3004e7c    b8190040b5             mov eax,0xb5400019
0xb3004e81    50                     push eax
        ;; t0 <- CreateArray:6(t0)
0xb3004e82    59                     pop ecx
0xb3004e83    ba00000000             mov edx,0
0xb3004e88    e80bb33702             call 0xb5380198  [stub: AllocateArray]
0xb3004e8d    8d500b                 lea edx,[eax+0xb]
0xb3004e90    50                     push eax
        ;; PushArgument:7(t0)
        ;; t0 <- StaticCall:8(List._fromLiteral@0x36924d72 t0, t0)
0xb3004e91    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004e96    e88db43702             call 0xb5380328  [stub: CallStaticFunction]
0xb3004e9b    83c408                 add esp,0x8
0xb3004e9e    50                     push eax
        ;; StoreLocal:9(output, t0, lvl: 0)
0xb3004e9f    58                     pop eax
0xb3004ea0    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- Constant:10(#false)
0xb3004ea3    b8411030b3             mov eax,0xb3301041  'false'
0xb3004ea8    50                     push eax
        ;; StoreLocal:11(appendSlash, t0, lvl: 0)
0xb3004ea9    58                     pop eax
0xb3004eaa    8945ec                 mov [ebp-0x14],eax
        ;; t0 <- LoadLocal:12(path lvl:0)
0xb3004ead    8b4508                 mov eax,[ebp+0x8]
0xb3004eb0    50                     push eax
        ;; PushArgument:13(t0)
        ;; t0 <- Constant:14(#/)
0xb3004eb1    b8812340b5             mov eax,0xb5402381
0xb3004eb6    50                     push eax
        ;; PushArgument:15(t0)
        ;; t0 <- InstanceCall:16(split, t0, t0)
0xb3004eb7    b9698c28b3             mov ecx,0xb3288c69  'ICData target:'split' num-checks: 0'
0xb3004ebc    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004ec1    e852b3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004ec6    83c408                 add esp,0x8
0xb3004ec9    50                     push eax
        ;; PushArgument:17(t0)
        ;; t0 <- InstanceCall:18(iterator, t0)
0xb3004eca    b9b98c28b3             mov ecx,0xb3288cb9  'ICData target:'iterator' num-checks: 0'
0xb3004ecf    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004ed4    e83fb3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004ed9    83c404                 add esp,0x4
0xb3004edc    50                     push eax
        ;; StoreLocal:19(:for-in-iter, t0, lvl: 0)
0xb3004edd    58                     pop eax
0xb3004ede    8945e8                 mov [ebp-0x18],eax
        ;; goto:101 18
        ;; B18
        ;; t0 <- LoadLocal:20(:for-in-iter lvl:0)
0xb3004ee1    8b45e8                 mov eax,[ebp-0x18]
0xb3004ee4    50                     push eax
        ;; PushArgument:21(t0)
        ;; t0 <- InstanceCall:22(get:hasNext, t0)
0xb3004ee5    b9098d28b3             mov ecx,0xb3288d09  'ICData target:'get:hasNext' num-checks: 0'
0xb3004eea    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004eef    e824b3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004ef4    83c404                 add esp,0x4
0xb3004ef7    50                     push eax
        ;; t1 <- Constant:23(#true)
0xb3004ef8    b8391030b3             mov eax,0xb3301039  'true'
0xb3004efd    50                     push eax
        ;; Branch if StrictCompare:24(===, t0, t1) goto (17, 19)
0xb3004efe    58                     pop eax
0xb3004eff    59                     pop ecx
0xb3004f00    51                     push ecx
0xb3004f01    50                     push eax
0xb3004f02    e801b93702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3004f07    58                     pop eax
0xb3004f08    59                     pop ecx
0xb3004f09    0f854d020000           jnz 0xb300515c
        ;; B17
        ;; CheckStackOverflow:26()
0xb3004f0f    3b25bc195809           cmp esp,[0x95819bc]
0xb3004f15    0f86c6020000           jna 0xb30051e1
        ;; t0 <- LoadLocal:27(:for-in-iter lvl:0)
0xb3004f1b    8b45e8                 mov eax,[ebp-0x18]
0xb3004f1e    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- InstanceCall:29(next, t0)
0xb3004f1f    b9598d28b3             mov ecx,0xb3288d59  'ICData target:'next' num-checks: 0'
0xb3004f24    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004f29    e8eab2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004f2e    83c404                 add esp,0x4
0xb3004f31    50                     push eax
        ;; StoreLocal:30(segment, t0, lvl: 0)
0xb3004f32    58                     pop eax
0xb3004f33    8945e4                 mov [ebp-0x1c],eax
        ;; t0 <- Constant:31(#false)
0xb3004f36    b8411030b3             mov eax,0xb3301041  'false'
0xb3004f3b    50                     push eax
        ;; StoreLocal:32(appendSlash, t0, lvl: 0)
0xb3004f3c    58                     pop eax
0xb3004f3d    8945ec                 mov [ebp-0x14],eax
        ;; t0 <- LoadLocal:33(segment lvl:0)
0xb3004f40    8b45e4                 mov eax,[ebp-0x1c]
0xb3004f43    50                     push eax
        ;; t1 <- Constant:34(#..)
0xb3004f44    b8b93d33b3             mov eax,0xb3333db9  '..'
0xb3004f49    50                     push eax
        ;; Branch if EqualityCompare:35(t0 == t1) goto (14, 15)
0xb3004f4a    5a                     pop edx
0xb3004f4b    5b                     pop ebx
0xb3004f4c    53                     push ebx
0xb3004f4d    52                     push edx
0xb3004f4e    813c24190040b5         cmp [esp],0xb5400019
0xb3004f55    0f8425000000           jz 0xb3004f80
0xb3004f5b    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3004f63    0f8417000000           jz 0xb3004f80
0xb3004f69    b9a98d28b3             mov ecx,0xb3288da9  'ICData target:'==' num-checks: 0'
0xb3004f6e    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3004f73    e860b3ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3004f78    83c408                 add esp,0x8
0xb3004f7b    e90d000000             jmp 0xb3004f8d
0xb3004f80    b9a98d28b3             mov ecx,0xb3288da9  'ICData target:'==' num-checks: 0'
0xb3004f85    e8beb9ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3004f8a    83c408                 add esp,0x8
0xb3004f8d    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3004f92    0f853e010000           jnz 0xb30050d6
        ;; B14
        ;; t0 <- LoadLocal:37(output lvl:0)
0xb3004f98    8b45f0                 mov eax,[ebp-0x10]
0xb3004f9b    50                     push eax
        ;; PushArgument:38(t0)
        ;; t0 <- InstanceCall:39(get:isEmpty, t0)
0xb3004f9c    b9018e28b3             mov ecx,0xb3288e01  'ICData target:'get:isEmpty' num-checks: 0'
0xb3004fa1    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004fa6    e86db2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004fab    83c404                 add esp,0x4
0xb3004fae    50                     push eax
        ;; t1 <- Constant:41(#true)
0xb3004faf    b8391030b3             mov eax,0xb3301039  'true'
0xb3004fb4    50                     push eax
        ;; Branch if StrictCompare:42(!==, t0, t1) goto (3, 8)
0xb3004fb5    58                     pop eax
0xb3004fb6    59                     pop ecx
0xb3004fb7    51                     push ecx
0xb3004fb8    50                     push eax
0xb3004fb9    e84ab83702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3004fbe    58                     pop eax
0xb3004fbf    59                     pop ecx
0xb3004fc0    0f8401010000           jz 0xb30050c7
        ;; B3
        ;; t0 <- LoadLocal:44(output lvl:0)
0xb3004fc6    8b45f0                 mov eax,[ebp-0x10]
0xb3004fc9    50                     push eax
        ;; PushArgument:45(t0)
        ;; t0 <- InstanceCall:46(get:length, t0)
0xb3004fca    b9518e28b3             mov ecx,0xb3288e51  'ICData target:'get:length' num-checks: 0'
0xb3004fcf    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3004fd4    e83fb2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3004fd9    83c404                 add esp,0x4
0xb3004fdc    50                     push eax
        ;; t1 <- Constant:47(#1)
0xb3004fdd    b802000000             mov eax,0x2
0xb3004fe2    50                     push eax
        ;; Branch if EqualityCompare:48(t0 != t1) goto (5, 2)
0xb3004fe3    5a                     pop edx
0xb3004fe4    5b                     pop ebx
0xb3004fe5    53                     push ebx
0xb3004fe6    52                     push edx
0xb3004fe7    813c24190040b5         cmp [esp],0xb5400019
0xb3004fee    0f8425000000           jz 0xb3005019
0xb3004ff4    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3004ffc    0f8417000000           jz 0xb3005019
0xb3005002    b9a18e28b3             mov ecx,0xb3288ea1  'ICData target:'==' num-checks: 0'
0xb3005007    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300500c    e8c7b2ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3005011    83c408                 add esp,0x8
0xb3005014    e90d000000             jmp 0xb3005026
0xb3005019    b9a18e28b3             mov ecx,0xb3288ea1  'ICData target:'==' num-checks: 0'
0xb300501e    e825b9ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3005023    83c408                 add esp,0x8
0xb3005026    3d391030b3             cmp eax, 0xb3301039  'true'
0xb300502b    0f8405000000           jz 0xb3005036
        ;; B5
        ;; goto:65 4
0xb3005031    e971000000             jmp 0xb30050a7
        ;; B2
        ;; t0 <- LoadLocal:50(output lvl:0)
0xb3005036    8b45f0                 mov eax,[ebp-0x10]
0xb3005039    50                     push eax
        ;; PushArgument:51(t0)
        ;; t0 <- Constant:52(#0)
0xb300503a    b800000000             mov eax,0
0xb300503f    50                     push eax
        ;; PushArgument:53(t0)
        ;; t0 <- InstanceCall:54([], t0, t0)
0xb3005040    b9f98e28b3             mov ecx,0xb3288ef9  'ICData target:'[]' num-checks: 0'
0xb3005045    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300504a    e8c9b1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300504f    83c408                 add esp,0x8
0xb3005052    50                     push eax
        ;; t1 <- Constant:55(#)
0xb3005053    b8e11240b5             mov eax,0xb54012e1
0xb3005058    50                     push eax
        ;; Branch if EqualityCompare:56(t0 != t1) goto (6, 9)
0xb3005059    5a                     pop edx
0xb300505a    5b                     pop ebx
0xb300505b    53                     push ebx
0xb300505c    52                     push edx
0xb300505d    813c24190040b5         cmp [esp],0xb5400019
0xb3005064    0f8425000000           jz 0xb300508f
0xb300506a    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3005072    0f8417000000           jz 0xb300508f
0xb3005078    b9498f28b3             mov ecx,0xb3288f49  'ICData target:'==' num-checks: 0'
0xb300507d    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005082    e851b2ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3005087    83c408                 add esp,0x8
0xb300508a    e90d000000             jmp 0xb300509c
0xb300508f    b9498f28b3             mov ecx,0xb3288f49  'ICData target:'==' num-checks: 0'
0xb3005094    e8afb8ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3005099    83c408                 add esp,0x8
0xb300509c    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30050a1    0f841b000000           jz 0xb30050c2
        ;; B6
        ;; goto:67 4
        ;; B4
        ;; t0 <- LoadLocal:60(output lvl:0)
0xb30050a7    8b45f0                 mov eax,[ebp-0x10]
0xb30050aa    50                     push eax
        ;; PushArgument:61(t0)
        ;; InstanceCall:62(removeLast, t0)
0xb30050ab    b9a18f28b3             mov ecx,0xb3288fa1  'ICData target:'removeLast' num-checks: 0'
0xb30050b0    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30050b5    e85eb1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30050ba    83c404                 add esp,0x4
        ;; goto:74 10
0xb30050bd    e905000000             jmp 0xb30050c7
        ;; B9
        ;; goto:72 7
0xb30050c2    e900000000             jmp 0xb30050c7
        ;; B8
        ;; goto:70 7
        ;; B7
        ;; goto:75 10
        ;; B10
        ;; t0 <- Constant:76(#true)
0xb30050c7    b8391030b3             mov eax,0xb3301039  'true'
0xb30050cc    50                     push eax
        ;; StoreLocal:77(appendSlash, t0, lvl: 0)
0xb30050cd    58                     pop eax
0xb30050ce    8945ec                 mov [ebp-0x14],eax
        ;; goto:97 16
0xb30050d1    e981000000             jmp 0xb3005157
        ;; B15
        ;; t0 <- Constant:78(#.)
0xb30050d6    b8f11240b5             mov eax,0xb54012f1
0xb30050db    50                     push eax
        ;; t1 <- LoadLocal:79(segment lvl:0)
0xb30050dc    8b45e4                 mov eax,[ebp-0x1c]
0xb30050df    50                     push eax
        ;; Branch if EqualityCompare:80(t0 == t1) goto (11, 12)
0xb30050e0    5a                     pop edx
0xb30050e1    5b                     pop ebx
0xb30050e2    53                     push ebx
0xb30050e3    52                     push edx
0xb30050e4    813c24190040b5         cmp [esp],0xb5400019
0xb30050eb    0f8425000000           jz 0xb3005116
0xb30050f1    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb30050f9    0f8417000000           jz 0xb3005116
0xb30050ff    b9f18f28b3             mov ecx,0xb3288ff1  'ICData target:'==' num-checks: 0'
0xb3005104    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005109    e8cab1ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300510e    83c408                 add esp,0x8
0xb3005111    e90d000000             jmp 0xb3005123
0xb3005116    b9f18f28b3             mov ecx,0xb3288ff1  'ICData target:'==' num-checks: 0'
0xb300511b    e828b8ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3005120    83c408                 add esp,0x8
0xb3005123    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3005128    0f850f000000           jnz 0xb300513d
        ;; B11
        ;; t0 <- Constant:82(#true)
0xb300512e    b8391030b3             mov eax,0xb3301039  'true'
0xb3005133    50                     push eax
        ;; StoreLocal:83(appendSlash, t0, lvl: 0)
0xb3005134    58                     pop eax
0xb3005135    8945ec                 mov [ebp-0x14],eax
        ;; goto:92 13
0xb3005138    e91a000000             jmp 0xb3005157
        ;; B12
        ;; t0 <- LoadLocal:84(output lvl:0)
0xb300513d    8b45f0                 mov eax,[ebp-0x10]
0xb3005140    50                     push eax
        ;; PushArgument:85(t0)
        ;; t0 <- LoadLocal:86(segment lvl:0)
0xb3005141    8b45e4                 mov eax,[ebp-0x1c]
0xb3005144    50                     push eax
        ;; PushArgument:87(t0)
        ;; InstanceCall:88(add, t0, t0)
0xb3005145    b9499028b3             mov ecx,0xb3289049  'ICData target:'add' num-checks: 0'
0xb300514a    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300514f    e8c4b0ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005154    83c408                 add esp,0x8
        ;; goto:93 13
        ;; B13
        ;; goto:98 16
        ;; B16
        ;; goto:102 18
0xb3005157    e985fdffff             jmp 0xb3004ee1
        ;; B19
        ;; t0 <- LoadLocal:104(appendSlash lvl:0)
0xb300515c    8b45ec                 mov eax,[ebp-0x14]
0xb300515f    50                     push eax
        ;; t1 <- Constant:105(#true)
0xb3005160    b8391030b3             mov eax,0xb3301039  'true'
0xb3005165    50                     push eax
        ;; Branch if StrictCompare:106(===, t0, t1) goto (20, 21)
0xb3005166    58                     pop eax
0xb3005167    59                     pop ecx
0xb3005168    51                     push ecx
0xb3005169    50                     push eax
0xb300516a    e899b63702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb300516f    58                     pop eax
0xb3005170    59                     pop ecx
0xb3005171    0f8521000000           jnz 0xb3005198
        ;; B20
        ;; t0 <- LoadLocal:108(output lvl:0)
0xb3005177    8b45f0                 mov eax,[ebp-0x10]
0xb300517a    50                     push eax
        ;; PushArgument:109(t0)
        ;; t0 <- Constant:110(#)
0xb300517b    b8e11240b5             mov eax,0xb54012e1
0xb3005180    50                     push eax
        ;; PushArgument:111(t0)
        ;; InstanceCall:112(add, t0, t0)
0xb3005181    b9999028b3             mov ecx,0xb3289099  'ICData target:'add' num-checks: 0'
0xb3005186    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300518b    e888b0ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005190    83c408                 add esp,0x8
        ;; goto:116 22
0xb3005193    e900000000             jmp 0xb3005198
        ;; B21
        ;; goto:117 22
        ;; B22
        ;; t0 <- LoadLocal:118(output lvl:0)
0xb3005198    8b45f0                 mov eax,[ebp-0x10]
0xb300519b    50                     push eax
        ;; PushArgument:119(t0)
        ;; t0 <- Constant:120(#/)
0xb300519c    b8812340b5             mov eax,0xb5402381
0xb30051a1    50                     push eax
        ;; PushArgument:121(t0)
        ;; t0 <- StaticCall:122(join t0, t0)
0xb30051a2    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30051a7    e87cb13702             call 0xb5380328  [stub: CallStaticFunction]
0xb30051ac    83c408                 add esp,0x8
0xb30051af    50                     push eax
        ;; Return:123(t0)
0xb30051b0    58                     pop eax
0xb30051b1    baa10412b3             mov edx,0xb31204a1  'Function 'removeDotSegments': static.'
0xb30051b6    ff422b                 inc [edx+0x2b]
0xb30051b9    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30051c0    7c05                   jl 0xb30051c7
0xb30051c2    e8f1b6ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30051c7    89ec                   mov esp,ebp
0xb30051c9    5d                     pop ebp
0xb30051ca    c3                     ret
0xb30051cb    90                     nop
0xb30051cc    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30051cd    b970d30a08             mov ecx,0x80ad370
0xb30051d2    ba00000000             mov edx,0
0xb30051d7    e84cae3702             call 0xb5380028  [stub: CallToRuntime]
0xb30051dc    e995fcffff             jmp 0xb3004e76
        ;; CheckStackOverflowSlowPath
0xb30051e1    b970d30a08             mov ecx,0x80ad370
0xb30051e6    ba00000000             mov edx,0
0xb30051eb    e838ae3702             call 0xb5380028  [stub: CallToRuntime]
0xb30051f0    e926fdffff             jmp 0xb3004f1b
0xb30051f5    e93eb23702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30051fa    e919b33702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 74 : 0xb3004e92 'ImmutableArray'
 92 : 0xb3004ea4 'false'
 106 : 0xb3004eb2 '/'
 112 : 0xb3004eb8 'ICData target:'split' num-checks: 0'
 117 : 0xb3004ebd 'ImmutableArray'
 131 : 0xb3004ecb 'ICData target:'iterator' num-checks: 0'
 136 : 0xb3004ed0 'ImmutableArray'
 158 : 0xb3004ee6 'ICData target:'get:hasNext' num-checks: 0'
 163 : 0xb3004eeb 'ImmutableArray'
 177 : 0xb3004ef9 'true'
 216 : 0xb3004f20 'ICData target:'next' num-checks: 0'
 221 : 0xb3004f25 'ImmutableArray'
 239 : 0xb3004f37 'false'
 253 : 0xb3004f45 '..'
 290 : 0xb3004f6a 'ICData target:'==' num-checks: 0'
 295 : 0xb3004f6f 'ImmutableArray'
 313 : 0xb3004f81 'ICData target:'==' num-checks: 0'
 326 : 0xb3004f8e 'true'
 341 : 0xb3004f9d 'ICData target:'get:isEmpty' num-checks: 0'
 346 : 0xb3004fa2 'ImmutableArray'
 360 : 0xb3004fb0 'true'
 387 : 0xb3004fcb 'ICData target:'get:length' num-checks: 0'
 392 : 0xb3004fd0 'ImmutableArray'
 443 : 0xb3005003 'ICData target:'==' num-checks: 0'
 448 : 0xb3005008 'ImmutableArray'
 466 : 0xb300501a 'ICData target:'==' num-checks: 0'
 479 : 0xb3005027 'true'
 505 : 0xb3005041 'ICData target:'[]' num-checks: 0'
 510 : 0xb3005046 'ImmutableArray'
 524 : 0xb3005054 ''
 561 : 0xb3005079 'ICData target:'==' num-checks: 0'
 566 : 0xb300507e 'ImmutableArray'
 584 : 0xb3005090 'ICData target:'==' num-checks: 0'
 597 : 0xb300509d 'true'
 612 : 0xb30050ac 'ICData target:'removeLast' num-checks: 0'
 617 : 0xb30050b1 'ImmutableArray'
 640 : 0xb30050c8 'true'
 655 : 0xb30050d7 '.'
 696 : 0xb3005100 'ICData target:'==' num-checks: 0'
 701 : 0xb3005105 'ImmutableArray'
 719 : 0xb3005117 'ICData target:'==' num-checks: 0'
 732 : 0xb3005124 'true'
 743 : 0xb300512f 'true'
 766 : 0xb3005146 'ICData target:'add' num-checks: 0'
 771 : 0xb300514b 'ImmutableArray'
 793 : 0xb3005161 'true'
 820 : 0xb300517c ''
 826 : 0xb3005182 'ICData target:'add' num-checks: 0'
 831 : 0xb3005187 'ImmutableArray'
 853 : 0xb300519d '/'
 859 : 0xb30051a3 'ImmutableArray'
 874 : 0xb30051b2 'Function 'removeDotSegments': static.'
}
PC Descriptors for function 'dart:uri_::_removeDotSegments' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3004e8d	other        	-1		1334	-1
0xb3004e9b	fn-call      	8		1333	-1
0xb3004e9b	deopt-after  	8		1333	-1
0xb3004eb7	deopt-before 	16		1352	-1
0xb3004ec6	ic-call      	16		1352	-1
0xb3004ec6	deopt-after  	16		1352	-1
0xb3004eca	deopt-before 	18		1348	-1
0xb3004ed9	ic-call      	18		1348	-1
0xb3004ed9	deopt-after  	18		1348	-1
0xb3004ee1	deopt-before 	101		0	-1
0xb3004ee5	deopt-before 	22		1348	-1
0xb3004ef4	ic-call      	22		1348	-1
0xb3004ef4	deopt-after  	22		1348	-1
0xb3004f1f	deopt-before 	29		1348	-1
0xb3004f2e	ic-call      	29		1348	-1
0xb3004f2e	deopt-after  	29		1348	-1
0xb3004f4e	deopt-before 	35		1367	-1
0xb3004f78	ic-call      	35		1367	-1
0xb3004f78	deopt-after  	35		1367	-1
0xb3004f8a	other        	-1		1367	-1
0xb3004f9c	deopt-before 	39		1378	-1
0xb3004fab	ic-call      	39		1378	-1
0xb3004fab	deopt-after  	39		1378	-1
0xb3004fca	deopt-before 	46		1386	-1
0xb3004fd9	ic-call      	46		1386	-1
0xb3004fd9	deopt-after  	46		1386	-1
0xb3004fe7	deopt-before 	48		1388	-1
0xb3005011	ic-call      	48		1388	-1
0xb3005011	deopt-after  	48		1388	-1
0xb3005023	other        	-1		1388	-1
0xb3005031	deopt-before 	65		0	-1
0xb3005040	deopt-before 	54		1396	-1
0xb300504f	ic-call      	54		1396	-1
0xb300504f	deopt-after  	54		1396	-1
0xb300505d	deopt-before 	56		1400	-1
0xb3005087	ic-call      	56		1400	-1
0xb3005087	deopt-after  	56		1400	-1
0xb3005099	other        	-1		1400	-1
0xb30050a7	deopt-before 	67		0	-1
0xb30050ab	deopt-before 	62		1411	-1
0xb30050ba	ic-call      	62		1411	-1
0xb30050ba	deopt-after  	62		1411	-1
0xb30050bd	deopt-before 	74		0	-1
0xb30050c2	deopt-before 	72		0	-1
0xb30050c7	deopt-before 	70		0	-1
0xb30050c7	deopt-before 	75		0	-1
0xb30050d1	deopt-before 	97		0	-1
0xb30050e4	deopt-before 	80		1425	-1
0xb300510e	ic-call      	80		1425	-1
0xb300510e	deopt-after  	80		1425	-1
0xb3005120	other        	-1		1425	-1
0xb3005138	deopt-before 	92		0	-1
0xb3005145	deopt-before 	88		1443	-1
0xb3005154	ic-call      	88		1443	-1
0xb3005154	deopt-after  	88		1443	-1
0xb3005157	deopt-before 	93		0	-1
0xb3005157	deopt-before 	98		0	-1
0xb3005157	deopt-before 	102		0	-1
0xb3005181	deopt-before 	112		1460	-1
0xb3005190	ic-call      	112		1460	-1
0xb3005190	deopt-after  	112		1460	-1
0xb3005193	deopt-before 	116		0	-1
0xb3005198	deopt-before 	117		0	-1
0xb30051ac	fn-call      	122		1471	-1
0xb30051ac	deopt-after  	122		1471	-1
0xb30051c7	other        	-1		0	-1
0xb30051cc	return       	-1		1465	-1
0xb30051dc	other        	-1		1320	-1
0xb30051f0	other        	-1		1342	-1
0xb30051f5	patch        	-1		0	-1
0xb30051fa	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_::_removeDotSegments' {
}
Variable Descriptors for function 'dart:uri_::_removeDotSegments' {
  stack var 'path' offset 2 (valid 1322-1480)
  stack var 'output' offset -4 (valid 1330-1480)
  stack var 'appendSlash' offset -5 (valid 1337-1480)
  stack var 'segment' offset -7 (valid 1345-1450)
}
Exception Handlers for function 'dart:uri_::_removeDotSegments' {
No exception handlers
}
Static call target functions {
  0xb3004e9b: dart:core_List_List._fromLiteral@0x36924d72, 0xb5400019
  0xb30051ac: dart:core_Strings_join, 0xb5400019
}
PatchStaticCall: patching from 0xb300404c to 'dart:uri_::_removeDotSegments' 0xb3004e48
Compiling function: 'dart:core_List_List._fromLiteral@0x36924d72' @ token 3824
Before Optimizations
==== dart:core_List_List._fromLiteral@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(:type_arguments lvl:0)
    t0 <- InstantiateTypeArguments:4(<E>, t0)
    PushArgument:5(t0)
    t0 <- StaticCall:6(List. t0)
    StoreLocal:7(list, t0, lvl: 0)
    t0 <- LoadLocal:8(elements lvl:0)
    PushArgument:9(t0)
    t0 <- InstanceCall:10(get:length, t0)
    t1 <- Constant:11(#0)
    Branch if RelationalOp:12(>, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:14(list lvl:0)
    PushArgument:15(t0)
    t0 <- LoadLocal:16(elements lvl:0)
    PushArgument:17(t0)
    InstanceCall:18(_setData@0x36924d72, t0, t0)
    t0 <- LoadLocal:19(list lvl:0)
    PushArgument:20(t0)
    t0 <- LoadLocal:21(elements lvl:0)
    PushArgument:22(t0)
    t0 <- InstanceCall:23(get:length, t0)
    PushArgument:24(t0)
    InstanceCall:25(set:length, t0, t0)
    goto:29 4
B3[target]
    goto:30 4
B4[join] pred(B2, B3)
    t0 <- LoadLocal:31(list lvl:0)
    Return:32(t0)
--> 'dart:core_List_List._fromLiteral@0x36924d72' entry: 0xb3005218 time: 270 us
Code for function 'dart:core_List_List._fromLiteral@0x36924d72' {
        ;; Enter frame
0xb3005218    55                     push ebp
0xb3005219    89e5                   mov ebp,esp
0xb300521b    e800000000             call 0xb3005220
0xb3005220    83ec0c                 sub esp,0xc
        ;; Initialize spill slots
0xb3005223    b8190040b5             mov eax,0xb5400019
0xb3005228    8945f8                 mov [ebp-0x8],eax
0xb300522b    8945f4                 mov [ebp-0xc],eax
0xb300522e    8945f0                 mov [ebp-0x10],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3005231    3b25bc195809           cmp esp,[0x95819bc]
0xb3005237    0f86f7000000           jna 0xb3005334
        ;; t0 <- LoadLocal:3(:type_arguments lvl:0)
0xb300523d    8b450c                 mov eax,[ebp+0xc]
0xb3005240    50                     push eax
        ;; t0 <- InstantiateTypeArguments:4(<E>, t0)
0xb3005241    58                     pop eax
0xb3005242    3d190040b5             cmp eax, 0xb5400019
0xb3005247    742d                   jz 0xb3005276
0xb3005249    0fb74801               movzx_w ecx,[eax+0x1]
0xb300524d    83f905                 cmp ecx,0x5
0xb3005250    7506                   jnz 0xb3005258
0xb3005252    83780302               cmp [eax+0x3],0x2
0xb3005256    741e                   jz 0xb3005276
0xb3005258    68190040b5             push 0xb5400019
0xb300525d    68a9d119b3             push 0xb319d1a9
0xb3005262    50                     push eax
0xb3005263    b990120b08             mov ecx,0x80b1290
0xb3005268    ba02000000             mov edx,0x2
0xb300526d    e8b6ad3702             call 0xb5380028  [stub: CallToRuntime]
0xb3005272    83c408                 add esp,0x8
0xb3005275    58                     pop eax
0xb3005276    50                     push eax
        ;; PushArgument:5(t0)
        ;; t0 <- StaticCall:6(List. t0)
0xb3005277    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300527c    e8a7b03702             call 0xb5380328  [stub: CallStaticFunction]
0xb3005281    83c404                 add esp,0x4
0xb3005284    50                     push eax
        ;; StoreLocal:7(list, t0, lvl: 0)
0xb3005285    58                     pop eax
0xb3005286    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:8(elements lvl:0)
0xb3005289    8b4508                 mov eax,[ebp+0x8]
0xb300528c    50                     push eax
        ;; PushArgument:9(t0)
        ;; t0 <- InstanceCall:10(get:length, t0)
0xb300528d    b9119928b3             mov ecx,0xb3289911  'ICData target:'get:length' num-checks: 0'
0xb3005292    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3005297    e87cafffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300529c    83c404                 add esp,0x4
0xb300529f    50                     push eax
        ;; t1 <- Constant:11(#0)
0xb30052a0    b800000000             mov eax,0
0xb30052a5    50                     push eax
        ;; Branch if RelationalOp:12(>, t0, t1) goto (2, 3)
0xb30052a6    59                     pop ecx
0xb30052a7    58                     pop eax
0xb30052a8    50                     push eax
0xb30052a9    51                     push ecx
0xb30052aa    b9619928b3             mov ecx,0xb3289961  'ICData target:'>' num-checks: 0'
0xb30052af    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30052b4    e81fb0ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30052b9    83c408                 add esp,0x8
0xb30052bc    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30052c1    0f854c000000           jnz 0xb3005313
        ;; B2
        ;; t0 <- LoadLocal:14(list lvl:0)
0xb30052c7    8b45f0                 mov eax,[ebp-0x10]
0xb30052ca    50                     push eax
        ;; PushArgument:15(t0)
        ;; t0 <- LoadLocal:16(elements lvl:0)
0xb30052cb    8b4508                 mov eax,[ebp+0x8]
0xb30052ce    50                     push eax
        ;; PushArgument:17(t0)
        ;; InstanceCall:18(_setData@0x36924d72, t0, t0)
0xb30052cf    b9b99928b3             mov ecx,0xb32899b9  'ICData target:'_setData@0x36924d72' num-checks: 0'
0xb30052d4    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30052d9    e83aafffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30052de    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:19(list lvl:0)
0xb30052e1    8b45f0                 mov eax,[ebp-0x10]
0xb30052e4    50                     push eax
        ;; PushArgument:20(t0)
        ;; t0 <- LoadLocal:21(elements lvl:0)
0xb30052e5    8b4508                 mov eax,[ebp+0x8]
0xb30052e8    50                     push eax
        ;; PushArgument:22(t0)
        ;; t0 <- InstanceCall:23(get:length, t0)
0xb30052e9    b9099a28b3             mov ecx,0xb3289a09  'ICData target:'get:length' num-checks: 0'
0xb30052ee    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30052f3    e820afffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30052f8    83c404                 add esp,0x4
0xb30052fb    50                     push eax
        ;; PushArgument:24(t0)
        ;; InstanceCall:25(set:length, t0, t0)
0xb30052fc    b9599a28b3             mov ecx,0xb3289a59  'ICData target:'set:length' num-checks: 0'
0xb3005301    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005306    e8cdafffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300530b    83c408                 add esp,0x8
        ;; goto:29 4
0xb300530e    e900000000             jmp 0xb3005313
        ;; B3
        ;; goto:30 4
        ;; B4
        ;; t0 <- LoadLocal:31(list lvl:0)
0xb3005313    8b45f0                 mov eax,[ebp-0x10]
0xb3005316    50                     push eax
        ;; Return:32(t0)
0xb3005317    58                     pop eax
0xb3005318    ba99bc1ab3             mov edx,0xb31abc99  'Function 'List._fromLiteral@0x36924d72': static factory.'
0xb300531d    ff422b                 inc [edx+0x2b]
0xb3005320    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3005327    7c05                   jl 0xb300532e
0xb3005329    e88ab5ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300532e    89ec                   mov esp,ebp
0xb3005330    5d                     pop ebp
0xb3005331    c3                     ret
0xb3005332    90                     nop
0xb3005333    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3005334    b970d30a08             mov ecx,0x80ad370
0xb3005339    ba00000000             mov edx,0
0xb300533e    e8e5ac3702             call 0xb5380028  [stub: CallToRuntime]
0xb3005343    e9f5feffff             jmp 0xb300523d
0xb3005348    e9ebb03702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300534d    e9c6b13702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 70 : 0xb300525e 'TypeArguments: [TypeParameter: name E; index: 0; class: List]'
 96 : 0xb3005278 'ImmutableArray'
 118 : 0xb300528e 'ICData target:'get:length' num-checks: 0'
 123 : 0xb3005293 'ImmutableArray'
 147 : 0xb30052ab 'ICData target:'>' num-checks: 0'
 152 : 0xb30052b0 'ImmutableArray'
 165 : 0xb30052bd 'true'
 184 : 0xb30052d0 'ICData target:'_setData@0x36924d72' num-checks: 0'
 189 : 0xb30052d5 'ImmutableArray'
 210 : 0xb30052ea 'ICData target:'get:length' num-checks: 0'
 215 : 0xb30052ef 'ImmutableArray'
 229 : 0xb30052fd 'ICData target:'set:length' num-checks: 0'
 234 : 0xb3005302 'ImmutableArray'
 257 : 0xb3005319 'Function 'List._fromLiteral@0x36924d72': static factory.'
}
PC Descriptors for function 'dart:core_List_List._fromLiteral@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3005272	other        	-1		3835	-1
0xb3005281	fn-call      	6		3835	-1
0xb3005281	deopt-after  	6		3835	-1
0xb300528d	deopt-before 	10		3850	-1
0xb300529c	ic-call      	10		3850	-1
0xb300529c	deopt-after  	10		3850	-1
0xb30052aa	deopt-before 	12		3852	-1
0xb30052b9	ic-call      	12		3852	-1
0xb30052b9	deopt-after  	12		3852	-1
0xb30052cf	deopt-before 	18		3862	-1
0xb30052de	ic-call      	18		3862	-1
0xb30052de	deopt-after  	18		3862	-1
0xb30052e9	deopt-before 	23		3876	-1
0xb30052f8	ic-call      	23		3876	-1
0xb30052f8	deopt-after  	23		3876	-1
0xb30052fc	deopt-before 	25		3870	-1
0xb300530b	ic-call      	25		3870	-1
0xb300530b	deopt-after  	25		3870	-1
0xb300530e	deopt-before 	29		0	-1
0xb3005313	deopt-before 	30		0	-1
0xb300532e	other        	-1		0	-1
0xb3005333	return       	-1		3880	-1
0xb3005343	other        	-1		3824	-1
0xb3005348	patch        	-1		0	-1
0xb300534d	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_List_List._fromLiteral@0x36924d72' {
}
Variable Descriptors for function 'dart:core_List_List._fromLiteral@0x36924d72' {
  stack var 'elements' offset 2 (valid 3827-3885)
  stack var 'list' offset -4 (valid 3832-3885)
}
Exception Handlers for function 'dart:core_List_List._fromLiteral@0x36924d72' {
No exception handlers
}
Static call target functions {
  0xb3005281: dart:core_List_List., 0xb5400019
}
PatchStaticCall: patching from 0xb3004e9b to 'dart:core_List_List._fromLiteral@0x36924d72' 0xb3005218
PatchStaticCall: patching from 0xb3005281 to 'dart:core_List_List.' 0xb3001358
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.' @ token 7229
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(:type_arguments lvl:0)
    t0 <- InstantiateTypeArguments:4(<T>, t0)
    PushArgument:5(t0)
    t0 <- Constant:6(#4)
    PushArgument:7(t0)
    t0 <- StaticCall:8(_ObjectArray@0x36924d72. t0, t0)
    StoreLocal:9(data, t0, lvl: 0)
    t0 <- LoadLocal:10(:type_arguments lvl:0)
    t0 <- InstantiateTypeArguments:11(<T>, t0)
    PushArgument:12(t0)
    t0 <- LoadLocal:13(data lvl:0)
    PushArgument:14(t0)
    t0 <- StaticCall:15(_GrowableObjectArray@0x36924d72.fromObjectArray t0, t0)
    Return:16(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.' entry: 0xb3005368 time: 295 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.' {
        ;; Enter frame
0xb3005368    55                     push ebp
0xb3005369    89e5                   mov ebp,esp
0xb300536b    e800000000             call 0xb3005370
0xb3005370    83ec10                 sub esp,0x10
        ;; Initialize spill slots
0xb3005373    b8190040b5             mov eax,0xb5400019
0xb3005378    8945f8                 mov [ebp-0x8],eax
0xb300537b    8945f4                 mov [ebp-0xc],eax
0xb300537e    8945f0                 mov [ebp-0x10],eax
0xb3005381    8945ec                 mov [ebp-0x14],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3005384    3b25bc195809           cmp esp,[0x95819bc]
0xb300538a    0f86bb000000           jna 0xb300544b
        ;; t0 <- LoadLocal:3(:type_arguments lvl:0)
0xb3005390    8b4508                 mov eax,[ebp+0x8]
0xb3005393    50                     push eax
        ;; t0 <- InstantiateTypeArguments:4(<T>, t0)
0xb3005394    58                     pop eax
0xb3005395    3d190040b5             cmp eax, 0xb5400019
0xb300539a    742d                   jz 0xb30053c9
0xb300539c    0fb74801               movzx_w ecx,[eax+0x1]
0xb30053a0    83f905                 cmp ecx,0x5
0xb30053a3    7506                   jnz 0xb30053ab
0xb30053a5    83780302               cmp [eax+0x3],0x2
0xb30053a9    741e                   jz 0xb30053c9
0xb30053ab    68190040b5             push 0xb5400019
0xb30053b0    68118b19b3             push 0xb3198b11
0xb30053b5    50                     push eax
0xb30053b6    b990120b08             mov ecx,0x80b1290
0xb30053bb    ba02000000             mov edx,0x2
0xb30053c0    e863ac3702             call 0xb5380028  [stub: CallToRuntime]
0xb30053c5    83c408                 add esp,0x8
0xb30053c8    58                     pop eax
0xb30053c9    50                     push eax
        ;; PushArgument:5(t0)
        ;; t0 <- Constant:6(#4)
0xb30053ca    b808000000             mov eax,0x8
0xb30053cf    50                     push eax
        ;; PushArgument:7(t0)
        ;; t0 <- StaticCall:8(_ObjectArray@0x36924d72. t0, t0)
0xb30053d0    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30053d5    e84eaf3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30053da    83c408                 add esp,0x8
0xb30053dd    50                     push eax
        ;; StoreLocal:9(data, t0, lvl: 0)
0xb30053de    58                     pop eax
0xb30053df    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:10(:type_arguments lvl:0)
0xb30053e2    8b4508                 mov eax,[ebp+0x8]
0xb30053e5    50                     push eax
        ;; t0 <- InstantiateTypeArguments:11(<T>, t0)
0xb30053e6    58                     pop eax
0xb30053e7    3d190040b5             cmp eax, 0xb5400019
0xb30053ec    742d                   jz 0xb300541b
0xb30053ee    0fb74801               movzx_w ecx,[eax+0x1]
0xb30053f2    83f905                 cmp ecx,0x5
0xb30053f5    7506                   jnz 0xb30053fd
0xb30053f7    83780302               cmp [eax+0x3],0x2
0xb30053fb    741e                   jz 0xb300541b
0xb30053fd    68190040b5             push 0xb5400019
0xb3005402    68118b19b3             push 0xb3198b11
0xb3005407    50                     push eax
0xb3005408    b990120b08             mov ecx,0x80b1290
0xb300540d    ba02000000             mov edx,0x2
0xb3005412    e811ac3702             call 0xb5380028  [stub: CallToRuntime]
0xb3005417    83c408                 add esp,0x8
0xb300541a    58                     pop eax
0xb300541b    50                     push eax
        ;; PushArgument:12(t0)
        ;; t0 <- LoadLocal:13(data lvl:0)
0xb300541c    8b45f0                 mov eax,[ebp-0x10]
0xb300541f    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- StaticCall:15(_GrowableObjectArray@0x36924d72.fromObjectArray t0, t0)
0xb3005420    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005425    e8feae3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300542a    83c408                 add esp,0x8
0xb300542d    50                     push eax
        ;; Return:16(t0)
0xb300542e    58                     pop eax
0xb300542f    baa9dc1ab3             mov edx,0xb31adca9  'Function '_GrowableObjectArray@0x36924d72.': static factory.'
0xb3005434    ff422b                 inc [edx+0x2b]
0xb3005437    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300543e    7c05                   jl 0xb3005445
0xb3005440    e873b4ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3005445    89ec                   mov esp,ebp
0xb3005447    5d                     pop ebp
0xb3005448    c3                     ret
0xb3005449    90                     nop
0xb300544a    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300544b    b970d30a08             mov ecx,0x80ad370
0xb3005450    ba00000000             mov edx,0
0xb3005455    e8ceab3702             call 0xb5380028  [stub: CallToRuntime]
0xb300545a    e931ffffff             jmp 0xb3005390
0xb300545f    e9d4af3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3005464    e9afb03702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 73 : 0xb30053b1 'TypeArguments: [TypeParameter: name T; index: 0; class: _GrowableObjectArray@0x36924d72]'
 105 : 0xb30053d1 'ImmutableArray'
 155 : 0xb3005403 'TypeArguments: [TypeParameter: name T; index: 0; class: _GrowableObjectArray@0x36924d72]'
 185 : 0xb3005421 'ImmutableArray'
 200 : 0xb3005430 'Function '_GrowableObjectArray@0x36924d72.': static factory.'
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30053c5	other        	-1		7236	-1
0xb30053da	fn-call      	8		7236	-1
0xb30053da	deopt-after  	8		7236	-1
0xb3005417	other        	-1		7249	-1
0xb300542a	fn-call      	15		7249	-1
0xb300542a	deopt-after  	15		7249	-1
0xb3005445	other        	-1		0	-1
0xb300544a	return       	-1		7248	-1
0xb300545a	other        	-1		7229	-1
0xb300545f	patch        	-1		0	-1
0xb3005464	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.' {
  stack var 'data' offset -4 (valid 7233-7265)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.' {
No exception handlers
}
Static call target functions {
  0xb30053da: dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72., 0xb5400019
  0xb300542a: dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.fromObjectArray, 0xb5400019
}
PatchStaticCall: patching from 0xb3001449 to 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.' 0xb3005368
PatchStaticCall: patching from 0xb30053da to 'dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.' 0xb3001508
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.fromObjectArray' @ token 7376
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.fromObjectArray
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(GrowableObjectArray_allocate)
    Return:4(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.fromObjectArray' entry: 0xb3005488 time: 220 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.fromObjectArray' {
0xb3005488    8b0508fe5609           mov eax,[0x956fe08]
0xb300548e    8d5810                 lea ebx,[eax+0x10]
0xb3005491    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb3005497    733f                   jnc 0xb30054d8
0xb3005499    891d08fe5609           mov [0x956fe08],ebx
0xb300549f    83c001                 add eax,0x1
0xb30054a2    c740ff00023000         mov [eax-0x1],0x300200
0xb30054a9    8b5c2404               mov ebx,[esp+0x4]
0xb30054ad    89580b                 mov [eax+0xb],ebx
0xb30054b0    83e305                 and ebx,0x5
0xb30054b3    d1eb                   shr ebx, 1
0xb30054b5    13d8                   adc ebx,eax
0xb30054b7    83e307                 and ebx,0x7
0xb30054ba    83fb04                 cmp ebx,0x4
0xb30054bd    750a                   jnz 0xb30054c9
0xb30054bf    50                     push eax
0xb30054c0    8d400b                 lea eax,[eax+0xb]
0xb30054c3    e8a0acffff             call 0xb3000168  [stub: UpdateStoreBuffer]
0xb30054c8    58                     pop eax
0xb30054c9    8b5c2408               mov ebx,[esp+0x8]
0xb30054cd    895803                 mov [eax+0x3],ebx
0xb30054d0    c7400700000000         mov [eax+0x7],0
0xb30054d7    c3                     ret
        ;; Enter frame
0xb30054d8    55                     push ebp
0xb30054d9    89e5                   mov ebp,esp
0xb30054db    e800000000             call 0xb30054e0
0xb30054e0    830424b0               add [esp],0xb0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30054e4    3b25bc195809           cmp esp,[0x95819bc]
0xb30054ea    0f8628000000           jna 0xb3005518
        ;; t0 <- NativeCall:3(GrowableObjectArray_allocate)
0xb30054f0    68190040b5             push 0xb5400019
0xb30054f5    8d450c                 lea eax,[ebp+0xc]
0xb30054f8    b910184508             mov ecx,0x8451810
0xb30054fd    ba02000000             mov edx,0x2
0xb3005502    e821ac3702             call 0xb5380128  [stub: CallNativeCFunction]
0xb3005507    58                     pop eax
0xb3005508    50                     push eax
        ;; Return:4(t0)
0xb3005509    58                     pop eax
0xb300550a    bad1dd1ab3             mov edx,0xb31addd1  'Function '_GrowableObjectArray@0x36924d72.fromObjectArray': static factory.'
0xb300550f    ff422b                 inc [edx+0x2b]
0xb3005512    89ec                   mov esp,ebp
0xb3005514    5d                     pop ebp
0xb3005515    c3                     ret
0xb3005516    90                     nop
0xb3005517    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3005518    b970d30a08             mov ecx,0x80ad370
0xb300551d    ba00000000             mov edx,0
0xb3005522    e801ab3702             call 0xb5380028  [stub: CallToRuntime]
0xb3005527    ebc7                   jmp 0xb30054f0
0xb3005529    e90aaf3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300552e    e9e5af3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 131 : 0xb300550b 'Function '_GrowableObjectArray@0x36924d72.fromObjectArray': static factory.'
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.fromObjectArray' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3005507	other        	-1		7391	-1
0xb3005517	return       	-1		7391	-1
0xb3005527	other        	-1		7376	-1
0xb3005529	patch        	-1		0	-1
0xb300552e	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.fromObjectArray' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.fromObjectArray' {
  stack var 'data' offset 2 (valid 7383-7391)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.fromObjectArray' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb300542a to 'dart:core__GrowableObjectArray@0x36924d72__GrowableObjectArray@0x36924d72.fromObjectArray' 0xb3005488
Compiling function: 'dart:core__OneByteString@0x36924d72_split' @ token 15172
Before Optimizations
==== dart:core__OneByteString@0x36924d72_split
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(pattern lvl:0)
    t1 <- Constant:4(#null)
    t2 <- Constant:5(#null)
    t0 <- InstanceOf:6(t0 IS _OneByteString@0x36924d72 instantiator(t1) type-arg(t2))
    t1 <- Constant:7(#true)
    Branch if StrictCompare:8(===, t0, t1) goto (2, 5)
B2[target]
    t0 <- LoadLocal:10(pattern lvl:0)
    PushArgument:11(t0)
    t0 <- InstanceCall:12(get:length, t0)
    t1 <- Constant:13(#1)
    Branch if EqualityCompare:14(t0 == t1) goto (3, 6)
B3[target]
    t0 <- LoadLocal:17(this lvl:0)
    PushArgument:18(t0)
    t0 <- LoadLocal:19(pattern lvl:0)
    PushArgument:20(t0)
    t0 <- Constant:21(#0)
    PushArgument:22(t0)
    t0 <- InstanceCall:23(charCodeAt, t0, t0)
    PushArgument:24(t0)
    t0 <- InstanceCall:25(_splitWithCharCode@0x36924d72, t0, t0)
    Return:26(t0)
B6[target]
    goto:32 4
B5[target]
    goto:30 4
B4[join] pred(B5, B6)
    t0 <- LoadLocal:33(this lvl:0)
    PushArgument:34(t0)
    t0 <- LoadLocal:35(pattern lvl:0)
    PushArgument:36(t0)
    t0 <- StaticCall:37(split t0, t0)
    Return:38(t0)
--> 'dart:core__OneByteString@0x36924d72_split' entry: 0xb3005548 time: 386 us
Code for function 'dart:core__OneByteString@0x36924d72_split' {
        ;; Enter frame
0xb3005548    55                     push ebp
0xb3005549    89e5                   mov ebp,esp
0xb300554b    e800000000             call 0xb3005550
0xb3005550    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb3005553    b8190040b5             mov eax,0xb5400019
0xb3005558    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300555b    3b25bc195809           cmp esp,[0x95819bc]
0xb3005561    0f86cd010000           jna 0xb3005734
        ;; t0 <- LoadLocal:3(pattern lvl:0)
0xb3005567    8b4508                 mov eax,[ebp+0x8]
0xb300556a    50                     push eax
        ;; t1 <- Constant:4(#null)
0xb300556b    b8190040b5             mov eax,0xb5400019
0xb3005570    50                     push eax
        ;; t2 <- Constant:5(#null)
0xb3005571    b8190040b5             mov eax,0xb5400019
0xb3005576    50                     push eax
        ;; t0 <- InstanceOf:6(t0 IS _OneByteString@0x36924d72 instantiator(t1) type-arg(t2))
0xb3005577    5a                     pop edx
0xb3005578    59                     pop ecx
0xb3005579    58                     pop eax
0xb300557a    51                     push ecx
0xb300557b    52                     push edx
0xb300557c    3d190040b5             cmp eax, 0xb5400019
0xb3005581    0f8494000000           jz 0xb300561b
        ;; InlineInstanceof
        ;; InstantiatedTypeNoArgumentsTest
0xb3005587    a801                   test al,0x1
0xb3005589    7505                   jnz 0xb3005590
0xb300558b    e98b000000             jmp 0xb300561b
0xb3005590    0fb74801               movzx_w ecx,[eax+0x1]
0xb3005594    83f94d                 cmp ecx,0x4d
0xb3005597    0f8485000000           jz 0xb3005622
        ;; Subtype1TestCacheLookup
0xb300559d    0fb77801               movzx_w edi,[eax+0x1]
0xb30055a1    8b4e07                 mov ecx,[esi+0x7]
0xb30055a4    8b891c100000           mov ecx,[ecx+0x101c]
0xb30055aa    8b0cb9                 mov ecx,[ecx+edi*0x4]
0xb30055ad    8b7927                 mov edi,[ecx+0x27]
0xb30055b0    8b7f03                 mov edi,[edi+0x3]
0xb30055b3    81ff790c30b3           cmp edi,0xb3300c79
0xb30055b9    0f8463000000           jz 0xb3005622
0xb30055bf    bfc9a228b3             mov edi,0xb328a2c9  'instance of  Class: SubtypeTestCache'
0xb30055c4    57                     push edi
0xb30055c5    50                     push eax
0xb30055c6    68190040b5             push 0xb5400019
0xb30055cb    e878b03702             call 0xb5380648  [stub: Subtype1TestCache]
0xb30055d0    58                     pop eax
0xb30055d1    58                     pop eax
0xb30055d2    5f                     pop edi
0xb30055d3    81f9190040b5           cmp ecx,0xb5400019
0xb30055d9    7411                   jz 0xb30055ec
0xb30055db    81f9391030b3           cmp ecx,0xb3301039
0xb30055e1    0f843b000000           jz 0xb3005622
0xb30055e7    e92f000000             jmp 0xb300561b
0xb30055ec    8b1424                 mov edx,[esp]
0xb30055ef    8b4c2404               mov ecx,[esp+0x4]
0xb30055f3    68190040b5             push 0xb5400019
0xb30055f8    50                     push eax
0xb30055f9    68a19f1ab3             push 0xb31a9fa1
0xb30055fe    51                     push ecx
0xb30055ff    52                     push edx
0xb3005600    b8c9a228b3             mov eax,0xb328a2c9  'instance of  Class: SubtypeTestCache'
0xb3005605    50                     push eax
0xb3005606    b900460b08             mov ecx,0x80b4600
0xb300560b    ba05000000             mov edx,0x5
0xb3005610    e813aa3702             call 0xb5380028  [stub: CallToRuntime]
0xb3005615    83c414                 add esp,0x14
0xb3005618    58                     pop eax
0xb3005619    eb0c                   jmp 0xb3005627
0xb300561b    b8411030b3             mov eax,0xb3301041  'false'
0xb3005620    eb05                   jmp 0xb3005627
0xb3005622    b8391030b3             mov eax,0xb3301039  'true'
0xb3005627    5a                     pop edx
0xb3005628    59                     pop ecx
0xb3005629    50                     push eax
        ;; t1 <- Constant:7(#true)
0xb300562a    b8391030b3             mov eax,0xb3301039  'true'
0xb300562f    50                     push eax
        ;; Branch if StrictCompare:8(===, t0, t1) goto (2, 5)
0xb3005630    58                     pop eax
0xb3005631    59                     pop ecx
0xb3005632    51                     push ecx
0xb3005633    50                     push eax
0xb3005634    e8cfb13702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3005639    58                     pop eax
0xb300563a    59                     pop ecx
0xb300563b    0f85c0000000           jnz 0xb3005701
        ;; B2
        ;; t0 <- LoadLocal:10(pattern lvl:0)
0xb3005641    8b4508                 mov eax,[ebp+0x8]
0xb3005644    50                     push eax
        ;; PushArgument:11(t0)
        ;; t0 <- InstanceCall:12(get:length, t0)
0xb3005645    b9d1a228b3             mov ecx,0xb328a2d1  'ICData target:'get:length' num-checks: 0'
0xb300564a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300564f    e8c4abffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005654    83c404                 add esp,0x4
0xb3005657    50                     push eax
        ;; t1 <- Constant:13(#1)
0xb3005658    b802000000             mov eax,0x2
0xb300565d    50                     push eax
        ;; Branch if EqualityCompare:14(t0 == t1) goto (3, 6)
0xb300565e    5a                     pop edx
0xb300565f    5b                     pop ebx
0xb3005660    53                     push ebx
0xb3005661    52                     push edx
0xb3005662    813c24190040b5         cmp [esp],0xb5400019
0xb3005669    0f8425000000           jz 0xb3005694
0xb300566f    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3005677    0f8417000000           jz 0xb3005694
0xb300567d    b921a328b3             mov ecx,0xb328a321  'ICData target:'==' num-checks: 0'
0xb3005682    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005687    e84cacffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300568c    83c408                 add esp,0x8
0xb300568f    e90d000000             jmp 0xb30056a1
0xb3005694    b921a328b3             mov ecx,0xb328a321  'ICData target:'==' num-checks: 0'
0xb3005699    e8aab2ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb300569e    83c408                 add esp,0x8
0xb30056a1    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30056a6    0f8550000000           jnz 0xb30056fc
        ;; B3
        ;; t0 <- LoadLocal:17(this lvl:0)
0xb30056ac    8b450c                 mov eax,[ebp+0xc]
0xb30056af    50                     push eax
        ;; PushArgument:18(t0)
        ;; t0 <- LoadLocal:19(pattern lvl:0)
0xb30056b0    8b4508                 mov eax,[ebp+0x8]
0xb30056b3    50                     push eax
        ;; PushArgument:20(t0)
        ;; t0 <- Constant:21(#0)
0xb30056b4    b800000000             mov eax,0
0xb30056b9    50                     push eax
        ;; PushArgument:22(t0)
        ;; t0 <- InstanceCall:23(charCodeAt, t0, t0)
0xb30056ba    b979a328b3             mov ecx,0xb328a379  'ICData target:'charCodeAt' num-checks: 0'
0xb30056bf    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30056c4    e84fabffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30056c9    83c408                 add esp,0x8
0xb30056cc    50                     push eax
        ;; PushArgument:24(t0)
        ;; t0 <- InstanceCall:25(_splitWithCharCode@0x36924d72, t0, t0)
0xb30056cd    b9c9a328b3             mov ecx,0xb328a3c9  'ICData target:'_splitWithCharCode@0x36924d72' num-checks: 0'
0xb30056d2    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30056d7    e83cabffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30056dc    83c408                 add esp,0x8
0xb30056df    50                     push eax
        ;; Return:26(t0)
0xb30056e0    58                     pop eax
0xb30056e1    ba11a11ab3             mov edx,0xb31aa111  'Function 'split':.'
0xb30056e6    ff422b                 inc [edx+0x2b]
0xb30056e9    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30056f0    7c05                   jl 0xb30056f7
0xb30056f2    e8c1b1ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30056f7    89ec                   mov esp,ebp
0xb30056f9    5d                     pop ebp
0xb30056fa    c3                     ret
0xb30056fb    90                     nop
        ;; B6
        ;; goto:32 4
0xb30056fc    e900000000             jmp 0xb3005701
        ;; B5
        ;; goto:30 4
        ;; B4
        ;; t0 <- LoadLocal:33(this lvl:0)
0xb3005701    8b450c                 mov eax,[ebp+0xc]
0xb3005704    50                     push eax
        ;; PushArgument:34(t0)
        ;; t0 <- LoadLocal:35(pattern lvl:0)
0xb3005705    8b4508                 mov eax,[ebp+0x8]
0xb3005708    50                     push eax
        ;; PushArgument:36(t0)
        ;; t0 <- StaticCall:37(split t0, t0)
0xb3005709    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300570e    e815ac3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3005713    83c408                 add esp,0x8
0xb3005716    50                     push eax
        ;; Return:38(t0)
0xb3005717    58                     pop eax
0xb3005718    ba11a11ab3             mov edx,0xb31aa111  'Function 'split':.'
0xb300571d    ff422b                 inc [edx+0x2b]
0xb3005720    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3005727    7c05                   jl 0xb300572e
0xb3005729    e88ab1ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300572e    89ec                   mov esp,ebp
0xb3005730    5d                     pop ebp
0xb3005731    c3                     ret
0xb3005732    90                     nop
0xb3005733    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3005734    b970d30a08             mov ecx,0x80ad370
0xb3005739    ba00000000             mov edx,0
0xb300573e    e8e5a83702             call 0xb5380028  [stub: CallToRuntime]
0xb3005743    e91ffeffff             jmp 0xb3005567
0xb3005748    e9ebac3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300574d    e9c6ad3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 109 : 0xb30055b5 'Library:'dart:core' Class: _OneByteString@0x36924d72'
 120 : 0xb30055c0 'SubtypeTestCache'
 149 : 0xb30055dd 'true'
 178 : 0xb30055fa 'Type: class '_OneByteString@0x36924d72''
 185 : 0xb3005601 'SubtypeTestCache'
 212 : 0xb300561c 'false'
 219 : 0xb3005623 'true'
 227 : 0xb300562b 'true'
 254 : 0xb3005646 'ICData target:'get:length' num-checks: 0'
 259 : 0xb300564b 'ImmutableArray'
 310 : 0xb300567e 'ICData target:'==' num-checks: 0'
 315 : 0xb3005683 'ImmutableArray'
 333 : 0xb3005695 'ICData target:'==' num-checks: 0'
 346 : 0xb30056a2 'true'
 371 : 0xb30056bb 'ICData target:'charCodeAt' num-checks: 0'
 376 : 0xb30056c0 'ImmutableArray'
 390 : 0xb30056ce 'ICData target:'_splitWithCharCode@0x36924d72' num-checks: 0'
 395 : 0xb30056d3 'ImmutableArray'
 410 : 0xb30056e2 'Function 'split':.'
 450 : 0xb300570a 'ImmutableArray'
 465 : 0xb3005719 'Function 'split':.'
}
PC Descriptors for function 'dart:core__OneByteString@0x36924d72_split' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3005615	other        	-1		15184	-1
0xb3005645	deopt-before 	12		15193	-1
0xb3005654	ic-call      	12		15193	-1
0xb3005654	deopt-after  	12		15193	-1
0xb3005662	deopt-before 	14		15195	-1
0xb300568c	ic-call      	14		15195	-1
0xb300568c	deopt-after  	14		15195	-1
0xb300569e	other        	-1		15195	-1
0xb30056ba	deopt-before 	23		15210	-1
0xb30056c9	ic-call      	23		15210	-1
0xb30056c9	deopt-after  	23		15210	-1
0xb30056cd	deopt-before 	25		15204	-1
0xb30056dc	ic-call      	25		15204	-1
0xb30056dc	deopt-after  	25		15204	-1
0xb30056f7	other        	-1		0	-1
0xb30056fc	return       	-1		15201	-1
0xb30056fc	deopt-before 	32		0	-1
0xb3005701	deopt-before 	30		0	-1
0xb3005713	fn-call      	37		15222	-1
0xb3005713	deopt-after  	37		15222	-1
0xb300572e	other        	-1		0	-1
0xb3005733	return       	-1		15217	-1
0xb3005743	other        	-1		15172	-1
0xb3005748	patch        	-1		0	-1
0xb300574d	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__OneByteString@0x36924d72_split' {
}
Variable Descriptors for function 'dart:core__OneByteString@0x36924d72_split' {
  stack var 'this' offset 3 (valid 15073-15228)
  stack var 'pattern' offset 2 (valid 15175-15228)
}
Exception Handlers for function 'dart:core__OneByteString@0x36924d72_split' {
No exception handlers
}
Static call target functions {
  0xb3005713: dart:core__StringBase@0x36924d72_split, 0xb5400019
}
Compiling function: 'dart:core__OneByteString@0x36924d72__splitWithCharCode@0x36924d72' @ token 15154
Before Optimizations
==== dart:core__OneByteString@0x36924d72__splitWithCharCode@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(OneByteString_splitWithCharCode)
    Return:4(t0)
--> 'dart:core__OneByteString@0x36924d72__splitWithCharCode@0x36924d72' entry: 0xb3005768 time: 176 us
Code for function 'dart:core__OneByteString@0x36924d72__splitWithCharCode@0x36924d72' {
        ;; Enter frame
0xb3005768    55                     push ebp
0xb3005769    89e5                   mov ebp,esp
0xb300576b    e800000000             call 0xb3005770
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3005770    3b25bc195809           cmp esp,[0x95819bc]
0xb3005776    0f8628000000           jna 0xb30057a4
        ;; t0 <- NativeCall:3(OneByteString_splitWithCharCode)
0xb300577c    68190040b5             push 0xb5400019
0xb3005781    8d450c                 lea eax,[ebp+0xc]
0xb3005784    b9b02a4608             mov ecx,0x8462ab0
0xb3005789    ba02000001             mov edx,0x1000002
0xb300578e    e895a93702             call 0xb5380128  [stub: CallNativeCFunction]
0xb3005793    58                     pop eax
0xb3005794    50                     push eax
        ;; Return:4(t0)
0xb3005795    58                     pop eax
0xb3005796    baa9a01ab3             mov edx,0xb31aa0a9  'Function '_splitWithCharCode@0x36924d72':.'
0xb300579b    ff422b                 inc [edx+0x2b]
0xb300579e    89ec                   mov esp,ebp
0xb30057a0    5d                     pop ebp
0xb30057a1    c3                     ret
0xb30057a2    90                     nop
0xb30057a3    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30057a4    b970d30a08             mov ecx,0x80ad370
0xb30057a9    ba00000000             mov edx,0
0xb30057ae    e875a83702             call 0xb5380028  [stub: CallToRuntime]
0xb30057b3    ebc7                   jmp 0xb300577c
0xb30057b5    e97eac3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30057ba    e959ad3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 47 : 0xb3005797 'Function '_splitWithCharCode@0x36924d72':.'
}
PC Descriptors for function 'dart:core__OneByteString@0x36924d72__splitWithCharCode@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3005793	other        	-1		15164	-1
0xb30057a3	return       	-1		15164	-1
0xb30057b3	other        	-1		15154	-1
0xb30057b5	patch        	-1		0	-1
0xb30057ba	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__OneByteString@0x36924d72__splitWithCharCode@0x36924d72' {
}
Variable Descriptors for function 'dart:core__OneByteString@0x36924d72__splitWithCharCode@0x36924d72' {
  stack var 'this' offset 3 (valid 15073-15164)
  stack var 'charCode' offset 2 (valid 15156-15164)
}
Exception Handlers for function 'dart:core__OneByteString@0x36924d72__splitWithCharCode@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72_iterator' @ token 8236
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72_iterator
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 4, immutable=0)
    t0 <- StoreLocal:5(:expr_temp, t0, lvl: 0)
    t0 <- ExtractConstructorTypeArguments:6(<T>, t0)
    StoreLocal:7(:alloc8240, t0, lvl: 0)
    t0 <- LoadLocal:8(:expr_temp lvl:0)
    t0 <- ExtractConstructorInstantiator:9(t0)
    StoreLocal:10(:expr_temp, t0, lvl: 0)
    t0 <- LoadLocal:11(:alloc8240 lvl:0)
    PushArgument:12(t0)
    t0 <- LoadLocal:13(:expr_temp lvl:0)
    PushArgument:14(t0)
    t0 <- AllocateObject:15(Library:'dart:core' Class: SequenceIterator, t0, t0)
    t0 <- StoreLocal:16(:alloc8240, t0, lvl: 0)
    PushArgument:17(t0)
    t0 <- Constant:18(#3)
    PushArgument:19(t0)
    t0 <- LoadLocal:20(this lvl:0)
    PushArgument:21(t0)
    StaticCall:22(SequenceIterator. t0, t0, t0)
    t0 <- LoadLocal:23(:alloc8240 lvl:0)
    Return:24(t0)
Code for allocation stub 'Library:'dart:core' Class: SequenceIterator': {
0xb30057d8    8b0508fe5609           mov eax,[0x956fe08]
0xb30057de    8d5818                 lea ebx,[eax+0x18]
0xb30057e1    89d9                   mov ecx,ebx
0xb30057e3    837c240400             cmp [esp+0x4],0
0xb30057e8    7403                   jz 0xb30057ed
0xb30057ea    83c310                 add ebx,0x10
0xb30057ed    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb30057f3    735a                   jnc 0xb300584f
0xb30057f5    891d08fe5609           mov [0x956fe08],ebx
0xb30057fb    8b7c2408               mov edi,[esp+0x8]
0xb30057ff    3bcb                   cmp ecx,ebx
0xb3005801    7417                   jz 0xb300581a
0xb3005803    897904                 mov [ecx+0x4],edi
0xb3005806    8b542404               mov edx,[esp+0x4]
0xb300580a    895108                 mov [ecx+0x8],edx
0xb300580d    c70100020600           mov [ecx],0x60200
0xb3005813    89cf                   mov edi,ecx
0xb3005815    83c701                 add edi,0x1
0xb3005818    89cb                   mov ebx,ecx
0xb300581a    ba09cd19b3             mov edx,0xb319cd09  'Library:'dart:core' Class: SequenceIterator'
0xb300581f    c70000039a00           mov [eax],0x9a0300
0xb3005825    c74004190040b5         mov [eax+0x4],0xb5400019
0xb300582c    c74008190040b5         mov [eax+0x8],0xb5400019
0xb3005833    c7400c190040b5         mov [eax+0xc],0xb5400019
0xb300583a    c74010190040b5         mov [eax+0x10],0xb5400019
0xb3005841    c74014190040b5         mov [eax+0x14],0xb5400019
0xb3005848    897808                 mov [eax+0x8],edi
0xb300584b    83c001                 add eax,0x1
0xb300584e    c3                     ret
0xb300584f    8b442408               mov eax,[esp+0x8]
0xb3005853    8b542404               mov edx,[esp+0x4]
0xb3005857    55                     push ebp
0xb3005858    89e5                   mov ebp,esp
0xb300585a    6800000000             push 0
0xb300585f    68190040b5             push 0xb5400019
0xb3005864    6809cd19b3             push 0xb319cd09
0xb3005869    50                     push eax
0xb300586a    52                     push edx
0xb300586b    b9d0080b08             mov ecx,0x80b08d0
0xb3005870    ba03000000             mov edx,0x3
0xb3005875    e8aea73702             call 0xb5380028  [stub: CallToRuntime]
0xb300587a    58                     pop eax
0xb300587b    58                     pop eax
0xb300587c    58                     pop eax
0xb300587d    58                     pop eax
0xb300587e    89ec                   mov esp,ebp
0xb3005880    5d                     pop ebp
0xb3005881    c3                     ret
}
--> 'dart:core__GrowableObjectArray@0x36924d72_iterator' entry: 0xb3005898 time: 1391 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72_iterator' {
        ;; Enter frame
0xb3005898    55                     push ebp
0xb3005899    89e5                   mov ebp,esp
0xb300589b    e800000000             call 0xb30058a0
0xb30058a0    83ec08                 sub esp,0x8
        ;; Initialize spill slots
0xb30058a3    b8190040b5             mov eax,0xb5400019
0xb30058a8    8945f8                 mov [ebp-0x8],eax
0xb30058ab    8945f4                 mov [ebp-0xc],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30058ae    3b25bc195809           cmp esp,[0x95819bc]
0xb30058b4    0f86ac000000           jna 0xb3005966
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb30058ba    8b4508                 mov eax,[ebp+0x8]
0xb30058bd    50                     push eax
        ;; t0 <- LoadField:4(t0, 4, immutable=0)
0xb30058be    58                     pop eax
0xb30058bf    8b4803                 mov ecx,[eax+0x3]
0xb30058c2    51                     push ecx
        ;; t0 <- StoreLocal:5(:expr_temp, t0, lvl: 0)
0xb30058c3    58                     pop eax
0xb30058c4    8945f8                 mov [ebp-0x8],eax
0xb30058c7    50                     push eax
        ;; t0 <- ExtractConstructorTypeArguments:6(<T>, t0)
0xb30058c8    58                     pop eax
0xb30058c9    3d190040b5             cmp eax, 0xb5400019
0xb30058ce    7414                   jz 0xb30058e4
0xb30058d0    0fb74801               movzx_w ecx,[eax+0x1]
0xb30058d4    83f905                 cmp ecx,0x5
0xb30058d7    7506                   jnz 0xb30058df
0xb30058d9    83780302               cmp [eax+0x3],0x2
0xb30058dd    7405                   jz 0xb30058e4
0xb30058df    b8118b19b3             mov eax,0xb3198b11  'instance of  Class: TypeArguments'
0xb30058e4    50                     push eax
        ;; StoreLocal:7(:alloc8240, t0, lvl: 0)
0xb30058e5    58                     pop eax
0xb30058e6    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- LoadLocal:8(:expr_temp lvl:0)
0xb30058e9    8b45f8                 mov eax,[ebp-0x8]
0xb30058ec    50                     push eax
        ;; t0 <- ExtractConstructorInstantiator:9(t0)
0xb30058ed    58                     pop eax
0xb30058ee    3d190040b5             cmp eax, 0xb5400019
0xb30058f3    750a                   jnz 0xb30058ff
0xb30058f5    b800000000             mov eax,0
0xb30058fa    e914000000             jmp 0xb3005913
0xb30058ff    0fb74801               movzx_w ecx,[eax+0x1]
0xb3005903    83f905                 cmp ecx,0x5
0xb3005906    750b                   jnz 0xb3005913
0xb3005908    83780302               cmp [eax+0x3],0x2
0xb300590c    7505                   jnz 0xb3005913
0xb300590e    b800000000             mov eax,0
0xb3005913    50                     push eax
        ;; StoreLocal:10(:expr_temp, t0, lvl: 0)
0xb3005914    58                     pop eax
0xb3005915    8945f8                 mov [ebp-0x8],eax
        ;; t0 <- LoadLocal:11(:alloc8240 lvl:0)
0xb3005918    8b45f4                 mov eax,[ebp-0xc]
0xb300591b    50                     push eax
        ;; PushArgument:12(t0)
        ;; t0 <- LoadLocal:13(:expr_temp lvl:0)
0xb300591c    8b45f8                 mov eax,[ebp-0x8]
0xb300591f    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- AllocateObject:15(Library:'dart:core' Class: SequenceIterator, t0, t0)
0xb3005920    e8b3feffff             call 0xb30057d8 [ stub ]
0xb3005925    83c408                 add esp,0x8
0xb3005928    50                     push eax
        ;; t0 <- StoreLocal:16(:alloc8240, t0, lvl: 0)
0xb3005929    58                     pop eax
0xb300592a    8945f4                 mov [ebp-0xc],eax
0xb300592d    50                     push eax
        ;; PushArgument:17(t0)
        ;; t0 <- Constant:18(#3)
0xb300592e    b806000000             mov eax,0x6
0xb3005933    50                     push eax
        ;; PushArgument:19(t0)
        ;; t0 <- LoadLocal:20(this lvl:0)
0xb3005934    8b4508                 mov eax,[ebp+0x8]
0xb3005937    50                     push eax
        ;; PushArgument:21(t0)
        ;; StaticCall:22(SequenceIterator. t0, t0, t0)
0xb3005938    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb300593d    e8e6a93702             call 0xb5380328  [stub: CallStaticFunction]
0xb3005942    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:23(:alloc8240 lvl:0)
0xb3005945    8b45f4                 mov eax,[ebp-0xc]
0xb3005948    50                     push eax
        ;; Return:24(t0)
0xb3005949    58                     pop eax
0xb300594a    ba49e91ab3             mov edx,0xb31ae949  'Function 'iterator':.'
0xb300594f    ff422b                 inc [edx+0x2b]
0xb3005952    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3005959    7c05                   jl 0xb3005960
0xb300595b    e858afffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3005960    89ec                   mov esp,ebp
0xb3005962    5d                     pop ebp
0xb3005963    c3                     ret
0xb3005964    90                     nop
0xb3005965    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3005966    b970d30a08             mov ecx,0x80ad370
0xb300596b    ba00000000             mov edx,0
0xb3005970    e8b3a63702             call 0xb5380028  [stub: CallToRuntime]
0xb3005975    e940ffffff             jmp 0xb30058ba
0xb300597a    e9b9aa3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300597f    e994ab3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 72 : 0xb30058e0 'TypeArguments: [TypeParameter: name T; index: 0; class: _GrowableObjectArray@0x36924d72]'
 161 : 0xb3005939 'ImmutableArray'
 179 : 0xb300594b 'Function 'iterator':.'
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_iterator' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3005925	other        	-1		8240	-1
0xb3005942	fn-call      	22		8240	-1
0xb3005942	deopt-after  	22		8240	-1
0xb3005960	other        	-1		0	-1
0xb3005965	return       	-1		8239	-1
0xb3005975	other        	-1		8236	-1
0xb300597a	patch        	-1		0	-1
0xb300597f	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72_iterator' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_iterator' {
  stack var 'this' offset 2 (valid 6682-8252)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72_iterator' {
No exception handlers
}
Static call target functions {
  0xb3005942: dart:core_SequenceIterator_SequenceIterator., 0xb5400019
}
Compiling function: 'dart:core_SequenceIterator_SequenceIterator.' @ token 15039
Before Optimizations
==== dart:core_SequenceIterator_SequenceIterator.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(:phase lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#1)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(&, t0, t0)
    t1 <- Constant:8(#0)
    Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:12(this lvl:0)
    t1 <- LoadLocal:13(_sequence@0x36924d72 lvl:0)
    StoreInstanceField:14(_sequence@0x36924d72, t0, t1)
    t0 <- LoadLocal:15(this lvl:0)
    t1 <- Constant:16(#0)
    StoreInstanceField:17(_position@0x36924d72, t0, t1)
    t0 <- LoadLocal:18(this lvl:0)
    PushArgument:19(t0)
    t0 <- Constant:20(#3)
    PushArgument:21(t0)
    StaticCall:22(Object. t0, t0)
    goto:26 4
B3[target]
    goto:27 4
B4[join] pred(B2, B3)
    t0 <- Constant:28(#null)
    Return:29(t0)
--> 'dart:core_SequenceIterator_SequenceIterator.' entry: 0xb3005998 time: 204 us
Code for function 'dart:core_SequenceIterator_SequenceIterator.' {
        ;; Enter frame
0xb3005998    55                     push ebp
0xb3005999    89e5                   mov ebp,esp
0xb300599b    e800000000             call 0xb30059a0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30059a0    3b25bc195809           cmp esp,[0x95819bc]
0xb30059a6    0f86a6000000           jna 0xb3005a52
        ;; t0 <- LoadLocal:3(:phase lvl:0)
0xb30059ac    8b450c                 mov eax,[ebp+0xc]
0xb30059af    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#1)
0xb30059b0    b802000000             mov eax,0x2
0xb30059b5    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(&, t0, t0)
0xb30059b6    b9f1ab28b3             mov ecx,0xb328abf1  'ICData target:'&' num-checks: 0'
0xb30059bb    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30059c0    e813a9ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30059c5    83c408                 add esp,0x8
0xb30059c8    50                     push eax
        ;; t1 <- Constant:8(#0)
0xb30059c9    b800000000             mov eax,0
0xb30059ce    50                     push eax
        ;; Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
0xb30059cf    58                     pop eax
0xb30059d0    59                     pop ecx
0xb30059d1    51                     push ecx
0xb30059d2    50                     push eax
0xb30059d3    e830ae3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb30059d8    58                     pop eax
0xb30059d9    59                     pop ecx
0xb30059da    0f844f000000           jz 0xb3005a2f
        ;; B2
        ;; t0 <- LoadLocal:12(this lvl:0)
0xb30059e0    8b4510                 mov eax,[ebp+0x10]
0xb30059e3    50                     push eax
        ;; t1 <- LoadLocal:13(_sequence@0x36924d72 lvl:0)
0xb30059e4    8b4508                 mov eax,[ebp+0x8]
0xb30059e7    50                     push eax
        ;; StoreInstanceField:14(_sequence@0x36924d72, t0, t1)
0xb30059e8    58                     pop eax
0xb30059e9    59                     pop ecx
0xb30059ea    89410b                 mov [ecx+0xb],eax
0xb30059ed    83e005                 and eax,0x5
0xb30059f0    d1e8                   shr eax, 1
0xb30059f2    13c1                   adc eax,ecx
0xb30059f4    83e007                 and eax,0x7
0xb30059f7    83f804                 cmp eax,0x4
0xb30059fa    7508                   jnz 0xb3005a04
0xb30059fc    8d410b                 lea eax,[ecx+0xb]
0xb30059ff    e864a7ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:15(this lvl:0)
0xb3005a04    8b4510                 mov eax,[ebp+0x10]
0xb3005a07    50                     push eax
        ;; t1 <- Constant:16(#0)
0xb3005a08    b800000000             mov eax,0
0xb3005a0d    50                     push eax
        ;; StoreInstanceField:17(_position@0x36924d72, t0, t1)
0xb3005a0e    58                     pop eax
0xb3005a0f    59                     pop ecx
0xb3005a10    89410f                 mov [ecx+0xf],eax
        ;; t0 <- LoadLocal:18(this lvl:0)
0xb3005a13    8b4510                 mov eax,[ebp+0x10]
0xb3005a16    50                     push eax
        ;; PushArgument:19(t0)
        ;; t0 <- Constant:20(#3)
0xb3005a17    b806000000             mov eax,0x6
0xb3005a1c    50                     push eax
        ;; PushArgument:21(t0)
        ;; StaticCall:22(Object. t0, t0)
0xb3005a1d    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005a22    e801a93702             call 0xb5380328  [stub: CallStaticFunction]
0xb3005a27    83c408                 add esp,0x8
        ;; goto:26 4
0xb3005a2a    e900000000             jmp 0xb3005a2f
        ;; B3
        ;; goto:27 4
        ;; B4
        ;; t0 <- Constant:28(#null)
0xb3005a2f    b8190040b5             mov eax,0xb5400019
0xb3005a34    50                     push eax
        ;; Return:29(t0)
0xb3005a35    58                     pop eax
0xb3005a36    ba49bd11b3             mov edx,0xb311bd49  'Function 'SequenceIterator.': constructor.'
0xb3005a3b    ff422b                 inc [edx+0x2b]
0xb3005a3e    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3005a45    7c05                   jl 0xb3005a4c
0xb3005a47    e86caeffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3005a4c    89ec                   mov esp,ebp
0xb3005a4e    5d                     pop ebp
0xb3005a4f    c3                     ret
0xb3005a50    90                     nop
0xb3005a51    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3005a52    b970d30a08             mov ecx,0x80ad370
0xb3005a57    ba00000000             mov edx,0
0xb3005a5c    e8c7a53702             call 0xb5380028  [stub: CallToRuntime]
0xb3005a61    e946ffffff             jmp 0xb30059ac
0xb3005a66    e9cda93702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3005a6b    e9a8aa3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 31 : 0xb30059b7 'ICData target:'&' num-checks: 0'
 36 : 0xb30059bc 'ImmutableArray'
 134 : 0xb3005a1e 'ImmutableArray'
 159 : 0xb3005a37 'Function 'SequenceIterator.': constructor.'
}
PC Descriptors for function 'dart:core_SequenceIterator_SequenceIterator.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30059b6	deopt-before 	7		15051	-1
0xb30059c5	ic-call      	7		15051	-1
0xb30059c5	deopt-after  	7		15051	-1
0xb3005a27	fn-call      	22		15051	-1
0xb3005a27	deopt-after  	22		15051	-1
0xb3005a2a	deopt-before 	26		0	-1
0xb3005a2f	deopt-before 	27		0	-1
0xb3005a4c	other        	-1		0	-1
0xb3005a51	return       	-1		15052	-1
0xb3005a61	other        	-1		15039	-1
0xb3005a66	patch        	-1		0	-1
0xb3005a6b	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_SequenceIterator_SequenceIterator.' {
}
Variable Descriptors for function 'dart:core_SequenceIterator_SequenceIterator.' {
  stack var 'this' offset 4 (valid 15032-15052)
  stack var '_sequence@0x36924d72' offset 2 (valid 15042-15052)
}
Exception Handlers for function 'dart:core_SequenceIterator_SequenceIterator.' {
No exception handlers
}
Static call target functions {
  0xb3005a27: dart:core_Object_Object., 0xb5400019
}
PatchStaticCall: patching from 0xb3005942 to 'dart:core_SequenceIterator_SequenceIterator.' 0xb3005998
PatchStaticCall: patching from 0xb3005a27 to 'dart:core_Object_Object.' 0xb30027a8
Compiling function: 'dart:core_SequenceIterator_get_hasNext' @ token 15056
Before Optimizations
==== dart:core_SequenceIterator_get_hasNext
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:_position@0x36924d72, t0)
    t1 <- LoadLocal:6(this lvl:0)
    PushArgument:7(t1)
    t1 <- InstanceCall:8(get:_sequence@0x36924d72, t1)
    PushArgument:9(t1)
    t1 <- InstanceCall:10(get:length, t1)
    t0 <- RelationalOp:11(<, t0, t1)
    Return:12(t0)
--> 'dart:core_SequenceIterator_get_hasNext' entry: 0xb3005a88 time: 113 us
Code for function 'dart:core_SequenceIterator_get_hasNext' {
        ;; Enter frame
0xb3005a88    55                     push ebp
0xb3005a89    89e5                   mov ebp,esp
0xb3005a8b    e800000000             call 0xb3005a90
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3005a90    3b25bc195809           cmp esp,[0x95819bc]
0xb3005a96    0f8675000000           jna 0xb3005b11
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb3005a9c    8b4508                 mov eax,[ebp+0x8]
0xb3005a9f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:_position@0x36924d72, t0)
0xb3005aa0    b959ae28b3             mov ecx,0xb328ae59  'ICData target:'get:_position@0x36924d72' num-checks: 0'
0xb3005aa5    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3005aaa    e869a7ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005aaf    83c404                 add esp,0x4
0xb3005ab2    50                     push eax
        ;; t1 <- LoadLocal:6(this lvl:0)
0xb3005ab3    8b4508                 mov eax,[ebp+0x8]
0xb3005ab6    50                     push eax
        ;; PushArgument:7(t1)
        ;; t1 <- InstanceCall:8(get:_sequence@0x36924d72, t1)
0xb3005ab7    b9a9ae28b3             mov ecx,0xb328aea9  'ICData target:'get:_sequence@0x36924d72' num-checks: 0'
0xb3005abc    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3005ac1    e852a7ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005ac6    83c404                 add esp,0x4
0xb3005ac9    50                     push eax
        ;; PushArgument:9(t1)
        ;; t1 <- InstanceCall:10(get:length, t1)
0xb3005aca    b9f9ae28b3             mov ecx,0xb328aef9  'ICData target:'get:length' num-checks: 0'
0xb3005acf    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3005ad4    e83fa7ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005ad9    83c404                 add esp,0x4
0xb3005adc    50                     push eax
        ;; t0 <- RelationalOp:11(<, t0, t1)
0xb3005add    59                     pop ecx
0xb3005ade    58                     pop eax
0xb3005adf    50                     push eax
0xb3005ae0    51                     push ecx
0xb3005ae1    b949af28b3             mov ecx,0xb328af49  'ICData target:'<' num-checks: 0'
0xb3005ae6    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005aeb    e8e8a7ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3005af0    83c408                 add esp,0x8
0xb3005af3    50                     push eax
        ;; Return:12(t0)
0xb3005af4    58                     pop eax
0xb3005af5    bab1bd11b3             mov edx,0xb311bdb1  'Function 'get:hasNext':.'
0xb3005afa    ff422b                 inc [edx+0x2b]
0xb3005afd    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3005b04    7c05                   jl 0xb3005b0b
0xb3005b06    e8adadffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3005b0b    89ec                   mov esp,ebp
0xb3005b0d    5d                     pop ebp
0xb3005b0e    c3                     ret
0xb3005b0f    90                     nop
0xb3005b10    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3005b11    b970d30a08             mov ecx,0x80ad370
0xb3005b16    ba00000000             mov edx,0
0xb3005b1b    e808a53702             call 0xb5380028  [stub: CallToRuntime]
0xb3005b20    e977ffffff             jmp 0xb3005a9c
0xb3005b25    e90ea93702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3005b2a    e9e9a93702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 25 : 0xb3005aa1 'ICData target:'get:_position@0x36924d72' num-checks: 0'
 30 : 0xb3005aa6 'ImmutableArray'
 48 : 0xb3005ab8 'ICData target:'get:_sequence@0x36924d72' num-checks: 0'
 53 : 0xb3005abd 'ImmutableArray'
 67 : 0xb3005acb 'ICData target:'get:length' num-checks: 0'
 72 : 0xb3005ad0 'ImmutableArray'
 90 : 0xb3005ae2 'ICData target:'<' num-checks: 0'
 95 : 0xb3005ae7 'ImmutableArray'
 110 : 0xb3005af6 'Function 'get:hasNext':.'
}
PC Descriptors for function 'dart:core_SequenceIterator_get_hasNext' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3005aa0	deopt-before 	5		15057	-1
0xb3005aaf	ic-call      	5		15057	-1
0xb3005aaf	deopt-after  	5		15057	-1
0xb3005ab7	deopt-before 	8		15060	-1
0xb3005ac6	ic-call      	8		15060	-1
0xb3005ac6	deopt-after  	8		15060	-1
0xb3005aca	deopt-before 	10		15063	-1
0xb3005ad9	ic-call      	10		15063	-1
0xb3005ad9	deopt-after  	10		15063	-1
0xb3005ae1	deopt-before 	11		15059	-1
0xb3005af0	ic-call      	11		15059	-1
0xb3005af0	deopt-after  	11		15059	-1
0xb3005b0b	other        	-1		0	-1
0xb3005b10	return       	-1		15057	-1
0xb3005b20	other        	-1		15056	-1
0xb3005b25	patch        	-1		0	-1
0xb3005b2a	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_SequenceIterator_get_hasNext' {
}
Variable Descriptors for function 'dart:core_SequenceIterator_get_hasNext' {
  stack var 'this' offset 2 (valid 15032-15065)
}
Exception Handlers for function 'dart:core_SequenceIterator_get_hasNext' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core_SequenceIterator_get__position@0x36924d72' @ token 15034
Before Optimizations
==== dart:core_SequenceIterator_get__position@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 16, immutable=0)
    Return:5(t0)
--> 'dart:core_SequenceIterator_get__position@0x36924d72' entry: 0xb3005b48 time: 45 us
Code for function 'dart:core_SequenceIterator_get__position@0x36924d72' {
0xb3005b48    8b442404               mov eax,[esp+0x4]
0xb3005b4c    8b400f                 mov eax,[eax+0xf]
0xb3005b4f    c3                     ret
0xb3005b50    cc                     int3
0xb3005b51    e9e2a83702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core_SequenceIterator_get__position@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core_SequenceIterator_get__position@0x36924d72' {
}
Variable Descriptors for function 'dart:core_SequenceIterator_get__position@0x36924d72' {
  stack var 'this' offset 2 (valid 15032-15034)
}
Exception Handlers for function 'dart:core_SequenceIterator_get__position@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core_SequenceIterator_get__sequence@0x36924d72' @ token 15030
Before Optimizations
==== dart:core_SequenceIterator_get__sequence@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 12, immutable=0)
    Return:5(t0)
--> 'dart:core_SequenceIterator_get__sequence@0x36924d72' entry: 0xb3005b68 time: 45 us
Code for function 'dart:core_SequenceIterator_get__sequence@0x36924d72' {
0xb3005b68    8b442404               mov eax,[esp+0x4]
0xb3005b6c    8b400b                 mov eax,[eax+0xb]
0xb3005b6f    c3                     ret
0xb3005b70    cc                     int3
0xb3005b71    e9c2a83702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core_SequenceIterator_get__sequence@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core_SequenceIterator_get__sequence@0x36924d72' {
}
Variable Descriptors for function 'dart:core_SequenceIterator_get__sequence@0x36924d72' {
  stack var 'this' offset 2 (valid 15032-15030)
}
Exception Handlers for function 'dart:core_SequenceIterator_get__sequence@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72_get_length' @ token 7395
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72_get_length
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(GrowableObjectArray_getLength)
    Return:4(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72_get_length' entry: 0xb3005b88 time: 184 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72_get_length' {
0xb3005b88    8b442404               mov eax,[esp+0x4]
0xb3005b8c    8b4007                 mov eax,[eax+0x7]
0xb3005b8f    c3                     ret
0xb3005b90    cc                     int3
0xb3005b91    e9a2a83702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_get_length' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72_get_length' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_get_length' {
  stack var 'this' offset 2 (valid 6682-7400)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72_get_length' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core_SequenceIterator_next' @ token 15069
Before Optimizations
==== dart:core_SequenceIterator_next
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:hasNext, t0)
    t1 <- Constant:6(#true)
    Branch if StrictCompare:7(===, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:9(this lvl:0)
    PushArgument:10(t0)
    t0 <- InstanceCall:11(get:_sequence@0x36924d72, t0)
    PushArgument:12(t0)
    t0 <- LoadLocal:13(this lvl:0)
    PushArgument:14(t0)
    t0 <- LoadLocal:15(this lvl:0)
    PushArgument:16(t0)
    t0 <- InstanceCall:17(get:_position@0x36924d72, t0)
    t0 <- StoreLocal:18(:expr_temp, t0, lvl: 0)
    PushArgument:19(t0)
    t0 <- Constant:20(#1)
    PushArgument:21(t0)
    t0 <- InstanceCall:22(+, t0, t0)
    PushArgument:23(t0)
    InstanceCall:24(set:_position@0x36924d72, t0, t0)
    t0 <- LoadLocal:25(:expr_temp lvl:0)
    PushArgument:26(t0)
    t0 <- InstanceCall:27([], t0, t0)
    Return:28(t0)
B3[target]
    t0 <- AllocateObject:31(Library:'dart:core' Class: StateError)
    t0 <- StoreLocal:32(:alloc15087, t0, lvl: 0)
    PushArgument:33(t0)
    t0 <- Constant:34(#3)
    PushArgument:35(t0)
    t0 <- Constant:36(#No more elements)
    PushArgument:37(t0)
    StaticCall:38(StateError. t0, t0, t0)
    t0 <- LoadLocal:39(:alloc15087 lvl:0)
    PushArgument:40(t0)
    Throw:41()
Code for allocation stub 'Library:'dart:core' Class: StateError': {
0xb3005ba8    8b0508fe5609           mov eax,[0x956fe08]
0xb3005bae    8d5810                 lea ebx,[eax+0x10]
0xb3005bb1    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb3005bb7    732a                   jnc 0xb3005be3
0xb3005bb9    891d08fe5609           mov [0x956fe08],ebx
0xb3005bbf    bac1ea19b3             mov edx,0xb319eac1  'Library:'dart:core' Class: StateError'
0xb3005bc4    c7000002a500           mov [eax],0xa50200
0xb3005bca    c74004190040b5         mov [eax+0x4],0xb5400019
0xb3005bd1    c74008190040b5         mov [eax+0x8],0xb5400019
0xb3005bd8    c7400c190040b5         mov [eax+0xc],0xb5400019
0xb3005bdf    83c001                 add eax,0x1
0xb3005be2    c3                     ret
0xb3005be3    55                     push ebp
0xb3005be4    89e5                   mov ebp,esp
0xb3005be6    6800000000             push 0
0xb3005beb    68190040b5             push 0xb5400019
0xb3005bf0    68c1ea19b3             push 0xb319eac1
0xb3005bf5    68190040b5             push 0xb5400019
0xb3005bfa    6800000000             push 0
0xb3005bff    b9d0080b08             mov ecx,0x80b08d0
0xb3005c04    ba03000000             mov edx,0x3
0xb3005c09    e81aa43702             call 0xb5380028  [stub: CallToRuntime]
0xb3005c0e    58                     pop eax
0xb3005c0f    58                     pop eax
0xb3005c10    58                     pop eax
0xb3005c11    58                     pop eax
0xb3005c12    89ec                   mov esp,ebp
0xb3005c14    5d                     pop ebp
0xb3005c15    c3                     ret
}
--> 'dart:core_SequenceIterator_next' entry: 0xb3005c28 time: 936 us
Code for function 'dart:core_SequenceIterator_next' {
        ;; Enter frame
0xb3005c28    55                     push ebp
0xb3005c29    89e5                   mov ebp,esp
0xb3005c2b    e800000000             call 0xb3005c30
0xb3005c30    83ec08                 sub esp,0x8
        ;; Initialize spill slots
0xb3005c33    b8190040b5             mov eax,0xb5400019
0xb3005c38    8945f8                 mov [ebp-0x8],eax
0xb3005c3b    8945f4                 mov [ebp-0xc],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3005c3e    3b25bc195809           cmp esp,[0x95819bc]
0xb3005c44    0f86fc000000           jna 0xb3005d46
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb3005c4a    8b4508                 mov eax,[ebp+0x8]
0xb3005c4d    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:hasNext, t0)
0xb3005c4e    b9f1b428b3             mov ecx,0xb328b4f1  'ICData target:'get:hasNext' num-checks: 0'
0xb3005c53    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3005c58    e8bba5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005c5d    83c404                 add esp,0x4
0xb3005c60    50                     push eax
        ;; t1 <- Constant:6(#true)
0xb3005c61    b8391030b3             mov eax,0xb3301039  'true'
0xb3005c66    50                     push eax
        ;; Branch if StrictCompare:7(===, t0, t1) goto (2, 3)
0xb3005c67    58                     pop eax
0xb3005c68    59                     pop ecx
0xb3005c69    51                     push ecx
0xb3005c6a    50                     push eax
0xb3005c6b    e898ab3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3005c70    58                     pop eax
0xb3005c71    59                     pop ecx
0xb3005c72    0f8595000000           jnz 0xb3005d0d
        ;; B2
        ;; t0 <- LoadLocal:9(this lvl:0)
0xb3005c78    8b4508                 mov eax,[ebp+0x8]
0xb3005c7b    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- InstanceCall:11(get:_sequence@0x36924d72, t0)
0xb3005c7c    b941b528b3             mov ecx,0xb328b541  'ICData target:'get:_sequence@0x36924d72' num-checks: 0'
0xb3005c81    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3005c86    e88da5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005c8b    83c404                 add esp,0x4
0xb3005c8e    50                     push eax
        ;; PushArgument:12(t0)
        ;; t0 <- LoadLocal:13(this lvl:0)
0xb3005c8f    8b4508                 mov eax,[ebp+0x8]
0xb3005c92    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- LoadLocal:15(this lvl:0)
0xb3005c93    8b4508                 mov eax,[ebp+0x8]
0xb3005c96    50                     push eax
        ;; PushArgument:16(t0)
        ;; t0 <- InstanceCall:17(get:_position@0x36924d72, t0)
0xb3005c97    b991b528b3             mov ecx,0xb328b591  'ICData target:'get:_position@0x36924d72' num-checks: 0'
0xb3005c9c    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3005ca1    e872a5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005ca6    83c404                 add esp,0x4
0xb3005ca9    50                     push eax
        ;; t0 <- StoreLocal:18(:expr_temp, t0, lvl: 0)
0xb3005caa    58                     pop eax
0xb3005cab    8945f8                 mov [ebp-0x8],eax
0xb3005cae    50                     push eax
        ;; PushArgument:19(t0)
        ;; t0 <- Constant:20(#1)
0xb3005caf    b802000000             mov eax,0x2
0xb3005cb4    50                     push eax
        ;; PushArgument:21(t0)
        ;; t0 <- InstanceCall:22(+, t0, t0)
0xb3005cb5    b9e1b528b3             mov ecx,0xb328b5e1  'ICData target:'+' num-checks: 0'
0xb3005cba    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005cbf    e814a6ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3005cc4    83c408                 add esp,0x8
0xb3005cc7    50                     push eax
        ;; PushArgument:23(t0)
        ;; InstanceCall:24(set:_position@0x36924d72, t0, t0)
0xb3005cc8    b939b628b3             mov ecx,0xb328b639  'ICData target:'set:_position@0x36924d72' num-checks: 0'
0xb3005ccd    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005cd2    e801a6ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3005cd7    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:25(:expr_temp lvl:0)
0xb3005cda    8b45f8                 mov eax,[ebp-0x8]
0xb3005cdd    50                     push eax
        ;; PushArgument:26(t0)
        ;; t0 <- InstanceCall:27([], t0, t0)
0xb3005cde    b991b628b3             mov ecx,0xb328b691  'ICData target:'[]' num-checks: 0'
0xb3005ce3    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005ce8    e82ba5ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005ced    83c408                 add esp,0x8
0xb3005cf0    50                     push eax
        ;; Return:28(t0)
0xb3005cf1    58                     pop eax
0xb3005cf2    ba09be11b3             mov edx,0xb311be09  'Function 'next':.'
0xb3005cf7    ff422b                 inc [edx+0x2b]
0xb3005cfa    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3005d01    7c05                   jl 0xb3005d08
0xb3005d03    e8b0abffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3005d08    89ec                   mov esp,ebp
0xb3005d0a    5d                     pop ebp
0xb3005d0b    c3                     ret
0xb3005d0c    90                     nop
        ;; B3
        ;; t0 <- AllocateObject:31(Library:'dart:core' Class: StateError)
0xb3005d0d    e896feffff             call 0xb3005ba8 [ stub ]
0xb3005d12    50                     push eax
        ;; t0 <- StoreLocal:32(:alloc15087, t0, lvl: 0)
0xb3005d13    58                     pop eax
0xb3005d14    8945f4                 mov [ebp-0xc],eax
0xb3005d17    50                     push eax
        ;; PushArgument:33(t0)
        ;; t0 <- Constant:34(#3)
0xb3005d18    b806000000             mov eax,0x6
0xb3005d1d    50                     push eax
        ;; PushArgument:35(t0)
        ;; t0 <- Constant:36(#No more elements)
0xb3005d1e    b8595d30b3             mov eax,0xb3305d59  'No more elements'
0xb3005d23    50                     push eax
        ;; PushArgument:37(t0)
        ;; StaticCall:38(StateError. t0, t0, t0)
0xb3005d24    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3005d29    e8faa53702             call 0xb5380328  [stub: CallStaticFunction]
0xb3005d2e    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:39(:alloc15087 lvl:0)
0xb3005d31    8b45f4                 mov eax,[ebp-0xc]
0xb3005d34    50                     push eax
        ;; PushArgument:40(t0)
        ;; Throw:41()
0xb3005d35    b9a0d70a08             mov ecx,0x80ad7a0
0xb3005d3a    ba01000000             mov edx,0x1
0xb3005d3f    e8e4a23702             call 0xb5380028  [stub: CallToRuntime]
0xb3005d44    cc                     int3
0xb3005d45    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3005d46    b970d30a08             mov ecx,0x80ad370
0xb3005d4b    ba00000000             mov edx,0
0xb3005d50    e8d3a23702             call 0xb5380028  [stub: CallToRuntime]
0xb3005d55    e9f0feffff             jmp 0xb3005c4a
0xb3005d5a    e9d9a63702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3005d5f    e9b4a73702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 39 : 0xb3005c4f 'ICData target:'get:hasNext' num-checks: 0'
 44 : 0xb3005c54 'ImmutableArray'
 58 : 0xb3005c62 'true'
 85 : 0xb3005c7d 'ICData target:'get:_sequence@0x36924d72' num-checks: 0'
 90 : 0xb3005c82 'ImmutableArray'
 112 : 0xb3005c98 'ICData target:'get:_position@0x36924d72' num-checks: 0'
 117 : 0xb3005c9d 'ImmutableArray'
 142 : 0xb3005cb6 'ICData target:'+' num-checks: 0'
 147 : 0xb3005cbb 'ImmutableArray'
 161 : 0xb3005cc9 'ICData target:'set:_position@0x36924d72' num-checks: 0'
 166 : 0xb3005cce 'ImmutableArray'
 183 : 0xb3005cdf 'ICData target:'[]' num-checks: 0'
 188 : 0xb3005ce4 'ImmutableArray'
 203 : 0xb3005cf3 'Function 'next':.'
 247 : 0xb3005d1f 'No more elements'
 253 : 0xb3005d25 'ImmutableArray'
}
PC Descriptors for function 'dart:core_SequenceIterator_next' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3005c4e	deopt-before 	5		15074	-1
0xb3005c5d	ic-call      	5		15074	-1
0xb3005c5d	deopt-after  	5		15074	-1
0xb3005c7c	deopt-before 	11		15078	-1
0xb3005c8b	ic-call      	11		15078	-1
0xb3005c8b	deopt-after  	11		15078	-1
0xb3005c97	deopt-before 	17		15081	-1
0xb3005ca6	ic-call      	17		15081	-1
0xb3005ca6	deopt-after  	17		15081	-1
0xb3005cb5	deopt-before 	22		15081	-1
0xb3005cc4	ic-call      	22		15081	-1
0xb3005cc4	deopt-after  	22		15081	-1
0xb3005cc8	deopt-before 	24		15081	-1
0xb3005cd7	ic-call      	24		15081	-1
0xb3005cd7	deopt-after  	24		15081	-1
0xb3005cde	deopt-before 	27		15080	-1
0xb3005ced	ic-call      	27		15080	-1
0xb3005ced	deopt-after  	27		15080	-1
0xb3005d08	other        	-1		0	-1
0xb3005d0d	return       	-1		15077	-1
0xb3005d12	other        	-1		15087	-1
0xb3005d2e	fn-call      	38		15087	-1
0xb3005d2e	deopt-after  	38		15087	-1
0xb3005d44	other        	-1		15086	-1
0xb3005d55	other        	-1		15069	-1
0xb3005d5a	patch        	-1		0	-1
0xb3005d5f	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_SequenceIterator_next' {
}
Variable Descriptors for function 'dart:core_SequenceIterator_next' {
  stack var 'this' offset 2 (valid 15032-15096)
}
Exception Handlers for function 'dart:core_SequenceIterator_next' {
No exception handlers
}
Static call target functions {
  0xb3005d2e: dart:core_StateError_StateError., 0xb5400019
}
Compiling function: 'dart:core_SequenceIterator_set__position@0x36924d72' @ token 15034
Before Optimizations
==== dart:core_SequenceIterator_set__position@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t1 <- LoadLocal:4(value lvl:0)
    StoreInstanceField:5(_position@0x36924d72, t0, t1)
    t0 <- Constant:6(#null)
    Return:7(t0)
--> 'dart:core_SequenceIterator_set__position@0x36924d72' entry: 0xb3005d78 time: 64 us
Code for function 'dart:core_SequenceIterator_set__position@0x36924d72' {
0xb3005d78    8b442408               mov eax,[esp+0x8]
0xb3005d7c    8b5c2404               mov ebx,[esp+0x4]
0xb3005d80    89580f                 mov [eax+0xf],ebx
0xb3005d83    83e305                 and ebx,0x5
0xb3005d86    d1eb                   shr ebx, 1
0xb3005d88    13d8                   adc ebx,eax
0xb3005d8a    83e307                 and ebx,0x7
0xb3005d8d    83fb04                 cmp ebx,0x4
0xb3005d90    750a                   jnz 0xb3005d9c
0xb3005d92    50                     push eax
0xb3005d93    8d400f                 lea eax,[eax+0xf]
0xb3005d96    e8cda3ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
0xb3005d9b    58                     pop eax
0xb3005d9c    b8190040b5             mov eax,0xb5400019
0xb3005da1    c3                     ret
0xb3005da2    cc                     int3
0xb3005da3    e990a63702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core_SequenceIterator_set__position@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core_SequenceIterator_set__position@0x36924d72' {
}
Variable Descriptors for function 'dart:core_SequenceIterator_set__position@0x36924d72' {
  stack var 'this' offset 3 (valid 15032-15034)
  stack var 'value' offset 2 (valid 15034-15034)
}
Exception Handlers for function 'dart:core_SequenceIterator_set__position@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72_[]' @ token 7511
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72_[]
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(GrowableObjectArray_getIndexed)
    Return:4(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72_[]' entry: 0xb3005db8 time: 207 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72_[]' {
0xb3005db8    8b5c2404               mov ebx,[esp+0x4]
0xb3005dbc    8b442408               mov eax,[esp+0x8]
0xb3005dc0    f6c301                 test_b ebx,0x1
0xb3005dc3    750d                   jnz 0xb3005dd2
0xb3005dc5    3b5807                 cmp ebx,[eax+0x7]
0xb3005dc8    7308                   jnc 0xb3005dd2
0xb3005dca    8b400b                 mov eax,[eax+0xb]
0xb3005dcd    8b44580b               mov eax,[eax+ebx*0x2+0xb]
0xb3005dd1    c3                     ret
        ;; Enter frame
0xb3005dd2    55                     push ebp
0xb3005dd3    89e5                   mov ebp,esp
0xb3005dd5    e800000000             call 0xb3005dda
0xb3005dda    830424e6               add [esp],0xe6
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3005dde    3b25bc195809           cmp esp,[0x95819bc]
0xb3005de4    0f8628000000           jna 0xb3005e12
        ;; t0 <- NativeCall:3(GrowableObjectArray_getIndexed)
0xb3005dea    68190040b5             push 0xb5400019
0xb3005def    8d450c                 lea eax,[ebp+0xc]
0xb3005df2    b960114508             mov ecx,0x8451160
0xb3005df7    ba02000001             mov edx,0x1000002
0xb3005dfc    e827a33702             call 0xb5380128  [stub: CallNativeCFunction]
0xb3005e01    58                     pop eax
0xb3005e02    50                     push eax
        ;; Return:4(t0)
0xb3005e03    58                     pop eax
0xb3005e04    ba21e01ab3             mov edx,0xb31ae021  'Function '[]':.'
0xb3005e09    ff422b                 inc [edx+0x2b]
0xb3005e0c    89ec                   mov esp,ebp
0xb3005e0e    5d                     pop ebp
0xb3005e0f    c3                     ret
0xb3005e10    90                     nop
0xb3005e11    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3005e12    b970d30a08             mov ecx,0x80ad370
0xb3005e17    ba00000000             mov edx,0
0xb3005e1c    e807a23702             call 0xb5380028  [stub: CallToRuntime]
0xb3005e21    ebc7                   jmp 0xb3005dea
0xb3005e23    e910a63702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3005e28    e9eba63702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 77 : 0xb3005e05 'Function '[]':.'
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_[]' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3005e01	other        	-1		7521	-1
0xb3005e11	return       	-1		7521	-1
0xb3005e21	other        	-1		7511	-1
0xb3005e23	patch        	-1		0	-1
0xb3005e28	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72_[]' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_[]' {
  stack var 'this' offset 3 (valid 6682-7521)
  stack var 'index' offset 2 (valid 7513-7521)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72_[]' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72_add' @ token 7542
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72_add
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:length, t0)
    StoreLocal:6(len, t0, lvl: 0)
    t0 <- LoadLocal:7(len lvl:0)
    t1 <- LoadLocal:8(this lvl:0)
    PushArgument:9(t1)
    t1 <- InstanceCall:10(get:capacity, t1)
    Branch if EqualityCompare:11(t0 == t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:13(this lvl:0)
    PushArgument:14(t0)
    t0 <- LoadLocal:15(len lvl:0)
    PushArgument:16(t0)
    t0 <- Constant:17(#2)
    PushArgument:18(t0)
    t0 <- InstanceCall:19(*, t0, t0)
    PushArgument:20(t0)
    InstanceCall:21(_grow@0x36924d72, t0, t0)
    goto:25 4
B3[target]
    goto:26 4
B4[join] pred(B2, B3)
    t0 <- LoadLocal:27(this lvl:0)
    PushArgument:28(t0)
    t0 <- LoadLocal:29(len lvl:0)
    PushArgument:30(t0)
    t0 <- Constant:31(#1)
    PushArgument:32(t0)
    t0 <- InstanceCall:33(+, t0, t0)
    PushArgument:34(t0)
    InstanceCall:35(_setLength@0x36924d72, t0, t0)
    t0 <- LoadLocal:36(this lvl:0)
    PushArgument:37(t0)
    t0 <- LoadLocal:38(len lvl:0)
    PushArgument:39(t0)
    t0 <- LoadLocal:40(value lvl:0)
    PushArgument:41(t0)
    InstanceCall:42([]=, t0, t0, t0)
    t0 <- Constant:43(#null)
    Return:44(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72_add' entry: 0xb3005e48 time: 460 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72_add' {
0xb3005e48    8b442408               mov eax,[esp+0x8]
0xb3005e4c    8b5807                 mov ebx,[eax+0x7]
0xb3005e4f    8b780b                 mov edi,[eax+0xb]
0xb3005e52    3b5f07                 cmp ebx,[edi+0x7]
0xb3005e55    742a                   jz 0xb3005e81
0xb3005e57    83400702               add [eax+0x7],0x2
0xb3005e5b    8b442404               mov eax,[esp+0x4]
0xb3005e5f    89445f0b               mov [edi+ebx*0x2+0xb],eax
0xb3005e63    83e005                 and eax,0x5
0xb3005e66    d1e8                   shr eax, 1
0xb3005e68    13c7                   adc eax,edi
0xb3005e6a    83e007                 and eax,0x7
0xb3005e6d    83f804                 cmp eax,0x4
0xb3005e70    7509                   jnz 0xb3005e7b
0xb3005e72    8d445f0b               lea eax,[edi+ebx*0x2+0xb]
0xb3005e76    e8eda2ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
0xb3005e7b    b8190040b5             mov eax,0xb5400019
0xb3005e80    c3                     ret
        ;; Enter frame
0xb3005e81    55                     push ebp
0xb3005e82    89e5                   mov ebp,esp
0xb3005e84    e800000000             call 0xb3005e89
0xb3005e89    830424c7               add [esp],0xc7
0xb3005e8d    83ec08                 sub esp,0x8
        ;; Initialize spill slots
0xb3005e90    b8190040b5             mov eax,0xb5400019
0xb3005e95    8945f8                 mov [ebp-0x8],eax
0xb3005e98    8945f4                 mov [ebp-0xc],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3005e9b    3b25bc195809           cmp esp,[0x95819bc]
0xb3005ea1    0f8630010000           jna 0xb3005fd7
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb3005ea7    8b450c                 mov eax,[ebp+0xc]
0xb3005eaa    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:length, t0)
0xb3005eab    b941be28b3             mov ecx,0xb328be41  'ICData target:'get:length' num-checks: 0'
0xb3005eb0    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3005eb5    e85ea3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005eba    83c404                 add esp,0x4
0xb3005ebd    50                     push eax
        ;; StoreLocal:6(len, t0, lvl: 0)
0xb3005ebe    58                     pop eax
0xb3005ebf    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- LoadLocal:7(len lvl:0)
0xb3005ec2    8b45f4                 mov eax,[ebp-0xc]
0xb3005ec5    50                     push eax
        ;; t1 <- LoadLocal:8(this lvl:0)
0xb3005ec6    8b450c                 mov eax,[ebp+0xc]
0xb3005ec9    50                     push eax
        ;; PushArgument:9(t1)
        ;; t1 <- InstanceCall:10(get:capacity, t1)
0xb3005eca    b991be28b3             mov ecx,0xb328be91  'ICData target:'get:capacity' num-checks: 0'
0xb3005ecf    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3005ed4    e83fa3ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005ed9    83c404                 add esp,0x4
0xb3005edc    50                     push eax
        ;; Branch if EqualityCompare:11(t0 == t1) goto (2, 3)
0xb3005edd    5a                     pop edx
0xb3005ede    5b                     pop ebx
0xb3005edf    53                     push ebx
0xb3005ee0    52                     push edx
0xb3005ee1    813c24190040b5         cmp [esp],0xb5400019
0xb3005ee8    0f8425000000           jz 0xb3005f13
0xb3005eee    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3005ef6    0f8417000000           jz 0xb3005f13
0xb3005efc    b9e1be28b3             mov ecx,0xb328bee1  'ICData target:'==' num-checks: 0'
0xb3005f01    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005f06    e8cda3ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3005f0b    83c408                 add esp,0x8
0xb3005f0e    e90d000000             jmp 0xb3005f20
0xb3005f13    b9e1be28b3             mov ecx,0xb328bee1  'ICData target:'==' num-checks: 0'
0xb3005f18    e82baaffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3005f1d    83c408                 add esp,0x8
0xb3005f20    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3005f25    0f8538000000           jnz 0xb3005f63
        ;; B2
        ;; t0 <- LoadLocal:13(this lvl:0)
0xb3005f2b    8b450c                 mov eax,[ebp+0xc]
0xb3005f2e    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- LoadLocal:15(len lvl:0)
0xb3005f2f    8b45f4                 mov eax,[ebp-0xc]
0xb3005f32    50                     push eax
        ;; PushArgument:16(t0)
        ;; t0 <- Constant:17(#2)
0xb3005f33    b804000000             mov eax,0x4
0xb3005f38    50                     push eax
        ;; PushArgument:18(t0)
        ;; t0 <- InstanceCall:19(*, t0, t0)
0xb3005f39    b939bf28b3             mov ecx,0xb328bf39  'ICData target:'*' num-checks: 0'
0xb3005f3e    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005f43    e890a3ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3005f48    83c408                 add esp,0x8
0xb3005f4b    50                     push eax
        ;; PushArgument:20(t0)
        ;; InstanceCall:21(_grow@0x36924d72, t0, t0)
0xb3005f4c    b991bf28b3             mov ecx,0xb328bf91  'ICData target:'_grow@0x36924d72' num-checks: 0'
0xb3005f51    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005f56    e8bda2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005f5b    83c408                 add esp,0x8
        ;; goto:25 4
0xb3005f5e    e900000000             jmp 0xb3005f63
        ;; B3
        ;; goto:26 4
        ;; B4
        ;; t0 <- LoadLocal:27(this lvl:0)
0xb3005f63    8b450c                 mov eax,[ebp+0xc]
0xb3005f66    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- LoadLocal:29(len lvl:0)
0xb3005f67    8b45f4                 mov eax,[ebp-0xc]
0xb3005f6a    50                     push eax
        ;; PushArgument:30(t0)
        ;; t0 <- Constant:31(#1)
0xb3005f6b    b802000000             mov eax,0x2
0xb3005f70    50                     push eax
        ;; PushArgument:32(t0)
        ;; t0 <- InstanceCall:33(+, t0, t0)
0xb3005f71    b9e1bf28b3             mov ecx,0xb328bfe1  'ICData target:'+' num-checks: 0'
0xb3005f76    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005f7b    e858a3ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3005f80    83c408                 add esp,0x8
0xb3005f83    50                     push eax
        ;; PushArgument:34(t0)
        ;; InstanceCall:35(_setLength@0x36924d72, t0, t0)
0xb3005f84    b939c028b3             mov ecx,0xb328c039  'ICData target:'_setLength@0x36924d72' num-checks: 0'
0xb3005f89    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3005f8e    e885a2ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3005f93    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:36(this lvl:0)
0xb3005f96    8b450c                 mov eax,[ebp+0xc]
0xb3005f99    50                     push eax
        ;; PushArgument:37(t0)
        ;; t0 <- LoadLocal:38(len lvl:0)
0xb3005f9a    8b45f4                 mov eax,[ebp-0xc]
0xb3005f9d    50                     push eax
        ;; PushArgument:39(t0)
        ;; t0 <- LoadLocal:40(value lvl:0)
0xb3005f9e    8b4508                 mov eax,[ebp+0x8]
0xb3005fa1    50                     push eax
        ;; PushArgument:41(t0)
        ;; InstanceCall:42([]=, t0, t0, t0)
0xb3005fa2    b989c028b3             mov ecx,0xb328c089  'ICData target:'[]=' num-checks: 0'
0xb3005fa7    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3005fac    e807a4ffff             call 0xb30003b8  [stub: ThreeArgsCheckInlineCache]
0xb3005fb1    83c40c                 add esp,0xc
        ;; t0 <- Constant:43(#null)
0xb3005fb4    b8190040b5             mov eax,0xb5400019
0xb3005fb9    50                     push eax
        ;; Return:44(t0)
0xb3005fba    58                     pop eax
0xb3005fbb    ba11e11ab3             mov edx,0xb31ae111  'Function 'add':.'
0xb3005fc0    ff422b                 inc [edx+0x2b]
0xb3005fc3    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3005fca    7c05                   jl 0xb3005fd1
0xb3005fcc    e8e7a8ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3005fd1    89ec                   mov esp,ebp
0xb3005fd3    5d                     pop ebp
0xb3005fd4    c3                     ret
0xb3005fd5    90                     nop
0xb3005fd6    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3005fd7    b970d30a08             mov ecx,0x80ad370
0xb3005fdc    ba00000000             mov edx,0
0xb3005fe1    e842a03702             call 0xb5380028  [stub: CallToRuntime]
0xb3005fe6    e9bcfeffff             jmp 0xb3005ea7
0xb3005feb    e948a43702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3005ff0    e923a53702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 100 : 0xb3005eac 'ICData target:'get:length' num-checks: 0'
 105 : 0xb3005eb1 'ImmutableArray'
 131 : 0xb3005ecb 'ICData target:'get:capacity' num-checks: 0'
 136 : 0xb3005ed0 'ImmutableArray'
 181 : 0xb3005efd 'ICData target:'==' num-checks: 0'
 186 : 0xb3005f02 'ImmutableArray'
 204 : 0xb3005f14 'ICData target:'==' num-checks: 0'
 217 : 0xb3005f21 'true'
 242 : 0xb3005f3a 'ICData target:'*' num-checks: 0'
 247 : 0xb3005f3f 'ImmutableArray'
 261 : 0xb3005f4d 'ICData target:'_grow@0x36924d72' num-checks: 0'
 266 : 0xb3005f52 'ImmutableArray'
 298 : 0xb3005f72 'ICData target:'+' num-checks: 0'
 303 : 0xb3005f77 'ImmutableArray'
 317 : 0xb3005f85 'ICData target:'_setLength@0x36924d72' num-checks: 0'
 322 : 0xb3005f8a 'ImmutableArray'
 347 : 0xb3005fa3 'ICData target:'[]=' num-checks: 0'
 352 : 0xb3005fa8 'ImmutableArray'
 372 : 0xb3005fbc 'Function 'add':.'
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_add' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3005eab	deopt-before 	5		7553	-1
0xb3005eba	ic-call      	5		7553	-1
0xb3005eba	deopt-after  	5		7553	-1
0xb3005eca	deopt-before 	10		7561	-1
0xb3005ed9	ic-call      	10		7561	-1
0xb3005ed9	deopt-after  	10		7561	-1
0xb3005ee1	deopt-before 	11		7560	-1
0xb3005f0b	ic-call      	11		7560	-1
0xb3005f0b	deopt-after  	11		7560	-1
0xb3005f1d	other        	-1		7560	-1
0xb3005f39	deopt-before 	19		7570	-1
0xb3005f48	ic-call      	19		7570	-1
0xb3005f48	deopt-after  	19		7570	-1
0xb3005f4c	deopt-before 	21		7567	-1
0xb3005f5b	ic-call      	21		7567	-1
0xb3005f5b	deopt-after  	21		7567	-1
0xb3005f5e	deopt-before 	25		0	-1
0xb3005f63	deopt-before 	26		0	-1
0xb3005f71	deopt-before 	33		7581	-1
0xb3005f80	ic-call      	33		7581	-1
0xb3005f80	deopt-after  	33		7581	-1
0xb3005f84	deopt-before 	35		7578	-1
0xb3005f93	ic-call      	35		7578	-1
0xb3005f93	deopt-after  	35		7578	-1
0xb3005fa2	deopt-before 	42		7587	-1
0xb3005fb1	ic-call      	42		7587	-1
0xb3005fb1	deopt-after  	42		7587	-1
0xb3005fd1	other        	-1		0	-1
0xb3005fd6	return       	-1		7596	-1
0xb3005fe6	other        	-1		7542	-1
0xb3005feb	patch        	-1		0	-1
0xb3005ff0	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72_add' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_add' {
  stack var 'this' offset 3 (valid 6682-7596)
  stack var 'value' offset 2 (valid 7545-7596)
  stack var 'len' offset -3 (valid 7550-7596)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72_add' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72_get_capacity' @ token 7404
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72_get_capacity
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(GrowableObjectArray_getCapacity)
    Return:4(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72_get_capacity' entry: 0xb3006008 time: 190 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72_get_capacity' {
0xb3006008    8b442404               mov eax,[esp+0x4]
0xb300600c    8b400b                 mov eax,[eax+0xb]
0xb300600f    8b4007                 mov eax,[eax+0x7]
0xb3006012    c3                     ret
0xb3006013    cc                     int3
0xb3006014    e91fa43702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_get_capacity' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72_get_capacity' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_get_capacity' {
  stack var 'this' offset 2 (valid 6682-7409)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72_get_capacity' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72__grow@0x36924d72' @ token 7819
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72__grow@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 4, immutable=0)
    t0 <- InstantiateTypeArguments:5(<T>, t0)
    PushArgument:6(t0)
    t0 <- LoadLocal:7(new_length lvl:0)
    PushArgument:8(t0)
    t0 <- StaticCall:9(_ObjectArray@0x36924d72. t0, t0)
    StoreLocal:10(new_data, t0, lvl: 0)
    t0 <- Constant:11(#0)
    StoreLocal:12(i, t0, lvl: 0)
    goto:33 2
B2[join] pred(B1, B3)
    t0 <- LoadLocal:35(i lvl:0)
    t1 <- LoadLocal:36(this lvl:0)
    PushArgument:37(t1)
    t1 <- InstanceCall:38(get:length, t1)
    Branch if RelationalOp:39(<, t0, t1) goto (3, 4)
B3[target]
    CheckStackOverflow:13()
    t0 <- LoadLocal:14(new_data lvl:0)
    PushArgument:15(t0)
    t0 <- LoadLocal:16(i lvl:0)
    PushArgument:17(t0)
    t0 <- LoadLocal:18(this lvl:0)
    PushArgument:19(t0)
    t0 <- LoadLocal:20(i lvl:0)
    PushArgument:21(t0)
    t0 <- InstanceCall:22([], t0, t0)
    PushArgument:23(t0)
    InstanceCall:24([]=, t0, t0, t0)
    t0 <- LoadLocal:25(i lvl:0)
    t0 <- StoreLocal:26(:expr_temp, t0, lvl: 0)
    PushArgument:27(t0)
    t0 <- Constant:28(#1)
    PushArgument:29(t0)
    t0 <- InstanceCall:30(+, t0, t0)
    StoreLocal:31(i, t0, lvl: 0)
    goto:34 2
B4[target]
    t0 <- LoadLocal:43(this lvl:0)
    PushArgument:44(t0)
    t0 <- LoadLocal:45(new_data lvl:0)
    PushArgument:46(t0)
    InstanceCall:47(_setData@0x36924d72, t0, t0)
    t0 <- Constant:48(#null)
    Return:49(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72__grow@0x36924d72' entry: 0xb3006038 time: 470 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72__grow@0x36924d72' {
        ;; Enter frame
0xb3006038    55                     push ebp
0xb3006039    89e5                   mov ebp,esp
0xb300603b    e800000000             call 0xb3006040
0xb3006040    83ec10                 sub esp,0x10
        ;; Initialize spill slots
0xb3006043    b8190040b5             mov eax,0xb5400019
0xb3006048    8945f8                 mov [ebp-0x8],eax
0xb300604b    8945f4                 mov [ebp-0xc],eax
0xb300604e    8945f0                 mov [ebp-0x10],eax
0xb3006051    8945ec                 mov [ebp-0x14],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3006054    3b25bc195809           cmp esp,[0x95819bc]
0xb300605a    0f8644010000           jna 0xb30061a4
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb3006060    8b450c                 mov eax,[ebp+0xc]
0xb3006063    50                     push eax
        ;; t0 <- LoadField:4(t0, 4, immutable=0)
0xb3006064    58                     pop eax
0xb3006065    8b4803                 mov ecx,[eax+0x3]
0xb3006068    51                     push ecx
        ;; t0 <- InstantiateTypeArguments:5(<T>, t0)
0xb3006069    58                     pop eax
0xb300606a    3d190040b5             cmp eax, 0xb5400019
0xb300606f    742d                   jz 0xb300609e
0xb3006071    0fb74801               movzx_w ecx,[eax+0x1]
0xb3006075    83f905                 cmp ecx,0x5
0xb3006078    7506                   jnz 0xb3006080
0xb300607a    83780302               cmp [eax+0x3],0x2
0xb300607e    741e                   jz 0xb300609e
0xb3006080    68190040b5             push 0xb5400019
0xb3006085    68118b19b3             push 0xb3198b11
0xb300608a    50                     push eax
0xb300608b    b990120b08             mov ecx,0x80b1290
0xb3006090    ba02000000             mov edx,0x2
0xb3006095    e88e9f3702             call 0xb5380028  [stub: CallToRuntime]
0xb300609a    83c408                 add esp,0x8
0xb300609d    58                     pop eax
0xb300609e    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- LoadLocal:7(new_length lvl:0)
0xb300609f    8b4508                 mov eax,[ebp+0x8]
0xb30060a2    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- StaticCall:9(_ObjectArray@0x36924d72. t0, t0)
0xb30060a3    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30060a8    e87ba23702             call 0xb5380328  [stub: CallStaticFunction]
0xb30060ad    83c408                 add esp,0x8
0xb30060b0    50                     push eax
        ;; StoreLocal:10(new_data, t0, lvl: 0)
0xb30060b1    58                     pop eax
0xb30060b2    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- Constant:11(#0)
0xb30060b5    b800000000             mov eax,0
0xb30060ba    50                     push eax
        ;; StoreLocal:12(i, t0, lvl: 0)
0xb30060bb    58                     pop eax
0xb30060bc    8945ec                 mov [ebp-0x14],eax
        ;; goto:33 2
        ;; B2
        ;; t0 <- LoadLocal:35(i lvl:0)
0xb30060bf    8b45ec                 mov eax,[ebp-0x14]
0xb30060c2    50                     push eax
        ;; t1 <- LoadLocal:36(this lvl:0)
0xb30060c3    8b450c                 mov eax,[ebp+0xc]
0xb30060c6    50                     push eax
        ;; PushArgument:37(t1)
        ;; t1 <- InstanceCall:38(get:length, t1)
0xb30060c7    b9f9c628b3             mov ecx,0xb328c6f9  'ICData target:'get:length' num-checks: 0'
0xb30060cc    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30060d1    e842a1ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30060d6    83c404                 add esp,0x4
0xb30060d9    50                     push eax
        ;; Branch if RelationalOp:39(<, t0, t1) goto (3, 4)
0xb30060da    59                     pop ecx
0xb30060db    58                     pop eax
0xb30060dc    50                     push eax
0xb30060dd    51                     push ecx
0xb30060de    b949c728b3             mov ecx,0xb328c749  'ICData target:'<' num-checks: 0'
0xb30060e3    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30060e8    e8eba1ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30060ed    83c408                 add esp,0x8
0xb30060f0    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30060f5    0f856c000000           jnz 0xb3006167
        ;; B3
        ;; CheckStackOverflow:13()
0xb30060fb    3b25bc195809           cmp esp,[0x95819bc]
0xb3006101    0f86b1000000           jna 0xb30061b8
        ;; t0 <- LoadLocal:14(new_data lvl:0)
0xb3006107    8b45f0                 mov eax,[ebp-0x10]
0xb300610a    50                     push eax
        ;; PushArgument:15(t0)
        ;; t0 <- LoadLocal:16(i lvl:0)
0xb300610b    8b45ec                 mov eax,[ebp-0x14]
0xb300610e    50                     push eax
        ;; PushArgument:17(t0)
        ;; t0 <- LoadLocal:18(this lvl:0)
0xb300610f    8b450c                 mov eax,[ebp+0xc]
0xb3006112    50                     push eax
        ;; PushArgument:19(t0)
        ;; t0 <- LoadLocal:20(i lvl:0)
0xb3006113    8b45ec                 mov eax,[ebp-0x14]
0xb3006116    50                     push eax
        ;; PushArgument:21(t0)
        ;; t0 <- InstanceCall:22([], t0, t0)
0xb3006117    b9a1c728b3             mov ecx,0xb328c7a1  'ICData target:'[]' num-checks: 0'
0xb300611c    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006121    e8f2a0ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006126    83c408                 add esp,0x8
0xb3006129    50                     push eax
        ;; PushArgument:23(t0)
        ;; InstanceCall:24([]=, t0, t0, t0)
0xb300612a    b9f1c728b3             mov ecx,0xb328c7f1  'ICData target:'[]=' num-checks: 0'
0xb300612f    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3006134    e87fa2ffff             call 0xb30003b8  [stub: ThreeArgsCheckInlineCache]
0xb3006139    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:25(i lvl:0)
0xb300613c    8b45ec                 mov eax,[ebp-0x14]
0xb300613f    50                     push eax
        ;; t0 <- StoreLocal:26(:expr_temp, t0, lvl: 0)
0xb3006140    58                     pop eax
0xb3006141    8945f8                 mov [ebp-0x8],eax
0xb3006144    50                     push eax
        ;; PushArgument:27(t0)
        ;; t0 <- Constant:28(#1)
0xb3006145    b802000000             mov eax,0x2
0xb300614a    50                     push eax
        ;; PushArgument:29(t0)
        ;; t0 <- InstanceCall:30(+, t0, t0)
0xb300614b    b949c828b3             mov ecx,0xb328c849  'ICData target:'+' num-checks: 0'
0xb3006150    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006155    e87ea1ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300615a    83c408                 add esp,0x8
0xb300615d    50                     push eax
        ;; StoreLocal:31(i, t0, lvl: 0)
0xb300615e    58                     pop eax
0xb300615f    8945ec                 mov [ebp-0x14],eax
        ;; goto:34 2
0xb3006162    e958ffffff             jmp 0xb30060bf
        ;; B4
        ;; t0 <- LoadLocal:43(this lvl:0)
0xb3006167    8b450c                 mov eax,[ebp+0xc]
0xb300616a    50                     push eax
        ;; PushArgument:44(t0)
        ;; t0 <- LoadLocal:45(new_data lvl:0)
0xb300616b    8b45f0                 mov eax,[ebp-0x10]
0xb300616e    50                     push eax
        ;; PushArgument:46(t0)
        ;; InstanceCall:47(_setData@0x36924d72, t0, t0)
0xb300616f    b9a1c828b3             mov ecx,0xb328c8a1  'ICData target:'_setData@0x36924d72' num-checks: 0'
0xb3006174    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006179    e89aa0ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300617e    83c408                 add esp,0x8
        ;; t0 <- Constant:48(#null)
0xb3006181    b8190040b5             mov eax,0xb5400019
0xb3006186    50                     push eax
        ;; Return:49(t0)
0xb3006187    58                     pop eax
0xb3006188    ba81e41ab3             mov edx,0xb31ae481  'Function '_grow@0x36924d72':.'
0xb300618d    ff422b                 inc [edx+0x2b]
0xb3006190    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3006197    7c05                   jl 0xb300619e
0xb3006199    e81aa7ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300619e    89ec                   mov esp,ebp
0xb30061a0    5d                     pop ebp
0xb30061a1    c3                     ret
0xb30061a2    90                     nop
0xb30061a3    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30061a4    b970d30a08             mov ecx,0x80ad370
0xb30061a9    ba00000000             mov edx,0
0xb30061ae    e8759e3702             call 0xb5380028  [stub: CallToRuntime]
0xb30061b3    e9a8feffff             jmp 0xb3006060
        ;; CheckStackOverflowSlowPath
0xb30061b8    b970d30a08             mov ecx,0x80ad370
0xb30061bd    ba00000000             mov edx,0
0xb30061c2    e8619e3702             call 0xb5380028  [stub: CallToRuntime]
0xb30061c7    e93bffffff             jmp 0xb3006107
0xb30061cc    e967a23702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30061d1    e942a33702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 78 : 0xb3006086 'TypeArguments: [TypeParameter: name T; index: 0; class: _GrowableObjectArray@0x36924d72]'
 108 : 0xb30060a4 'ImmutableArray'
 144 : 0xb30060c8 'ICData target:'get:length' num-checks: 0'
 149 : 0xb30060cd 'ImmutableArray'
 167 : 0xb30060df 'ICData target:'<' num-checks: 0'
 172 : 0xb30060e4 'ImmutableArray'
 185 : 0xb30060f1 'true'
 224 : 0xb3006118 'ICData target:'[]' num-checks: 0'
 229 : 0xb300611d 'ImmutableArray'
 243 : 0xb300612b 'ICData target:'[]=' num-checks: 0'
 248 : 0xb3006130 'ImmutableArray'
 276 : 0xb300614c 'ICData target:'+' num-checks: 0'
 281 : 0xb3006151 'ImmutableArray'
 312 : 0xb3006170 'ICData target:'_setData@0x36924d72' num-checks: 0'
 317 : 0xb3006175 'ImmutableArray'
 337 : 0xb3006189 'Function '_grow@0x36924d72':.'
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72__grow@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300609a	other        	-1		7829	-1
0xb30060ad	fn-call      	9		7829	-1
0xb30060ad	deopt-after  	9		7829	-1
0xb30060bf	deopt-before 	33		0	-1
0xb30060c7	deopt-before 	38		7853	-1
0xb30060d6	ic-call      	38		7853	-1
0xb30060d6	deopt-after  	38		7853	-1
0xb30060de	deopt-before 	39		7852	-1
0xb30060ed	ic-call      	39		7852	-1
0xb30060ed	deopt-after  	39		7852	-1
0xb3006117	deopt-before 	22		7869	-1
0xb3006126	ic-call      	22		7869	-1
0xb3006126	deopt-after  	22		7869	-1
0xb300612a	deopt-before 	24		7863	-1
0xb3006139	ic-call      	24		7863	-1
0xb3006139	deopt-after  	24		7863	-1
0xb300614b	deopt-before 	30		7856	-1
0xb300615a	ic-call      	30		7856	-1
0xb300615a	deopt-after  	30		7856	-1
0xb3006162	deopt-before 	34		0	-1
0xb300616f	deopt-before 	47		7877	-1
0xb300617e	ic-call      	47		7877	-1
0xb300617e	deopt-after  	47		7877	-1
0xb300619e	other        	-1		0	-1
0xb30061a3	return       	-1		7883	-1
0xb30061b3	other        	-1		7819	-1
0xb30061c7	other        	-1		7841	-1
0xb30061cc	patch        	-1		0	-1
0xb30061d1	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72__grow@0x36924d72' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72__grow@0x36924d72' {
  stack var 'this' offset 3 (valid 6682-7883)
  stack var 'new_length' offset 2 (valid 7821-7883)
  stack var 'new_data' offset -4 (valid 7826-7883)
  stack var 'i' offset -5 (valid 7844-7875)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72__grow@0x36924d72' {
No exception handlers
}
Static call target functions {
  0xb30060ad: dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72., 0xb5400019
}
PatchStaticCall: patching from 0xb30060ad to 'dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.' 0xb3001508
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72__setData@0x36924d72' @ token 7492
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72__setData@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(GrowableObjectArray_setData)
    Return:4(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72__setData@0x36924d72' entry: 0xb30061e8 time: 237 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72__setData@0x36924d72' {
0xb30061e8    8b5c2404               mov ebx,[esp+0x4]
0xb30061ec    f6c301                 test_b ebx,0x1
0xb30061ef    742a                   jz 0xb300621b
0xb30061f1    0fb74301               movzx_w eax,[ebx+0x1]
0xb30061f5    83f82e                 cmp eax,0x2e
0xb30061f8    7521                   jnz 0xb300621b
0xb30061fa    8b442408               mov eax,[esp+0x8]
0xb30061fe    89580b                 mov [eax+0xb],ebx
0xb3006201    83e305                 and ebx,0x5
0xb3006204    d1eb                   shr ebx, 1
0xb3006206    13d8                   adc ebx,eax
0xb3006208    83e307                 and ebx,0x7
0xb300620b    83fb04                 cmp ebx,0x4
0xb300620e    750a                   jnz 0xb300621a
0xb3006210    50                     push eax
0xb3006211    8d400b                 lea eax,[eax+0xb]
0xb3006214    e84f9fffff             call 0xb3000168  [stub: UpdateStoreBuffer]
0xb3006219    58                     pop eax
0xb300621a    c3                     ret
        ;; Enter frame
0xb300621b    55                     push ebp
0xb300621c    89e5                   mov ebp,esp
0xb300621e    e800000000             call 0xb3006223
0xb3006223    830424cd               add [esp],0xcd
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3006227    3b25bc195809           cmp esp,[0x95819bc]
0xb300622d    0f8628000000           jna 0xb300625b
        ;; t0 <- NativeCall:3(GrowableObjectArray_setData)
0xb3006233    68190040b5             push 0xb5400019
0xb3006238    8d450c                 lea eax,[ebp+0xc]
0xb300623b    b980fe4408             mov ecx,0x844fe80
0xb3006240    ba02000001             mov edx,0x1000002
0xb3006245    e8de9e3702             call 0xb5380128  [stub: CallNativeCFunction]
0xb300624a    58                     pop eax
0xb300624b    50                     push eax
        ;; Return:4(t0)
0xb300624c    58                     pop eax
0xb300624d    bab9df1ab3             mov edx,0xb31adfb9  'Function '_setData@0x36924d72':.'
0xb3006252    ff422b                 inc [edx+0x2b]
0xb3006255    89ec                   mov esp,ebp
0xb3006257    5d                     pop ebp
0xb3006258    c3                     ret
0xb3006259    90                     nop
0xb300625a    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300625b    b970d30a08             mov ecx,0x80ad370
0xb3006260    ba00000000             mov edx,0
0xb3006265    e8be9d3702             call 0xb5380028  [stub: CallToRuntime]
0xb300626a    ebc7                   jmp 0xb3006233
0xb300626c    e9c7a13702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3006271    e9a2a23702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 102 : 0xb300624e 'Function '_setData@0x36924d72':.'
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72__setData@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300624a	other        	-1		7507	-1
0xb300625a	return       	-1		7507	-1
0xb300626a	other        	-1		7492	-1
0xb300626c	patch        	-1		0	-1
0xb3006271	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72__setData@0x36924d72' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72__setData@0x36924d72' {
  stack var 'this' offset 3 (valid 6682-7507)
  stack var 'array' offset 2 (valid 7499-7507)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72__setData@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72__setLength@0x36924d72' @ token 7479
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72__setLength@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(GrowableObjectArray_setLength)
    Return:4(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72__setLength@0x36924d72' entry: 0xb3006288 time: 217 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72__setLength@0x36924d72' {
0xb3006288    8b442408               mov eax,[esp+0x8]
0xb300628c    8b5c2404               mov ebx,[esp+0x4]
0xb3006290    f6c301                 test_b ebx,0x1
0xb3006293    750c                   jnz 0xb30062a1
0xb3006295    8b780b                 mov edi,[eax+0xb]
0xb3006298    3b5f07                 cmp ebx,[edi+0x7]
0xb300629b    7704                   ja 0xb30062a1
0xb300629d    895807                 mov [eax+0x7],ebx
0xb30062a0    c3                     ret
        ;; Enter frame
0xb30062a1    55                     push ebp
0xb30062a2    89e5                   mov ebp,esp
0xb30062a4    e800000000             call 0xb30062a9
0xb30062a9    830424e7               add [esp],0xe7
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30062ad    3b25bc195809           cmp esp,[0x95819bc]
0xb30062b3    0f8628000000           jna 0xb30062e1
        ;; t0 <- NativeCall:3(GrowableObjectArray_setLength)
0xb30062b9    68190040b5             push 0xb5400019
0xb30062be    8d450c                 lea eax,[ebp+0xc]
0xb30062c1    b9e0034508             mov ecx,0x84503e0
0xb30062c6    ba02000001             mov edx,0x1000002
0xb30062cb    e8589e3702             call 0xb5380128  [stub: CallNativeCFunction]
0xb30062d0    58                     pop eax
0xb30062d1    50                     push eax
        ;; Return:4(t0)
0xb30062d2    58                     pop eax
0xb30062d3    ba51df1ab3             mov edx,0xb31adf51  'Function '_setLength@0x36924d72':.'
0xb30062d8    ff422b                 inc [edx+0x2b]
0xb30062db    89ec                   mov esp,ebp
0xb30062dd    5d                     pop ebp
0xb30062de    c3                     ret
0xb30062df    90                     nop
0xb30062e0    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30062e1    b970d30a08             mov ecx,0x80ad370
0xb30062e6    ba00000000             mov edx,0
0xb30062eb    e8389d3702             call 0xb5380028  [stub: CallToRuntime]
0xb30062f0    ebc7                   jmp 0xb30062b9
0xb30062f2    e941a13702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30062f7    e91ca23702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 76 : 0xb30062d4 'Function '_setLength@0x36924d72':.'
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72__setLength@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30062d0	other        	-1		7489	-1
0xb30062e0	return       	-1		7489	-1
0xb30062f0	other        	-1		7479	-1
0xb30062f2	patch        	-1		0	-1
0xb30062f7	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72__setLength@0x36924d72' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72__setLength@0x36924d72' {
  stack var 'this' offset 3 (valid 6682-7489)
  stack var 'new_length' offset 2 (valid 7481-7489)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72__setLength@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72_[]=' @ token 7524
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72_[]=
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(GrowableObjectArray_setIndexed)
    Return:4(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72_[]=' entry: 0xb3006318 time: 209 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72_[]=' {
0xb3006318    8b5c2408               mov ebx,[esp+0x8]
0xb300631c    8b44240c               mov eax,[esp+0xc]
0xb3006320    f6c301                 test_b ebx,0x1
0xb3006323    752b                   jnz 0xb3006350
0xb3006325    3b5807                 cmp ebx,[eax+0x7]
0xb3006328    7326                   jnc 0xb3006350
0xb300632a    8b400b                 mov eax,[eax+0xb]
0xb300632d    8b7c2404               mov edi,[esp+0x4]
0xb3006331    897c580b               mov [eax+ebx*0x2+0xb],edi
0xb3006335    83e705                 and edi,0x5
0xb3006338    d1ef                   shr edi, 1
0xb300633a    13f8                   adc edi,eax
0xb300633c    83e707                 and edi,0x7
0xb300633f    83ff04                 cmp edi,0x4
0xb3006342    750b                   jnz 0xb300634f
0xb3006344    50                     push eax
0xb3006345    8d44580b               lea eax,[eax+ebx*0x2+0xb]
0xb3006349    e81a9effff             call 0xb3000168  [stub: UpdateStoreBuffer]
0xb300634e    58                     pop eax
0xb300634f    c3                     ret
        ;; Enter frame
0xb3006350    55                     push ebp
0xb3006351    89e5                   mov ebp,esp
0xb3006353    e800000000             call 0xb3006358
0xb3006358    830424c8               add [esp],0xc8
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300635c    3b25bc195809           cmp esp,[0x95819bc]
0xb3006362    0f8628000000           jna 0xb3006390
        ;; t0 <- NativeCall:3(GrowableObjectArray_setIndexed)
0xb3006368    68190040b5             push 0xb5400019
0xb300636d    8d4510                 lea eax,[ebp+0x10]
0xb3006370    b9a0094508             mov ecx,0x84509a0
0xb3006375    ba03000001             mov edx,0x1000003
0xb300637a    e8a99d3702             call 0xb5380128  [stub: CallNativeCFunction]
0xb300637f    58                     pop eax
0xb3006380    50                     push eax
        ;; Return:4(t0)
0xb3006381    58                     pop eax
0xb3006382    baa9e01ab3             mov edx,0xb31ae0a9  'Function '[]=':.'
0xb3006387    ff422b                 inc [edx+0x2b]
0xb300638a    89ec                   mov esp,ebp
0xb300638c    5d                     pop ebp
0xb300638d    c3                     ret
0xb300638e    90                     nop
0xb300638f    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3006390    b970d30a08             mov ecx,0x80ad370
0xb3006395    ba00000000             mov edx,0
0xb300639a    e8899c3702             call 0xb5380028  [stub: CallToRuntime]
0xb300639f    ebc7                   jmp 0xb3006368
0xb30063a1    e992a03702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30063a6    e96da13702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 107 : 0xb3006383 'Function '[]=':.'
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_[]=' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300637f	other        	-1		7539	-1
0xb300638f	return       	-1		7539	-1
0xb300639f	other        	-1		7524	-1
0xb30063a1	patch        	-1		0	-1
0xb30063a6	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72_[]=' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_[]=' {
  stack var 'this' offset 4 (valid 6682-7539)
  stack var 'index' offset 3 (valid 7526-7539)
  stack var 'value' offset 2 (valid 7531-7539)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72_[]=' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core_Strings_join' @ token 15801
Before Optimizations
==== dart:core_Strings_join
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(strings lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(separator lvl:0)
    PushArgument:6(t0)
    t0 <- StaticCall:7(join t0, t0)
    Return:8(t0)
--> 'dart:core_Strings_join' entry: 0xb30063c8 time: 100 us
Code for function 'dart:core_Strings_join' {
        ;; Enter frame
0xb30063c8    55                     push ebp
0xb30063c9    89e5                   mov ebp,esp
0xb30063cb    e800000000             call 0xb30063d0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30063d0    3b25bc195809           cmp esp,[0x95819bc]
0xb30063d6    0f8633000000           jna 0xb300640f
        ;; t0 <- LoadLocal:3(strings lvl:0)
0xb30063dc    8b450c                 mov eax,[ebp+0xc]
0xb30063df    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(separator lvl:0)
0xb30063e0    8b4508                 mov eax,[ebp+0x8]
0xb30063e3    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- StaticCall:7(join t0, t0)
0xb30063e4    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30063e9    e83a9f3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30063ee    83c408                 add esp,0x8
0xb30063f1    50                     push eax
        ;; Return:8(t0)
0xb30063f2    58                     pop eax
0xb30063f3    ba218912b3             mov edx,0xb3128921  'Function 'join': static.'
0xb30063f8    ff422b                 inc [edx+0x2b]
0xb30063fb    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3006402    7c05                   jl 0xb3006409
0xb3006404    e8afa4ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3006409    89ec                   mov esp,ebp
0xb300640b    5d                     pop ebp
0xb300640c    c3                     ret
0xb300640d    90                     nop
0xb300640e    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300640f    b970d30a08             mov ecx,0x80ad370
0xb3006414    ba00000000             mov edx,0
0xb3006419    e80a9c3702             call 0xb5380028  [stub: CallToRuntime]
0xb300641e    ebbc                   jmp 0xb30063dc
0xb3006420    e913a03702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3006425    e9eea03702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 29 : 0xb30063e5 'ImmutableArray'
 44 : 0xb30063f4 'Function 'join': static.'
}
PC Descriptors for function 'dart:core_Strings_join' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30063ee	fn-call      	7		15823	-1
0xb30063ee	deopt-after  	7		15823	-1
0xb3006409	other        	-1		0	-1
0xb300640e	return       	-1		15817	-1
0xb300641e	other        	-1		15801	-1
0xb3006420	patch        	-1		0	-1
0xb3006425	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_Strings_join' {
}
Variable Descriptors for function 'dart:core_Strings_join' {
  stack var 'strings' offset 3 (valid 15808-15832)
  stack var 'separator' offset 2 (valid 15813-15832)
}
Exception Handlers for function 'dart:core_Strings_join' {
No exception handlers
}
Static call target functions {
  0xb30063ee: dart:core__StringBase@0x36924d72_join, 0xb5400019
}
PatchStaticCall: patching from 0xb30051ac to 'dart:core_Strings_join' 0xb30063c8
Compiling function: 'dart:core__StringBase@0x36924d72_join' @ token 14780
Before Optimizations
==== dart:core__StringBase@0x36924d72_join
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(strings lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:length, t0)
    StoreLocal:6(length, t0, lvl: 0)
    t0 <- LoadLocal:7(length lvl:0)
    t1 <- Constant:8(#0)
    Branch if EqualityCompare:9(t0 == t1) goto (2, 3)
B2[target]
    t0 <- Constant:11(#)
    Return:12(t0)
B3[target]
    t0 <- LoadLocal:15(strings lvl:0)
    StoreLocal:16(stringsList, t0, lvl: 0)
    t0 <- LoadLocal:17(separator lvl:0)
    PushArgument:18(t0)
    t0 <- InstanceCall:19(get:length, t0)
    t1 <- Constant:20(#0)
    Branch if EqualityCompare:21(t0 != t1) goto (7, 8)
B7[target]
    t0 <- Constant:23(#NULL AbstractTypeArguments)
    PushArgument:24(t0)
    t0 <- Constant:25(#2)
    PushArgument:26(t0)
    t0 <- LoadLocal:27(length lvl:0)
    PushArgument:28(t0)
    t0 <- InstanceCall:29(*, t0, t0)
    PushArgument:30(t0)
    t0 <- Constant:31(#1)
    PushArgument:32(t0)
    t0 <- InstanceCall:33(-, t0, t0)
    PushArgument:34(t0)
    t0 <- StaticCall:35(List. t0, t0)
    StoreLocal:36(stringsList, t0, lvl: 0)
    t0 <- LoadLocal:37(stringsList lvl:0)
    PushArgument:38(t0)
    t0 <- Constant:39(#0)
    PushArgument:40(t0)
    t0 <- LoadLocal:41(strings lvl:0)
    PushArgument:42(t0)
    t0 <- Constant:43(#0)
    PushArgument:44(t0)
    t0 <- InstanceCall:45([], t0, t0)
    PushArgument:46(t0)
    InstanceCall:47([]=, t0, t0, t0)
    t0 <- Constant:48(#1)
    StoreLocal:49(j, t0, lvl: 0)
    t0 <- Constant:50(#1)
    StoreLocal:51(i, t0, lvl: 0)
    goto:93 4
B4[join] pred(B5, B7)
    t0 <- LoadLocal:95(i lvl:0)
    t1 <- LoadLocal:96(length lvl:0)
    Branch if RelationalOp:97(<, t0, t1) goto (5, 6)
B5[target]
    CheckStackOverflow:52()
    t0 <- LoadLocal:53(stringsList lvl:0)
    PushArgument:54(t0)
    t0 <- LoadLocal:55(j lvl:0)
    t0 <- StoreLocal:56(:expr_temp, t0, lvl: 0)
    PushArgument:57(t0)
    t0 <- Constant:58(#1)
    PushArgument:59(t0)
    t0 <- InstanceCall:60(+, t0, t0)
    StoreLocal:61(j, t0, lvl: 0)
    t0 <- LoadLocal:62(:expr_temp lvl:0)
    PushArgument:63(t0)
    t0 <- LoadLocal:64(separator lvl:0)
    PushArgument:65(t0)
    InstanceCall:66([]=, t0, t0, t0)
    t0 <- LoadLocal:67(stringsList lvl:0)
    PushArgument:68(t0)
    t0 <- LoadLocal:69(j lvl:0)
    t0 <- StoreLocal:70(:expr_temp, t0, lvl: 0)
    PushArgument:71(t0)
    t0 <- Constant:72(#1)
    PushArgument:73(t0)
    t0 <- InstanceCall:74(+, t0, t0)
    StoreLocal:75(j, t0, lvl: 0)
    t0 <- LoadLocal:76(:expr_temp lvl:0)
    PushArgument:77(t0)
    t0 <- LoadLocal:78(strings lvl:0)
    PushArgument:79(t0)
    t0 <- LoadLocal:80(i lvl:0)
    PushArgument:81(t0)
    t0 <- InstanceCall:82([], t0, t0)
    PushArgument:83(t0)
    InstanceCall:84([]=, t0, t0, t0)
    t0 <- LoadLocal:85(i lvl:0)
    t0 <- StoreLocal:86(:expr_temp, t0, lvl: 0)
    PushArgument:87(t0)
    t0 <- Constant:88(#1)
    PushArgument:89(t0)
    t0 <- InstanceCall:90(+, t0, t0)
    StoreLocal:91(i, t0, lvl: 0)
    goto:94 4
B6[target]
    goto:104 9
B8[target]
    goto:105 9
B9[join] pred(B6, B8)
    t0 <- LoadLocal:106(stringsList lvl:0)
    PushArgument:107(t0)
    t0 <- StaticCall:108(concatAll t0)
    Return:109(t0)
--> 'dart:core__StringBase@0x36924d72_join' entry: 0xb3006448 time: 816 us
Code for function 'dart:core__StringBase@0x36924d72_join' {
        ;; Enter frame
0xb3006448    55                     push ebp
0xb3006449    89e5                   mov ebp,esp
0xb300644b    e800000000             call 0xb3006450
0xb3006450    83ec18                 sub esp,0x18
        ;; Initialize spill slots
0xb3006453    b8190040b5             mov eax,0xb5400019
0xb3006458    8945f8                 mov [ebp-0x8],eax
0xb300645b    8945f4                 mov [ebp-0xc],eax
0xb300645e    8945f0                 mov [ebp-0x10],eax
0xb3006461    8945ec                 mov [ebp-0x14],eax
0xb3006464    8945e8                 mov [ebp-0x18],eax
0xb3006467    8945e4                 mov [ebp-0x1c],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300646a    3b25bc195809           cmp esp,[0x95819bc]
0xb3006470    0f86d6020000           jna 0xb300674c
        ;; t0 <- LoadLocal:3(strings lvl:0)
0xb3006476    8b450c                 mov eax,[ebp+0xc]
0xb3006479    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:length, t0)
0xb300647a    b9a9d528b3             mov ecx,0xb328d5a9  'ICData target:'get:length' num-checks: 0'
0xb300647f    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006484    e88f9dffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006489    83c404                 add esp,0x4
0xb300648c    50                     push eax
        ;; StoreLocal:6(length, t0, lvl: 0)
0xb300648d    58                     pop eax
0xb300648e    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- LoadLocal:7(length lvl:0)
0xb3006491    8b45f4                 mov eax,[ebp-0xc]
0xb3006494    50                     push eax
        ;; t1 <- Constant:8(#0)
0xb3006495    b800000000             mov eax,0
0xb300649a    50                     push eax
        ;; Branch if EqualityCompare:9(t0 == t1) goto (2, 3)
0xb300649b    5a                     pop edx
0xb300649c    5b                     pop ebx
0xb300649d    53                     push ebx
0xb300649e    52                     push edx
0xb300649f    813c24190040b5         cmp [esp],0xb5400019
0xb30064a6    0f8425000000           jz 0xb30064d1
0xb30064ac    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb30064b4    0f8417000000           jz 0xb30064d1
0xb30064ba    b9f9d528b3             mov ecx,0xb328d5f9  'ICData target:'==' num-checks: 0'
0xb30064bf    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30064c4    e80f9effff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30064c9    83c408                 add esp,0x8
0xb30064cc    e90d000000             jmp 0xb30064de
0xb30064d1    b9f9d528b3             mov ecx,0xb328d5f9  'ICData target:'==' num-checks: 0'
0xb30064d6    e86da4ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb30064db    83c408                 add esp,0x8
0xb30064de    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30064e3    0f8522000000           jnz 0xb300650b
        ;; B2
        ;; t0 <- Constant:11(#)
0xb30064e9    b8e11240b5             mov eax,0xb54012e1
0xb30064ee    50                     push eax
        ;; Return:12(t0)
0xb30064ef    58                     pop eax
0xb30064f0    ba59ad1ab3             mov edx,0xb31aad59  'Function 'join': static.'
0xb30064f5    ff422b                 inc [edx+0x2b]
0xb30064f8    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30064ff    7c05                   jl 0xb3006506
0xb3006501    e8b2a3ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3006506    89ec                   mov esp,ebp
0xb3006508    5d                     pop ebp
0xb3006509    c3                     ret
0xb300650a    90                     nop
        ;; B3
        ;; t0 <- LoadLocal:15(strings lvl:0)
0xb300650b    8b450c                 mov eax,[ebp+0xc]
0xb300650e    50                     push eax
        ;; StoreLocal:16(stringsList, t0, lvl: 0)
0xb300650f    58                     pop eax
0xb3006510    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:17(separator lvl:0)
0xb3006513    8b4508                 mov eax,[ebp+0x8]
0xb3006516    50                     push eax
        ;; PushArgument:18(t0)
        ;; t0 <- InstanceCall:19(get:length, t0)
0xb3006517    b951d628b3             mov ecx,0xb328d651  'ICData target:'get:length' num-checks: 0'
0xb300651c    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006521    e8f29cffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006526    83c404                 add esp,0x4
0xb3006529    50                     push eax
        ;; t1 <- Constant:20(#0)
0xb300652a    b800000000             mov eax,0
0xb300652f    50                     push eax
        ;; Branch if EqualityCompare:21(t0 != t1) goto (7, 8)
0xb3006530    5a                     pop edx
0xb3006531    5b                     pop ebx
0xb3006532    53                     push ebx
0xb3006533    52                     push edx
0xb3006534    813c24190040b5         cmp [esp],0xb5400019
0xb300653b    0f8425000000           jz 0xb3006566
0xb3006541    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3006549    0f8417000000           jz 0xb3006566
0xb300654f    b9a1d628b3             mov ecx,0xb328d6a1  'ICData target:'==' num-checks: 0'
0xb3006554    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006559    e87a9dffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300655e    83c408                 add esp,0x8
0xb3006561    e90d000000             jmp 0xb3006573
0xb3006566    b9a1d628b3             mov ecx,0xb328d6a1  'ICData target:'==' num-checks: 0'
0xb300656b    e8d8a3ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3006570    83c408                 add esp,0x8
0xb3006573    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3006578    0f849f010000           jz 0xb300671d
        ;; B7
        ;; t0 <- Constant:23(#NULL AbstractTypeArguments)
0xb300657e    b8190040b5             mov eax,0xb5400019
0xb3006583    50                     push eax
        ;; PushArgument:24(t0)
        ;; t0 <- Constant:25(#2)
0xb3006584    b804000000             mov eax,0x4
0xb3006589    50                     push eax
        ;; PushArgument:26(t0)
        ;; t0 <- LoadLocal:27(length lvl:0)
0xb300658a    8b45f4                 mov eax,[ebp-0xc]
0xb300658d    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- InstanceCall:29(*, t0, t0)
0xb300658e    b9f9d628b3             mov ecx,0xb328d6f9  'ICData target:'*' num-checks: 0'
0xb3006593    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006598    e83b9dffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300659d    83c408                 add esp,0x8
0xb30065a0    50                     push eax
        ;; PushArgument:30(t0)
        ;; t0 <- Constant:31(#1)
0xb30065a1    b802000000             mov eax,0x2
0xb30065a6    50                     push eax
        ;; PushArgument:32(t0)
        ;; t0 <- InstanceCall:33(-, t0, t0)
0xb30065a7    b951d728b3             mov ecx,0xb328d751  'ICData target:'-' num-checks: 0'
0xb30065ac    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30065b1    e8229dffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30065b6    83c408                 add esp,0x8
0xb30065b9    50                     push eax
        ;; PushArgument:34(t0)
        ;; t0 <- StaticCall:35(List. t0, t0)
0xb30065ba    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30065bf    e8649d3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30065c4    83c408                 add esp,0x8
0xb30065c7    50                     push eax
        ;; StoreLocal:36(stringsList, t0, lvl: 0)
0xb30065c8    58                     pop eax
0xb30065c9    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:37(stringsList lvl:0)
0xb30065cc    8b45f0                 mov eax,[ebp-0x10]
0xb30065cf    50                     push eax
        ;; PushArgument:38(t0)
        ;; t0 <- Constant:39(#0)
0xb30065d0    b800000000             mov eax,0
0xb30065d5    50                     push eax
        ;; PushArgument:40(t0)
        ;; t0 <- LoadLocal:41(strings lvl:0)
0xb30065d6    8b450c                 mov eax,[ebp+0xc]
0xb30065d9    50                     push eax
        ;; PushArgument:42(t0)
        ;; t0 <- Constant:43(#0)
0xb30065da    b800000000             mov eax,0
0xb30065df    50                     push eax
        ;; PushArgument:44(t0)
        ;; t0 <- InstanceCall:45([], t0, t0)
0xb30065e0    b9c1d728b3             mov ecx,0xb328d7c1  'ICData target:'[]' num-checks: 0'
0xb30065e5    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30065ea    e8299cffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30065ef    83c408                 add esp,0x8
0xb30065f2    50                     push eax
        ;; PushArgument:46(t0)
        ;; InstanceCall:47([]=, t0, t0, t0)
0xb30065f3    b911d828b3             mov ecx,0xb328d811  'ICData target:'[]=' num-checks: 0'
0xb30065f8    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb30065fd    e8b69dffff             call 0xb30003b8  [stub: ThreeArgsCheckInlineCache]
0xb3006602    83c40c                 add esp,0xc
        ;; t0 <- Constant:48(#1)
0xb3006605    b802000000             mov eax,0x2
0xb300660a    50                     push eax
        ;; StoreLocal:49(j, t0, lvl: 0)
0xb300660b    58                     pop eax
0xb300660c    8945e8                 mov [ebp-0x18],eax
        ;; t0 <- Constant:50(#1)
0xb300660f    b802000000             mov eax,0x2
0xb3006614    50                     push eax
        ;; StoreLocal:51(i, t0, lvl: 0)
0xb3006615    58                     pop eax
0xb3006616    8945e4                 mov [ebp-0x1c],eax
        ;; goto:93 4
        ;; B4
        ;; t0 <- LoadLocal:95(i lvl:0)
0xb3006619    8b45e4                 mov eax,[ebp-0x1c]
0xb300661c    50                     push eax
        ;; t1 <- LoadLocal:96(length lvl:0)
0xb300661d    8b45f4                 mov eax,[ebp-0xc]
0xb3006620    50                     push eax
        ;; Branch if RelationalOp:97(<, t0, t1) goto (5, 6)
0xb3006621    59                     pop ecx
0xb3006622    58                     pop eax
0xb3006623    50                     push eax
0xb3006624    51                     push ecx
0xb3006625    b969d828b3             mov ecx,0xb328d869  'ICData target:'<' num-checks: 0'
0xb300662a    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300662f    e8a49cffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3006634    83c408                 add esp,0x8
0xb3006637    3d391030b3             cmp eax, 0xb3301039  'true'
0xb300663c    0f85d6000000           jnz 0xb3006718
        ;; B5
        ;; CheckStackOverflow:52()
0xb3006642    3b25bc195809           cmp esp,[0x95819bc]
0xb3006648    0f8612010000           jna 0xb3006760
        ;; t0 <- LoadLocal:53(stringsList lvl:0)
0xb300664e    8b45f0                 mov eax,[ebp-0x10]
0xb3006651    50                     push eax
        ;; PushArgument:54(t0)
        ;; t0 <- LoadLocal:55(j lvl:0)
0xb3006652    8b45e8                 mov eax,[ebp-0x18]
0xb3006655    50                     push eax
        ;; t0 <- StoreLocal:56(:expr_temp, t0, lvl: 0)
0xb3006656    58                     pop eax
0xb3006657    8945f8                 mov [ebp-0x8],eax
0xb300665a    50                     push eax
        ;; PushArgument:57(t0)
        ;; t0 <- Constant:58(#1)
0xb300665b    b802000000             mov eax,0x2
0xb3006660    50                     push eax
        ;; PushArgument:59(t0)
        ;; t0 <- InstanceCall:60(+, t0, t0)
0xb3006661    b9c1d828b3             mov ecx,0xb328d8c1  'ICData target:'+' num-checks: 0'
0xb3006666    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300666b    e8689cffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3006670    83c408                 add esp,0x8
0xb3006673    50                     push eax
        ;; StoreLocal:61(j, t0, lvl: 0)
0xb3006674    58                     pop eax
0xb3006675    8945e8                 mov [ebp-0x18],eax
        ;; t0 <- LoadLocal:62(:expr_temp lvl:0)
0xb3006678    8b45f8                 mov eax,[ebp-0x8]
0xb300667b    50                     push eax
        ;; PushArgument:63(t0)
        ;; t0 <- LoadLocal:64(separator lvl:0)
0xb300667c    8b4508                 mov eax,[ebp+0x8]
0xb300667f    50                     push eax
        ;; PushArgument:65(t0)
        ;; InstanceCall:66([]=, t0, t0, t0)
0xb3006680    b919d928b3             mov ecx,0xb328d919  'ICData target:'[]=' num-checks: 0'
0xb3006685    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb300668a    e8299dffff             call 0xb30003b8  [stub: ThreeArgsCheckInlineCache]
0xb300668f    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:67(stringsList lvl:0)
0xb3006692    8b45f0                 mov eax,[ebp-0x10]
0xb3006695    50                     push eax
        ;; PushArgument:68(t0)
        ;; t0 <- LoadLocal:69(j lvl:0)
0xb3006696    8b45e8                 mov eax,[ebp-0x18]
0xb3006699    50                     push eax
        ;; t0 <- StoreLocal:70(:expr_temp, t0, lvl: 0)
0xb300669a    58                     pop eax
0xb300669b    8945f8                 mov [ebp-0x8],eax
0xb300669e    50                     push eax
        ;; PushArgument:71(t0)
        ;; t0 <- Constant:72(#1)
0xb300669f    b802000000             mov eax,0x2
0xb30066a4    50                     push eax
        ;; PushArgument:73(t0)
        ;; t0 <- InstanceCall:74(+, t0, t0)
0xb30066a5    b971d928b3             mov ecx,0xb328d971  'ICData target:'+' num-checks: 0'
0xb30066aa    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30066af    e8249cffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30066b4    83c408                 add esp,0x8
0xb30066b7    50                     push eax
        ;; StoreLocal:75(j, t0, lvl: 0)
0xb30066b8    58                     pop eax
0xb30066b9    8945e8                 mov [ebp-0x18],eax
        ;; t0 <- LoadLocal:76(:expr_temp lvl:0)
0xb30066bc    8b45f8                 mov eax,[ebp-0x8]
0xb30066bf    50                     push eax
        ;; PushArgument:77(t0)
        ;; t0 <- LoadLocal:78(strings lvl:0)
0xb30066c0    8b450c                 mov eax,[ebp+0xc]
0xb30066c3    50                     push eax
        ;; PushArgument:79(t0)
        ;; t0 <- LoadLocal:80(i lvl:0)
0xb30066c4    8b45e4                 mov eax,[ebp-0x1c]
0xb30066c7    50                     push eax
        ;; PushArgument:81(t0)
        ;; t0 <- InstanceCall:82([], t0, t0)
0xb30066c8    b9c9d928b3             mov ecx,0xb328d9c9  'ICData target:'[]' num-checks: 0'
0xb30066cd    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30066d2    e8419bffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30066d7    83c408                 add esp,0x8
0xb30066da    50                     push eax
        ;; PushArgument:83(t0)
        ;; InstanceCall:84([]=, t0, t0, t0)
0xb30066db    b919da28b3             mov ecx,0xb328da19  'ICData target:'[]=' num-checks: 0'
0xb30066e0    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb30066e5    e8ce9cffff             call 0xb30003b8  [stub: ThreeArgsCheckInlineCache]
0xb30066ea    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:85(i lvl:0)
0xb30066ed    8b45e4                 mov eax,[ebp-0x1c]
0xb30066f0    50                     push eax
        ;; t0 <- StoreLocal:86(:expr_temp, t0, lvl: 0)
0xb30066f1    58                     pop eax
0xb30066f2    8945f8                 mov [ebp-0x8],eax
0xb30066f5    50                     push eax
        ;; PushArgument:87(t0)
        ;; t0 <- Constant:88(#1)
0xb30066f6    b802000000             mov eax,0x2
0xb30066fb    50                     push eax
        ;; PushArgument:89(t0)
        ;; t0 <- InstanceCall:90(+, t0, t0)
0xb30066fc    b971da28b3             mov ecx,0xb328da71  'ICData target:'+' num-checks: 0'
0xb3006701    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006706    e8cd9bffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300670b    83c408                 add esp,0x8
0xb300670e    50                     push eax
        ;; StoreLocal:91(i, t0, lvl: 0)
0xb300670f    58                     pop eax
0xb3006710    8945e4                 mov [ebp-0x1c],eax
        ;; goto:94 4
0xb3006713    e901ffffff             jmp 0xb3006619
        ;; B6
        ;; goto:104 9
0xb3006718    e900000000             jmp 0xb300671d
        ;; B8
        ;; goto:105 9
        ;; B9
        ;; t0 <- LoadLocal:106(stringsList lvl:0)
0xb300671d    8b45f0                 mov eax,[ebp-0x10]
0xb3006720    50                     push eax
        ;; PushArgument:107(t0)
        ;; t0 <- StaticCall:108(concatAll t0)
0xb3006721    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006726    e8fd9b3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300672b    83c404                 add esp,0x4
0xb300672e    50                     push eax
        ;; Return:109(t0)
0xb300672f    58                     pop eax
0xb3006730    ba59ad1ab3             mov edx,0xb31aad59  'Function 'join': static.'
0xb3006735    ff422b                 inc [edx+0x2b]
0xb3006738    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300673f    7c05                   jl 0xb3006746
0xb3006741    e872a1ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3006746    89ec                   mov esp,ebp
0xb3006748    5d                     pop ebp
0xb3006749    c3                     ret
0xb300674a    90                     nop
0xb300674b    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300674c    b970d30a08             mov ecx,0x80ad370
0xb3006751    ba00000000             mov edx,0
0xb3006756    e8cd983702             call 0xb5380028  [stub: CallToRuntime]
0xb300675b    e916fdffff             jmp 0xb3006476
        ;; CheckStackOverflowSlowPath
0xb3006760    b970d30a08             mov ecx,0x80ad370
0xb3006765    ba00000000             mov edx,0
0xb300676a    e8b9983702             call 0xb5380028  [stub: CallToRuntime]
0xb300676f    e9dafeffff             jmp 0xb300664e
0xb3006774    e9bf9c3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3006779    e99a9d3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 51 : 0xb300647b 'ICData target:'get:length' num-checks: 0'
 56 : 0xb3006480 'ImmutableArray'
 115 : 0xb30064bb 'ICData target:'==' num-checks: 0'
 120 : 0xb30064c0 'ImmutableArray'
 138 : 0xb30064d2 'ICData target:'==' num-checks: 0'
 151 : 0xb30064df 'true'
 162 : 0xb30064ea ''
 169 : 0xb30064f1 'Function 'join': static.'
 208 : 0xb3006518 'ICData target:'get:length' num-checks: 0'
 213 : 0xb300651d 'ImmutableArray'
 264 : 0xb3006550 'ICData target:'==' num-checks: 0'
 269 : 0xb3006555 'ImmutableArray'
 287 : 0xb3006567 'ICData target:'==' num-checks: 0'
 300 : 0xb3006574 'true'
 327 : 0xb300658f 'ICData target:'*' num-checks: 0'
 332 : 0xb3006594 'ImmutableArray'
 352 : 0xb30065a8 'ICData target:'-' num-checks: 0'
 357 : 0xb30065ad 'ImmutableArray'
 371 : 0xb30065bb 'ImmutableArray'
 409 : 0xb30065e1 'ICData target:'[]' num-checks: 0'
 414 : 0xb30065e6 'ImmutableArray'
 428 : 0xb30065f4 'ICData target:'[]=' num-checks: 0'
 433 : 0xb30065f9 'ImmutableArray'
 478 : 0xb3006626 'ICData target:'<' num-checks: 0'
 483 : 0xb300662b 'ImmutableArray'
 496 : 0xb3006638 'true'
 538 : 0xb3006662 'ICData target:'+' num-checks: 0'
 543 : 0xb3006667 'ImmutableArray'
 569 : 0xb3006681 'ICData target:'[]=' num-checks: 0'
 574 : 0xb3006686 'ImmutableArray'
 606 : 0xb30066a6 'ICData target:'+' num-checks: 0'
 611 : 0xb30066ab 'ImmutableArray'
 641 : 0xb30066c9 'ICData target:'[]' num-checks: 0'
 646 : 0xb30066ce 'ImmutableArray'
 660 : 0xb30066dc 'ICData target:'[]=' num-checks: 0'
 665 : 0xb30066e1 'ImmutableArray'
 693 : 0xb30066fd 'ICData target:'+' num-checks: 0'
 698 : 0xb3006702 'ImmutableArray'
 730 : 0xb3006722 'ImmutableArray'
 745 : 0xb3006731 'Function 'join': static.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_join' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300647a	deopt-before 	5		14804	-1
0xb3006489	ic-call      	5		14804	-1
0xb3006489	deopt-after  	5		14804	-1
0xb300649f	deopt-before 	9		14811	-1
0xb30064c9	ic-call      	9		14811	-1
0xb30064c9	deopt-after  	9		14811	-1
0xb30064db	other        	-1		14811	-1
0xb3006506	other        	-1		0	-1
0xb300650b	return       	-1		14816	-1
0xb3006517	deopt-before 	19		14834	-1
0xb3006526	ic-call      	19		14834	-1
0xb3006526	deopt-after  	19		14834	-1
0xb3006534	deopt-before 	21		14836	-1
0xb300655e	ic-call      	21		14836	-1
0xb300655e	deopt-after  	21		14836	-1
0xb3006570	other        	-1		14836	-1
0xb300658e	deopt-before 	29		14850	-1
0xb300659d	ic-call      	29		14850	-1
0xb300659d	deopt-after  	29		14850	-1
0xb30065a7	deopt-before 	33		14853	-1
0xb30065b6	ic-call      	33		14853	-1
0xb30065b6	deopt-after  	33		14853	-1
0xb30065c4	fn-call      	35		14844	-1
0xb30065c4	deopt-after  	35		14844	-1
0xb30065e0	deopt-before 	45		14867	-1
0xb30065ef	ic-call      	45		14867	-1
0xb30065ef	deopt-after  	45		14867	-1
0xb30065f3	deopt-before 	47		14860	-1
0xb3006602	ic-call      	47		14860	-1
0xb3006602	deopt-after  	47		14860	-1
0xb3006619	deopt-before 	93		0	-1
0xb3006625	deopt-before 	97		14890	-1
0xb3006634	ic-call      	97		14890	-1
0xb3006634	deopt-after  	97		14890	-1
0xb3006661	deopt-before 	60		14902	-1
0xb3006670	ic-call      	60		14902	-1
0xb3006670	deopt-after  	60		14902	-1
0xb3006680	deopt-before 	66		14901	-1
0xb300668f	ic-call      	66		14901	-1
0xb300668f	deopt-after  	66		14901	-1
0xb30066a5	deopt-before 	74		14913	-1
0xb30066b4	ic-call      	74		14913	-1
0xb30066b4	deopt-after  	74		14913	-1
0xb30066c8	deopt-before 	82		14920	-1
0xb30066d7	ic-call      	82		14920	-1
0xb30066d7	deopt-after  	82		14920	-1
0xb30066db	deopt-before 	84		14912	-1
0xb30066ea	ic-call      	84		14912	-1
0xb30066ea	deopt-after  	84		14912	-1
0xb30066fc	deopt-before 	90		14894	-1
0xb300670b	ic-call      	90		14894	-1
0xb300670b	deopt-after  	90		14894	-1
0xb3006713	deopt-before 	94		0	-1
0xb3006718	deopt-before 	104		0	-1
0xb300671d	deopt-before 	105		0	-1
0xb300672b	fn-call      	108		14930	-1
0xb300672b	deopt-after  	108		14930	-1
0xb3006746	other        	-1		0	-1
0xb300674b	return       	-1		14927	-1
0xb300675b	other        	-1		14780	-1
0xb300676f	other        	-1		14879	-1
0xb3006774	patch        	-1		0	-1
0xb3006779	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_join' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_join' {
  stack var 'strings' offset 3 (valid 14787-14936)
  stack var 'separator' offset 2 (valid 14792-14936)
  stack var 'length' offset -3 (valid 14798-14936)
  stack var 'stringsList' offset -4 (valid 14823-14936)
  stack var 'j' offset -6 (valid 14873-14927)
  stack var 'i' offset -7 (valid 14882-14926)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_join' {
No exception handlers
}
Static call target functions {
  0xb30065c4: dart:core_List_List., 0xb5400019
  0xb300672b: dart:core__StringBase@0x36924d72_concatAll, 0xb5400019
}
PatchStaticCall: patching from 0xb30063ee to 'dart:core__StringBase@0x36924d72_join' 0xb3006448
PatchStaticCall: patching from 0xb30065c4 to 'dart:core_List_List.' 0xb3001358
Compiling function: 'dart:core__StringBase@0x36924d72_concatAll' @ token 14941
Before Optimizations
==== dart:core__StringBase@0x36924d72_concatAll
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#null)
    StoreLocal:4(stringsArray, t0, lvl: 0)
    t0 <- LoadLocal:5(strings lvl:0)
    t1 <- Constant:6(#null)
    t2 <- Constant:7(#null)
    t0 <- InstanceOf:8(t0 IS _ObjectArray@0x36924d72 instantiator(t1) type-arg(t2))
    t1 <- Constant:9(#true)
    Branch if StrictCompare:10(===, t0, t1) goto (5, 6)
B5[target]
    t0 <- LoadLocal:12(strings lvl:0)
    StoreLocal:13(stringsArray, t0, lvl: 0)
    goto:57 7
B6[target]
    t0 <- LoadLocal:14(strings lvl:0)
    PushArgument:15(t0)
    t0 <- InstanceCall:16(get:length, t0)
    StoreLocal:17(len, t0, lvl: 0)
    t0 <- Constant:18(#NULL AbstractTypeArguments)
    PushArgument:19(t0)
    t0 <- LoadLocal:20(len lvl:0)
    PushArgument:21(t0)
    t0 <- StaticCall:22(_ObjectArray@0x36924d72. t0, t0)
    StoreLocal:23(stringsArray, t0, lvl: 0)
    t0 <- Constant:24(#0)
    StoreLocal:25(i, t0, lvl: 0)
    goto:46 2
B2[join] pred(B3, B6)
    t0 <- LoadLocal:48(i lvl:0)
    t1 <- LoadLocal:49(len lvl:0)
    Branch if RelationalOp:50(<, t0, t1) goto (3, 4)
B3[target]
    CheckStackOverflow:26()
    t0 <- LoadLocal:27(stringsArray lvl:0)
    PushArgument:28(t0)
    t0 <- LoadLocal:29(i lvl:0)
    PushArgument:30(t0)
    t0 <- LoadLocal:31(strings lvl:0)
    PushArgument:32(t0)
    t0 <- LoadLocal:33(i lvl:0)
    PushArgument:34(t0)
    t0 <- InstanceCall:35([], t0, t0)
    PushArgument:36(t0)
    InstanceCall:37([]=, t0, t0, t0)
    t0 <- LoadLocal:38(i lvl:0)
    t0 <- StoreLocal:39(:expr_temp, t0, lvl: 0)
    PushArgument:40(t0)
    t0 <- Constant:41(#1)
    PushArgument:42(t0)
    t0 <- InstanceCall:43(+, t0, t0)
    StoreLocal:44(i, t0, lvl: 0)
    goto:47 2
B4[target]
    goto:58 7
B7[join] pred(B4, B5)
    t0 <- LoadLocal:59(stringsArray lvl:0)
    PushArgument:60(t0)
    t0 <- StaticCall:61(_concatAll@0x36924d72 t0)
    Return:62(t0)
--> 'dart:core__StringBase@0x36924d72_concatAll' entry: 0xb3006798 time: 556 us
Code for function 'dart:core__StringBase@0x36924d72_concatAll' {
        ;; Enter frame
0xb3006798    55                     push ebp
0xb3006799    89e5                   mov ebp,esp
0xb300679b    e800000000             call 0xb30067a0
0xb30067a0    83ec14                 sub esp,0x14
        ;; Initialize spill slots
0xb30067a3    b8190040b5             mov eax,0xb5400019
0xb30067a8    8945f8                 mov [ebp-0x8],eax
0xb30067ab    8945f4                 mov [ebp-0xc],eax
0xb30067ae    8945f0                 mov [ebp-0x10],eax
0xb30067b1    8945ec                 mov [ebp-0x14],eax
0xb30067b4    8945e8                 mov [ebp-0x18],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30067b7    3b25bc195809           cmp esp,[0x95819bc]
0xb30067bd    0f86f5010000           jna 0xb30069b8
        ;; t0 <- Constant:3(#null)
0xb30067c3    b8190040b5             mov eax,0xb5400019
0xb30067c8    50                     push eax
        ;; StoreLocal:4(stringsArray, t0, lvl: 0)
0xb30067c9    58                     pop eax
0xb30067ca    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- LoadLocal:5(strings lvl:0)
0xb30067cd    8b4508                 mov eax,[ebp+0x8]
0xb30067d0    50                     push eax
        ;; t1 <- Constant:6(#null)
0xb30067d1    b8190040b5             mov eax,0xb5400019
0xb30067d6    50                     push eax
        ;; t2 <- Constant:7(#null)
0xb30067d7    b8190040b5             mov eax,0xb5400019
0xb30067dc    50                     push eax
        ;; t0 <- InstanceOf:8(t0 IS _ObjectArray@0x36924d72 instantiator(t1) type-arg(t2))
0xb30067dd    5a                     pop edx
0xb30067de    59                     pop ecx
0xb30067df    58                     pop eax
0xb30067e0    51                     push ecx
0xb30067e1    52                     push edx
0xb30067e2    3d190040b5             cmp eax, 0xb5400019
0xb30067e7    0f8493000000           jz 0xb3006880
        ;; InlineInstanceof
        ;; InstantiatedTypeWithArgumentsTest
0xb30067ed    a801                   test al,0x1
0xb30067ef    0f848b000000           jz 0xb3006880
0xb30067f5    0fb74801               movzx_w ecx,[eax+0x1]
0xb30067f9    83f92e                 cmp ecx,0x2e
0xb30067fc    0f8485000000           jz 0xb3006887
        ;; Subtype1TestCacheLookup
0xb3006802    0fb77801               movzx_w edi,[eax+0x1]
0xb3006806    8b4e07                 mov ecx,[esi+0x7]
0xb3006809    8b891c100000           mov ecx,[ecx+0x101c]
0xb300680f    8b0cb9                 mov ecx,[ecx+edi*0x4]
0xb3006812    8b7927                 mov edi,[ecx+0x27]
0xb3006815    8b7f03                 mov edi,[edi+0x3]
0xb3006818    81ff390130b3           cmp edi,0xb3300139
0xb300681e    0f8463000000           jz 0xb3006887
0xb3006824    bf01e528b3             mov edi,0xb328e501  'instance of  Class: SubtypeTestCache'
0xb3006829    57                     push edi
0xb300682a    50                     push eax
0xb300682b    68190040b5             push 0xb5400019
0xb3006830    e8139e3702             call 0xb5380648  [stub: Subtype1TestCache]
0xb3006835    58                     pop eax
0xb3006836    58                     pop eax
0xb3006837    5f                     pop edi
0xb3006838    81f9190040b5           cmp ecx,0xb5400019
0xb300683e    7411                   jz 0xb3006851
0xb3006840    81f9391030b3           cmp ecx,0xb3301039
0xb3006846    0f843b000000           jz 0xb3006887
0xb300684c    e92f000000             jmp 0xb3006880
0xb3006851    8b1424                 mov edx,[esp]
0xb3006854    8b4c2404               mov ecx,[esp+0x4]
0xb3006858    68190040b5             push 0xb5400019
0xb300685d    50                     push eax
0xb300685e    6879da30b3             push 0xb330da79
0xb3006863    51                     push ecx
0xb3006864    52                     push edx
0xb3006865    b801e528b3             mov eax,0xb328e501  'instance of  Class: SubtypeTestCache'
0xb300686a    50                     push eax
0xb300686b    b900460b08             mov ecx,0x80b4600
0xb3006870    ba05000000             mov edx,0x5
0xb3006875    e8ae973702             call 0xb5380028  [stub: CallToRuntime]
0xb300687a    83c414                 add esp,0x14
0xb300687d    58                     pop eax
0xb300687e    eb0c                   jmp 0xb300688c
0xb3006880    b8411030b3             mov eax,0xb3301041  'false'
0xb3006885    eb05                   jmp 0xb300688c
0xb3006887    b8391030b3             mov eax,0xb3301039  'true'
0xb300688c    5a                     pop edx
0xb300688d    59                     pop ecx
0xb300688e    50                     push eax
        ;; t1 <- Constant:9(#true)
0xb300688f    b8391030b3             mov eax,0xb3301039  'true'
0xb3006894    50                     push eax
        ;; Branch if StrictCompare:10(===, t0, t1) goto (5, 6)
0xb3006895    58                     pop eax
0xb3006896    59                     pop ecx
0xb3006897    51                     push ecx
0xb3006898    50                     push eax
0xb3006899    e86a9f3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb300689e    58                     pop eax
0xb300689f    59                     pop ecx
0xb30068a0    0f850d000000           jnz 0xb30068b3
        ;; B5
        ;; t0 <- LoadLocal:12(strings lvl:0)
0xb30068a6    8b4508                 mov eax,[ebp+0x8]
0xb30068a9    50                     push eax
        ;; StoreLocal:13(stringsArray, t0, lvl: 0)
0xb30068aa    58                     pop eax
0xb30068ab    8945f4                 mov [ebp-0xc],eax
        ;; goto:57 7
0xb30068ae    e9d6000000             jmp 0xb3006989
        ;; B6
        ;; t0 <- LoadLocal:14(strings lvl:0)
0xb30068b3    8b4508                 mov eax,[ebp+0x8]
0xb30068b6    50                     push eax
        ;; PushArgument:15(t0)
        ;; t0 <- InstanceCall:16(get:length, t0)
0xb30068b7    b909e528b3             mov ecx,0xb328e509  'ICData target:'get:length' num-checks: 0'
0xb30068bc    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30068c1    e85299ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30068c6    83c404                 add esp,0x4
0xb30068c9    50                     push eax
        ;; StoreLocal:17(len, t0, lvl: 0)
0xb30068ca    58                     pop eax
0xb30068cb    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- Constant:18(#NULL AbstractTypeArguments)
0xb30068ce    b8190040b5             mov eax,0xb5400019
0xb30068d3    50                     push eax
        ;; PushArgument:19(t0)
        ;; t0 <- LoadLocal:20(len lvl:0)
0xb30068d4    8b45f0                 mov eax,[ebp-0x10]
0xb30068d7    50                     push eax
        ;; PushArgument:21(t0)
        ;; t0 <- StaticCall:22(_ObjectArray@0x36924d72. t0, t0)
0xb30068d8    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30068dd    e8469a3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30068e2    83c408                 add esp,0x8
0xb30068e5    50                     push eax
        ;; StoreLocal:23(stringsArray, t0, lvl: 0)
0xb30068e6    58                     pop eax
0xb30068e7    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- Constant:24(#0)
0xb30068ea    b800000000             mov eax,0
0xb30068ef    50                     push eax
        ;; StoreLocal:25(i, t0, lvl: 0)
0xb30068f0    58                     pop eax
0xb30068f1    8945e8                 mov [ebp-0x18],eax
        ;; goto:46 2
        ;; B2
        ;; t0 <- LoadLocal:48(i lvl:0)
0xb30068f4    8b45e8                 mov eax,[ebp-0x18]
0xb30068f7    50                     push eax
        ;; t1 <- LoadLocal:49(len lvl:0)
0xb30068f8    8b45f0                 mov eax,[ebp-0x10]
0xb30068fb    50                     push eax
        ;; Branch if RelationalOp:50(<, t0, t1) goto (3, 4)
0xb30068fc    59                     pop ecx
0xb30068fd    58                     pop eax
0xb30068fe    50                     push eax
0xb30068ff    51                     push ecx
0xb3006900    b971e528b3             mov ecx,0xb328e571  'ICData target:'<' num-checks: 0'
0xb3006905    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300690a    e8c999ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300690f    83c408                 add esp,0x8
0xb3006912    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3006917    0f856c000000           jnz 0xb3006989
        ;; B3
        ;; CheckStackOverflow:26()
0xb300691d    3b25bc195809           cmp esp,[0x95819bc]
0xb3006923    0f86a3000000           jna 0xb30069cc
        ;; t0 <- LoadLocal:27(stringsArray lvl:0)
0xb3006929    8b45f4                 mov eax,[ebp-0xc]
0xb300692c    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- LoadLocal:29(i lvl:0)
0xb300692d    8b45e8                 mov eax,[ebp-0x18]
0xb3006930    50                     push eax
        ;; PushArgument:30(t0)
        ;; t0 <- LoadLocal:31(strings lvl:0)
0xb3006931    8b4508                 mov eax,[ebp+0x8]
0xb3006934    50                     push eax
        ;; PushArgument:32(t0)
        ;; t0 <- LoadLocal:33(i lvl:0)
0xb3006935    8b45e8                 mov eax,[ebp-0x18]
0xb3006938    50                     push eax
        ;; PushArgument:34(t0)
        ;; t0 <- InstanceCall:35([], t0, t0)
0xb3006939    b9c9e528b3             mov ecx,0xb328e5c9  'ICData target:'[]' num-checks: 0'
0xb300693e    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006943    e8d098ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006948    83c408                 add esp,0x8
0xb300694b    50                     push eax
        ;; PushArgument:36(t0)
        ;; InstanceCall:37([]=, t0, t0, t0)
0xb300694c    b919e628b3             mov ecx,0xb328e619  'ICData target:'[]=' num-checks: 0'
0xb3006951    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3006956    e85d9affff             call 0xb30003b8  [stub: ThreeArgsCheckInlineCache]
0xb300695b    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:38(i lvl:0)
0xb300695e    8b45e8                 mov eax,[ebp-0x18]
0xb3006961    50                     push eax
        ;; t0 <- StoreLocal:39(:expr_temp, t0, lvl: 0)
0xb3006962    58                     pop eax
0xb3006963    8945f8                 mov [ebp-0x8],eax
0xb3006966    50                     push eax
        ;; PushArgument:40(t0)
        ;; t0 <- Constant:41(#1)
0xb3006967    b802000000             mov eax,0x2
0xb300696c    50                     push eax
        ;; PushArgument:42(t0)
        ;; t0 <- InstanceCall:43(+, t0, t0)
0xb300696d    b971e628b3             mov ecx,0xb328e671  'ICData target:'+' num-checks: 0'
0xb3006972    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006977    e85c99ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300697c    83c408                 add esp,0x8
0xb300697f    50                     push eax
        ;; StoreLocal:44(i, t0, lvl: 0)
0xb3006980    58                     pop eax
0xb3006981    8945e8                 mov [ebp-0x18],eax
        ;; goto:47 2
0xb3006984    e96bffffff             jmp 0xb30068f4
        ;; B4
        ;; goto:58 7
        ;; B7
        ;; t0 <- LoadLocal:59(stringsArray lvl:0)
0xb3006989    8b45f4                 mov eax,[ebp-0xc]
0xb300698c    50                     push eax
        ;; PushArgument:60(t0)
        ;; t0 <- StaticCall:61(_concatAll@0x36924d72 t0)
0xb300698d    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006992    e891993702             call 0xb5380328  [stub: CallStaticFunction]
0xb3006997    83c404                 add esp,0x4
0xb300699a    50                     push eax
        ;; Return:62(t0)
0xb300699b    58                     pop eax
0xb300699c    bac1ad1ab3             mov edx,0xb31aadc1  'Function 'concatAll': static.'
0xb30069a1    ff422b                 inc [edx+0x2b]
0xb30069a4    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30069ab    7c05                   jl 0xb30069b2
0xb30069ad    e8069fffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30069b2    89ec                   mov esp,ebp
0xb30069b4    5d                     pop ebp
0xb30069b5    c3                     ret
0xb30069b6    90                     nop
0xb30069b7    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30069b8    b970d30a08             mov ecx,0x80ad370
0xb30069bd    ba00000000             mov edx,0
0xb30069c2    e861963702             call 0xb5380028  [stub: CallToRuntime]
0xb30069c7    e9f7fdffff             jmp 0xb30067c3
        ;; CheckStackOverflowSlowPath
0xb30069cc    b970d30a08             mov ecx,0x80ad370
0xb30069d1    ba00000000             mov edx,0
0xb30069d6    e84d963702             call 0xb5380028  [stub: CallToRuntime]
0xb30069db    e949ffffff             jmp 0xb3006929
0xb30069e0    e9539a3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30069e5    e92e9b3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 130 : 0xb300681a 'Library:'dart:core' Class: _ObjectArray@0x36924d72'
 141 : 0xb3006825 'SubtypeTestCache'
 170 : 0xb3006842 'true'
 199 : 0xb300685f 'Type: class '_ObjectArray@0x36924d72''
 206 : 0xb3006866 'SubtypeTestCache'
 233 : 0xb3006881 'false'
 240 : 0xb3006888 'true'
 248 : 0xb3006890 'true'
 288 : 0xb30068b8 'ICData target:'get:length' num-checks: 0'
 293 : 0xb30068bd 'ImmutableArray'
 321 : 0xb30068d9 'ImmutableArray'
 361 : 0xb3006901 'ICData target:'<' num-checks: 0'
 366 : 0xb3006906 'ImmutableArray'
 379 : 0xb3006913 'true'
 418 : 0xb300693a 'ICData target:'[]' num-checks: 0'
 423 : 0xb300693f 'ImmutableArray'
 437 : 0xb300694d 'ICData target:'[]=' num-checks: 0'
 442 : 0xb3006952 'ImmutableArray'
 470 : 0xb300696e 'ICData target:'+' num-checks: 0'
 475 : 0xb3006973 'ImmutableArray'
 502 : 0xb300698e 'ImmutableArray'
 517 : 0xb300699d 'Function 'concatAll': static.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_concatAll' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300687a	other        	-1		14961	-1
0xb30068ae	deopt-before 	57		0	-1
0xb30068b7	deopt-before 	16		14982	-1
0xb30068c6	ic-call      	16		14982	-1
0xb30068c6	deopt-after  	16		14982	-1
0xb30068e2	fn-call      	22		14988	-1
0xb30068e2	deopt-after  	22		14988	-1
0xb30068f4	deopt-before 	46		0	-1
0xb3006900	deopt-before 	50		15007	-1
0xb300690f	ic-call      	50		15007	-1
0xb300690f	deopt-after  	50		15007	-1
0xb3006939	deopt-before 	35		15025	-1
0xb3006948	ic-call      	35		15025	-1
0xb3006948	deopt-after  	35		15025	-1
0xb300694c	deopt-before 	37		15018	-1
0xb300695b	ic-call      	37		15018	-1
0xb300695b	deopt-after  	37		15018	-1
0xb300696d	deopt-before 	43		15011	-1
0xb300697c	ic-call      	43		15011	-1
0xb300697c	deopt-after  	43		15011	-1
0xb3006984	deopt-before 	47		0	-1
0xb3006989	deopt-before 	58		0	-1
0xb3006997	fn-call      	61		15035	-1
0xb3006997	deopt-after  	61		15035	-1
0xb30069b2	other        	-1		0	-1
0xb30069b7	return       	-1		15032	-1
0xb30069c7	other        	-1		14941	-1
0xb30069db	other        	-1		14996	-1
0xb30069e0	patch        	-1		0	-1
0xb30069e5	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_concatAll' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_concatAll' {
  stack var 'strings' offset 2 (valid 14948-15041)
  stack var 'stringsArray' offset -3 (valid 14954-15041)
  stack var 'len' offset -4 (valid 14976-15032)
  stack var 'i' offset -6 (valid 14999-15031)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_concatAll' {
No exception handlers
}
Static call target functions {
  0xb30068e2: dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72., 0xb5400019
  0xb3006997: dart:core__StringBase@0x36924d72__concatAll@0x36924d72, 0xb5400019
}
PatchStaticCall: patching from 0xb300672b to 'dart:core__StringBase@0x36924d72_concatAll' 0xb3006798
PatchStaticCall: patching from 0xb3006997 to 'dart:core__StringBase@0x36924d72__concatAll@0x36924d72' 0xb3001948
Compiling function: 'dart:uri_Uri_get_query' @ token 40
Before Optimizations
==== dart:uri_Uri_get_query
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 28, immutable=0)
    Return:5(t0)
--> 'dart:uri_Uri_get_query' entry: 0xb3006a08 time: 43 us
Code for function 'dart:uri_Uri_get_query' {
0xb3006a08    8b442404               mov eax,[esp+0x4]
0xb3006a0c    8b401b                 mov eax,[eax+0x1b]
0xb3006a0f    c3                     ret
0xb3006a10    cc                     int3
0xb3006a11    e9229a3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:uri_Uri_get_query' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:uri_Uri_get_query' {
}
Variable Descriptors for function 'dart:uri_Uri_get_query' {
  stack var 'this' offset 2 (valid 21-40)
}
Exception Handlers for function 'dart:uri_Uri_get_query' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:uri_Uri_get_fragment' @ token 44
Before Optimizations
==== dart:uri_Uri_get_fragment
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 32, immutable=0)
    Return:5(t0)
--> 'dart:uri_Uri_get_fragment' entry: 0xb3006a28 time: 40 us
Code for function 'dart:uri_Uri_get_fragment' {
0xb3006a28    8b442404               mov eax,[esp+0x4]
0xb3006a2c    8b401f                 mov eax,[eax+0x1f]
0xb3006a2f    c3                     ret
0xb3006a30    cc                     int3
0xb3006a31    e9029a3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:uri_Uri_get_fragment' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:uri_Uri_get_fragment' {
}
Variable Descriptors for function 'dart:uri_Uri_get_fragment' {
  stack var 'this' offset 2 (valid 21-44)
}
Exception Handlers for function 'dart:uri_Uri_get_fragment' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb3004125 to 'dart:uri_Uri_Uri.fromComponents' 0xb3002408
PatchStaticCall: patching from 0xb3001130 to 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' 0xb30011a8
Compiling function: 'dart:uri_Uri_toString' @ token 1011
Before Optimizations
==== dart:uri_Uri_toString
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#NULL AbstractTypeArguments)
    PushArgument:4(t0)
    t0 <- StaticCall:5(StringBuffer. t0)
    StoreLocal:6(sb, t0, lvl: 0)
    t0 <- LoadLocal:7(sb lvl:0)
    PushArgument:8(t0)
    t0 <- LoadLocal:9(this lvl:0)
    PushArgument:10(t0)
    t0 <- InstanceCall:11(get:scheme, t0)
    PushArgument:12(t0)
    t0 <- LoadLocal:13(this lvl:0)
    PushArgument:14(t0)
    t0 <- InstanceCall:15(get:scheme, t0)
    PushArgument:16(t0)
    t0 <- Constant:17(#:)
    PushArgument:18(t0)
    StaticCall:19(_addIfNonEmpty@0x715366f t0, t0, t0, t0)
    t0 <- LoadLocal:20(this lvl:0)
    PushArgument:21(t0)
    t0 <- InstanceCall:22(hasAuthority, t0)
    t1 <- Constant:23(#true)
    Branch if StrictCompare:24(===, t0, t1) goto (10, 2)
B10[target]
    goto:101 9
B2[target]
    t0 <- LoadLocal:26(this lvl:0)
    PushArgument:27(t0)
    t0 <- InstanceCall:28(get:scheme, t0)
    t1 <- Constant:29(#file)
    Branch if EqualityCompare:30(t0 == t1) goto (11, 12)
B11[target]
    goto:103 9
B9[join] pred(B10, B11)
    t0 <- LoadLocal:33(sb lvl:0)
    PushArgument:34(t0)
    t0 <- Constant:35(#//)
    PushArgument:36(t0)
    InstanceCall:37(add, t0, t0)
    t0 <- LoadLocal:38(sb lvl:0)
    PushArgument:39(t0)
    t0 <- LoadLocal:40(this lvl:0)
    PushArgument:41(t0)
    t0 <- InstanceCall:42(get:userInfo, t0)
    PushArgument:43(t0)
    t0 <- LoadLocal:44(this lvl:0)
    PushArgument:45(t0)
    t0 <- InstanceCall:46(get:userInfo, t0)
    PushArgument:47(t0)
    t0 <- Constant:48(#@)
    PushArgument:49(t0)
    StaticCall:50(_addIfNonEmpty@0x715366f t0, t0, t0, t0)
    t0 <- LoadLocal:51(sb lvl:0)
    PushArgument:52(t0)
    t0 <- LoadLocal:53(this lvl:0)
    PushArgument:54(t0)
    t0 <- InstanceCall:55(get:domain, t0)
    t1 <- Constant:56(#null)
    Branch if StrictCompare:58(===, t0, t1) goto (3, 4)
B3[target]
    t0 <- Constant:60(#null)
    StoreLocal:61(:expr_temp, t0, lvl: 0)
    goto:69 5
B4[target]
    t0 <- LoadLocal:62(this lvl:0)
    PushArgument:63(t0)
    t0 <- InstanceCall:64(get:domain, t0)
    StoreLocal:65(:expr_temp, t0, lvl: 0)
    goto:70 5
B5[join] pred(B3, B4)
    t0 <- LoadLocal:71(:expr_temp lvl:0)
    PushArgument:72(t0)
    InstanceCall:73(add, t0, t0)
    t0 <- LoadLocal:74(this lvl:0)
    PushArgument:75(t0)
    t0 <- InstanceCall:76(get:port, t0)
    t1 <- Constant:77(#0)
    Branch if EqualityCompare:78(t0 != t1) goto (6, 7)
B6[target]
    t0 <- LoadLocal:80(sb lvl:0)
    PushArgument:81(t0)
    t0 <- Constant:82(#:)
    PushArgument:83(t0)
    InstanceCall:84(add, t0, t0)
    t0 <- LoadLocal:85(sb lvl:0)
    PushArgument:86(t0)
    t0 <- LoadLocal:87(this lvl:0)
    PushArgument:88(t0)
    t0 <- InstanceCall:89(get:port, t0)
    PushArgument:90(t0)
    t0 <- InstanceCall:91(toString, t0)
    PushArgument:92(t0)
    InstanceCall:93(add, t0, t0)
    goto:97 8
B7[target]
    goto:98 8
B8[join] pred(B6, B7)
    goto:106 13
B12[target]
    goto:107 13
B13[join] pred(B8, B12)
    t0 <- LoadLocal:108(sb lvl:0)
    PushArgument:109(t0)
    t0 <- LoadLocal:110(this lvl:0)
    PushArgument:111(t0)
    t0 <- InstanceCall:112(get:path, t0)
    t1 <- Constant:113(#null)
    Branch if StrictCompare:115(===, t0, t1) goto (14, 15)
B14[target]
    t0 <- Constant:117(#null)
    StoreLocal:118(:expr_temp, t0, lvl: 0)
    goto:126 16
B15[target]
    t0 <- LoadLocal:119(this lvl:0)
    PushArgument:120(t0)
    t0 <- InstanceCall:121(get:path, t0)
    StoreLocal:122(:expr_temp, t0, lvl: 0)
    goto:127 16
B16[join] pred(B14, B15)
    t0 <- LoadLocal:128(:expr_temp lvl:0)
    PushArgument:129(t0)
    InstanceCall:130(add, t0, t0)
    t0 <- LoadLocal:131(sb lvl:0)
    PushArgument:132(t0)
    t0 <- LoadLocal:133(this lvl:0)
    PushArgument:134(t0)
    t0 <- InstanceCall:135(get:query, t0)
    PushArgument:136(t0)
    t0 <- Constant:137(#?)
    PushArgument:138(t0)
    t0 <- LoadLocal:139(this lvl:0)
    PushArgument:140(t0)
    t0 <- InstanceCall:141(get:query, t0)
    PushArgument:142(t0)
    StaticCall:143(_addIfNonEmpty@0x715366f t0, t0, t0, t0)
    t0 <- LoadLocal:144(sb lvl:0)
    PushArgument:145(t0)
    t0 <- LoadLocal:146(this lvl:0)
    PushArgument:147(t0)
    t0 <- InstanceCall:148(get:fragment, t0)
    PushArgument:149(t0)
    t0 <- Constant:150(##)
    PushArgument:151(t0)
    t0 <- LoadLocal:152(this lvl:0)
    PushArgument:153(t0)
    t0 <- InstanceCall:154(get:fragment, t0)
    PushArgument:155(t0)
    StaticCall:156(_addIfNonEmpty@0x715366f t0, t0, t0, t0)
    t0 <- LoadLocal:157(sb lvl:0)
    PushArgument:158(t0)
    t0 <- InstanceCall:159(toString, t0)
    Return:160(t0)
--> 'dart:uri_Uri_toString' entry: 0xb3006a48 time: 969 us
Code for function 'dart:uri_Uri_toString' {
        ;; Enter frame
0xb3006a48    55                     push ebp
0xb3006a49    89e5                   mov ebp,esp
0xb3006a4b    e800000000             call 0xb3006a50
0xb3006a50    83ec0c                 sub esp,0xc
        ;; Initialize spill slots
0xb3006a53    b8190040b5             mov eax,0xb5400019
0xb3006a58    8945f8                 mov [ebp-0x8],eax
0xb3006a5b    8945f4                 mov [ebp-0xc],eax
0xb3006a5e    8945f0                 mov [ebp-0x10],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3006a61    3b25bc195809           cmp esp,[0x95819bc]
0xb3006a67    0f86cf030000           jna 0xb3006e3c
        ;; t0 <- Constant:3(#NULL AbstractTypeArguments)
0xb3006a6d    b8190040b5             mov eax,0xb5400019
0xb3006a72    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- StaticCall:5(StringBuffer. t0)
0xb3006a73    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006a78    e8ab983702             call 0xb5380328  [stub: CallStaticFunction]
0xb3006a7d    83c404                 add esp,0x4
0xb3006a80    50                     push eax
        ;; StoreLocal:6(sb, t0, lvl: 0)
0xb3006a81    58                     pop eax
0xb3006a82    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:7(sb lvl:0)
0xb3006a85    8b45f0                 mov eax,[ebp-0x10]
0xb3006a88    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- LoadLocal:9(this lvl:0)
0xb3006a89    8b4508                 mov eax,[ebp+0x8]
0xb3006a8c    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- InstanceCall:11(get:scheme, t0)
0xb3006a8d    b9f9ec28b3             mov ecx,0xb328ecf9  'ICData target:'get:scheme' num-checks: 0'
0xb3006a92    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006a97    e87c97ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006a9c    83c404                 add esp,0x4
0xb3006a9f    50                     push eax
        ;; PushArgument:12(t0)
        ;; t0 <- LoadLocal:13(this lvl:0)
0xb3006aa0    8b4508                 mov eax,[ebp+0x8]
0xb3006aa3    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- InstanceCall:15(get:scheme, t0)
0xb3006aa4    b949ed28b3             mov ecx,0xb328ed49  'ICData target:'get:scheme' num-checks: 0'
0xb3006aa9    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006aae    e86597ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006ab3    83c404                 add esp,0x4
0xb3006ab6    50                     push eax
        ;; PushArgument:16(t0)
        ;; t0 <- Constant:17(#:)
0xb3006ab7    b8312440b5             mov eax,0xb5402431
0xb3006abc    50                     push eax
        ;; PushArgument:18(t0)
        ;; StaticCall:19(_addIfNonEmpty@0x715366f t0, t0, t0, t0)
0xb3006abd    ba99ed28b3             mov edx,0xb328ed99  Array[4, 4, null]
0xb3006ac2    e861983702             call 0xb5380328  [stub: CallStaticFunction]
0xb3006ac7    83c410                 add esp,0x10
        ;; t0 <- LoadLocal:20(this lvl:0)
0xb3006aca    8b4508                 mov eax,[ebp+0x8]
0xb3006acd    50                     push eax
        ;; PushArgument:21(t0)
        ;; t0 <- InstanceCall:22(hasAuthority, t0)
0xb3006ace    b9f1ed28b3             mov ecx,0xb328edf1  'ICData target:'hasAuthority' num-checks: 0'
0xb3006ad3    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006ad8    e83b97ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006add    83c404                 add esp,0x4
0xb3006ae0    50                     push eax
        ;; t1 <- Constant:23(#true)
0xb3006ae1    b8391030b3             mov eax,0xb3301039  'true'
0xb3006ae6    50                     push eax
        ;; Branch if StrictCompare:24(===, t0, t1) goto (10, 2)
0xb3006ae7    58                     pop eax
0xb3006ae8    59                     pop ecx
0xb3006ae9    51                     push ecx
0xb3006aea    50                     push eax
0xb3006aeb    e8189d3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3006af0    58                     pop eax
0xb3006af1    59                     pop ecx
0xb3006af2    0f8505000000           jnz 0xb3006afd
        ;; B10
        ;; goto:101 9
0xb3006af8    e96b000000             jmp 0xb3006b68
        ;; B2
        ;; t0 <- LoadLocal:26(this lvl:0)
0xb3006afd    8b4508                 mov eax,[ebp+0x8]
0xb3006b00    50                     push eax
        ;; PushArgument:27(t0)
        ;; t0 <- InstanceCall:28(get:scheme, t0)
0xb3006b01    b941ee28b3             mov ecx,0xb328ee41  'ICData target:'get:scheme' num-checks: 0'
0xb3006b06    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006b0b    e80897ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006b10    83c404                 add esp,0x4
0xb3006b13    50                     push eax
        ;; t1 <- Constant:29(#file)
0xb3006b14    b8517e32b3             mov eax,0xb3327e51  'file'
0xb3006b19    50                     push eax
        ;; Branch if EqualityCompare:30(t0 == t1) goto (11, 12)
0xb3006b1a    5a                     pop edx
0xb3006b1b    5b                     pop ebx
0xb3006b1c    53                     push ebx
0xb3006b1d    52                     push edx
0xb3006b1e    813c24190040b5         cmp [esp],0xb5400019
0xb3006b25    0f8425000000           jz 0xb3006b50
0xb3006b2b    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3006b33    0f8417000000           jz 0xb3006b50
0xb3006b39    b991ee28b3             mov ecx,0xb328ee91  'ICData target:'==' num-checks: 0'
0xb3006b3e    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006b43    e89097ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3006b48    83c408                 add esp,0x8
0xb3006b4b    e90d000000             jmp 0xb3006b5d
0xb3006b50    b991ee28b3             mov ecx,0xb328ee91  'ICData target:'==' num-checks: 0'
0xb3006b55    e8ee9dffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3006b5a    83c408                 add esp,0x8
0xb3006b5d    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3006b62    0f85a4010000           jnz 0xb3006d0c
        ;; B11
        ;; goto:103 9
        ;; B9
        ;; t0 <- LoadLocal:33(sb lvl:0)
0xb3006b68    8b45f0                 mov eax,[ebp-0x10]
0xb3006b6b    50                     push eax
        ;; PushArgument:34(t0)
        ;; t0 <- Constant:35(#//)
0xb3006b6c    b8a9f118b3             mov eax,0xb318f1a9  '//'
0xb3006b71    50                     push eax
        ;; PushArgument:36(t0)
        ;; InstanceCall:37(add, t0, t0)
0xb3006b72    b9e9ee28b3             mov ecx,0xb328eee9  'ICData target:'add' num-checks: 0'
0xb3006b77    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006b7c    e89796ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006b81    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:38(sb lvl:0)
0xb3006b84    8b45f0                 mov eax,[ebp-0x10]
0xb3006b87    50                     push eax
        ;; PushArgument:39(t0)
        ;; t0 <- LoadLocal:40(this lvl:0)
0xb3006b88    8b4508                 mov eax,[ebp+0x8]
0xb3006b8b    50                     push eax
        ;; PushArgument:41(t0)
        ;; t0 <- InstanceCall:42(get:userInfo, t0)
0xb3006b8c    b939ef28b3             mov ecx,0xb328ef39  'ICData target:'get:userInfo' num-checks: 0'
0xb3006b91    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006b96    e87d96ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006b9b    83c404                 add esp,0x4
0xb3006b9e    50                     push eax
        ;; PushArgument:43(t0)
        ;; t0 <- LoadLocal:44(this lvl:0)
0xb3006b9f    8b4508                 mov eax,[ebp+0x8]
0xb3006ba2    50                     push eax
        ;; PushArgument:45(t0)
        ;; t0 <- InstanceCall:46(get:userInfo, t0)
0xb3006ba3    b989ef28b3             mov ecx,0xb328ef89  'ICData target:'get:userInfo' num-checks: 0'
0xb3006ba8    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006bad    e86696ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006bb2    83c404                 add esp,0x4
0xb3006bb5    50                     push eax
        ;; PushArgument:47(t0)
        ;; t0 <- Constant:48(#@)
0xb3006bb6    b8812440b5             mov eax,0xb5402481
0xb3006bbb    50                     push eax
        ;; PushArgument:49(t0)
        ;; StaticCall:50(_addIfNonEmpty@0x715366f t0, t0, t0, t0)
0xb3006bbc    ba99ed28b3             mov edx,0xb328ed99  Array[4, 4, null]
0xb3006bc1    e862973702             call 0xb5380328  [stub: CallStaticFunction]
0xb3006bc6    83c410                 add esp,0x10
        ;; t0 <- LoadLocal:51(sb lvl:0)
0xb3006bc9    8b45f0                 mov eax,[ebp-0x10]
0xb3006bcc    50                     push eax
        ;; PushArgument:52(t0)
        ;; t0 <- LoadLocal:53(this lvl:0)
0xb3006bcd    8b4508                 mov eax,[ebp+0x8]
0xb3006bd0    50                     push eax
        ;; PushArgument:54(t0)
        ;; t0 <- InstanceCall:55(get:domain, t0)
0xb3006bd1    b9f1ef28b3             mov ecx,0xb328eff1  'ICData target:'get:domain' num-checks: 0'
0xb3006bd6    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006bdb    e83896ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006be0    83c404                 add esp,0x4
0xb3006be3    50                     push eax
        ;; t1 <- Constant:56(#null)
0xb3006be4    b8190040b5             mov eax,0xb5400019
0xb3006be9    50                     push eax
        ;; Branch if StrictCompare:58(===, t0, t1) goto (3, 4)
0xb3006bea    58                     pop eax
0xb3006beb    59                     pop ecx
0xb3006bec    51                     push ecx
0xb3006bed    50                     push eax
0xb3006bee    e8159c3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3006bf3    58                     pop eax
0xb3006bf4    59                     pop ecx
0xb3006bf5    0f850f000000           jnz 0xb3006c0a
        ;; B3
        ;; t0 <- Constant:60(#null)
0xb3006bfb    b8217118b3             mov eax,0xb3187121  'null'
0xb3006c00    50                     push eax
        ;; StoreLocal:61(:expr_temp, t0, lvl: 0)
0xb3006c01    58                     pop eax
0xb3006c02    8945f8                 mov [ebp-0x8],eax
        ;; goto:69 5
0xb3006c05    e91b000000             jmp 0xb3006c25
        ;; B4
        ;; t0 <- LoadLocal:62(this lvl:0)
0xb3006c0a    8b4508                 mov eax,[ebp+0x8]
0xb3006c0d    50                     push eax
        ;; PushArgument:63(t0)
        ;; t0 <- InstanceCall:64(get:domain, t0)
0xb3006c0e    b941f028b3             mov ecx,0xb328f041  'ICData target:'get:domain' num-checks: 0'
0xb3006c13    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006c18    e8fb95ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006c1d    83c404                 add esp,0x4
0xb3006c20    50                     push eax
        ;; StoreLocal:65(:expr_temp, t0, lvl: 0)
0xb3006c21    58                     pop eax
0xb3006c22    8945f8                 mov [ebp-0x8],eax
        ;; goto:70 5
        ;; B5
        ;; t0 <- LoadLocal:71(:expr_temp lvl:0)
0xb3006c25    8b45f8                 mov eax,[ebp-0x8]
0xb3006c28    50                     push eax
        ;; PushArgument:72(t0)
        ;; InstanceCall:73(add, t0, t0)
0xb3006c29    b991f028b3             mov ecx,0xb328f091  'ICData target:'add' num-checks: 0'
0xb3006c2e    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006c33    e8e095ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006c38    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:74(this lvl:0)
0xb3006c3b    8b4508                 mov eax,[ebp+0x8]
0xb3006c3e    50                     push eax
        ;; PushArgument:75(t0)
        ;; t0 <- InstanceCall:76(get:port, t0)
0xb3006c3f    b9e1f028b3             mov ecx,0xb328f0e1  'ICData target:'get:port' num-checks: 0'
0xb3006c44    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006c49    e8ca95ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006c4e    83c404                 add esp,0x4
0xb3006c51    50                     push eax
        ;; t1 <- Constant:77(#0)
0xb3006c52    b800000000             mov eax,0
0xb3006c57    50                     push eax
        ;; Branch if EqualityCompare:78(t0 != t1) goto (6, 7)
0xb3006c58    5a                     pop edx
0xb3006c59    5b                     pop ebx
0xb3006c5a    53                     push ebx
0xb3006c5b    52                     push edx
0xb3006c5c    813c24190040b5         cmp [esp],0xb5400019
0xb3006c63    0f8425000000           jz 0xb3006c8e
0xb3006c69    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3006c71    0f8417000000           jz 0xb3006c8e
0xb3006c77    b931f128b3             mov ecx,0xb328f131  'ICData target:'==' num-checks: 0'
0xb3006c7c    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006c81    e85296ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3006c86    83c408                 add esp,0x8
0xb3006c89    e90d000000             jmp 0xb3006c9b
0xb3006c8e    b931f128b3             mov ecx,0xb328f131  'ICData target:'==' num-checks: 0'
0xb3006c93    e8b09cffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3006c98    83c408                 add esp,0x8
0xb3006c9b    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3006ca0    0f8461000000           jz 0xb3006d07
        ;; B6
        ;; t0 <- LoadLocal:80(sb lvl:0)
0xb3006ca6    8b45f0                 mov eax,[ebp-0x10]
0xb3006ca9    50                     push eax
        ;; PushArgument:81(t0)
        ;; t0 <- Constant:82(#:)
0xb3006caa    b8312440b5             mov eax,0xb5402431
0xb3006caf    50                     push eax
        ;; PushArgument:83(t0)
        ;; InstanceCall:84(add, t0, t0)
0xb3006cb0    b989f128b3             mov ecx,0xb328f189  'ICData target:'add' num-checks: 0'
0xb3006cb5    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006cba    e85995ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006cbf    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:85(sb lvl:0)
0xb3006cc2    8b45f0                 mov eax,[ebp-0x10]
0xb3006cc5    50                     push eax
        ;; PushArgument:86(t0)
        ;; t0 <- LoadLocal:87(this lvl:0)
0xb3006cc6    8b4508                 mov eax,[ebp+0x8]
0xb3006cc9    50                     push eax
        ;; PushArgument:88(t0)
        ;; t0 <- InstanceCall:89(get:port, t0)
0xb3006cca    b9d9f128b3             mov ecx,0xb328f1d9  'ICData target:'get:port' num-checks: 0'
0xb3006ccf    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006cd4    e83f95ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006cd9    83c404                 add esp,0x4
0xb3006cdc    50                     push eax
        ;; PushArgument:90(t0)
        ;; t0 <- InstanceCall:91(toString, t0)
0xb3006cdd    b929f228b3             mov ecx,0xb328f229  'ICData target:'toString' num-checks: 0'
0xb3006ce2    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006ce7    e82c95ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006cec    83c404                 add esp,0x4
0xb3006cef    50                     push eax
        ;; PushArgument:92(t0)
        ;; InstanceCall:93(add, t0, t0)
0xb3006cf0    b979f228b3             mov ecx,0xb328f279  'ICData target:'add' num-checks: 0'
0xb3006cf5    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006cfa    e81995ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006cff    83c408                 add esp,0x8
        ;; goto:97 8
0xb3006d02    e900000000             jmp 0xb3006d07
        ;; B7
        ;; goto:98 8
        ;; B8
        ;; goto:106 13
0xb3006d07    e900000000             jmp 0xb3006d0c
        ;; B12
        ;; goto:107 13
        ;; B13
        ;; t0 <- LoadLocal:108(sb lvl:0)
0xb3006d0c    8b45f0                 mov eax,[ebp-0x10]
0xb3006d0f    50                     push eax
        ;; PushArgument:109(t0)
        ;; t0 <- LoadLocal:110(this lvl:0)
0xb3006d10    8b4508                 mov eax,[ebp+0x8]
0xb3006d13    50                     push eax
        ;; PushArgument:111(t0)
        ;; t0 <- InstanceCall:112(get:path, t0)
0xb3006d14    b9c9f228b3             mov ecx,0xb328f2c9  'ICData target:'get:path' num-checks: 0'
0xb3006d19    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006d1e    e8f594ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006d23    83c404                 add esp,0x4
0xb3006d26    50                     push eax
        ;; t1 <- Constant:113(#null)
0xb3006d27    b8190040b5             mov eax,0xb5400019
0xb3006d2c    50                     push eax
        ;; Branch if StrictCompare:115(===, t0, t1) goto (14, 15)
0xb3006d2d    58                     pop eax
0xb3006d2e    59                     pop ecx
0xb3006d2f    51                     push ecx
0xb3006d30    50                     push eax
0xb3006d31    e8d29a3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3006d36    58                     pop eax
0xb3006d37    59                     pop ecx
0xb3006d38    0f850f000000           jnz 0xb3006d4d
        ;; B14
        ;; t0 <- Constant:117(#null)
0xb3006d3e    b8217118b3             mov eax,0xb3187121  'null'
0xb3006d43    50                     push eax
        ;; StoreLocal:118(:expr_temp, t0, lvl: 0)
0xb3006d44    58                     pop eax
0xb3006d45    8945f8                 mov [ebp-0x8],eax
        ;; goto:126 16
0xb3006d48    e91b000000             jmp 0xb3006d68
        ;; B15
        ;; t0 <- LoadLocal:119(this lvl:0)
0xb3006d4d    8b4508                 mov eax,[ebp+0x8]
0xb3006d50    50                     push eax
        ;; PushArgument:120(t0)
        ;; t0 <- InstanceCall:121(get:path, t0)
0xb3006d51    b919f328b3             mov ecx,0xb328f319  'ICData target:'get:path' num-checks: 0'
0xb3006d56    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006d5b    e8b894ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006d60    83c404                 add esp,0x4
0xb3006d63    50                     push eax
        ;; StoreLocal:122(:expr_temp, t0, lvl: 0)
0xb3006d64    58                     pop eax
0xb3006d65    8945f8                 mov [ebp-0x8],eax
        ;; goto:127 16
        ;; B16
        ;; t0 <- LoadLocal:128(:expr_temp lvl:0)
0xb3006d68    8b45f8                 mov eax,[ebp-0x8]
0xb3006d6b    50                     push eax
        ;; PushArgument:129(t0)
        ;; InstanceCall:130(add, t0, t0)
0xb3006d6c    b969f328b3             mov ecx,0xb328f369  'ICData target:'add' num-checks: 0'
0xb3006d71    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3006d76    e89d94ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006d7b    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:131(sb lvl:0)
0xb3006d7e    8b45f0                 mov eax,[ebp-0x10]
0xb3006d81    50                     push eax
        ;; PushArgument:132(t0)
        ;; t0 <- LoadLocal:133(this lvl:0)
0xb3006d82    8b4508                 mov eax,[ebp+0x8]
0xb3006d85    50                     push eax
        ;; PushArgument:134(t0)
        ;; t0 <- InstanceCall:135(get:query, t0)
0xb3006d86    b9b9f328b3             mov ecx,0xb328f3b9  'ICData target:'get:query' num-checks: 0'
0xb3006d8b    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006d90    e88394ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006d95    83c404                 add esp,0x4
0xb3006d98    50                     push eax
        ;; PushArgument:136(t0)
        ;; t0 <- Constant:137(#?)
0xb3006d99    b8712440b5             mov eax,0xb5402471
0xb3006d9e    50                     push eax
        ;; PushArgument:138(t0)
        ;; t0 <- LoadLocal:139(this lvl:0)
0xb3006d9f    8b4508                 mov eax,[ebp+0x8]
0xb3006da2    50                     push eax
        ;; PushArgument:140(t0)
        ;; t0 <- InstanceCall:141(get:query, t0)
0xb3006da3    b909f428b3             mov ecx,0xb328f409  'ICData target:'get:query' num-checks: 0'
0xb3006da8    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006dad    e86694ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006db2    83c404                 add esp,0x4
0xb3006db5    50                     push eax
        ;; PushArgument:142(t0)
        ;; StaticCall:143(_addIfNonEmpty@0x715366f t0, t0, t0, t0)
0xb3006db6    ba99ed28b3             mov edx,0xb328ed99  Array[4, 4, null]
0xb3006dbb    e868953702             call 0xb5380328  [stub: CallStaticFunction]
0xb3006dc0    83c410                 add esp,0x10
        ;; t0 <- LoadLocal:144(sb lvl:0)
0xb3006dc3    8b45f0                 mov eax,[ebp-0x10]
0xb3006dc6    50                     push eax
        ;; PushArgument:145(t0)
        ;; t0 <- LoadLocal:146(this lvl:0)
0xb3006dc7    8b4508                 mov eax,[ebp+0x8]
0xb3006dca    50                     push eax
        ;; PushArgument:147(t0)
        ;; t0 <- InstanceCall:148(get:fragment, t0)
0xb3006dcb    b971f428b3             mov ecx,0xb328f471  'ICData target:'get:fragment' num-checks: 0'
0xb3006dd0    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006dd5    e83e94ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006dda    83c404                 add esp,0x4
0xb3006ddd    50                     push eax
        ;; PushArgument:149(t0)
        ;; t0 <- Constant:150(##)
0xb3006dde    b8d12240b5             mov eax,0xb54022d1
0xb3006de3    50                     push eax
        ;; PushArgument:151(t0)
        ;; t0 <- LoadLocal:152(this lvl:0)
0xb3006de4    8b4508                 mov eax,[ebp+0x8]
0xb3006de7    50                     push eax
        ;; PushArgument:153(t0)
        ;; t0 <- InstanceCall:154(get:fragment, t0)
0xb3006de8    b9c1f428b3             mov ecx,0xb328f4c1  'ICData target:'get:fragment' num-checks: 0'
0xb3006ded    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006df2    e82194ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006df7    83c404                 add esp,0x4
0xb3006dfa    50                     push eax
        ;; PushArgument:155(t0)
        ;; StaticCall:156(_addIfNonEmpty@0x715366f t0, t0, t0, t0)
0xb3006dfb    ba99ed28b3             mov edx,0xb328ed99  Array[4, 4, null]
0xb3006e00    e823953702             call 0xb5380328  [stub: CallStaticFunction]
0xb3006e05    83c410                 add esp,0x10
        ;; t0 <- LoadLocal:157(sb lvl:0)
0xb3006e08    8b45f0                 mov eax,[ebp-0x10]
0xb3006e0b    50                     push eax
        ;; PushArgument:158(t0)
        ;; t0 <- InstanceCall:159(toString, t0)
0xb3006e0c    b929f528b3             mov ecx,0xb328f529  'ICData target:'toString' num-checks: 0'
0xb3006e11    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3006e16    e8fd93ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3006e1b    83c404                 add esp,0x4
0xb3006e1e    50                     push eax
        ;; Return:160(t0)
0xb3006e1f    58                     pop eax
0xb3006e20    bad91e0bb3             mov edx,0xb30b1ed9  'Function 'toString':.'
0xb3006e25    ff422b                 inc [edx+0x2b]
0xb3006e28    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3006e2f    7c05                   jl 0xb3006e36
0xb3006e31    e8829affff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3006e36    89ec                   mov esp,ebp
0xb3006e38    5d                     pop ebp
0xb3006e39    c3                     ret
0xb3006e3a    90                     nop
0xb3006e3b    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3006e3c    b970d30a08             mov ecx,0x80ad370
0xb3006e41    ba00000000             mov edx,0
0xb3006e46    e8dd913702             call 0xb5380028  [stub: CallToRuntime]
0xb3006e4b    e91dfcffff             jmp 0xb3006a6d
0xb3006e50    e9e3953702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3006e55    e9be963702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 44 : 0xb3006a74 'ImmutableArray'
 70 : 0xb3006a8e 'ICData target:'get:scheme' num-checks: 0'
 75 : 0xb3006a93 'ImmutableArray'
 93 : 0xb3006aa5 'ICData target:'get:scheme' num-checks: 0'
 98 : 0xb3006aaa 'ImmutableArray'
 112 : 0xb3006ab8 ':'
 118 : 0xb3006abe 'ImmutableArray'
 135 : 0xb3006acf 'ICData target:'hasAuthority' num-checks: 0'
 140 : 0xb3006ad4 'ImmutableArray'
 154 : 0xb3006ae2 'true'
 186 : 0xb3006b02 'ICData target:'get:scheme' num-checks: 0'
 191 : 0xb3006b07 'ImmutableArray'
 205 : 0xb3006b15 'file'
 242 : 0xb3006b3a 'ICData target:'==' num-checks: 0'
 247 : 0xb3006b3f 'ImmutableArray'
 265 : 0xb3006b51 'ICData target:'==' num-checks: 0'
 278 : 0xb3006b5e 'true'
 293 : 0xb3006b6d '//'
 299 : 0xb3006b73 'ICData target:'add' num-checks: 0'
 304 : 0xb3006b78 'ImmutableArray'
 325 : 0xb3006b8d 'ICData target:'get:userInfo' num-checks: 0'
 330 : 0xb3006b92 'ImmutableArray'
 348 : 0xb3006ba4 'ICData target:'get:userInfo' num-checks: 0'
 353 : 0xb3006ba9 'ImmutableArray'
 367 : 0xb3006bb7 '@'
 373 : 0xb3006bbd 'ImmutableArray'
 394 : 0xb3006bd2 'ICData target:'get:domain' num-checks: 0'
 399 : 0xb3006bd7 'ImmutableArray'
 436 : 0xb3006bfc 'null'
 455 : 0xb3006c0f 'ICData target:'get:domain' num-checks: 0'
 460 : 0xb3006c14 'ImmutableArray'
 482 : 0xb3006c2a 'ICData target:'add' num-checks: 0'
 487 : 0xb3006c2f 'ImmutableArray'
 504 : 0xb3006c40 'ICData target:'get:port' num-checks: 0'
 509 : 0xb3006c45 'ImmutableArray'
 560 : 0xb3006c78 'ICData target:'==' num-checks: 0'
 565 : 0xb3006c7d 'ImmutableArray'
 583 : 0xb3006c8f 'ICData target:'==' num-checks: 0'
 596 : 0xb3006c9c 'true'
 611 : 0xb3006cab ':'
 617 : 0xb3006cb1 'ICData target:'add' num-checks: 0'
 622 : 0xb3006cb6 'ImmutableArray'
 643 : 0xb3006ccb 'ICData target:'get:port' num-checks: 0'
 648 : 0xb3006cd0 'ImmutableArray'
 662 : 0xb3006cde 'ICData target:'toString' num-checks: 0'
 667 : 0xb3006ce3 'ImmutableArray'
 681 : 0xb3006cf1 'ICData target:'add' num-checks: 0'
 686 : 0xb3006cf6 'ImmutableArray'
 717 : 0xb3006d15 'ICData target:'get:path' num-checks: 0'
 722 : 0xb3006d1a 'ImmutableArray'
 759 : 0xb3006d3f 'null'
 778 : 0xb3006d52 'ICData target:'get:path' num-checks: 0'
 783 : 0xb3006d57 'ImmutableArray'
 805 : 0xb3006d6d 'ICData target:'add' num-checks: 0'
 810 : 0xb3006d72 'ImmutableArray'
 831 : 0xb3006d87 'ICData target:'get:query' num-checks: 0'
 836 : 0xb3006d8c 'ImmutableArray'
 850 : 0xb3006d9a '?'
 860 : 0xb3006da4 'ICData target:'get:query' num-checks: 0'
 865 : 0xb3006da9 'ImmutableArray'
 879 : 0xb3006db7 'ImmutableArray'
 900 : 0xb3006dcc 'ICData target:'get:fragment' num-checks: 0'
 905 : 0xb3006dd1 'ImmutableArray'
 919 : 0xb3006ddf '#'
 929 : 0xb3006de9 'ICData target:'get:fragment' num-checks: 0'
 934 : 0xb3006dee 'ImmutableArray'
 948 : 0xb3006dfc 'ImmutableArray'
 965 : 0xb3006e0d 'ICData target:'toString' num-checks: 0'
 970 : 0xb3006e12 'ImmutableArray'
 985 : 0xb3006e21 'Function 'toString':.'
}
PC Descriptors for function 'dart:uri_Uri_toString' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3006a7d	fn-call      	5		1019	-1
0xb3006a7d	deopt-after  	5		1019	-1
0xb3006a8d	deopt-before 	11		1031	-1
0xb3006a9c	ic-call      	11		1031	-1
0xb3006a9c	deopt-after  	11		1031	-1
0xb3006aa4	deopt-before 	15		1033	-1
0xb3006ab3	ic-call      	15		1033	-1
0xb3006ab3	deopt-after  	15		1033	-1
0xb3006ac7	fn-call      	19		1027	-1
0xb3006ac7	deopt-after  	19		1027	-1
0xb3006ace	deopt-before 	22		1043	-1
0xb3006add	ic-call      	22		1043	-1
0xb3006add	deopt-after  	22		1043	-1
0xb3006af8	deopt-before 	101		0	-1
0xb3006b01	deopt-before 	28		1047	-1
0xb3006b10	ic-call      	28		1047	-1
0xb3006b10	deopt-after  	28		1047	-1
0xb3006b1e	deopt-before 	30		1048	-1
0xb3006b48	ic-call      	30		1048	-1
0xb3006b48	deopt-after  	30		1048	-1
0xb3006b5a	other        	-1		1048	-1
0xb3006b68	deopt-before 	103		0	-1
0xb3006b72	deopt-before 	37		1059	-1
0xb3006b81	ic-call      	37		1059	-1
0xb3006b81	deopt-after  	37		1059	-1
0xb3006b8c	deopt-before 	42		1070	-1
0xb3006b9b	ic-call      	42		1070	-1
0xb3006b9b	deopt-after  	42		1070	-1
0xb3006ba3	deopt-before 	46		1072	-1
0xb3006bb2	ic-call      	46		1072	-1
0xb3006bb2	deopt-after  	46		1072	-1
0xb3006bc6	fn-call      	50		1066	-1
0xb3006bc6	deopt-after  	50		1066	-1
0xb3006bd1	deopt-before 	55		1084	-1
0xb3006be0	ic-call      	55		1084	-1
0xb3006be0	deopt-after  	55		1084	-1
0xb3006c05	deopt-before 	69		0	-1
0xb3006c0e	deopt-before 	64		1091	-1
0xb3006c1d	ic-call      	64		1091	-1
0xb3006c1d	deopt-after  	64		1091	-1
0xb3006c25	deopt-before 	70		0	-1
0xb3006c29	deopt-before 	73		1083	-1
0xb3006c38	ic-call      	73		1083	-1
0xb3006c38	deopt-after  	73		1083	-1
0xb3006c3f	deopt-before 	76		1096	-1
0xb3006c4e	ic-call      	76		1096	-1
0xb3006c4e	deopt-after  	76		1096	-1
0xb3006c5c	deopt-before 	78		1097	-1
0xb3006c86	ic-call      	78		1097	-1
0xb3006c86	deopt-after  	78		1097	-1
0xb3006c98	other        	-1		1097	-1
0xb3006cb0	deopt-before 	84		1107	-1
0xb3006cbf	ic-call      	84		1107	-1
0xb3006cbf	deopt-after  	84		1107	-1
0xb3006cca	deopt-before 	89		1118	-1
0xb3006cd9	ic-call      	89		1118	-1
0xb3006cd9	deopt-after  	89		1118	-1
0xb3006cdd	deopt-before 	91		1122	-1
0xb3006cec	ic-call      	91		1122	-1
0xb3006cec	deopt-after  	91		1122	-1
0xb3006cf0	deopt-before 	93		1117	-1
0xb3006cff	ic-call      	93		1117	-1
0xb3006cff	deopt-after  	93		1117	-1
0xb3006d02	deopt-before 	97		0	-1
0xb3006d07	deopt-before 	98		0	-1
0xb3006d07	deopt-before 	106		0	-1
0xb3006d0c	deopt-before 	107		0	-1
0xb3006d14	deopt-before 	112		1134	-1
0xb3006d23	ic-call      	112		1134	-1
0xb3006d23	deopt-after  	112		1134	-1
0xb3006d48	deopt-before 	126		0	-1
0xb3006d51	deopt-before 	121		1141	-1
0xb3006d60	ic-call      	121		1141	-1
0xb3006d60	deopt-after  	121		1141	-1
0xb3006d68	deopt-before 	127		0	-1
0xb3006d6c	deopt-before 	130		1133	-1
0xb3006d7b	ic-call      	130		1133	-1
0xb3006d7b	deopt-after  	130		1133	-1
0xb3006d86	deopt-before 	135		1150	-1
0xb3006d95	ic-call      	135		1150	-1
0xb3006d95	deopt-after  	135		1150	-1
0xb3006da3	deopt-before 	141		1155	-1
0xb3006db2	ic-call      	141		1155	-1
0xb3006db2	deopt-after  	141		1155	-1
0xb3006dc0	fn-call      	143		1146	-1
0xb3006dc0	deopt-after  	143		1146	-1
0xb3006dcb	deopt-before 	148		1164	-1
0xb3006dda	ic-call      	148		1164	-1
0xb3006dda	deopt-after  	148		1164	-1
0xb3006de8	deopt-before 	154		1170	-1
0xb3006df7	ic-call      	154		1170	-1
0xb3006df7	deopt-after  	154		1170	-1
0xb3006e05	fn-call      	156		1160	-1
0xb3006e05	deopt-after  	156		1160	-1
0xb3006e0c	deopt-before 	159		1180	-1
0xb3006e1b	ic-call      	159		1180	-1
0xb3006e1b	deopt-after  	159		1180	-1
0xb3006e36	other        	-1		0	-1
0xb3006e3b	return       	-1		1174	-1
0xb3006e4b	other        	-1		1011	-1
0xb3006e50	patch        	-1		0	-1
0xb3006e55	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_Uri_toString' {
}
Variable Descriptors for function 'dart:uri_Uri_toString' {
  stack var 'this' offset 2 (valid 21-1184)
  stack var 'sb' offset -4 (valid 1016-1184)
}
Exception Handlers for function 'dart:uri_Uri_toString' {
No exception handlers
}
Static call target functions {
  0xb3006a7d: dart:core_StringBuffer_StringBuffer., 0xb5400019
  0xb3006ac7: dart:uri_Uri__addIfNonEmpty@0x715366f, 0xb5400019
  0xb3006bc6: dart:uri_Uri__addIfNonEmpty@0x715366f, 0xb5400019
  0xb3006dc0: dart:uri_Uri__addIfNonEmpty@0x715366f, 0xb5400019
  0xb3006e05: dart:uri_Uri__addIfNonEmpty@0x715366f, 0xb5400019
}
Compiling function: 'dart:core_StringBuffer_StringBuffer.' @ token 18941
Before Optimizations
==== dart:core_StringBuffer_StringBuffer.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- AllocateObject:3(Library:'dart:core' Class: _StringBufferImpl@0x36924d72)
    t0 <- StoreLocal:4(:alloc18953, t0, lvl: 0)
    PushArgument:5(t0)
    t0 <- Constant:6(#3)
    PushArgument:7(t0)
    t0 <- LoadLocal:8(content lvl:0)
    PushArgument:9(t0)
    StaticCall:10(_StringBufferImpl@0x36924d72. t0, t0, t0)
    t0 <- LoadLocal:11(:alloc18953 lvl:0)
    Return:12(t0)
Code for allocation stub 'Library:'dart:core' Class: _StringBufferImpl@0x36924d72': {
0xb3006e78    8b0508fe5609           mov eax,[0x956fe08]
0xb3006e7e    8d5810                 lea ebx,[eax+0x10]
0xb3006e81    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb3006e87    732a                   jnc 0xb3006eb3
0xb3006e89    891d08fe5609           mov [0x956fe08],ebx
0xb3006e8f    ba39421ab3             mov edx,0xb31a4239  'Library:'dart:core' Class: _StringBufferImpl@0x36924d72'
0xb3006e94    c70000020d01           mov [eax],0x10d0200
0xb3006e9a    c74004190040b5         mov [eax+0x4],0xb5400019
0xb3006ea1    c74008190040b5         mov [eax+0x8],0xb5400019
0xb3006ea8    c7400c190040b5         mov [eax+0xc],0xb5400019
0xb3006eaf    83c001                 add eax,0x1
0xb3006eb2    c3                     ret
0xb3006eb3    55                     push ebp
0xb3006eb4    89e5                   mov ebp,esp
0xb3006eb6    6800000000             push 0
0xb3006ebb    68190040b5             push 0xb5400019
0xb3006ec0    6839421ab3             push 0xb31a4239
0xb3006ec5    68190040b5             push 0xb5400019
0xb3006eca    6800000000             push 0
0xb3006ecf    b9d0080b08             mov ecx,0x80b08d0
0xb3006ed4    ba03000000             mov edx,0x3
0xb3006ed9    e84a913702             call 0xb5380028  [stub: CallToRuntime]
0xb3006ede    58                     pop eax
0xb3006edf    58                     pop eax
0xb3006ee0    58                     pop eax
0xb3006ee1    58                     pop eax
0xb3006ee2    89ec                   mov esp,ebp
0xb3006ee4    5d                     pop ebp
0xb3006ee5    c3                     ret
}
--> 'dart:core_StringBuffer_StringBuffer.' entry: 0xb3006ef8 time: 782 us
Code for function 'dart:core_StringBuffer_StringBuffer.' {
        ;; Enter frame
0xb3006ef8    55                     push ebp
0xb3006ef9    89e5                   mov ebp,esp
0xb3006efb    e800000000             call 0xb3006f00
0xb3006f00    83ec0c                 sub esp,0xc
        ;; Copy parameters
0xb3006f03    8b4a0f                 mov ecx,[edx+0xf]
0xb3006f06    83f902                 cmp ecx,0x2
0xb3006f09    0f8c41000000           jl 0xb3006f50
0xb3006f0f    83f904                 cmp ecx,0x4
0xb3006f12    0f8f38000000           jg 0xb3006f50
0xb3006f18    8b5a0b                 mov ebx,[edx+0xb]
0xb3006f1b    2bd9                   sub ebx,ecx
0xb3006f1d    8d5c5d08               lea ebx,[ebp+ebx*0x2+0x8]
0xb3006f21    8d7dfc                 lea edi,[ebp-0x4]
0xb3006f24    2bf9                   sub edi,ecx
0xb3006f26    2bf9                   sub edi,ecx
0xb3006f28    d1f9                   sar ecx, 1
0xb3006f2a    eb06                   jmp 0xb3006f32
0xb3006f2c    8b048b                 mov eax,[ebx+ecx*0x4]
0xb3006f2f    89048f                 mov [edi+ecx*0x4],eax
0xb3006f32    49                     dec ecx
0xb3006f33    79f7                   jns 0xb3006f2c
0xb3006f35    8b4a0f                 mov ecx,[edx+0xf]
0xb3006f38    d1f9                   sar ecx, 1
0xb3006f3a    83f901                 cmp ecx,0x1
0xb3006f3d    7f08                   jg 0xb3006f47
0xb3006f3f    b8e11240b5             mov eax,0xb54012e1
0xb3006f44    8945f4                 mov [ebp-0xc],eax
0xb3006f47    8b5a0b                 mov ebx,[edx+0xb]
0xb3006f4a    d1fb                   sar ebx, 1
0xb3006f4c    3bcb                   cmp ecx,ebx
0xb3006f4e    7411                   jz 0xb3006f61
0xb3006f50    83c40c                 add esp,0xc
0xb3006f53    b9c1ff28b3             mov ecx,0xb328ffc1  'ICData target:'StringBuffer.' num-checks: 0'
0xb3006f58    e8eb923702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb3006f5d    89ec                   mov esp,ebp
0xb3006f5f    5d                     pop ebp
0xb3006f60    c3                     ret
0xb3006f61    8b4a0b                 mov ecx,[edx+0xb]
0xb3006f64    d1f9                   sar ecx, 1
0xb3006f66    eb08                   jmp 0xb3006f70
0xb3006f68    c7448d08190040b5       mov [ebp+ecx*0x4+0x8],0xb5400019
0xb3006f70    49                     dec ecx
0xb3006f71    79f5                   jns 0xb3006f68
        ;; Initialize spill slots
0xb3006f73    b8190040b5             mov eax,0xb5400019
0xb3006f78    8945f0                 mov [ebp-0x10],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3006f7b    3b25bc195809           cmp esp,[0x95819bc]
0xb3006f81    0f8643000000           jna 0xb3006fca
        ;; t0 <- AllocateObject:3(Library:'dart:core' Class: _StringBufferImpl@0x36924d72)
0xb3006f87    e8ecfeffff             call 0xb3006e78 [ stub ]
0xb3006f8c    50                     push eax
        ;; t0 <- StoreLocal:4(:alloc18953, t0, lvl: 0)
0xb3006f8d    58                     pop eax
0xb3006f8e    8945f0                 mov [ebp-0x10],eax
0xb3006f91    50                     push eax
        ;; PushArgument:5(t0)
        ;; t0 <- Constant:6(#3)
0xb3006f92    b806000000             mov eax,0x6
0xb3006f97    50                     push eax
        ;; PushArgument:7(t0)
        ;; t0 <- LoadLocal:8(content lvl:0)
0xb3006f98    8b45f4                 mov eax,[ebp-0xc]
0xb3006f9b    50                     push eax
        ;; PushArgument:9(t0)
        ;; StaticCall:10(_StringBufferImpl@0x36924d72. t0, t0, t0)
0xb3006f9c    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3006fa1    e882933702             call 0xb5380328  [stub: CallStaticFunction]
0xb3006fa6    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:11(:alloc18953 lvl:0)
0xb3006fa9    8b45f0                 mov eax,[ebp-0x10]
0xb3006fac    50                     push eax
        ;; Return:12(t0)
0xb3006fad    58                     pop eax
0xb3006fae    baa9f012b3             mov edx,0xb312f0a9  'Function 'StringBuffer.': static factory.'
0xb3006fb3    ff422b                 inc [edx+0x2b]
0xb3006fb6    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3006fbd    7c05                   jl 0xb3006fc4
0xb3006fbf    e8f498ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3006fc4    89ec                   mov esp,ebp
0xb3006fc6    5d                     pop ebp
0xb3006fc7    c3                     ret
0xb3006fc8    90                     nop
0xb3006fc9    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3006fca    b970d30a08             mov ecx,0x80ad370
0xb3006fcf    ba00000000             mov edx,0
0xb3006fd4    e84f903702             call 0xb5380028  [stub: CallToRuntime]
0xb3006fd9    ebac                   jmp 0xb3006f87
0xb3006fdb    e958943702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3006fe0    e933953702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 72 : 0xb3006f40 ''
 92 : 0xb3006f54 'ICData target:'StringBuffer.' num-checks: 0'
 165 : 0xb3006f9d 'ImmutableArray'
 183 : 0xb3006faf 'Function 'StringBuffer.': static factory.'
}
PC Descriptors for function 'dart:core_StringBuffer_StringBuffer.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3006f8c	other        	-1		18953	-1
0xb3006fa6	fn-call      	10		18953	-1
0xb3006fa6	deopt-after  	10		18953	-1
0xb3006fc4	other        	-1		0	-1
0xb3006fc9	return       	-1		18953	-1
0xb3006fd9	other        	-1		18941	-1
0xb3006fdb	patch        	-1		0	-1
0xb3006fe0	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_StringBuffer_StringBuffer.' {
}
Variable Descriptors for function 'dart:core_StringBuffer_StringBuffer.' {
  stack var 'content' offset -3 (valid 18945-18960)
}
Exception Handlers for function 'dart:core_StringBuffer_StringBuffer.' {
No exception handlers
}
Static call target functions {
  0xb3006fa6: dart:core__StringBufferImpl@0x36924d72__StringBufferImpl@0x36924d72., 0xb5400019
}
PatchStaticCall: patching from 0xb3006a7d to 'dart:core_StringBuffer_StringBuffer.' 0xb3006ef8
Compiling function: 'dart:core__StringBufferImpl@0x36924d72__StringBufferImpl@0x36924d72.' @ token 19026
Before Optimizations
==== dart:core__StringBufferImpl@0x36924d72__StringBufferImpl@0x36924d72.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(:phase lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#1)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(&, t0, t0)
    t1 <- Constant:8(#0)
    Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:12(this lvl:0)
    PushArgument:13(t0)
    t0 <- Constant:14(#3)
    PushArgument:15(t0)
    StaticCall:16(Object. t0, t0)
    goto:20 4
B3[target]
    goto:21 4
B4[join] pred(B2, B3)
    t0 <- LoadLocal:22(:phase lvl:0)
    PushArgument:23(t0)
    t0 <- Constant:24(#2)
    PushArgument:25(t0)
    t0 <- InstanceCall:26(&, t0, t0)
    t1 <- Constant:27(#0)
    Branch if StrictCompare:29(!==, t0, t1) goto (5, 6)
B5[target]
    t0 <- LoadLocal:31(this lvl:0)
    PushArgument:32(t0)
    InstanceCall:33(clear, t0)
    t0 <- LoadLocal:34(this lvl:0)
    PushArgument:35(t0)
    t0 <- LoadLocal:36(content lvl:0)
    PushArgument:37(t0)
    InstanceCall:38(add, t0, t0)
    goto:42 7
B6[target]
    goto:43 7
B7[join] pred(B5, B6)
    t0 <- Constant:44(#null)
    Return:45(t0)
--> 'dart:core__StringBufferImpl@0x36924d72__StringBufferImpl@0x36924d72.' entry: 0xb3006ff8 time: 395 us
Code for function 'dart:core__StringBufferImpl@0x36924d72__StringBufferImpl@0x36924d72.' {
        ;; Enter frame
0xb3006ff8    55                     push ebp
0xb3006ff9    89e5                   mov ebp,esp
0xb3006ffb    e800000000             call 0xb3007000
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3007000    3b25bc195809           cmp esp,[0x95819bc]
0xb3007006    0f86dc000000           jna 0xb30070e8
        ;; t0 <- LoadLocal:3(:phase lvl:0)
0xb300700c    8b450c                 mov eax,[ebp+0xc]
0xb300700f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#1)
0xb3007010    b802000000             mov eax,0x2
0xb3007015    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(&, t0, t0)
0xb3007016    b9c90129b3             mov ecx,0xb32901c9  'ICData target:'&' num-checks: 0'
0xb300701b    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007020    e8b392ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007025    83c408                 add esp,0x8
0xb3007028    50                     push eax
        ;; t1 <- Constant:8(#0)
0xb3007029    b800000000             mov eax,0
0xb300702e    50                     push eax
        ;; Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
0xb300702f    58                     pop eax
0xb3007030    59                     pop ecx
0xb3007031    51                     push ecx
0xb3007032    50                     push eax
0xb3007033    e8d0973702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3007038    58                     pop eax
0xb3007039    59                     pop ecx
0xb300703a    0f841c000000           jz 0xb300705c
        ;; B2
        ;; t0 <- LoadLocal:12(this lvl:0)
0xb3007040    8b4510                 mov eax,[ebp+0x10]
0xb3007043    50                     push eax
        ;; PushArgument:13(t0)
        ;; t0 <- Constant:14(#3)
0xb3007044    b806000000             mov eax,0x6
0xb3007049    50                     push eax
        ;; PushArgument:15(t0)
        ;; StaticCall:16(Object. t0, t0)
0xb300704a    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300704f    e8d4923702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007054    83c408                 add esp,0x8
        ;; goto:20 4
0xb3007057    e900000000             jmp 0xb300705c
        ;; B3
        ;; goto:21 4
        ;; B4
        ;; t0 <- LoadLocal:22(:phase lvl:0)
0xb300705c    8b450c                 mov eax,[ebp+0xc]
0xb300705f    50                     push eax
        ;; PushArgument:23(t0)
        ;; t0 <- Constant:24(#2)
0xb3007060    b804000000             mov eax,0x4
0xb3007065    50                     push eax
        ;; PushArgument:25(t0)
        ;; t0 <- InstanceCall:26(&, t0, t0)
0xb3007066    b9390229b3             mov ecx,0xb3290239  'ICData target:'&' num-checks: 0'
0xb300706b    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007070    e86392ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007075    83c408                 add esp,0x8
0xb3007078    50                     push eax
        ;; t1 <- Constant:27(#0)
0xb3007079    b800000000             mov eax,0
0xb300707e    50                     push eax
        ;; Branch if StrictCompare:29(!==, t0, t1) goto (5, 6)
0xb300707f    58                     pop eax
0xb3007080    59                     pop ecx
0xb3007081    51                     push ecx
0xb3007082    50                     push eax
0xb3007083    e880973702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3007088    58                     pop eax
0xb3007089    59                     pop ecx
0xb300708a    0f8435000000           jz 0xb30070c5
        ;; B5
        ;; t0 <- LoadLocal:31(this lvl:0)
0xb3007090    8b4510                 mov eax,[ebp+0x10]
0xb3007093    50                     push eax
        ;; PushArgument:32(t0)
        ;; InstanceCall:33(clear, t0)
0xb3007094    b9910229b3             mov ecx,0xb3290291  'ICData target:'clear' num-checks: 0'
0xb3007099    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300709e    e87591ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30070a3    83c404                 add esp,0x4
        ;; t0 <- LoadLocal:34(this lvl:0)
0xb30070a6    8b4510                 mov eax,[ebp+0x10]
0xb30070a9    50                     push eax
        ;; PushArgument:35(t0)
        ;; t0 <- LoadLocal:36(content lvl:0)
0xb30070aa    8b4508                 mov eax,[ebp+0x8]
0xb30070ad    50                     push eax
        ;; PushArgument:37(t0)
        ;; InstanceCall:38(add, t0, t0)
0xb30070ae    b9e10229b3             mov ecx,0xb32902e1  'ICData target:'add' num-checks: 0'
0xb30070b3    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30070b8    e85b91ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30070bd    83c408                 add esp,0x8
        ;; goto:42 7
0xb30070c0    e900000000             jmp 0xb30070c5
        ;; B6
        ;; goto:43 7
        ;; B7
        ;; t0 <- Constant:44(#null)
0xb30070c5    b8190040b5             mov eax,0xb5400019
0xb30070ca    50                     push eax
        ;; Return:45(t0)
0xb30070cb    58                     pop eax
0xb30070cc    bac90613b3             mov edx,0xb31306c9  'Function '_StringBufferImpl@0x36924d72.': constructor.'
0xb30070d1    ff422b                 inc [edx+0x2b]
0xb30070d4    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30070db    7c05                   jl 0xb30070e2
0xb30070dd    e8d697ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30070e2    89ec                   mov esp,ebp
0xb30070e4    5d                     pop ebp
0xb30070e5    c3                     ret
0xb30070e6    90                     nop
0xb30070e7    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30070e8    b970d30a08             mov ecx,0x80ad370
0xb30070ed    ba00000000             mov edx,0
0xb30070f2    e8318f3702             call 0xb5380028  [stub: CallToRuntime]
0xb30070f7    e910ffffff             jmp 0xb300700c
0xb30070fc    e937933702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3007101    e912943702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 31 : 0xb3007017 'ICData target:'&' num-checks: 0'
 36 : 0xb300701c 'ImmutableArray'
 83 : 0xb300704b 'ImmutableArray'
 111 : 0xb3007067 'ICData target:'&' num-checks: 0'
 116 : 0xb300706c 'ImmutableArray'
 157 : 0xb3007095 'ICData target:'clear' num-checks: 0'
 162 : 0xb300709a 'ImmutableArray'
 183 : 0xb30070af 'ICData target:'add' num-checks: 0'
 188 : 0xb30070b4 'ImmutableArray'
 213 : 0xb30070cd 'Function '_StringBufferImpl@0x36924d72.': constructor.'
}
PC Descriptors for function 'dart:core__StringBufferImpl@0x36924d72__StringBufferImpl@0x36924d72.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3007016	deopt-before 	7		19032	-1
0xb3007025	ic-call      	7		19032	-1
0xb3007025	deopt-after  	7		19032	-1
0xb3007054	fn-call      	16		19032	-1
0xb3007054	deopt-after  	16		19032	-1
0xb3007057	deopt-before 	20		0	-1
0xb300705c	deopt-before 	21		0	-1
0xb3007066	deopt-before 	26		19046	-1
0xb3007075	ic-call      	26		19046	-1
0xb3007075	deopt-after  	26		19046	-1
0xb3007094	deopt-before 	33		19035	-1
0xb30070a3	ic-call      	33		19035	-1
0xb30070a3	deopt-after  	33		19035	-1
0xb30070ae	deopt-before 	38		19040	-1
0xb30070bd	ic-call      	38		19040	-1
0xb30070bd	deopt-after  	38		19040	-1
0xb30070c0	deopt-before 	42		0	-1
0xb30070c5	deopt-before 	43		0	-1
0xb30070e2	other        	-1		0	-1
0xb30070e7	return       	-1		19046	-1
0xb30070f7	other        	-1		19026	-1
0xb30070fc	patch        	-1		0	-1
0xb3007101	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBufferImpl@0x36924d72__StringBufferImpl@0x36924d72.' {
}
Variable Descriptors for function 'dart:core__StringBufferImpl@0x36924d72__StringBufferImpl@0x36924d72.' {
  stack var 'this' offset 4 (valid 19026-19046)
  stack var 'content' offset 2 (valid 19029-19046)
}
Exception Handlers for function 'dart:core__StringBufferImpl@0x36924d72__StringBufferImpl@0x36924d72.' {
No exception handlers
}
Static call target functions {
  0xb3007054: dart:core_Object_Object., 0xb5400019
}
PatchStaticCall: patching from 0xb3006fa6 to 'dart:core__StringBufferImpl@0x36924d72__StringBufferImpl@0x36924d72.' 0xb3006ff8
PatchStaticCall: patching from 0xb3007054 to 'dart:core_Object_Object.' 0xb30027a8
Compiling function: 'dart:core__StringBufferImpl@0x36924d72_clear' @ token 19200
Before Optimizations
==== dart:core__StringBufferImpl@0x36924d72_clear
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#TypeArguments: [Type: class 'String'])
    PushArgument:6(t0)
    t0 <- StaticCall:7(List. t0)
    PushArgument:8(t0)
    InstanceCall:9(set:_buffer@0x36924d72, t0, t0)
    t0 <- LoadLocal:10(this lvl:0)
    PushArgument:11(t0)
    t0 <- Constant:12(#0)
    PushArgument:13(t0)
    InstanceCall:14(set:_length@0x36924d72, t0, t0)
    t0 <- LoadLocal:15(this lvl:0)
    Return:16(t0)
--> 'dart:core__StringBufferImpl@0x36924d72_clear' entry: 0xb3007118 time: 288 us
Code for function 'dart:core__StringBufferImpl@0x36924d72_clear' {
        ;; Enter frame
0xb3007118    55                     push ebp
0xb3007119    89e5                   mov ebp,esp
0xb300711b    e800000000             call 0xb3007120
0xb3007120    83ec08                 sub esp,0x8
        ;; Initialize spill slots
0xb3007123    b8190040b5             mov eax,0xb5400019
0xb3007128    8945f8                 mov [ebp-0x8],eax
0xb300712b    8945f4                 mov [ebp-0xc],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300712e    3b25bc195809           cmp esp,[0x95819bc]
0xb3007134    0f8667000000           jna 0xb30071a1
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb300713a    8b4508                 mov eax,[ebp+0x8]
0xb300713d    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#TypeArguments: [Type: class 'String'])
0xb300713e    b8d9ab19b3             mov eax,0xb319abd9  'instance of  Class: TypeArguments'
0xb3007143    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- StaticCall:7(List. t0)
0xb3007144    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007149    e8da913702             call 0xb5380328  [stub: CallStaticFunction]
0xb300714e    83c404                 add esp,0x4
0xb3007151    50                     push eax
        ;; PushArgument:8(t0)
        ;; InstanceCall:9(set:_buffer@0x36924d72, t0, t0)
0xb3007152    b9e10629b3             mov ecx,0xb32906e1  'ICData target:'set:_buffer@0x36924d72' num-checks: 0'
0xb3007157    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300715c    e87791ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007161    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:10(this lvl:0)
0xb3007164    8b4508                 mov eax,[ebp+0x8]
0xb3007167    50                     push eax
        ;; PushArgument:11(t0)
        ;; t0 <- Constant:12(#0)
0xb3007168    b800000000             mov eax,0
0xb300716d    50                     push eax
        ;; PushArgument:13(t0)
        ;; InstanceCall:14(set:_length@0x36924d72, t0, t0)
0xb300716e    b9390729b3             mov ecx,0xb3290739  'ICData target:'set:_length@0x36924d72' num-checks: 0'
0xb3007173    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007178    e85b91ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300717d    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:15(this lvl:0)
0xb3007180    8b4508                 mov eax,[ebp+0x8]
0xb3007183    50                     push eax
        ;; Return:16(t0)
0xb3007184    58                     pop eax
0xb3007185    ba190913b3             mov edx,0xb3130919  'Function 'clear':.'
0xb300718a    ff422b                 inc [edx+0x2b]
0xb300718d    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3007194    7c05                   jl 0xb300719b
0xb3007196    e81d97ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300719b    89ec                   mov esp,ebp
0xb300719d    5d                     pop ebp
0xb300719e    c3                     ret
0xb300719f    90                     nop
0xb30071a0    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30071a1    b970d30a08             mov ecx,0x80ad370
0xb30071a6    ba00000000             mov edx,0
0xb30071ab    e8788e3702             call 0xb5380028  [stub: CallToRuntime]
0xb30071b0    eb88                   jmp 0xb300713a
0xb30071b2    e981923702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30071b7    e95c933702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 39 : 0xb300713f 'TypeArguments: [Type: class 'String']'
 45 : 0xb3007145 'ImmutableArray'
 59 : 0xb3007153 'ICData target:'set:_buffer@0x36924d72' num-checks: 0'
 64 : 0xb3007158 'ImmutableArray'
 87 : 0xb300716f 'ICData target:'set:_length@0x36924d72' num-checks: 0'
 92 : 0xb3007174 'ImmutableArray'
 110 : 0xb3007186 'Function 'clear':.'
}
PC Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_clear' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300714e	fn-call      	7		19206	-1
0xb300714e	deopt-after  	7		19206	-1
0xb3007152	deopt-before 	9		19203	-1
0xb3007161	ic-call      	9		19203	-1
0xb3007161	deopt-after  	9		19203	-1
0xb300716e	deopt-before 	14		19216	-1
0xb300717d	ic-call      	14		19216	-1
0xb300717d	deopt-after  	14		19216	-1
0xb300719b	other        	-1		0	-1
0xb30071a0	return       	-1		19222	-1
0xb30071b0	other        	-1		19200	-1
0xb30071b2	patch        	-1		0	-1
0xb30071b7	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBufferImpl@0x36924d72_clear' {
}
Variable Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_clear' {
  stack var 'this' offset 2 (valid 19026-19226)
}
Exception Handlers for function 'dart:core__StringBufferImpl@0x36924d72_clear' {
No exception handlers
}
Static call target functions {
  0xb300714e: dart:core_List_List., 0xb5400019
}
PatchStaticCall: patching from 0xb300714e to 'dart:core_List_List.' 0xb3001358
Compiling function: 'dart:core__StringBufferImpl@0x36924d72_set__buffer@0x36924d72' @ token 19311
Before Optimizations
==== dart:core__StringBufferImpl@0x36924d72_set__buffer@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t1 <- LoadLocal:4(value lvl:0)
    StoreInstanceField:5(_buffer@0x36924d72, t0, t1)
    t0 <- Constant:6(#null)
    Return:7(t0)
--> 'dart:core__StringBufferImpl@0x36924d72_set__buffer@0x36924d72' entry: 0xb30071d8 time: 56 us
Code for function 'dart:core__StringBufferImpl@0x36924d72_set__buffer@0x36924d72' {
0xb30071d8    8b442408               mov eax,[esp+0x8]
0xb30071dc    8b5c2404               mov ebx,[esp+0x4]
0xb30071e0    895807                 mov [eax+0x7],ebx
0xb30071e3    83e305                 and ebx,0x5
0xb30071e6    d1eb                   shr ebx, 1
0xb30071e8    13d8                   adc ebx,eax
0xb30071ea    83e307                 and ebx,0x7
0xb30071ed    83fb04                 cmp ebx,0x4
0xb30071f0    750a                   jnz 0xb30071fc
0xb30071f2    50                     push eax
0xb30071f3    8d4007                 lea eax,[eax+0x7]
0xb30071f6    e86d8fffff             call 0xb3000168  [stub: UpdateStoreBuffer]
0xb30071fb    58                     pop eax
0xb30071fc    b8190040b5             mov eax,0xb5400019
0xb3007201    c3                     ret
0xb3007202    cc                     int3
0xb3007203    e930923702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_set__buffer@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__StringBufferImpl@0x36924d72_set__buffer@0x36924d72' {
}
Variable Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_set__buffer@0x36924d72' {
  stack var 'this' offset 3 (valid 19026-19311)
  stack var 'value' offset 2 (valid 19311-19311)
}
Exception Handlers for function 'dart:core__StringBufferImpl@0x36924d72_set__buffer@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBufferImpl@0x36924d72_set__length@0x36924d72' @ token 19315
Before Optimizations
==== dart:core__StringBufferImpl@0x36924d72_set__length@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t1 <- LoadLocal:4(value lvl:0)
    StoreInstanceField:5(_length@0x36924d72, t0, t1)
    t0 <- Constant:6(#null)
    Return:7(t0)
--> 'dart:core__StringBufferImpl@0x36924d72_set__length@0x36924d72' entry: 0xb3007218 time: 54 us
Code for function 'dart:core__StringBufferImpl@0x36924d72_set__length@0x36924d72' {
0xb3007218    8b442408               mov eax,[esp+0x8]
0xb300721c    8b5c2404               mov ebx,[esp+0x4]
0xb3007220    89580b                 mov [eax+0xb],ebx
0xb3007223    83e305                 and ebx,0x5
0xb3007226    d1eb                   shr ebx, 1
0xb3007228    13d8                   adc ebx,eax
0xb300722a    83e307                 and ebx,0x7
0xb300722d    83fb04                 cmp ebx,0x4
0xb3007230    750a                   jnz 0xb300723c
0xb3007232    50                     push eax
0xb3007233    8d400b                 lea eax,[eax+0xb]
0xb3007236    e82d8fffff             call 0xb3000168  [stub: UpdateStoreBuffer]
0xb300723b    58                     pop eax
0xb300723c    b8190040b5             mov eax,0xb5400019
0xb3007241    c3                     ret
0xb3007242    cc                     int3
0xb3007243    e9f0913702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_set__length@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__StringBufferImpl@0x36924d72_set__length@0x36924d72' {
}
Variable Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_set__length@0x36924d72' {
  stack var 'this' offset 3 (valid 19026-19315)
  stack var 'value' offset 2 (valid 19315-19315)
}
Exception Handlers for function 'dart:core__StringBufferImpl@0x36924d72_set__length@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBufferImpl@0x36924d72_add' @ token 19073
Before Optimizations
==== dart:core__StringBufferImpl@0x36924d72_add
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(obj lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(toString, t0)
    StoreLocal:6(str, t0, lvl: 0)
    t0 <- LoadLocal:7(str lvl:0)
    t1 <- Constant:8(#null)
    Branch if StrictCompare:10(===, t0, t1) goto (4, 2)
B4[target]
    goto:23 3
B2[target]
    t0 <- LoadLocal:12(str lvl:0)
    PushArgument:13(t0)
    t0 <- InstanceCall:14(get:isEmpty, t0)
    t1 <- Constant:15(#true)
    Branch if StrictCompare:16(===, t0, t1) goto (5, 6)
B5[target]
    goto:25 3
B3[join] pred(B4, B5)
    t0 <- LoadLocal:19(this lvl:0)
    Return:20(t0)
B6[target]
    t0 <- LoadLocal:27(this lvl:0)
    PushArgument:28(t0)
    t0 <- InstanceCall:29(get:_buffer@0x36924d72, t0)
    PushArgument:30(t0)
    t0 <- LoadLocal:31(str lvl:0)
    PushArgument:32(t0)
    InstanceCall:33(add, t0, t0)
    t0 <- LoadLocal:34(this lvl:0)
    PushArgument:35(t0)
    t0 <- LoadLocal:36(this lvl:0)
    PushArgument:37(t0)
    t0 <- InstanceCall:38(get:_length@0x36924d72, t0)
    PushArgument:39(t0)
    t0 <- LoadLocal:40(str lvl:0)
    PushArgument:41(t0)
    t0 <- InstanceCall:42(get:length, t0)
    PushArgument:43(t0)
    t0 <- InstanceCall:44(+, t0, t0)
    PushArgument:45(t0)
    InstanceCall:46(set:_length@0x36924d72, t0, t0)
    t0 <- LoadLocal:47(this lvl:0)
    Return:48(t0)
--> 'dart:core__StringBufferImpl@0x36924d72_add' entry: 0xb3007258 time: 423 us
Code for function 'dart:core__StringBufferImpl@0x36924d72_add' {
        ;; Enter frame
0xb3007258    55                     push ebp
0xb3007259    89e5                   mov ebp,esp
0xb300725b    e800000000             call 0xb3007260
0xb3007260    83ec08                 sub esp,0x8
        ;; Initialize spill slots
0xb3007263    b8190040b5             mov eax,0xb5400019
0xb3007268    8945f8                 mov [ebp-0x8],eax
0xb300726b    8945f4                 mov [ebp-0xc],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300726e    3b25bc195809           cmp esp,[0x95819bc]
0xb3007274    0f862e010000           jna 0xb30073a8
        ;; t0 <- LoadLocal:3(obj lvl:0)
0xb300727a    8b4508                 mov eax,[ebp+0x8]
0xb300727d    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(toString, t0)
0xb300727e    b9790b29b3             mov ecx,0xb3290b79  'ICData target:'toString' num-checks: 0'
0xb3007283    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007288    e88b8fffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300728d    83c404                 add esp,0x4
0xb3007290    50                     push eax
        ;; StoreLocal:6(str, t0, lvl: 0)
0xb3007291    58                     pop eax
0xb3007292    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- LoadLocal:7(str lvl:0)
0xb3007295    8b45f4                 mov eax,[ebp-0xc]
0xb3007298    50                     push eax
        ;; t1 <- Constant:8(#null)
0xb3007299    b8190040b5             mov eax,0xb5400019
0xb300729e    50                     push eax
        ;; Branch if StrictCompare:10(===, t0, t1) goto (4, 2)
0xb300729f    58                     pop eax
0xb30072a0    59                     pop ecx
0xb30072a1    51                     push ecx
0xb30072a2    50                     push eax
0xb30072a3    e860953702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb30072a8    58                     pop eax
0xb30072a9    59                     pop ecx
0xb30072aa    0f8505000000           jnz 0xb30072b5
        ;; B4
        ;; goto:23 3
0xb30072b0    e92e000000             jmp 0xb30072e3
        ;; B2
        ;; t0 <- LoadLocal:12(str lvl:0)
0xb30072b5    8b45f4                 mov eax,[ebp-0xc]
0xb30072b8    50                     push eax
        ;; PushArgument:13(t0)
        ;; t0 <- InstanceCall:14(get:isEmpty, t0)
0xb30072b9    b9c90b29b3             mov ecx,0xb3290bc9  'ICData target:'get:isEmpty' num-checks: 0'
0xb30072be    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30072c3    e8508fffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30072c8    83c404                 add esp,0x4
0xb30072cb    50                     push eax
        ;; t1 <- Constant:15(#true)
0xb30072cc    b8391030b3             mov eax,0xb3301039  'true'
0xb30072d1    50                     push eax
        ;; Branch if StrictCompare:16(===, t0, t1) goto (5, 6)
0xb30072d2    58                     pop eax
0xb30072d3    59                     pop ecx
0xb30072d4    51                     push ecx
0xb30072d5    50                     push eax
0xb30072d6    e82d953702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb30072db    58                     pop eax
0xb30072dc    59                     pop ecx
0xb30072dd    0f8520000000           jnz 0xb3007303
        ;; B5
        ;; goto:25 3
        ;; B3
        ;; t0 <- LoadLocal:19(this lvl:0)
0xb30072e3    8b450c                 mov eax,[ebp+0xc]
0xb30072e6    50                     push eax
        ;; Return:20(t0)
0xb30072e7    58                     pop eax
0xb30072e8    bae10713b3             mov edx,0xb31307e1  'Function 'add':.'
0xb30072ed    ff422b                 inc [edx+0x2b]
0xb30072f0    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30072f7    7c05                   jl 0xb30072fe
0xb30072f9    e8ba95ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30072fe    89ec                   mov esp,ebp
0xb3007300    5d                     pop ebp
0xb3007301    c3                     ret
0xb3007302    90                     nop
        ;; B6
        ;; t0 <- LoadLocal:27(this lvl:0)
0xb3007303    8b450c                 mov eax,[ebp+0xc]
0xb3007306    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- InstanceCall:29(get:_buffer@0x36924d72, t0)
0xb3007307    b9190c29b3             mov ecx,0xb3290c19  'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
0xb300730c    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007311    e8028fffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007316    83c404                 add esp,0x4
0xb3007319    50                     push eax
        ;; PushArgument:30(t0)
        ;; t0 <- LoadLocal:31(str lvl:0)
0xb300731a    8b45f4                 mov eax,[ebp-0xc]
0xb300731d    50                     push eax
        ;; PushArgument:32(t0)
        ;; InstanceCall:33(add, t0, t0)
0xb300731e    b9690c29b3             mov ecx,0xb3290c69  'ICData target:'add' num-checks: 0'
0xb3007323    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007328    e8eb8effff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300732d    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:34(this lvl:0)
0xb3007330    8b450c                 mov eax,[ebp+0xc]
0xb3007333    50                     push eax
        ;; PushArgument:35(t0)
        ;; t0 <- LoadLocal:36(this lvl:0)
0xb3007334    8b450c                 mov eax,[ebp+0xc]
0xb3007337    50                     push eax
        ;; PushArgument:37(t0)
        ;; t0 <- InstanceCall:38(get:_length@0x36924d72, t0)
0xb3007338    b9b90c29b3             mov ecx,0xb3290cb9  'ICData target:'get:_length@0x36924d72' num-checks: 0'
0xb300733d    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007342    e8d18effff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007347    83c404                 add esp,0x4
0xb300734a    50                     push eax
        ;; PushArgument:39(t0)
        ;; t0 <- LoadLocal:40(str lvl:0)
0xb300734b    8b45f4                 mov eax,[ebp-0xc]
0xb300734e    50                     push eax
        ;; PushArgument:41(t0)
        ;; t0 <- InstanceCall:42(get:length, t0)
0xb300734f    b9090d29b3             mov ecx,0xb3290d09  'ICData target:'get:length' num-checks: 0'
0xb3007354    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007359    e8ba8effff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300735e    83c404                 add esp,0x4
0xb3007361    50                     push eax
        ;; PushArgument:43(t0)
        ;; t0 <- InstanceCall:44(+, t0, t0)
0xb3007362    b9590d29b3             mov ecx,0xb3290d59  'ICData target:'+' num-checks: 0'
0xb3007367    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300736c    e8678fffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007371    83c408                 add esp,0x8
0xb3007374    50                     push eax
        ;; PushArgument:45(t0)
        ;; InstanceCall:46(set:_length@0x36924d72, t0, t0)
0xb3007375    b9b10d29b3             mov ecx,0xb3290db1  'ICData target:'set:_length@0x36924d72' num-checks: 0'
0xb300737a    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300737f    e8548fffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007384    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:47(this lvl:0)
0xb3007387    8b450c                 mov eax,[ebp+0xc]
0xb300738a    50                     push eax
        ;; Return:48(t0)
0xb300738b    58                     pop eax
0xb300738c    bae10713b3             mov edx,0xb31307e1  'Function 'add':.'
0xb3007391    ff422b                 inc [edx+0x2b]
0xb3007394    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300739b    7c05                   jl 0xb30073a2
0xb300739d    e81695ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30073a2    89ec                   mov esp,ebp
0xb30073a4    5d                     pop ebp
0xb30073a5    c3                     ret
0xb30073a6    90                     nop
0xb30073a7    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30073a8    b970d30a08             mov ecx,0x80ad370
0xb30073ad    ba00000000             mov edx,0
0xb30073b2    e8718c3702             call 0xb5380028  [stub: CallToRuntime]
0xb30073b7    e9befeffff             jmp 0xb300727a
0xb30073bc    e977903702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30073c1    e952913702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 39 : 0xb300727f 'ICData target:'toString' num-checks: 0'
 44 : 0xb3007284 'ImmutableArray'
 98 : 0xb30072ba 'ICData target:'get:isEmpty' num-checks: 0'
 103 : 0xb30072bf 'ImmutableArray'
 117 : 0xb30072cd 'true'
 145 : 0xb30072e9 'Function 'add':.'
 176 : 0xb3007308 'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
 181 : 0xb300730d 'ImmutableArray'
 199 : 0xb300731f 'ICData target:'add' num-checks: 0'
 204 : 0xb3007324 'ImmutableArray'
 225 : 0xb3007339 'ICData target:'get:_length@0x36924d72' num-checks: 0'
 230 : 0xb300733e 'ImmutableArray'
 248 : 0xb3007350 'ICData target:'get:length' num-checks: 0'
 253 : 0xb3007355 'ImmutableArray'
 267 : 0xb3007363 'ICData target:'+' num-checks: 0'
 272 : 0xb3007368 'ImmutableArray'
 286 : 0xb3007376 'ICData target:'set:_length@0x36924d72' num-checks: 0'
 291 : 0xb300737b 'ImmutableArray'
 309 : 0xb300738d 'Function 'add':.'
}
PC Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_add' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300727e	deopt-before 	5		19090	-1
0xb300728d	ic-call      	5		19090	-1
0xb300728d	deopt-after  	5		19090	-1
0xb30072b0	deopt-before 	23		0	-1
0xb30072b9	deopt-before 	14		19103	-1
0xb30072c8	ic-call      	14		19103	-1
0xb30072c8	deopt-after  	14		19103	-1
0xb30072e3	deopt-before 	25		0	-1
0xb30072fe	other        	-1		0	-1
0xb3007303	return       	-1		19107	-1
0xb3007307	deopt-before 	29		19111	-1
0xb3007316	ic-call      	29		19111	-1
0xb3007316	deopt-after  	29		19111	-1
0xb300731e	deopt-before 	33		19116	-1
0xb300732d	ic-call      	33		19116	-1
0xb300732d	deopt-after  	33		19116	-1
0xb3007338	deopt-before 	38		19121	-1
0xb3007347	ic-call      	38		19121	-1
0xb3007347	deopt-after  	38		19121	-1
0xb300734f	deopt-before 	42		19127	-1
0xb300735e	ic-call      	42		19127	-1
0xb300735e	deopt-after  	42		19127	-1
0xb3007362	deopt-before 	44		19123	-1
0xb3007371	ic-call      	44		19123	-1
0xb3007371	deopt-after  	44		19123	-1
0xb3007375	deopt-before 	46		19121	-1
0xb3007384	ic-call      	46		19121	-1
0xb3007384	deopt-after  	46		19121	-1
0xb30073a2	other        	-1		0	-1
0xb30073a7	return       	-1		19130	-1
0xb30073b7	other        	-1		19073	-1
0xb30073bc	patch        	-1		0	-1
0xb30073c1	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBufferImpl@0x36924d72_add' {
}
Variable Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_add' {
  stack var 'this' offset 3 (valid 19026-19134)
  stack var 'obj' offset 2 (valid 19076-19134)
  stack var 'str' offset -3 (valid 19082-19134)
}
Exception Handlers for function 'dart:core__StringBufferImpl@0x36924d72_add' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:uri_Uri__addIfNonEmpty@0x715366f' @ token 1188
Before Optimizations
==== dart:uri_Uri__addIfNonEmpty@0x715366f
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#)
    t1 <- LoadLocal:4(test lvl:0)
    Branch if EqualityCompare:5(t0 != t1) goto (8, 9)
B8[target]
    t0 <- LoadLocal:7(sb lvl:0)
    PushArgument:8(t0)
    t0 <- LoadLocal:9(first lvl:0)
    t1 <- Constant:10(#null)
    Branch if StrictCompare:12(===, t0, t1) goto (2, 3)
B2[target]
    t0 <- Constant:14(#null)
    StoreLocal:15(:expr_temp, t0, lvl: 0)
    goto:21 4
B3[target]
    t0 <- LoadLocal:16(first lvl:0)
    StoreLocal:17(:expr_temp, t0, lvl: 0)
    goto:22 4
B4[join] pred(B2, B3)
    t0 <- LoadLocal:23(:expr_temp lvl:0)
    PushArgument:24(t0)
    InstanceCall:25(add, t0, t0)
    t0 <- LoadLocal:26(sb lvl:0)
    PushArgument:27(t0)
    t0 <- LoadLocal:28(second lvl:0)
    t1 <- Constant:29(#null)
    Branch if StrictCompare:31(===, t0, t1) goto (5, 6)
B5[target]
    t0 <- Constant:33(#null)
    StoreLocal:34(:expr_temp, t0, lvl: 0)
    goto:40 7
B6[target]
    t0 <- LoadLocal:35(second lvl:0)
    StoreLocal:36(:expr_temp, t0, lvl: 0)
    goto:41 7
B7[join] pred(B5, B6)
    t0 <- LoadLocal:42(:expr_temp lvl:0)
    PushArgument:43(t0)
    InstanceCall:44(add, t0, t0)
    goto:48 10
B9[target]
    goto:49 10
B10[join] pred(B7, B9)
    t0 <- Constant:50(#null)
    Return:51(t0)
--> 'dart:uri_Uri__addIfNonEmpty@0x715366f' entry: 0xb30073d8 time: 338 us
Code for function 'dart:uri_Uri__addIfNonEmpty@0x715366f' {
        ;; Enter frame
0xb30073d8    55                     push ebp
0xb30073d9    89e5                   mov ebp,esp
0xb30073db    e800000000             call 0xb30073e0
0xb30073e0    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb30073e3    b8190040b5             mov eax,0xb5400019
0xb30073e8    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30073eb    3b25bc195809           cmp esp,[0x95819bc]
0xb30073f1    0f8618010000           jna 0xb300750f
        ;; t0 <- Constant:3(#)
0xb30073f7    b8e11240b5             mov eax,0xb54012e1
0xb30073fc    50                     push eax
        ;; t1 <- LoadLocal:4(test lvl:0)
0xb30073fd    8b4510                 mov eax,[ebp+0x10]
0xb3007400    50                     push eax
        ;; Branch if EqualityCompare:5(t0 != t1) goto (8, 9)
0xb3007401    5a                     pop edx
0xb3007402    5b                     pop ebx
0xb3007403    53                     push ebx
0xb3007404    52                     push edx
0xb3007405    813c24190040b5         cmp [esp],0xb5400019
0xb300740c    0f8425000000           jz 0xb3007437
0xb3007412    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb300741a    0f8417000000           jz 0xb3007437
0xb3007420    b9091329b3             mov ecx,0xb3291309  'ICData target:'==' num-checks: 0'
0xb3007425    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300742a    e8a98effff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300742f    83c408                 add esp,0x8
0xb3007432    e90d000000             jmp 0xb3007444
0xb3007437    b9091329b3             mov ecx,0xb3291309  'ICData target:'==' num-checks: 0'
0xb300743c    e80795ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3007441    83c408                 add esp,0x8
0xb3007444    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3007449    0f849d000000           jz 0xb30074ec
        ;; B8
        ;; t0 <- LoadLocal:7(sb lvl:0)
0xb300744f    8b4514                 mov eax,[ebp+0x14]
0xb3007452    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- LoadLocal:9(first lvl:0)
0xb3007453    8b450c                 mov eax,[ebp+0xc]
0xb3007456    50                     push eax
        ;; t1 <- Constant:10(#null)
0xb3007457    b8190040b5             mov eax,0xb5400019
0xb300745c    50                     push eax
        ;; Branch if StrictCompare:12(===, t0, t1) goto (2, 3)
0xb300745d    58                     pop eax
0xb300745e    59                     pop ecx
0xb300745f    51                     push ecx
0xb3007460    50                     push eax
0xb3007461    e8a2933702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3007466    58                     pop eax
0xb3007467    59                     pop ecx
0xb3007468    0f850f000000           jnz 0xb300747d
        ;; B2
        ;; t0 <- Constant:14(#null)
0xb300746e    b8217118b3             mov eax,0xb3187121  'null'
0xb3007473    50                     push eax
        ;; StoreLocal:15(:expr_temp, t0, lvl: 0)
0xb3007474    58                     pop eax
0xb3007475    8945f8                 mov [ebp-0x8],eax
        ;; goto:21 4
0xb3007478    e908000000             jmp 0xb3007485
        ;; B3
        ;; t0 <- LoadLocal:16(first lvl:0)
0xb300747d    8b450c                 mov eax,[ebp+0xc]
0xb3007480    50                     push eax
        ;; StoreLocal:17(:expr_temp, t0, lvl: 0)
0xb3007481    58                     pop eax
0xb3007482    8945f8                 mov [ebp-0x8],eax
        ;; goto:22 4
        ;; B4
        ;; t0 <- LoadLocal:23(:expr_temp lvl:0)
0xb3007485    8b45f8                 mov eax,[ebp-0x8]
0xb3007488    50                     push eax
        ;; PushArgument:24(t0)
        ;; InstanceCall:25(add, t0, t0)
0xb3007489    b9611329b3             mov ecx,0xb3291361  'ICData target:'add' num-checks: 0'
0xb300748e    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007493    e8808dffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007498    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:26(sb lvl:0)
0xb300749b    8b4514                 mov eax,[ebp+0x14]
0xb300749e    50                     push eax
        ;; PushArgument:27(t0)
        ;; t0 <- LoadLocal:28(second lvl:0)
0xb300749f    8b4508                 mov eax,[ebp+0x8]
0xb30074a2    50                     push eax
        ;; t1 <- Constant:29(#null)
0xb30074a3    b8190040b5             mov eax,0xb5400019
0xb30074a8    50                     push eax
        ;; Branch if StrictCompare:31(===, t0, t1) goto (5, 6)
0xb30074a9    58                     pop eax
0xb30074aa    59                     pop ecx
0xb30074ab    51                     push ecx
0xb30074ac    50                     push eax
0xb30074ad    e856933702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb30074b2    58                     pop eax
0xb30074b3    59                     pop ecx
0xb30074b4    0f850f000000           jnz 0xb30074c9
        ;; B5
        ;; t0 <- Constant:33(#null)
0xb30074ba    b8217118b3             mov eax,0xb3187121  'null'
0xb30074bf    50                     push eax
        ;; StoreLocal:34(:expr_temp, t0, lvl: 0)
0xb30074c0    58                     pop eax
0xb30074c1    8945f8                 mov [ebp-0x8],eax
        ;; goto:40 7
0xb30074c4    e908000000             jmp 0xb30074d1
        ;; B6
        ;; t0 <- LoadLocal:35(second lvl:0)
0xb30074c9    8b4508                 mov eax,[ebp+0x8]
0xb30074cc    50                     push eax
        ;; StoreLocal:36(:expr_temp, t0, lvl: 0)
0xb30074cd    58                     pop eax
0xb30074ce    8945f8                 mov [ebp-0x8],eax
        ;; goto:41 7
        ;; B7
        ;; t0 <- LoadLocal:42(:expr_temp lvl:0)
0xb30074d1    8b45f8                 mov eax,[ebp-0x8]
0xb30074d4    50                     push eax
        ;; PushArgument:43(t0)
        ;; InstanceCall:44(add, t0, t0)
0xb30074d5    b9b11329b3             mov ecx,0xb32913b1  'ICData target:'add' num-checks: 0'
0xb30074da    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30074df    e8348dffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30074e4    83c408                 add esp,0x8
        ;; goto:48 10
0xb30074e7    e900000000             jmp 0xb30074ec
        ;; B9
        ;; goto:49 10
        ;; B10
        ;; t0 <- Constant:50(#null)
0xb30074ec    b8190040b5             mov eax,0xb5400019
0xb30074f1    50                     push eax
        ;; Return:51(t0)
0xb30074f2    58                     pop eax
0xb30074f3    ba311f0bb3             mov edx,0xb30b1f31  'Function '_addIfNonEmpty@0x715366f': static.'
0xb30074f8    ff422b                 inc [edx+0x2b]
0xb30074fb    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3007502    7c05                   jl 0xb3007509
0xb3007504    e8af93ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3007509    89ec                   mov esp,ebp
0xb300750b    5d                     pop ebp
0xb300750c    c3                     ret
0xb300750d    90                     nop
0xb300750e    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300750f    b970d30a08             mov ecx,0x80ad370
0xb3007514    ba00000000             mov edx,0
0xb3007519    e80a8b3702             call 0xb5380028  [stub: CallToRuntime]
0xb300751e    e9d4feffff             jmp 0xb30073f7
0xb3007523    e9108f3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3007528    e9eb8f3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 32 : 0xb30073f8 ''
 73 : 0xb3007421 'ICData target:'==' num-checks: 0'
 78 : 0xb3007426 'ImmutableArray'
 96 : 0xb3007438 'ICData target:'==' num-checks: 0'
 109 : 0xb3007445 'true'
 151 : 0xb300746f 'null'
 178 : 0xb300748a 'ICData target:'add' num-checks: 0'
 183 : 0xb300748f 'ImmutableArray'
 227 : 0xb30074bb 'null'
 254 : 0xb30074d6 'ICData target:'add' num-checks: 0'
 259 : 0xb30074db 'ImmutableArray'
 284 : 0xb30074f4 'Function '_addIfNonEmpty@0x715366f': static.'
}
PC Descriptors for function 'dart:uri_Uri__addIfNonEmpty@0x715366f' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3007405	deopt-before 	5		1211	-1
0xb300742f	ic-call      	5		1211	-1
0xb300742f	deopt-after  	5		1211	-1
0xb3007441	other        	-1		1211	-1
0xb3007478	deopt-before 	21		0	-1
0xb3007485	deopt-before 	22		0	-1
0xb3007489	deopt-before 	25		1221	-1
0xb3007498	ic-call      	25		1221	-1
0xb3007498	deopt-after  	25		1221	-1
0xb30074c4	deopt-before 	40		0	-1
0xb30074d1	deopt-before 	41		0	-1
0xb30074d5	deopt-before 	44		1239	-1
0xb30074e4	ic-call      	44		1239	-1
0xb30074e4	deopt-after  	44		1239	-1
0xb30074e7	deopt-before 	48		0	-1
0xb30074ec	deopt-before 	49		0	-1
0xb3007509	other        	-1		0	-1
0xb300750e	return       	-1		1254	-1
0xb300751e	other        	-1		1188	-1
0xb3007523	patch        	-1		0	-1
0xb3007528	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:uri_Uri__addIfNonEmpty@0x715366f' {
}
Variable Descriptors for function 'dart:uri_Uri__addIfNonEmpty@0x715366f' {
  stack var 'sb' offset 5 (valid 1191-1254)
  stack var 'test' offset 4 (valid 1195-1254)
  stack var 'first' offset 3 (valid 1199-1254)
  stack var 'second' offset 2 (valid 1203-1254)
}
Exception Handlers for function 'dart:uri_Uri__addIfNonEmpty@0x715366f' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb3006ac7 to 'dart:uri_Uri__addIfNonEmpty@0x715366f' 0xb30073d8
Compiling function: 'dart:core__StringBufferImpl@0x36924d72_get__buffer@0x36924d72' @ token 19311
Before Optimizations
==== dart:core__StringBufferImpl@0x36924d72_get__buffer@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 8, immutable=0)
    Return:5(t0)
--> 'dart:core__StringBufferImpl@0x36924d72_get__buffer@0x36924d72' entry: 0xb3007548 time: 45 us
Code for function 'dart:core__StringBufferImpl@0x36924d72_get__buffer@0x36924d72' {
0xb3007548    8b442404               mov eax,[esp+0x4]
0xb300754c    8b4007                 mov eax,[eax+0x7]
0xb300754f    c3                     ret
0xb3007550    cc                     int3
0xb3007551    e9e28e3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_get__buffer@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__StringBufferImpl@0x36924d72_get__buffer@0x36924d72' {
}
Variable Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_get__buffer@0x36924d72' {
  stack var 'this' offset 2 (valid 19026-19311)
}
Exception Handlers for function 'dart:core__StringBufferImpl@0x36924d72_get__buffer@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBufferImpl@0x36924d72_get__length@0x36924d72' @ token 19315
Before Optimizations
==== dart:core__StringBufferImpl@0x36924d72_get__length@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 12, immutable=0)
    Return:5(t0)
--> 'dart:core__StringBufferImpl@0x36924d72_get__length@0x36924d72' entry: 0xb3007568 time: 40 us
Code for function 'dart:core__StringBufferImpl@0x36924d72_get__length@0x36924d72' {
0xb3007568    8b442404               mov eax,[esp+0x4]
0xb300756c    8b400b                 mov eax,[eax+0xb]
0xb300756f    c3                     ret
0xb3007570    cc                     int3
0xb3007571    e9c28e3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_get__length@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__StringBufferImpl@0x36924d72_get__length@0x36924d72' {
}
Variable Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_get__length@0x36924d72' {
  stack var 'this' offset 2 (valid 19026-19315)
}
Exception Handlers for function 'dart:core__StringBufferImpl@0x36924d72_get__length@0x36924d72' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb3006bc6 to 'dart:uri_Uri__addIfNonEmpty@0x715366f' 0xb30073d8
PatchStaticCall: patching from 0xb3006dc0 to 'dart:uri_Uri__addIfNonEmpty@0x715366f' 0xb30073d8
PatchStaticCall: patching from 0xb3006e05 to 'dart:uri_Uri__addIfNonEmpty@0x715366f' 0xb30073d8
Compiling function: 'dart:core__StringBufferImpl@0x36924d72_toString' @ token 19230
Before Optimizations
==== dart:core__StringBufferImpl@0x36924d72_toString
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:_buffer@0x36924d72, t0)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(get:length, t0)
    t1 <- Constant:8(#0)
    Branch if EqualityCompare:9(t0 == t1) goto (2, 3)
B2[target]
    t0 <- Constant:11(#)
    Return:12(t0)
B3[target]
    t0 <- LoadLocal:15(this lvl:0)
    PushArgument:16(t0)
    t0 <- InstanceCall:17(get:_buffer@0x36924d72, t0)
    PushArgument:18(t0)
    t0 <- InstanceCall:19(get:length, t0)
    t1 <- Constant:20(#1)
    Branch if EqualityCompare:21(t0 == t1) goto (4, 5)
B4[target]
    t0 <- LoadLocal:23(this lvl:0)
    PushArgument:24(t0)
    t0 <- InstanceCall:25(get:_buffer@0x36924d72, t0)
    PushArgument:26(t0)
    t0 <- Constant:27(#0)
    PushArgument:28(t0)
    t0 <- InstanceCall:29([], t0, t0)
    Return:30(t0)
B5[target]
    t0 <- LoadLocal:33(this lvl:0)
    PushArgument:34(t0)
    t0 <- InstanceCall:35(get:_buffer@0x36924d72, t0)
    PushArgument:36(t0)
    t0 <- StaticCall:37(concatAll t0)
    StoreLocal:38(result, t0, lvl: 0)
    t0 <- LoadLocal:39(this lvl:0)
    PushArgument:40(t0)
    t0 <- InstanceCall:41(get:_buffer@0x36924d72, t0)
    PushArgument:42(t0)
    InstanceCall:43(clear, t0)
    t0 <- LoadLocal:44(this lvl:0)
    PushArgument:45(t0)
    t0 <- InstanceCall:46(get:_buffer@0x36924d72, t0)
    PushArgument:47(t0)
    t0 <- LoadLocal:48(result lvl:0)
    PushArgument:49(t0)
    InstanceCall:50(add, t0, t0)
    t0 <- LoadLocal:51(result lvl:0)
    Return:52(t0)
--> 'dart:core__StringBufferImpl@0x36924d72_toString' entry: 0xb3007588 time: 479 us
Code for function 'dart:core__StringBufferImpl@0x36924d72_toString' {
        ;; Enter frame
0xb3007588    55                     push ebp
0xb3007589    89e5                   mov ebp,esp
0xb300758b    e800000000             call 0xb3007590
0xb3007590    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb3007593    b8190040b5             mov eax,0xb5400019
0xb3007598    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300759b    3b25bc195809           cmp esp,[0x95819bc]
0xb30075a1    0f860a020000           jna 0xb30077b1
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb30075a7    8b4508                 mov eax,[ebp+0x8]
0xb30075aa    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:_buffer@0x36924d72, t0)
0xb30075ab    b9591c29b3             mov ecx,0xb3291c59  'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
0xb30075b0    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30075b5    e85e8cffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30075ba    83c404                 add esp,0x4
0xb30075bd    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(get:length, t0)
0xb30075be    b9a91c29b3             mov ecx,0xb3291ca9  'ICData target:'get:length' num-checks: 0'
0xb30075c3    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30075c8    e84b8cffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30075cd    83c404                 add esp,0x4
0xb30075d0    50                     push eax
        ;; t1 <- Constant:8(#0)
0xb30075d1    b800000000             mov eax,0
0xb30075d6    50                     push eax
        ;; Branch if EqualityCompare:9(t0 == t1) goto (2, 3)
0xb30075d7    5a                     pop edx
0xb30075d8    5b                     pop ebx
0xb30075d9    53                     push ebx
0xb30075da    52                     push edx
0xb30075db    813c24190040b5         cmp [esp],0xb5400019
0xb30075e2    0f8425000000           jz 0xb300760d
0xb30075e8    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb30075f0    0f8417000000           jz 0xb300760d
0xb30075f6    b9f91c29b3             mov ecx,0xb3291cf9  'ICData target:'==' num-checks: 0'
0xb30075fb    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007600    e8d38cffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007605    83c408                 add esp,0x8
0xb3007608    e90d000000             jmp 0xb300761a
0xb300760d    b9f91c29b3             mov ecx,0xb3291cf9  'ICData target:'==' num-checks: 0'
0xb3007612    e83193ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3007617    83c408                 add esp,0x8
0xb300761a    3d391030b3             cmp eax, 0xb3301039  'true'
0xb300761f    0f8522000000           jnz 0xb3007647
        ;; B2
        ;; t0 <- Constant:11(#)
0xb3007625    b8e11240b5             mov eax,0xb54012e1
0xb300762a    50                     push eax
        ;; Return:12(t0)
0xb300762b    58                     pop eax
0xb300762c    ba710913b3             mov edx,0xb3130971  'Function 'toString':.'
0xb3007631    ff422b                 inc [edx+0x2b]
0xb3007634    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300763b    7c05                   jl 0xb3007642
0xb300763d    e87692ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3007642    89ec                   mov esp,ebp
0xb3007644    5d                     pop ebp
0xb3007645    c3                     ret
0xb3007646    90                     nop
        ;; B3
        ;; t0 <- LoadLocal:15(this lvl:0)
0xb3007647    8b4508                 mov eax,[ebp+0x8]
0xb300764a    50                     push eax
        ;; PushArgument:16(t0)
        ;; t0 <- InstanceCall:17(get:_buffer@0x36924d72, t0)
0xb300764b    b9511d29b3             mov ecx,0xb3291d51  'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
0xb3007650    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007655    e8be8bffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300765a    83c404                 add esp,0x4
0xb300765d    50                     push eax
        ;; PushArgument:18(t0)
        ;; t0 <- InstanceCall:19(get:length, t0)
0xb300765e    b9a11d29b3             mov ecx,0xb3291da1  'ICData target:'get:length' num-checks: 0'
0xb3007663    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007668    e8ab8bffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300766d    83c404                 add esp,0x4
0xb3007670    50                     push eax
        ;; t1 <- Constant:20(#1)
0xb3007671    b802000000             mov eax,0x2
0xb3007676    50                     push eax
        ;; Branch if EqualityCompare:21(t0 == t1) goto (4, 5)
0xb3007677    5a                     pop edx
0xb3007678    5b                     pop ebx
0xb3007679    53                     push ebx
0xb300767a    52                     push edx
0xb300767b    813c24190040b5         cmp [esp],0xb5400019
0xb3007682    0f8425000000           jz 0xb30076ad
0xb3007688    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3007690    0f8417000000           jz 0xb30076ad
0xb3007696    b9f11d29b3             mov ecx,0xb3291df1  'ICData target:'==' num-checks: 0'
0xb300769b    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30076a0    e8338cffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30076a5    83c408                 add esp,0x8
0xb30076a8    e90d000000             jmp 0xb30076ba
0xb30076ad    b9f11d29b3             mov ecx,0xb3291df1  'ICData target:'==' num-checks: 0'
0xb30076b2    e89192ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb30076b7    83c408                 add esp,0x8
0xb30076ba    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30076bf    0f854c000000           jnz 0xb3007711
        ;; B4
        ;; t0 <- LoadLocal:23(this lvl:0)
0xb30076c5    8b4508                 mov eax,[ebp+0x8]
0xb30076c8    50                     push eax
        ;; PushArgument:24(t0)
        ;; t0 <- InstanceCall:25(get:_buffer@0x36924d72, t0)
0xb30076c9    b9491e29b3             mov ecx,0xb3291e49  'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
0xb30076ce    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30076d3    e8408bffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30076d8    83c404                 add esp,0x4
0xb30076db    50                     push eax
        ;; PushArgument:26(t0)
        ;; t0 <- Constant:27(#0)
0xb30076dc    b800000000             mov eax,0
0xb30076e1    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- InstanceCall:29([], t0, t0)
0xb30076e2    b9991e29b3             mov ecx,0xb3291e99  'ICData target:'[]' num-checks: 0'
0xb30076e7    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30076ec    e8278bffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30076f1    83c408                 add esp,0x8
0xb30076f4    50                     push eax
        ;; Return:30(t0)
0xb30076f5    58                     pop eax
0xb30076f6    ba710913b3             mov edx,0xb3130971  'Function 'toString':.'
0xb30076fb    ff422b                 inc [edx+0x2b]
0xb30076fe    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3007705    7c05                   jl 0xb300770c
0xb3007707    e8ac91ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300770c    89ec                   mov esp,ebp
0xb300770e    5d                     pop ebp
0xb300770f    c3                     ret
0xb3007710    90                     nop
        ;; B5
        ;; t0 <- LoadLocal:33(this lvl:0)
0xb3007711    8b4508                 mov eax,[ebp+0x8]
0xb3007714    50                     push eax
        ;; PushArgument:34(t0)
        ;; t0 <- InstanceCall:35(get:_buffer@0x36924d72, t0)
0xb3007715    b9e91e29b3             mov ecx,0xb3291ee9  'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
0xb300771a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300771f    e8f48affff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007724    83c404                 add esp,0x4
0xb3007727    50                     push eax
        ;; PushArgument:36(t0)
        ;; t0 <- StaticCall:37(concatAll t0)
0xb3007728    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300772d    e8f68b3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007732    83c404                 add esp,0x4
0xb3007735    50                     push eax
        ;; StoreLocal:38(result, t0, lvl: 0)
0xb3007736    58                     pop eax
0xb3007737    8945f8                 mov [ebp-0x8],eax
        ;; t0 <- LoadLocal:39(this lvl:0)
0xb300773a    8b4508                 mov eax,[ebp+0x8]
0xb300773d    50                     push eax
        ;; PushArgument:40(t0)
        ;; t0 <- InstanceCall:41(get:_buffer@0x36924d72, t0)
0xb300773e    b9511f29b3             mov ecx,0xb3291f51  'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
0xb3007743    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007748    e8cb8affff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300774d    83c404                 add esp,0x4
0xb3007750    50                     push eax
        ;; PushArgument:42(t0)
        ;; InstanceCall:43(clear, t0)
0xb3007751    b9a11f29b3             mov ecx,0xb3291fa1  'ICData target:'clear' num-checks: 0'
0xb3007756    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300775b    e8b88affff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007760    83c404                 add esp,0x4
        ;; t0 <- LoadLocal:44(this lvl:0)
0xb3007763    8b4508                 mov eax,[ebp+0x8]
0xb3007766    50                     push eax
        ;; PushArgument:45(t0)
        ;; t0 <- InstanceCall:46(get:_buffer@0x36924d72, t0)
0xb3007767    b9f11f29b3             mov ecx,0xb3291ff1  'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
0xb300776c    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007771    e8a28affff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007776    83c404                 add esp,0x4
0xb3007779    50                     push eax
        ;; PushArgument:47(t0)
        ;; t0 <- LoadLocal:48(result lvl:0)
0xb300777a    8b45f8                 mov eax,[ebp-0x8]
0xb300777d    50                     push eax
        ;; PushArgument:49(t0)
        ;; InstanceCall:50(add, t0, t0)
0xb300777e    b9412029b3             mov ecx,0xb3292041  'ICData target:'add' num-checks: 0'
0xb3007783    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007788    e88b8affff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300778d    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:51(result lvl:0)
0xb3007790    8b45f8                 mov eax,[ebp-0x8]
0xb3007793    50                     push eax
        ;; Return:52(t0)
0xb3007794    58                     pop eax
0xb3007795    ba710913b3             mov edx,0xb3130971  'Function 'toString':.'
0xb300779a    ff422b                 inc [edx+0x2b]
0xb300779d    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30077a4    7c05                   jl 0xb30077ab
0xb30077a6    e80d91ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30077ab    89ec                   mov esp,ebp
0xb30077ad    5d                     pop ebp
0xb30077ae    c3                     ret
0xb30077af    90                     nop
0xb30077b0    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30077b1    b970d30a08             mov ecx,0x80ad370
0xb30077b6    ba00000000             mov edx,0
0xb30077bb    e868883702             call 0xb5380028  [stub: CallToRuntime]
0xb30077c0    e9e2fdffff             jmp 0xb30075a7
0xb30077c5    e96e8c3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30077ca    e9498d3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 36 : 0xb30075ac 'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
 41 : 0xb30075b1 'ImmutableArray'
 55 : 0xb30075bf 'ICData target:'get:length' num-checks: 0'
 60 : 0xb30075c4 'ImmutableArray'
 111 : 0xb30075f7 'ICData target:'==' num-checks: 0'
 116 : 0xb30075fc 'ImmutableArray'
 134 : 0xb300760e 'ICData target:'==' num-checks: 0'
 147 : 0xb300761b 'true'
 158 : 0xb3007626 ''
 165 : 0xb300762d 'Function 'toString':.'
 196 : 0xb300764c 'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
 201 : 0xb3007651 'ImmutableArray'
 215 : 0xb300765f 'ICData target:'get:length' num-checks: 0'
 220 : 0xb3007664 'ImmutableArray'
 271 : 0xb3007697 'ICData target:'==' num-checks: 0'
 276 : 0xb300769c 'ImmutableArray'
 294 : 0xb30076ae 'ICData target:'==' num-checks: 0'
 307 : 0xb30076bb 'true'
 322 : 0xb30076ca 'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
 327 : 0xb30076cf 'ImmutableArray'
 347 : 0xb30076e3 'ICData target:'[]' num-checks: 0'
 352 : 0xb30076e8 'ImmutableArray'
 367 : 0xb30076f7 'Function 'toString':.'
 398 : 0xb3007716 'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
 403 : 0xb300771b 'ImmutableArray'
 417 : 0xb3007729 'ImmutableArray'
 439 : 0xb300773f 'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
 444 : 0xb3007744 'ImmutableArray'
 458 : 0xb3007752 'ICData target:'clear' num-checks: 0'
 463 : 0xb3007757 'ImmutableArray'
 480 : 0xb3007768 'ICData target:'get:_buffer@0x36924d72' num-checks: 0'
 485 : 0xb300776d 'ImmutableArray'
 503 : 0xb300777f 'ICData target:'add' num-checks: 0'
 508 : 0xb3007784 'ImmutableArray'
 526 : 0xb3007796 'Function 'toString':.'
}
PC Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_toString' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30075ab	deopt-before 	5		19235	-1
0xb30075ba	ic-call      	5		19235	-1
0xb30075ba	deopt-after  	5		19235	-1
0xb30075be	deopt-before 	7		19238	-1
0xb30075cd	ic-call      	7		19238	-1
0xb30075cd	deopt-after  	7		19238	-1
0xb30075db	deopt-before 	9		19240	-1
0xb3007605	ic-call      	9		19240	-1
0xb3007605	deopt-after  	9		19240	-1
0xb3007617	other        	-1		19240	-1
0xb3007642	other        	-1		0	-1
0xb3007647	return       	-1		19244	-1
0xb300764b	deopt-before 	17		19250	-1
0xb300765a	ic-call      	17		19250	-1
0xb300765a	deopt-after  	17		19250	-1
0xb300765e	deopt-before 	19		19253	-1
0xb300766d	ic-call      	19		19253	-1
0xb300766d	deopt-after  	19		19253	-1
0xb300767b	deopt-before 	21		19255	-1
0xb30076a5	ic-call      	21		19255	-1
0xb30076a5	deopt-after  	21		19255	-1
0xb30076b7	other        	-1		19255	-1
0xb30076c9	deopt-before 	25		19260	-1
0xb30076d8	ic-call      	25		19260	-1
0xb30076d8	deopt-after  	25		19260	-1
0xb30076e2	deopt-before 	29		19262	-1
0xb30076f1	ic-call      	29		19262	-1
0xb30076f1	deopt-after  	29		19262	-1
0xb300770c	other        	-1		0	-1
0xb3007711	return       	-1		19259	-1
0xb3007715	deopt-before 	35		19278	-1
0xb3007724	ic-call      	35		19278	-1
0xb3007724	deopt-after  	35		19278	-1
0xb3007732	fn-call      	37		19277	-1
0xb3007732	deopt-after  	37		19277	-1
0xb300773e	deopt-before 	41		19282	-1
0xb300774d	ic-call      	41		19282	-1
0xb300774d	deopt-after  	41		19282	-1
0xb3007751	deopt-before 	43		19287	-1
0xb3007760	ic-call      	43		19287	-1
0xb3007760	deopt-after  	43		19287	-1
0xb3007767	deopt-before 	46		19290	-1
0xb3007776	ic-call      	46		19290	-1
0xb3007776	deopt-after  	46		19290	-1
0xb300777e	deopt-before 	50		19295	-1
0xb300778d	ic-call      	50		19295	-1
0xb300778d	deopt-after  	50		19295	-1
0xb30077ab	other        	-1		0	-1
0xb30077b0	return       	-1		19300	-1
0xb30077c0	other        	-1		19230	-1
0xb30077c5	patch        	-1		0	-1
0xb30077ca	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBufferImpl@0x36924d72_toString' {
}
Variable Descriptors for function 'dart:core__StringBufferImpl@0x36924d72_toString' {
  stack var 'this' offset 2 (valid 19026-19305)
  stack var 'result' offset -2 (valid 19269-19305)
}
Exception Handlers for function 'dart:core__StringBufferImpl@0x36924d72_toString' {
No exception handlers
}
Static call target functions {
  0xb3007732: dart:core_Strings_concatAll, 0xb5400019
}
Compiling function: 'dart:core_Strings_concatAll' @ token 15837
Before Optimizations
==== dart:core_Strings_concatAll
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(strings lvl:0)
    PushArgument:4(t0)
    t0 <- StaticCall:5(concatAll t0)
    Return:6(t0)
--> 'dart:core_Strings_concatAll' entry: 0xb30077e8 time: 81 us
Code for function 'dart:core_Strings_concatAll' {
        ;; Enter frame
0xb30077e8    55                     push ebp
0xb30077e9    89e5                   mov ebp,esp
0xb30077eb    e800000000             call 0xb30077f0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30077f0    3b25bc195809           cmp esp,[0x95819bc]
0xb30077f6    0f862f000000           jna 0xb300782b
        ;; t0 <- LoadLocal:3(strings lvl:0)
0xb30077fc    8b4508                 mov eax,[ebp+0x8]
0xb30077ff    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- StaticCall:5(concatAll t0)
0xb3007800    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007805    e81e8b3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300780a    83c404                 add esp,0x4
0xb300780d    50                     push eax
        ;; Return:6(t0)
0xb300780e    58                     pop eax
0xb300780f    ba998912b3             mov edx,0xb3128999  'Function 'concatAll': static.'
0xb3007814    ff422b                 inc [edx+0x2b]
0xb3007817    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300781e    7c05                   jl 0xb3007825
0xb3007820    e89390ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3007825    89ec                   mov esp,ebp
0xb3007827    5d                     pop ebp
0xb3007828    c3                     ret
0xb3007829    90                     nop
0xb300782a    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300782b    b970d30a08             mov ecx,0x80ad370
0xb3007830    ba00000000             mov edx,0
0xb3007835    e8ee873702             call 0xb5380028  [stub: CallToRuntime]
0xb300783a    ebc0                   jmp 0xb30077fc
0xb300783c    e9f78b3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3007841    e9d28c3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 25 : 0xb3007801 'ImmutableArray'
 40 : 0xb3007810 'Function 'concatAll': static.'
}
PC Descriptors for function 'dart:core_Strings_concatAll' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300780a	fn-call      	5		15854	-1
0xb300780a	deopt-after  	5		15854	-1
0xb3007825	other        	-1		0	-1
0xb300782a	return       	-1		15848	-1
0xb300783a	other        	-1		15837	-1
0xb300783c	patch        	-1		0	-1
0xb3007841	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_Strings_concatAll' {
}
Variable Descriptors for function 'dart:core_Strings_concatAll' {
  stack var 'strings' offset 2 (valid 15844-15860)
}
Exception Handlers for function 'dart:core_Strings_concatAll' {
No exception handlers
}
Static call target functions {
  0xb300780a: dart:core__StringBase@0x36924d72_concatAll, 0xb5400019
}
PatchStaticCall: patching from 0xb3007732 to 'dart:core_Strings_concatAll' 0xb30077e8
PatchStaticCall: patching from 0xb300780a to 'dart:core__StringBase@0x36924d72_concatAll' 0xb3006798
PatchStaticCall: patching from 0xb30068e2 to 'dart:core__ObjectArray@0x36924d72__ObjectArray@0x36924d72.' 0xb3001508
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72_clear' @ token 8147
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72_clear
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#0)
    PushArgument:6(t0)
    InstanceCall:7(set:length, t0, t0)
    t0 <- Constant:8(#null)
    Return:9(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72_clear' entry: 0xb3007858 time: 198 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72_clear' {
        ;; Enter frame
0xb3007858    55                     push ebp
0xb3007859    89e5                   mov ebp,esp
0xb300785b    e800000000             call 0xb3007860
0xb3007860    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb3007863    b8190040b5             mov eax,0xb5400019
0xb3007868    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300786b    3b25bc195809           cmp esp,[0x95819bc]
0xb3007871    0f863f000000           jna 0xb30078b6
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb3007877    8b4508                 mov eax,[ebp+0x8]
0xb300787a    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#0)
0xb300787b    b800000000             mov eax,0
0xb3007880    50                     push eax
        ;; PushArgument:6(t0)
        ;; InstanceCall:7(set:length, t0, t0)
0xb3007881    b9012a29b3             mov ecx,0xb3292a01  'ICData target:'set:length' num-checks: 0'
0xb3007886    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300788b    e8488affff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007890    83c408                 add esp,0x8
        ;; t0 <- Constant:8(#null)
0xb3007893    b8190040b5             mov eax,0xb5400019
0xb3007898    50                     push eax
        ;; Return:9(t0)
0xb3007899    58                     pop eax
0xb300789a    ba31e81ab3             mov edx,0xb31ae831  'Function 'clear':.'
0xb300789f    ff422b                 inc [edx+0x2b]
0xb30078a2    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30078a9    7c05                   jl 0xb30078b0
0xb30078ab    e80890ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30078b0    89ec                   mov esp,ebp
0xb30078b2    5d                     pop ebp
0xb30078b3    c3                     ret
0xb30078b4    90                     nop
0xb30078b5    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30078b6    b970d30a08             mov ecx,0x80ad370
0xb30078bb    ba00000000             mov edx,0
0xb30078c0    e863873702             call 0xb5380028  [stub: CallToRuntime]
0xb30078c5    ebb0                   jmp 0xb3007877
0xb30078c7    e96c8b3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30078cc    e9478c3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 42 : 0xb3007882 'ICData target:'set:length' num-checks: 0'
 47 : 0xb3007887 'ImmutableArray'
 67 : 0xb300789b 'Function 'clear':.'
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_clear' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3007881	deopt-before 	7		8152	-1
0xb3007890	ic-call      	7		8152	-1
0xb3007890	deopt-after  	7		8152	-1
0xb30078b0	other        	-1		0	-1
0xb30078b5	return       	-1		8159	-1
0xb30078c5	other        	-1		8147	-1
0xb30078c7	patch        	-1		0	-1
0xb30078cc	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72_clear' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_clear' {
  stack var 'this' offset 2 (valid 6682-8159)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72_clear' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__GrowableObjectArray@0x36924d72_set_length' @ token 7413
Before Optimizations
==== dart:core__GrowableObjectArray@0x36924d72_set_length
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(new_length lvl:0)
    t1 <- LoadLocal:4(this lvl:0)
    PushArgument:5(t1)
    t1 <- InstanceCall:6(get:capacity, t1)
    Branch if RelationalOp:7(>, t0, t1) goto (5, 6)
B5[target]
    t0 <- LoadLocal:9(this lvl:0)
    PushArgument:10(t0)
    t0 <- LoadLocal:11(new_length lvl:0)
    PushArgument:12(t0)
    InstanceCall:13(_grow@0x36924d72, t0, t0)
    goto:45 7
B6[target]
    t0 <- LoadLocal:14(new_length lvl:0)
    StoreLocal:15(i, t0, lvl: 0)
    goto:32 2
B2[join] pred(B3, B6)
    t0 <- LoadLocal:34(i lvl:0)
    t1 <- LoadLocal:35(this lvl:0)
    PushArgument:36(t1)
    t1 <- InstanceCall:37(get:length, t1)
    Branch if RelationalOp:38(<, t0, t1) goto (3, 4)
B3[target]
    CheckStackOverflow:16()
    t0 <- LoadLocal:17(this lvl:0)
    PushArgument:18(t0)
    t0 <- LoadLocal:19(i lvl:0)
    PushArgument:20(t0)
    t0 <- Constant:21(#null)
    PushArgument:22(t0)
    InstanceCall:23([]=, t0, t0, t0)
    t0 <- LoadLocal:24(i lvl:0)
    t0 <- StoreLocal:25(:expr_temp, t0, lvl: 0)
    PushArgument:26(t0)
    t0 <- Constant:27(#1)
    PushArgument:28(t0)
    t0 <- InstanceCall:29(+, t0, t0)
    StoreLocal:30(i, t0, lvl: 0)
    goto:33 2
B4[target]
    goto:46 7
B7[join] pred(B4, B5)
    t0 <- LoadLocal:47(this lvl:0)
    PushArgument:48(t0)
    t0 <- LoadLocal:49(new_length lvl:0)
    PushArgument:50(t0)
    InstanceCall:51(_setLength@0x36924d72, t0, t0)
    t0 <- Constant:52(#null)
    Return:53(t0)
--> 'dart:core__GrowableObjectArray@0x36924d72_set_length' entry: 0xb30078e8 time: 461 us
Code for function 'dart:core__GrowableObjectArray@0x36924d72_set_length' {
        ;; Enter frame
0xb30078e8    55                     push ebp
0xb30078e9    89e5                   mov ebp,esp
0xb30078eb    e800000000             call 0xb30078f0
0xb30078f0    83ec08                 sub esp,0x8
        ;; Initialize spill slots
0xb30078f3    b8190040b5             mov eax,0xb5400019
0xb30078f8    8945f8                 mov [ebp-0x8],eax
0xb30078fb    8945f4                 mov [ebp-0xc],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30078fe    3b25bc195809           cmp esp,[0x95819bc]
0xb3007904    0f8633010000           jna 0xb3007a3d
        ;; t0 <- LoadLocal:3(new_length lvl:0)
0xb300790a    8b4508                 mov eax,[ebp+0x8]
0xb300790d    50                     push eax
        ;; t1 <- LoadLocal:4(this lvl:0)
0xb300790e    8b450c                 mov eax,[ebp+0xc]
0xb3007911    50                     push eax
        ;; PushArgument:5(t1)
        ;; t1 <- InstanceCall:6(get:capacity, t1)
0xb3007912    b9092c29b3             mov ecx,0xb3292c09  'ICData target:'get:capacity' num-checks: 0'
0xb3007917    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300791c    e8f788ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007921    83c404                 add esp,0x4
0xb3007924    50                     push eax
        ;; Branch if RelationalOp:7(>, t0, t1) goto (5, 6)
0xb3007925    59                     pop ecx
0xb3007926    58                     pop eax
0xb3007927    50                     push eax
0xb3007928    51                     push ecx
0xb3007929    b9592c29b3             mov ecx,0xb3292c59  'ICData target:'>' num-checks: 0'
0xb300792e    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007933    e8a089ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007938    83c408                 add esp,0x8
0xb300793b    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3007940    0f851f000000           jnz 0xb3007965
        ;; B5
        ;; t0 <- LoadLocal:9(this lvl:0)
0xb3007946    8b450c                 mov eax,[ebp+0xc]
0xb3007949    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- LoadLocal:11(new_length lvl:0)
0xb300794a    8b4508                 mov eax,[ebp+0x8]
0xb300794d    50                     push eax
        ;; PushArgument:12(t0)
        ;; InstanceCall:13(_grow@0x36924d72, t0, t0)
0xb300794e    b9b12c29b3             mov ecx,0xb3292cb1  'ICData target:'_grow@0x36924d72' num-checks: 0'
0xb3007953    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007958    e8bb88ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300795d    83c408                 add esp,0x8
        ;; goto:45 7
0xb3007960    e99b000000             jmp 0xb3007a00
        ;; B6
        ;; t0 <- LoadLocal:14(new_length lvl:0)
0xb3007965    8b4508                 mov eax,[ebp+0x8]
0xb3007968    50                     push eax
        ;; StoreLocal:15(i, t0, lvl: 0)
0xb3007969    58                     pop eax
0xb300796a    8945f4                 mov [ebp-0xc],eax
        ;; goto:32 2
        ;; B2
        ;; t0 <- LoadLocal:34(i lvl:0)
0xb300796d    8b45f4                 mov eax,[ebp-0xc]
0xb3007970    50                     push eax
        ;; t1 <- LoadLocal:35(this lvl:0)
0xb3007971    8b450c                 mov eax,[ebp+0xc]
0xb3007974    50                     push eax
        ;; PushArgument:36(t1)
        ;; t1 <- InstanceCall:37(get:length, t1)
0xb3007975    b9012d29b3             mov ecx,0xb3292d01  'ICData target:'get:length' num-checks: 0'
0xb300797a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300797f    e89488ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007984    83c404                 add esp,0x4
0xb3007987    50                     push eax
        ;; Branch if RelationalOp:38(<, t0, t1) goto (3, 4)
0xb3007988    59                     pop ecx
0xb3007989    58                     pop eax
0xb300798a    50                     push eax
0xb300798b    51                     push ecx
0xb300798c    b9512d29b3             mov ecx,0xb3292d51  'ICData target:'<' num-checks: 0'
0xb3007991    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007996    e83d89ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300799b    83c408                 add esp,0x8
0xb300799e    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30079a3    0f8557000000           jnz 0xb3007a00
        ;; B3
        ;; CheckStackOverflow:16()
0xb30079a9    3b25bc195809           cmp esp,[0x95819bc]
0xb30079af    0f869c000000           jna 0xb3007a51
        ;; t0 <- LoadLocal:17(this lvl:0)
0xb30079b5    8b450c                 mov eax,[ebp+0xc]
0xb30079b8    50                     push eax
        ;; PushArgument:18(t0)
        ;; t0 <- LoadLocal:19(i lvl:0)
0xb30079b9    8b45f4                 mov eax,[ebp-0xc]
0xb30079bc    50                     push eax
        ;; PushArgument:20(t0)
        ;; t0 <- Constant:21(#null)
0xb30079bd    b8190040b5             mov eax,0xb5400019
0xb30079c2    50                     push eax
        ;; PushArgument:22(t0)
        ;; InstanceCall:23([]=, t0, t0, t0)
0xb30079c3    b9a92d29b3             mov ecx,0xb3292da9  'ICData target:'[]=' num-checks: 0'
0xb30079c8    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb30079cd    e8e689ffff             call 0xb30003b8  [stub: ThreeArgsCheckInlineCache]
0xb30079d2    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:24(i lvl:0)
0xb30079d5    8b45f4                 mov eax,[ebp-0xc]
0xb30079d8    50                     push eax
        ;; t0 <- StoreLocal:25(:expr_temp, t0, lvl: 0)
0xb30079d9    58                     pop eax
0xb30079da    8945f8                 mov [ebp-0x8],eax
0xb30079dd    50                     push eax
        ;; PushArgument:26(t0)
        ;; t0 <- Constant:27(#1)
0xb30079de    b802000000             mov eax,0x2
0xb30079e3    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- InstanceCall:29(+, t0, t0)
0xb30079e4    b9012e29b3             mov ecx,0xb3292e01  'ICData target:'+' num-checks: 0'
0xb30079e9    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30079ee    e8e588ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30079f3    83c408                 add esp,0x8
0xb30079f6    50                     push eax
        ;; StoreLocal:30(i, t0, lvl: 0)
0xb30079f7    58                     pop eax
0xb30079f8    8945f4                 mov [ebp-0xc],eax
        ;; goto:33 2
0xb30079fb    e96dffffff             jmp 0xb300796d
        ;; B4
        ;; goto:46 7
        ;; B7
        ;; t0 <- LoadLocal:47(this lvl:0)
0xb3007a00    8b450c                 mov eax,[ebp+0xc]
0xb3007a03    50                     push eax
        ;; PushArgument:48(t0)
        ;; t0 <- LoadLocal:49(new_length lvl:0)
0xb3007a04    8b4508                 mov eax,[ebp+0x8]
0xb3007a07    50                     push eax
        ;; PushArgument:50(t0)
        ;; InstanceCall:51(_setLength@0x36924d72, t0, t0)
0xb3007a08    b9592e29b3             mov ecx,0xb3292e59  'ICData target:'_setLength@0x36924d72' num-checks: 0'
0xb3007a0d    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007a12    e80188ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007a17    83c408                 add esp,0x8
        ;; t0 <- Constant:52(#null)
0xb3007a1a    b8190040b5             mov eax,0xb5400019
0xb3007a1f    50                     push eax
        ;; Return:53(t0)
0xb3007a20    58                     pop eax
0xb3007a21    bae9de1ab3             mov edx,0xb31adee9  'Function 'set:length':.'
0xb3007a26    ff422b                 inc [edx+0x2b]
0xb3007a29    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3007a30    7c05                   jl 0xb3007a37
0xb3007a32    e8818effff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3007a37    89ec                   mov esp,ebp
0xb3007a39    5d                     pop ebp
0xb3007a3a    c3                     ret
0xb3007a3b    90                     nop
0xb3007a3c    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3007a3d    b970d30a08             mov ecx,0x80ad370
0xb3007a42    ba00000000             mov edx,0
0xb3007a47    e8dc853702             call 0xb5380028  [stub: CallToRuntime]
0xb3007a4c    e9b9feffff             jmp 0xb300790a
        ;; CheckStackOverflowSlowPath
0xb3007a51    b970d30a08             mov ecx,0x80ad370
0xb3007a56    ba00000000             mov edx,0
0xb3007a5b    e8c8853702             call 0xb5380028  [stub: CallToRuntime]
0xb3007a60    e950ffffff             jmp 0xb30079b5
0xb3007a65    e9ce893702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3007a6a    e9a98a3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 43 : 0xb3007913 'ICData target:'get:capacity' num-checks: 0'
 48 : 0xb3007918 'ImmutableArray'
 66 : 0xb300792a 'ICData target:'>' num-checks: 0'
 71 : 0xb300792f 'ImmutableArray'
 84 : 0xb300793c 'true'
 103 : 0xb300794f 'ICData target:'_grow@0x36924d72' num-checks: 0'
 108 : 0xb3007954 'ImmutableArray'
 142 : 0xb3007976 'ICData target:'get:length' num-checks: 0'
 147 : 0xb300797b 'ImmutableArray'
 165 : 0xb300798d 'ICData target:'<' num-checks: 0'
 170 : 0xb3007992 'ImmutableArray'
 183 : 0xb300799f 'true'
 220 : 0xb30079c4 'ICData target:'[]=' num-checks: 0'
 225 : 0xb30079c9 'ImmutableArray'
 253 : 0xb30079e5 'ICData target:'+' num-checks: 0'
 258 : 0xb30079ea 'ImmutableArray'
 289 : 0xb3007a09 'ICData target:'_setLength@0x36924d72' num-checks: 0'
 294 : 0xb3007a0e 'ImmutableArray'
 314 : 0xb3007a22 'Function 'set:length':.'
}
PC Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_set_length' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3007912	deopt-before 	6		7424	-1
0xb3007921	ic-call      	6		7424	-1
0xb3007921	deopt-after  	6		7424	-1
0xb3007929	deopt-before 	7		7423	-1
0xb3007938	ic-call      	7		7423	-1
0xb3007938	deopt-after  	7		7423	-1
0xb300794e	deopt-before 	13		7430	-1
0xb300795d	ic-call      	13		7430	-1
0xb300795d	deopt-after  	13		7430	-1
0xb3007960	deopt-before 	45		0	-1
0xb300796d	deopt-before 	32		0	-1
0xb3007975	deopt-before 	37		7450	-1
0xb3007984	ic-call      	37		7450	-1
0xb3007984	deopt-after  	37		7450	-1
0xb300798c	deopt-before 	38		7449	-1
0xb300799b	ic-call      	38		7449	-1
0xb300799b	deopt-after  	38		7449	-1
0xb30079c3	deopt-before 	23		7459	-1
0xb30079d2	ic-call      	23		7459	-1
0xb30079d2	deopt-after  	23		7459	-1
0xb30079e4	deopt-before 	29		7453	-1
0xb30079f3	ic-call      	29		7453	-1
0xb30079f3	deopt-after  	29		7453	-1
0xb30079fb	deopt-before 	33		0	-1
0xb3007a00	deopt-before 	46		0	-1
0xb3007a08	deopt-before 	51		7470	-1
0xb3007a17	ic-call      	51		7470	-1
0xb3007a17	deopt-after  	51		7470	-1
0xb3007a37	other        	-1		0	-1
0xb3007a3c	return       	-1		7476	-1
0xb3007a4c	other        	-1		7413	-1
0xb3007a60	other        	-1		7438	-1
0xb3007a65	patch        	-1		0	-1
0xb3007a6a	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__GrowableObjectArray@0x36924d72_set_length' {
}
Variable Descriptors for function 'dart:core__GrowableObjectArray@0x36924d72_set_length' {
  stack var 'this' offset 3 (valid 6682-7476)
  stack var 'new_length' offset 2 (valid 7415-7476)
  stack var 'i' offset -3 (valid 7441-7467)
}
Exception Handlers for function 'dart:core__GrowableObjectArray@0x36924d72_set_length' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb300113e to 'dart:builtin_::__logResolution@0x116c55de' 0xb30019b8
Compiling function: 'dart:builtin_::__filePathFromUri@0x116c55de' @ token 517
Before Optimizations
==== dart:builtin_::__filePathFromUri@0x116c55de
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- AllocateObject:3(Library:'dart:uri' Class: Uri)
    t0 <- StoreLocal:4(:alloc532, t0, lvl: 0)
    PushArgument:5(t0)
    t0 <- Constant:6(#3)
    PushArgument:7(t0)
    t0 <- LoadLocal:8(userUri lvl:0)
    PushArgument:9(t0)
    StaticCall:10(Uri.fromString t0, t0, t0)
    t0 <- LoadLocal:11(:alloc532 lvl:0)
    StoreLocal:12(uri, t0, lvl: 0)
    t0 <- Constant:13(## Getting file path from: )
    PushArgument:14(t0)
    t0 <- LoadLocal:15(uri lvl:0)
    PushArgument:16(t0)
    t0 <- Constant:17(#)
    PushArgument:18(t0)
    t0 <- Constant:19(#NULL AbstractTypeArguments)
    t0 <- CreateArray:20(t0, t0, t0, t0)
    PushArgument:21(t0)
    t0 <- StaticCall:22(_interpolate@0x36924d72 t0)
    PushArgument:23(t0)
    StaticCall:24(_logResolution@0x116c55de t0)
    t0 <- Constant:25(#null)
    StoreLocal:26(path, t0, lvl: 0)
    t0 <- LoadLocal:27(uri lvl:0)
    PushArgument:28(t0)
    t0 <- InstanceCall:29(get:scheme, t0)
    StoreLocal:30(:switch_expr, t0, lvl: 0)
    t0 <- Constant:38(#file)
    t1 <- LoadLocal:39(:switch_expr lvl:0)
    Branch if EqualityCompare:40(t0 == t1) goto (4, 5)
B4[target]
    goto:43 2
B2[join] pred(B4)
    t0 <- LoadLocal:32(uri lvl:0)
    PushArgument:33(t0)
    t0 <- StaticCall:34(_filePathFromFileUri@0x116c55de t0)
    StoreLocal:35(path, t0, lvl: 0)
    goto:37 3
B5[target]
    t0 <- Constant:51(#dart-ext)
    t1 <- LoadLocal:52(:switch_expr lvl:0)
    Branch if EqualityCompare:53(t0 == t1) goto (7, 8)
B7[target]
    goto:56 6
B6[join] pred(B7)
    t0 <- LoadLocal:46(uri lvl:0)
    PushArgument:47(t0)
    t0 <- StaticCall:48(_filePathFromOtherUri@0x116c55de t0)
    StoreLocal:49(path, t0, lvl: 0)
    goto:50 3
B8[target]
    t0 <- Constant:64(#package)
    t1 <- LoadLocal:65(:switch_expr lvl:0)
    Branch if EqualityCompare:66(t0 == t1) goto (10, 11)
B10[target]
    goto:69 9
B9[join] pred(B10)
    t0 <- LoadLocal:59(uri lvl:0)
    PushArgument:60(t0)
    t0 <- StaticCall:61(_filePathFromPackageUri@0x116c55de t0)
    StoreLocal:62(path, t0, lvl: 0)
    goto:63 3
B3[join] pred(B2, B6, B9)
    t0 <- LoadLocal:103(isWindows lvl:0)
    t1 <- Constant:104(#true)
    Branch if StrictCompare:105(===, t0, t1) goto (13, 16)
B13[target]
    t0 <- LoadLocal:107(path lvl:0)
    PushArgument:108(t0)
    t0 <- Constant:109(#/)
    PushArgument:110(t0)
    t0 <- InstanceCall:111(startsWith, t0, t0)
    t1 <- Constant:112(#true)
    Branch if StrictCompare:113(===, t0, t1) goto (14, 17)
B14[target]
    t0 <- LoadLocal:116(path lvl:0)
    PushArgument:117(t0)
    t0 <- Constant:118(#1)
    PushArgument:119(t0)
    t0 <- InstanceCall:120(substring, t0, t0)
    StoreLocal:121(path, t0, lvl: 0)
    t0 <- Constant:122(## path: )
    PushArgument:123(t0)
    t0 <- LoadLocal:124(path lvl:0)
    PushArgument:125(t0)
    t0 <- Constant:126(#)
    PushArgument:127(t0)
    t0 <- Constant:128(#NULL AbstractTypeArguments)
    t0 <- CreateArray:129(t0, t0, t0, t0)
    PushArgument:130(t0)
    t0 <- StaticCall:131(_interpolate@0x36924d72 t0)
    PushArgument:132(t0)
    StaticCall:133(_logResolution@0x116c55de t0)
    goto:141 18
B17[target]
    goto:139 15
B16[target]
    goto:137 15
B15[join] pred(B16, B17)
    goto:142 18
B18[join] pred(B14, B15)
    t0 <- LoadLocal:143(path lvl:0)
    Return:144(t0)
B11[target]
    goto:102 12
B12[join] pred(B11)
    t0 <- Constant:72(## Unknown scheme ()
    PushArgument:73(t0)
    t0 <- LoadLocal:74(uri lvl:0)
    PushArgument:75(t0)
    t0 <- InstanceCall:76(get:scheme, t0)
    PushArgument:77(t0)
    t0 <- Constant:78(#) in )
    PushArgument:79(t0)
    t0 <- LoadLocal:80(uri lvl:0)
    PushArgument:81(t0)
    t0 <- Constant:82(#.)
    PushArgument:83(t0)
    t0 <- Constant:84(#NULL AbstractTypeArguments)
    t0 <- CreateArray:85(t0, t0, t0, t0, t0, t0)
    PushArgument:86(t0)
    t0 <- StaticCall:87(_interpolate@0x36924d72 t0)
    PushArgument:88(t0)
    StaticCall:89(_logResolution@0x116c55de t0)
    t0 <- Constant:90(#Not a known scheme: )
    PushArgument:91(t0)
    t0 <- LoadLocal:92(uri lvl:0)
    PushArgument:93(t0)
    t0 <- Constant:94(#)
    PushArgument:95(t0)
    t0 <- Constant:96(#NULL AbstractTypeArguments)
    t0 <- CreateArray:97(t0, t0, t0, t0)
    PushArgument:98(t0)
    t0 <- StaticCall:99(_interpolate@0x36924d72 t0)
    PushArgument:100(t0)
    Throw:101()
--> 'dart:builtin_::__filePathFromUri@0x116c55de' entry: 0xb3007a88 time: 911 us
Code for function 'dart:builtin_::__filePathFromUri@0x116c55de' {
        ;; Enter frame
0xb3007a88    55                     push ebp
0xb3007a89    89e5                   mov ebp,esp
0xb3007a8b    e800000000             call 0xb3007a90
0xb3007a90    83ec14                 sub esp,0x14
        ;; Initialize spill slots
0xb3007a93    b8190040b5             mov eax,0xb5400019
0xb3007a98    8945f8                 mov [ebp-0x8],eax
0xb3007a9b    8945f4                 mov [ebp-0xc],eax
0xb3007a9e    8945f0                 mov [ebp-0x10],eax
0xb3007aa1    8945ec                 mov [ebp-0x14],eax
0xb3007aa4    8945e8                 mov [ebp-0x18],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3007aa7    3b25bc195809           cmp esp,[0x95819bc]
0xb3007aad    0f8684030000           jna 0xb3007e37
        ;; t0 <- AllocateObject:3(Library:'dart:uri' Class: Uri)
0xb3007ab3    e8a091ffff             call 0xb3000c58 [ stub ]
0xb3007ab8    50                     push eax
        ;; t0 <- StoreLocal:4(:alloc532, t0, lvl: 0)
0xb3007ab9    58                     pop eax
0xb3007aba    8945f4                 mov [ebp-0xc],eax
0xb3007abd    50                     push eax
        ;; PushArgument:5(t0)
        ;; t0 <- Constant:6(#3)
0xb3007abe    b806000000             mov eax,0x6
0xb3007ac3    50                     push eax
        ;; PushArgument:7(t0)
        ;; t0 <- LoadLocal:8(userUri lvl:0)
0xb3007ac4    8b450c                 mov eax,[ebp+0xc]
0xb3007ac7    50                     push eax
        ;; PushArgument:9(t0)
        ;; StaticCall:10(Uri.fromString t0, t0, t0)
0xb3007ac8    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3007acd    e856883702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007ad2    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:11(:alloc532 lvl:0)
0xb3007ad5    8b45f4                 mov eax,[ebp-0xc]
0xb3007ad8    50                     push eax
        ;; StoreLocal:12(uri, t0, lvl: 0)
0xb3007ad9    58                     pop eax
0xb3007ada    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- Constant:13(## Getting file path from: )
0xb3007add    b8616918b3             mov eax,0xb3186961  '# Getting file path from: '
0xb3007ae2    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- LoadLocal:15(uri lvl:0)
0xb3007ae3    8b45f0                 mov eax,[ebp-0x10]
0xb3007ae6    50                     push eax
        ;; PushArgument:16(t0)
        ;; t0 <- Constant:17(#)
0xb3007ae7    b8e11240b5             mov eax,0xb54012e1
0xb3007aec    50                     push eax
        ;; PushArgument:18(t0)
        ;; t0 <- Constant:19(#NULL AbstractTypeArguments)
0xb3007aed    b8190040b5             mov eax,0xb5400019
0xb3007af2    50                     push eax
        ;; t0 <- CreateArray:20(t0, t0, t0, t0)
0xb3007af3    59                     pop ecx
0xb3007af4    ba06000000             mov edx,0x6
0xb3007af9    e89a863702             call 0xb5380198  [stub: AllocateArray]
0xb3007afe    8d500b                 lea edx,[eax+0xb]
0xb3007b01    8f4208                 pop [edx+0x8]
0xb3007b04    8f4204                 pop [edx+0x4]
0xb3007b07    8f02                   pop [edx]
0xb3007b09    50                     push eax
        ;; PushArgument:21(t0)
        ;; t0 <- StaticCall:22(_interpolate@0x36924d72 t0)
0xb3007b0a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007b0f    e814883702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007b14    83c404                 add esp,0x4
0xb3007b17    50                     push eax
        ;; PushArgument:23(t0)
        ;; StaticCall:24(_logResolution@0x116c55de t0)
0xb3007b18    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007b1d    e806883702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007b22    83c404                 add esp,0x4
        ;; t0 <- Constant:25(#null)
0xb3007b25    b8190040b5             mov eax,0xb5400019
0xb3007b2a    50                     push eax
        ;; StoreLocal:26(path, t0, lvl: 0)
0xb3007b2b    58                     pop eax
0xb3007b2c    8945ec                 mov [ebp-0x14],eax
        ;; t0 <- LoadLocal:27(uri lvl:0)
0xb3007b2f    8b45f0                 mov eax,[ebp-0x10]
0xb3007b32    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- InstanceCall:29(get:scheme, t0)
0xb3007b33    b9293529b3             mov ecx,0xb3293529  'ICData target:'get:scheme' num-checks: 0'
0xb3007b38    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007b3d    e8d686ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007b42    83c404                 add esp,0x4
0xb3007b45    50                     push eax
        ;; StoreLocal:30(:switch_expr, t0, lvl: 0)
0xb3007b46    58                     pop eax
0xb3007b47    8945e8                 mov [ebp-0x18],eax
        ;; t0 <- Constant:38(#file)
0xb3007b4a    b8517e32b3             mov eax,0xb3327e51  'file'
0xb3007b4f    50                     push eax
        ;; t1 <- LoadLocal:39(:switch_expr lvl:0)
0xb3007b50    8b45e8                 mov eax,[ebp-0x18]
0xb3007b53    50                     push eax
        ;; Branch if EqualityCompare:40(t0 == t1) goto (4, 5)
0xb3007b54    5a                     pop edx
0xb3007b55    5b                     pop ebx
0xb3007b56    53                     push ebx
0xb3007b57    52                     push edx
0xb3007b58    813c24190040b5         cmp [esp],0xb5400019
0xb3007b5f    0f8425000000           jz 0xb3007b8a
0xb3007b65    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3007b6d    0f8417000000           jz 0xb3007b8a
0xb3007b73    b9793529b3             mov ecx,0xb3293579  'ICData target:'==' num-checks: 0'
0xb3007b78    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007b7d    e85687ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007b82    83c408                 add esp,0x8
0xb3007b85    e90d000000             jmp 0xb3007b97
0xb3007b8a    b9793529b3             mov ecx,0xb3293579  'ICData target:'==' num-checks: 0'
0xb3007b8f    e8b48dffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3007b94    83c408                 add esp,0x8
0xb3007b97    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3007b9c    0f851b000000           jnz 0xb3007bbd
        ;; B4
        ;; goto:43 2
        ;; B2
        ;; t0 <- LoadLocal:32(uri lvl:0)
0xb3007ba2    8b45f0                 mov eax,[ebp-0x10]
0xb3007ba5    50                     push eax
        ;; PushArgument:33(t0)
        ;; t0 <- StaticCall:34(_filePathFromFileUri@0x116c55de t0)
0xb3007ba6    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007bab    e878873702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007bb0    83c404                 add esp,0x4
0xb3007bb3    50                     push eax
        ;; StoreLocal:35(path, t0, lvl: 0)
0xb3007bb4    58                     pop eax
0xb3007bb5    8945ec                 mov [ebp-0x14],eax
        ;; goto:37 3
0xb3007bb8    e9e1000000             jmp 0xb3007c9e
        ;; B5
        ;; t0 <- Constant:51(#dart-ext)
0xb3007bbd    b8a9bb32b3             mov eax,0xb332bba9  'dart-ext'
0xb3007bc2    50                     push eax
        ;; t1 <- LoadLocal:52(:switch_expr lvl:0)
0xb3007bc3    8b45e8                 mov eax,[ebp-0x18]
0xb3007bc6    50                     push eax
        ;; Branch if EqualityCompare:53(t0 == t1) goto (7, 8)
0xb3007bc7    5a                     pop edx
0xb3007bc8    5b                     pop ebx
0xb3007bc9    53                     push ebx
0xb3007bca    52                     push edx
0xb3007bcb    813c24190040b5         cmp [esp],0xb5400019
0xb3007bd2    0f8425000000           jz 0xb3007bfd
0xb3007bd8    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3007be0    0f8417000000           jz 0xb3007bfd
0xb3007be6    b9e93529b3             mov ecx,0xb32935e9  'ICData target:'==' num-checks: 0'
0xb3007beb    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007bf0    e8e386ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007bf5    83c408                 add esp,0x8
0xb3007bf8    e90d000000             jmp 0xb3007c0a
0xb3007bfd    b9e93529b3             mov ecx,0xb32935e9  'ICData target:'==' num-checks: 0'
0xb3007c02    e8418dffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3007c07    83c408                 add esp,0x8
0xb3007c0a    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3007c0f    0f851b000000           jnz 0xb3007c30
        ;; B7
        ;; goto:56 6
        ;; B6
        ;; t0 <- LoadLocal:46(uri lvl:0)
0xb3007c15    8b45f0                 mov eax,[ebp-0x10]
0xb3007c18    50                     push eax
        ;; PushArgument:47(t0)
        ;; t0 <- StaticCall:48(_filePathFromOtherUri@0x116c55de t0)
0xb3007c19    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007c1e    e805873702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007c23    83c404                 add esp,0x4
0xb3007c26    50                     push eax
        ;; StoreLocal:49(path, t0, lvl: 0)
0xb3007c27    58                     pop eax
0xb3007c28    8945ec                 mov [ebp-0x14],eax
        ;; goto:50 3
0xb3007c2b    e96e000000             jmp 0xb3007c9e
        ;; B8
        ;; t0 <- Constant:64(#package)
0xb3007c30    b8a19332b3             mov eax,0xb33293a1  'package'
0xb3007c35    50                     push eax
        ;; t1 <- LoadLocal:65(:switch_expr lvl:0)
0xb3007c36    8b45e8                 mov eax,[ebp-0x18]
0xb3007c39    50                     push eax
        ;; Branch if EqualityCompare:66(t0 == t1) goto (10, 11)
0xb3007c3a    5a                     pop edx
0xb3007c3b    5b                     pop ebx
0xb3007c3c    53                     push ebx
0xb3007c3d    52                     push edx
0xb3007c3e    813c24190040b5         cmp [esp],0xb5400019
0xb3007c45    0f8425000000           jz 0xb3007c70
0xb3007c4b    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb3007c53    0f8417000000           jz 0xb3007c70
0xb3007c59    b9593629b3             mov ecx,0xb3293659  'ICData target:'==' num-checks: 0'
0xb3007c5e    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007c63    e87086ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007c68    83c408                 add esp,0x8
0xb3007c6b    e90d000000             jmp 0xb3007c7d
0xb3007c70    b9593629b3             mov ecx,0xb3293659  'ICData target:'==' num-checks: 0'
0xb3007c75    e8ce8cffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3007c7a    83c408                 add esp,0x8
0xb3007c7d    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3007c82    0f85f8000000           jnz 0xb3007d80
        ;; B10
        ;; goto:69 9
        ;; B9
        ;; t0 <- LoadLocal:59(uri lvl:0)
0xb3007c88    8b45f0                 mov eax,[ebp-0x10]
0xb3007c8b    50                     push eax
        ;; PushArgument:60(t0)
        ;; t0 <- StaticCall:61(_filePathFromPackageUri@0x116c55de t0)
0xb3007c8c    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007c91    e892863702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007c96    83c404                 add esp,0x4
0xb3007c99    50                     push eax
        ;; StoreLocal:62(path, t0, lvl: 0)
0xb3007c9a    58                     pop eax
0xb3007c9b    8945ec                 mov [ebp-0x14],eax
        ;; goto:63 3
        ;; B3
        ;; t0 <- LoadLocal:103(isWindows lvl:0)
0xb3007c9e    8b4508                 mov eax,[ebp+0x8]
0xb3007ca1    50                     push eax
        ;; t1 <- Constant:104(#true)
0xb3007ca2    b8391030b3             mov eax,0xb3301039  'true'
0xb3007ca7    50                     push eax
        ;; Branch if StrictCompare:105(===, t0, t1) goto (13, 16)
0xb3007ca8    58                     pop eax
0xb3007ca9    59                     pop ecx
0xb3007caa    51                     push ecx
0xb3007cab    50                     push eax
0xb3007cac    e8578b3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3007cb1    58                     pop eax
0xb3007cb2    59                     pop ecx
0xb3007cb3    0f85a7000000           jnz 0xb3007d60
        ;; B13
        ;; t0 <- LoadLocal:107(path lvl:0)
0xb3007cb9    8b45ec                 mov eax,[ebp-0x14]
0xb3007cbc    50                     push eax
        ;; PushArgument:108(t0)
        ;; t0 <- Constant:109(#/)
0xb3007cbd    b8812340b5             mov eax,0xb5402381
0xb3007cc2    50                     push eax
        ;; PushArgument:110(t0)
        ;; t0 <- InstanceCall:111(startsWith, t0, t0)
0xb3007cc3    b9c93629b3             mov ecx,0xb32936c9  'ICData target:'startsWith' num-checks: 0'
0xb3007cc8    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007ccd    e84685ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007cd2    83c408                 add esp,0x8
0xb3007cd5    50                     push eax
        ;; t1 <- Constant:112(#true)
0xb3007cd6    b8391030b3             mov eax,0xb3301039  'true'
0xb3007cdb    50                     push eax
        ;; Branch if StrictCompare:113(===, t0, t1) goto (14, 17)
0xb3007cdc    58                     pop eax
0xb3007cdd    59                     pop ecx
0xb3007cde    51                     push ecx
0xb3007cdf    50                     push eax
0xb3007ce0    e8238b3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3007ce5    58                     pop eax
0xb3007ce6    59                     pop ecx
0xb3007ce7    0f856e000000           jnz 0xb3007d5b
        ;; B14
        ;; t0 <- LoadLocal:116(path lvl:0)
0xb3007ced    8b45ec                 mov eax,[ebp-0x14]
0xb3007cf0    50                     push eax
        ;; PushArgument:117(t0)
        ;; t0 <- Constant:118(#1)
0xb3007cf1    b802000000             mov eax,0x2
0xb3007cf6    50                     push eax
        ;; PushArgument:119(t0)
        ;; t0 <- InstanceCall:120(substring, t0, t0)
0xb3007cf7    b9193729b3             mov ecx,0xb3293719  'ICData target:'substring' num-checks: 0'
0xb3007cfc    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007d01    e81285ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007d06    83c408                 add esp,0x8
0xb3007d09    50                     push eax
        ;; StoreLocal:121(path, t0, lvl: 0)
0xb3007d0a    58                     pop eax
0xb3007d0b    8945ec                 mov [ebp-0x14],eax
        ;; t0 <- Constant:122(## path: )
0xb3007d0e    b8e19f32b3             mov eax,0xb3329fe1  '# path: '
0xb3007d13    50                     push eax
        ;; PushArgument:123(t0)
        ;; t0 <- LoadLocal:124(path lvl:0)
0xb3007d14    8b45ec                 mov eax,[ebp-0x14]
0xb3007d17    50                     push eax
        ;; PushArgument:125(t0)
        ;; t0 <- Constant:126(#)
0xb3007d18    b8e11240b5             mov eax,0xb54012e1
0xb3007d1d    50                     push eax
        ;; PushArgument:127(t0)
        ;; t0 <- Constant:128(#NULL AbstractTypeArguments)
0xb3007d1e    b8190040b5             mov eax,0xb5400019
0xb3007d23    50                     push eax
        ;; t0 <- CreateArray:129(t0, t0, t0, t0)
0xb3007d24    59                     pop ecx
0xb3007d25    ba06000000             mov edx,0x6
0xb3007d2a    e869843702             call 0xb5380198  [stub: AllocateArray]
0xb3007d2f    8d500b                 lea edx,[eax+0xb]
0xb3007d32    8f4208                 pop [edx+0x8]
0xb3007d35    8f4204                 pop [edx+0x4]
0xb3007d38    8f02                   pop [edx]
0xb3007d3a    50                     push eax
        ;; PushArgument:130(t0)
        ;; t0 <- StaticCall:131(_interpolate@0x36924d72 t0)
0xb3007d3b    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007d40    e8e3853702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007d45    83c404                 add esp,0x4
0xb3007d48    50                     push eax
        ;; PushArgument:132(t0)
        ;; StaticCall:133(_logResolution@0x116c55de t0)
0xb3007d49    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007d4e    e8d5853702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007d53    83c404                 add esp,0x4
        ;; goto:141 18
0xb3007d56    e905000000             jmp 0xb3007d60
        ;; B17
        ;; goto:139 15
0xb3007d5b    e900000000             jmp 0xb3007d60
        ;; B16
        ;; goto:137 15
        ;; B15
        ;; goto:142 18
        ;; B18
        ;; t0 <- LoadLocal:143(path lvl:0)
0xb3007d60    8b45ec                 mov eax,[ebp-0x14]
0xb3007d63    50                     push eax
        ;; Return:144(t0)
0xb3007d64    58                     pop eax
0xb3007d65    ba99f911b3             mov edx,0xb311f999  'Function '_filePathFromUri@0x116c55de': static.'
0xb3007d6a    ff422b                 inc [edx+0x2b]
0xb3007d6d    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3007d74    7c05                   jl 0xb3007d7b
0xb3007d76    e83d8bffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3007d7b    89ec                   mov esp,ebp
0xb3007d7d    5d                     pop ebp
0xb3007d7e    c3                     ret
0xb3007d7f    90                     nop
        ;; B11
        ;; goto:102 12
        ;; B12
        ;; t0 <- Constant:72(## Unknown scheme ()
0xb3007d80    b8a17f18b3             mov eax,0xb3187fa1  '# Unknown scheme ('
0xb3007d85    50                     push eax
        ;; PushArgument:73(t0)
        ;; t0 <- LoadLocal:74(uri lvl:0)
0xb3007d86    8b45f0                 mov eax,[ebp-0x10]
0xb3007d89    50                     push eax
        ;; PushArgument:75(t0)
        ;; t0 <- InstanceCall:76(get:scheme, t0)
0xb3007d8a    b9993729b3             mov ecx,0xb3293799  'ICData target:'get:scheme' num-checks: 0'
0xb3007d8f    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007d94    e87f84ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007d99    83c404                 add esp,0x4
0xb3007d9c    50                     push eax
        ;; PushArgument:77(t0)
        ;; t0 <- Constant:78(#) in )
0xb3007d9d    b8a10133b3             mov eax,0xb33301a1  ') in '
0xb3007da2    50                     push eax
        ;; PushArgument:79(t0)
        ;; t0 <- LoadLocal:80(uri lvl:0)
0xb3007da3    8b45f0                 mov eax,[ebp-0x10]
0xb3007da6    50                     push eax
        ;; PushArgument:81(t0)
        ;; t0 <- Constant:82(#.)
0xb3007da7    b8f11240b5             mov eax,0xb54012f1
0xb3007dac    50                     push eax
        ;; PushArgument:83(t0)
        ;; t0 <- Constant:84(#NULL AbstractTypeArguments)
0xb3007dad    b8190040b5             mov eax,0xb5400019
0xb3007db2    50                     push eax
        ;; t0 <- CreateArray:85(t0, t0, t0, t0, t0, t0)
0xb3007db3    59                     pop ecx
0xb3007db4    ba0a000000             mov edx,0xa
0xb3007db9    e8da833702             call 0xb5380198  [stub: AllocateArray]
0xb3007dbe    8d500b                 lea edx,[eax+0xb]
0xb3007dc1    8f4210                 pop [edx+0x10]
0xb3007dc4    8f420c                 pop [edx+0xc]
0xb3007dc7    8f4208                 pop [edx+0x8]
0xb3007dca    8f4204                 pop [edx+0x4]
0xb3007dcd    8f02                   pop [edx]
0xb3007dcf    50                     push eax
        ;; PushArgument:86(t0)
        ;; t0 <- StaticCall:87(_interpolate@0x36924d72 t0)
0xb3007dd0    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007dd5    e84e853702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007dda    83c404                 add esp,0x4
0xb3007ddd    50                     push eax
        ;; PushArgument:88(t0)
        ;; StaticCall:89(_logResolution@0x116c55de t0)
0xb3007dde    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007de3    e840853702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007de8    83c404                 add esp,0x4
        ;; t0 <- Constant:90(#Not a known scheme: )
0xb3007deb    b8114f32b3             mov eax,0xb3324f11  'Not a known scheme: '
0xb3007df0    50                     push eax
        ;; PushArgument:91(t0)
        ;; t0 <- LoadLocal:92(uri lvl:0)
0xb3007df1    8b45f0                 mov eax,[ebp-0x10]
0xb3007df4    50                     push eax
        ;; PushArgument:93(t0)
        ;; t0 <- Constant:94(#)
0xb3007df5    b8e11240b5             mov eax,0xb54012e1
0xb3007dfa    50                     push eax
        ;; PushArgument:95(t0)
        ;; t0 <- Constant:96(#NULL AbstractTypeArguments)
0xb3007dfb    b8190040b5             mov eax,0xb5400019
0xb3007e00    50                     push eax
        ;; t0 <- CreateArray:97(t0, t0, t0, t0)
0xb3007e01    59                     pop ecx
0xb3007e02    ba06000000             mov edx,0x6
0xb3007e07    e88c833702             call 0xb5380198  [stub: AllocateArray]
0xb3007e0c    8d500b                 lea edx,[eax+0xb]
0xb3007e0f    8f4208                 pop [edx+0x8]
0xb3007e12    8f4204                 pop [edx+0x4]
0xb3007e15    8f02                   pop [edx]
0xb3007e17    50                     push eax
        ;; PushArgument:98(t0)
        ;; t0 <- StaticCall:99(_interpolate@0x36924d72 t0)
0xb3007e18    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007e1d    e806853702             call 0xb5380328  [stub: CallStaticFunction]
0xb3007e22    83c404                 add esp,0x4
0xb3007e25    50                     push eax
        ;; PushArgument:100(t0)
        ;; Throw:101()
0xb3007e26    b9a0d70a08             mov ecx,0x80ad7a0
0xb3007e2b    ba01000000             mov edx,0x1
0xb3007e30    e8f3813702             call 0xb5380028  [stub: CallToRuntime]
0xb3007e35    cc                     int3
0xb3007e36    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3007e37    b970d30a08             mov ecx,0x80ad370
0xb3007e3c    ba00000000             mov edx,0
0xb3007e41    e8e2813702             call 0xb5380028  [stub: CallToRuntime]
0xb3007e46    e968fcffff             jmp 0xb3007ab3
0xb3007e4b    e9e8853702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3007e50    e9c3863702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 65 : 0xb3007ac9 'ImmutableArray'
 86 : 0xb3007ade '# Getting file path from: '
 96 : 0xb3007ae8 ''
 131 : 0xb3007b0b 'ImmutableArray'
 145 : 0xb3007b19 'ImmutableArray'
 172 : 0xb3007b34 'ICData target:'get:scheme' num-checks: 0'
 177 : 0xb3007b39 'ImmutableArray'
 195 : 0xb3007b4b 'file'
 236 : 0xb3007b74 'ICData target:'==' num-checks: 0'
 241 : 0xb3007b79 'ImmutableArray'
 259 : 0xb3007b8b 'ICData target:'==' num-checks: 0'
 272 : 0xb3007b98 'true'
 287 : 0xb3007ba7 'ImmutableArray'
 310 : 0xb3007bbe 'dart-ext'
 351 : 0xb3007be7 'ICData target:'==' num-checks: 0'
 356 : 0xb3007bec 'ImmutableArray'
 374 : 0xb3007bfe 'ICData target:'==' num-checks: 0'
 387 : 0xb3007c0b 'true'
 402 : 0xb3007c1a 'ImmutableArray'
 425 : 0xb3007c31 'package'
 466 : 0xb3007c5a 'ICData target:'==' num-checks: 0'
 471 : 0xb3007c5f 'ImmutableArray'
 489 : 0xb3007c71 'ICData target:'==' num-checks: 0'
 502 : 0xb3007c7e 'true'
 517 : 0xb3007c8d 'ImmutableArray'
 539 : 0xb3007ca3 'true'
 566 : 0xb3007cbe '/'
 572 : 0xb3007cc4 'ICData target:'startsWith' num-checks: 0'
 577 : 0xb3007cc9 'ImmutableArray'
 591 : 0xb3007cd7 'true'
 624 : 0xb3007cf8 'ICData target:'substring' num-checks: 0'
 629 : 0xb3007cfd 'ImmutableArray'
 647 : 0xb3007d0f '# path: '
 657 : 0xb3007d19 ''
 692 : 0xb3007d3c 'ImmutableArray'
 706 : 0xb3007d4a 'ImmutableArray'
 734 : 0xb3007d66 'Function '_filePathFromUri@0x116c55de': static.'
 761 : 0xb3007d81 '# Unknown scheme ('
 771 : 0xb3007d8b 'ICData target:'get:scheme' num-checks: 0'
 776 : 0xb3007d90 'ImmutableArray'
 790 : 0xb3007d9e ') in '
 800 : 0xb3007da8 '.'
 841 : 0xb3007dd1 'ImmutableArray'
 855 : 0xb3007ddf 'ImmutableArray'
 868 : 0xb3007dec 'Not a known scheme: '
 878 : 0xb3007df6 ''
 913 : 0xb3007e19 'ImmutableArray'
}
PC Descriptors for function 'dart:builtin_::__filePathFromUri@0x116c55de' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3007ab8	other        	-1		532	-1
0xb3007ad2	fn-call      	10		532	-1
0xb3007ad2	deopt-after  	10		532	-1
0xb3007afe	other        	-1		546	-1
0xb3007b14	fn-call      	22		546	-1
0xb3007b14	deopt-after  	22		546	-1
0xb3007b22	fn-call      	24		545	-1
0xb3007b22	deopt-after  	24		545	-1
0xb3007b33	deopt-before 	29		563	-1
0xb3007b42	ic-call      	29		563	-1
0xb3007b42	deopt-after  	29		563	-1
0xb3007b58	deopt-before 	40		568	-1
0xb3007b82	ic-call      	40		568	-1
0xb3007b82	deopt-after  	40		568	-1
0xb3007b94	other        	-1		568	-1
0xb3007ba2	deopt-before 	43		0	-1
0xb3007bb0	fn-call      	34		576	-1
0xb3007bb0	deopt-after  	34		576	-1
0xb3007bb8	deopt-before 	37		0	-1
0xb3007bcb	deopt-before 	53		584	-1
0xb3007bf5	ic-call      	53		584	-1
0xb3007bf5	deopt-after  	53		584	-1
0xb3007c07	other        	-1		584	-1
0xb3007c15	deopt-before 	56		0	-1
0xb3007c23	fn-call      	48		592	-1
0xb3007c23	deopt-after  	48		592	-1
0xb3007c2b	deopt-before 	50		0	-1
0xb3007c3e	deopt-before 	66		600	-1
0xb3007c68	ic-call      	66		600	-1
0xb3007c68	deopt-after  	66		600	-1
0xb3007c7a	other        	-1		600	-1
0xb3007c88	deopt-before 	69		0	-1
0xb3007c96	fn-call      	61		608	-1
0xb3007c96	deopt-after  	61		608	-1
0xb3007c9e	deopt-before 	63		0	-1
0xb3007cc3	deopt-before 	111		656	-1
0xb3007cd2	ic-call      	111		656	-1
0xb3007cd2	deopt-after  	111		656	-1
0xb3007cf7	deopt-before 	120		670	-1
0xb3007d06	ic-call      	120		670	-1
0xb3007d06	deopt-after  	120		670	-1
0xb3007d2f	other        	-1		678	-1
0xb3007d45	fn-call      	131		678	-1
0xb3007d45	deopt-after  	131		678	-1
0xb3007d53	fn-call      	133		677	-1
0xb3007d53	deopt-after  	133		677	-1
0xb3007d56	deopt-before 	141		0	-1
0xb3007d5b	deopt-before 	139		0	-1
0xb3007d60	deopt-before 	137		0	-1
0xb3007d60	deopt-before 	142		0	-1
0xb3007d7b	other        	-1		0	-1
0xb3007d80	return       	-1		687	-1
0xb3007d80	deopt-before 	102		0	-1
0xb3007d8a	deopt-before 	76		626	-1
0xb3007d99	ic-call      	76		626	-1
0xb3007d99	deopt-after  	76		626	-1
0xb3007dbe	other        	-1		620	-1
0xb3007dda	fn-call      	87		620	-1
0xb3007dda	deopt-after  	87		620	-1
0xb3007de8	fn-call      	89		619	-1
0xb3007de8	deopt-after  	89		619	-1
0xb3007e0c	other        	-1		638	-1
0xb3007e22	fn-call      	99		638	-1
0xb3007e22	deopt-after  	99		638	-1
0xb3007e35	other        	-1		637	-1
0xb3007e46	other        	-1		517	-1
0xb3007e4b	patch        	-1		0	-1
0xb3007e50	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:builtin_::__filePathFromUri@0x116c55de' {
}
Variable Descriptors for function 'dart:builtin_::__filePathFromUri@0x116c55de' {
  stack var 'userUri' offset 3 (valid 519-692)
  stack var 'isWindows' offset 2 (valid 524-692)
  stack var 'uri' offset -4 (valid 529-692)
  stack var 'path' offset -5 (valid 555-692)
}
Exception Handlers for function 'dart:builtin_::__filePathFromUri@0x116c55de' {
No exception handlers
}
Static call target functions {
  0xb3007ad2: dart:uri_Uri_Uri.fromString, 0xb5400019
  0xb3007b14: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3007b22: dart:builtin_::__logResolution@0x116c55de, 0xb5400019
  0xb3007bb0: dart:builtin_::__filePathFromFileUri@0x116c55de, 0xb5400019
  0xb3007c23: dart:builtin_::__filePathFromOtherUri@0x116c55de, 0xb5400019
  0xb3007c96: dart:builtin_::__filePathFromPackageUri@0x116c55de, 0xb5400019
  0xb3007d45: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3007d53: dart:builtin_::__logResolution@0x116c55de, 0xb5400019
  0xb3007dda: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3007de8: dart:builtin_::__logResolution@0x116c55de, 0xb5400019
  0xb3007e22: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
}
PatchStaticCall: patching from 0xb3007ad2 to 'dart:uri_Uri_Uri.fromString' 0xb30028c8
PatchStaticCall: patching from 0xb3007b14 to 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' 0xb30011a8
Compiling function: 'dart:core__StringBase@0x36924d72_compareTo' @ token 12633
Before Optimizations
==== dart:core__StringBase@0x36924d72_compareTo
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:length, t0)
    StoreLocal:6(thisLength, t0, lvl: 0)
    t0 <- LoadLocal:7(other lvl:0)
    PushArgument:8(t0)
    t0 <- InstanceCall:9(get:length, t0)
    StoreLocal:10(otherLength, t0, lvl: 0)
    t0 <- LoadLocal:11(thisLength lvl:0)
    t1 <- LoadLocal:12(otherLength lvl:0)
    Branch if RelationalOp:13(<, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:15(thisLength lvl:0)
    StoreLocal:16(:expr_temp, t0, lvl: 0)
    goto:22 4
B3[target]
    t0 <- LoadLocal:17(otherLength lvl:0)
    StoreLocal:18(:expr_temp, t0, lvl: 0)
    goto:23 4
B4[join] pred(B2, B3)
    t0 <- LoadLocal:24(:expr_temp lvl:0)
    StoreLocal:25(len, t0, lvl: 0)
    t0 <- Constant:26(#0)
    StoreLocal:27(i, t0, lvl: 0)
    goto:65 9
B9[join] pred(B4, B8)
    t0 <- LoadLocal:67(i lvl:0)
    t1 <- LoadLocal:68(len lvl:0)
    Branch if RelationalOp:69(<, t0, t1) goto (10, 11)
B10[target]
    CheckStackOverflow:28()
    t0 <- LoadLocal:29(this lvl:0)
    PushArgument:30(t0)
    t0 <- LoadLocal:31(i lvl:0)
    PushArgument:32(t0)
    t0 <- InstanceCall:33(charCodeAt, t0, t0)
    StoreLocal:34(thisCodePoint, t0, lvl: 0)
    t0 <- LoadLocal:35(other lvl:0)
    PushArgument:36(t0)
    t0 <- LoadLocal:37(i lvl:0)
    PushArgument:38(t0)
    t0 <- InstanceCall:39(charCodeAt, t0, t0)
    StoreLocal:40(otherCodePoint, t0, lvl: 0)
    t0 <- LoadLocal:41(thisCodePoint lvl:0)
    t1 <- LoadLocal:42(otherCodePoint lvl:0)
    Branch if RelationalOp:43(<, t0, t1) goto (5, 6)
B5[target]
    t0 <- Constant:45(#-1)
    Return:46(t0)
B6[target]
    t0 <- LoadLocal:49(thisCodePoint lvl:0)
    t1 <- LoadLocal:50(otherCodePoint lvl:0)
    Branch if RelationalOp:51(>, t0, t1) goto (7, 8)
B7[target]
    t0 <- Constant:53(#1)
    Return:54(t0)
B8[target]
    t0 <- LoadLocal:57(i lvl:0)
    t0 <- StoreLocal:58(:expr_temp, t0, lvl: 0)
    PushArgument:59(t0)
    t0 <- Constant:60(#1)
    PushArgument:61(t0)
    t0 <- InstanceCall:62(+, t0, t0)
    StoreLocal:63(i, t0, lvl: 0)
    goto:66 9
B11[target]
    t0 <- LoadLocal:73(thisLength lvl:0)
    t1 <- LoadLocal:74(otherLength lvl:0)
    Branch if RelationalOp:75(<, t0, t1) goto (12, 13)
B12[target]
    t0 <- Constant:77(#-1)
    Return:78(t0)
B13[target]
    t0 <- LoadLocal:81(thisLength lvl:0)
    t1 <- LoadLocal:82(otherLength lvl:0)
    Branch if RelationalOp:83(>, t0, t1) goto (14, 15)
B14[target]
    t0 <- Constant:85(#1)
    Return:86(t0)
B15[target]
    t0 <- Constant:89(#0)
    Return:90(t0)
--> 'dart:core__StringBase@0x36924d72_compareTo' entry: 0xb3007e68 time: 662 us
Code for function 'dart:core__StringBase@0x36924d72_compareTo' {
        ;; Enter frame
0xb3007e68    55                     push ebp
0xb3007e69    89e5                   mov ebp,esp
0xb3007e6b    e800000000             call 0xb3007e70
0xb3007e70    83ec1c                 sub esp,0x1c
        ;; Initialize spill slots
0xb3007e73    b8190040b5             mov eax,0xb5400019
0xb3007e78    8945f8                 mov [ebp-0x8],eax
0xb3007e7b    8945f4                 mov [ebp-0xc],eax
0xb3007e7e    8945f0                 mov [ebp-0x10],eax
0xb3007e81    8945ec                 mov [ebp-0x14],eax
0xb3007e84    8945e8                 mov [ebp-0x18],eax
0xb3007e87    8945e4                 mov [ebp-0x1c],eax
0xb3007e8a    8945e0                 mov [ebp-0x20],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3007e8d    3b25bc195809           cmp esp,[0x95819bc]
0xb3007e93    0f8673020000           jna 0xb300810c
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb3007e99    8b450c                 mov eax,[ebp+0xc]
0xb3007e9c    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:length, t0)
0xb3007e9d    b9613f29b3             mov ecx,0xb3293f61  'ICData target:'get:length' num-checks: 0'
0xb3007ea2    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007ea7    e86c83ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007eac    83c404                 add esp,0x4
0xb3007eaf    50                     push eax
        ;; StoreLocal:6(thisLength, t0, lvl: 0)
0xb3007eb0    58                     pop eax
0xb3007eb1    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- LoadLocal:7(other lvl:0)
0xb3007eb4    8b4508                 mov eax,[ebp+0x8]
0xb3007eb7    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- InstanceCall:9(get:length, t0)
0xb3007eb8    b9b13f29b3             mov ecx,0xb3293fb1  'ICData target:'get:length' num-checks: 0'
0xb3007ebd    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3007ec2    e85183ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007ec7    83c404                 add esp,0x4
0xb3007eca    50                     push eax
        ;; StoreLocal:10(otherLength, t0, lvl: 0)
0xb3007ecb    58                     pop eax
0xb3007ecc    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:11(thisLength lvl:0)
0xb3007ecf    8b45f4                 mov eax,[ebp-0xc]
0xb3007ed2    50                     push eax
        ;; t1 <- LoadLocal:12(otherLength lvl:0)
0xb3007ed3    8b45f0                 mov eax,[ebp-0x10]
0xb3007ed6    50                     push eax
        ;; Branch if RelationalOp:13(<, t0, t1) goto (2, 3)
0xb3007ed7    59                     pop ecx
0xb3007ed8    58                     pop eax
0xb3007ed9    50                     push eax
0xb3007eda    51                     push ecx
0xb3007edb    b9014029b3             mov ecx,0xb3294001  'ICData target:'<' num-checks: 0'
0xb3007ee0    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007ee5    e8ee83ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007eea    83c408                 add esp,0x8
0xb3007eed    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3007ef2    0f850d000000           jnz 0xb3007f05
        ;; B2
        ;; t0 <- LoadLocal:15(thisLength lvl:0)
0xb3007ef8    8b45f4                 mov eax,[ebp-0xc]
0xb3007efb    50                     push eax
        ;; StoreLocal:16(:expr_temp, t0, lvl: 0)
0xb3007efc    58                     pop eax
0xb3007efd    8945f8                 mov [ebp-0x8],eax
        ;; goto:22 4
0xb3007f00    e908000000             jmp 0xb3007f0d
        ;; B3
        ;; t0 <- LoadLocal:17(otherLength lvl:0)
0xb3007f05    8b45f0                 mov eax,[ebp-0x10]
0xb3007f08    50                     push eax
        ;; StoreLocal:18(:expr_temp, t0, lvl: 0)
0xb3007f09    58                     pop eax
0xb3007f0a    8945f8                 mov [ebp-0x8],eax
        ;; goto:23 4
        ;; B4
        ;; t0 <- LoadLocal:24(:expr_temp lvl:0)
0xb3007f0d    8b45f8                 mov eax,[ebp-0x8]
0xb3007f10    50                     push eax
        ;; StoreLocal:25(len, t0, lvl: 0)
0xb3007f11    58                     pop eax
0xb3007f12    8945ec                 mov [ebp-0x14],eax
        ;; t0 <- Constant:26(#0)
0xb3007f15    b800000000             mov eax,0
0xb3007f1a    50                     push eax
        ;; StoreLocal:27(i, t0, lvl: 0)
0xb3007f1b    58                     pop eax
0xb3007f1c    8945e8                 mov [ebp-0x18],eax
        ;; goto:65 9
        ;; B9
        ;; t0 <- LoadLocal:67(i lvl:0)
0xb3007f1f    8b45e8                 mov eax,[ebp-0x18]
0xb3007f22    50                     push eax
        ;; t1 <- LoadLocal:68(len lvl:0)
0xb3007f23    8b45ec                 mov eax,[ebp-0x14]
0xb3007f26    50                     push eax
        ;; Branch if RelationalOp:69(<, t0, t1) goto (10, 11)
0xb3007f27    59                     pop ecx
0xb3007f28    58                     pop eax
0xb3007f29    50                     push eax
0xb3007f2a    51                     push ecx
0xb3007f2b    b9594029b3             mov ecx,0xb3294059  'ICData target:'<' num-checks: 0'
0xb3007f30    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007f35    e89e83ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007f3a    83c408                 add esp,0x8
0xb3007f3d    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3007f42    0f850b010000           jnz 0xb3008053
        ;; B10
        ;; CheckStackOverflow:28()
0xb3007f48    3b25bc195809           cmp esp,[0x95819bc]
0xb3007f4e    0f86cc010000           jna 0xb3008120
        ;; t0 <- LoadLocal:29(this lvl:0)
0xb3007f54    8b450c                 mov eax,[ebp+0xc]
0xb3007f57    50                     push eax
        ;; PushArgument:30(t0)
        ;; t0 <- LoadLocal:31(i lvl:0)
0xb3007f58    8b45e8                 mov eax,[ebp-0x18]
0xb3007f5b    50                     push eax
        ;; PushArgument:32(t0)
        ;; t0 <- InstanceCall:33(charCodeAt, t0, t0)
0xb3007f5c    b9b14029b3             mov ecx,0xb32940b1  'ICData target:'charCodeAt' num-checks: 0'
0xb3007f61    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007f66    e8ad82ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007f6b    83c408                 add esp,0x8
0xb3007f6e    50                     push eax
        ;; StoreLocal:34(thisCodePoint, t0, lvl: 0)
0xb3007f6f    58                     pop eax
0xb3007f70    8945e4                 mov [ebp-0x1c],eax
        ;; t0 <- LoadLocal:35(other lvl:0)
0xb3007f73    8b4508                 mov eax,[ebp+0x8]
0xb3007f76    50                     push eax
        ;; PushArgument:36(t0)
        ;; t0 <- LoadLocal:37(i lvl:0)
0xb3007f77    8b45e8                 mov eax,[ebp-0x18]
0xb3007f7a    50                     push eax
        ;; PushArgument:38(t0)
        ;; t0 <- InstanceCall:39(charCodeAt, t0, t0)
0xb3007f7b    b9014129b3             mov ecx,0xb3294101  'ICData target:'charCodeAt' num-checks: 0'
0xb3007f80    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007f85    e88e82ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3007f8a    83c408                 add esp,0x8
0xb3007f8d    50                     push eax
        ;; StoreLocal:40(otherCodePoint, t0, lvl: 0)
0xb3007f8e    58                     pop eax
0xb3007f8f    8945e0                 mov [ebp-0x20],eax
        ;; t0 <- LoadLocal:41(thisCodePoint lvl:0)
0xb3007f92    8b45e4                 mov eax,[ebp-0x1c]
0xb3007f95    50                     push eax
        ;; t1 <- LoadLocal:42(otherCodePoint lvl:0)
0xb3007f96    8b45e0                 mov eax,[ebp-0x20]
0xb3007f99    50                     push eax
        ;; Branch if RelationalOp:43(<, t0, t1) goto (5, 6)
0xb3007f9a    59                     pop ecx
0xb3007f9b    58                     pop eax
0xb3007f9c    50                     push eax
0xb3007f9d    51                     push ecx
0xb3007f9e    b9514129b3             mov ecx,0xb3294151  'ICData target:'<' num-checks: 0'
0xb3007fa3    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007fa8    e82b83ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007fad    83c408                 add esp,0x8
0xb3007fb0    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3007fb5    0f8522000000           jnz 0xb3007fdd
        ;; B5
        ;; t0 <- Constant:45(#-1)
0xb3007fbb    b8feffffff             mov eax,0xfffffffe
0xb3007fc0    50                     push eax
        ;; Return:46(t0)
0xb3007fc1    58                     pop eax
0xb3007fc2    ba81a51ab3             mov edx,0xb31aa581  'Function 'compareTo':.'
0xb3007fc7    ff422b                 inc [edx+0x2b]
0xb3007fca    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3007fd1    7c05                   jl 0xb3007fd8
0xb3007fd3    e8e088ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3007fd8    89ec                   mov esp,ebp
0xb3007fda    5d                     pop ebp
0xb3007fdb    c3                     ret
0xb3007fdc    90                     nop
        ;; B6
        ;; t0 <- LoadLocal:49(thisCodePoint lvl:0)
0xb3007fdd    8b45e4                 mov eax,[ebp-0x1c]
0xb3007fe0    50                     push eax
        ;; t1 <- LoadLocal:50(otherCodePoint lvl:0)
0xb3007fe1    8b45e0                 mov eax,[ebp-0x20]
0xb3007fe4    50                     push eax
        ;; Branch if RelationalOp:51(>, t0, t1) goto (7, 8)
0xb3007fe5    59                     pop ecx
0xb3007fe6    58                     pop eax
0xb3007fe7    50                     push eax
0xb3007fe8    51                     push ecx
0xb3007fe9    b9a94129b3             mov ecx,0xb32941a9  'ICData target:'>' num-checks: 0'
0xb3007fee    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3007ff3    e8e082ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3007ff8    83c408                 add esp,0x8
0xb3007ffb    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3008000    0f8522000000           jnz 0xb3008028
        ;; B7
        ;; t0 <- Constant:53(#1)
0xb3008006    b802000000             mov eax,0x2
0xb300800b    50                     push eax
        ;; Return:54(t0)
0xb300800c    58                     pop eax
0xb300800d    ba81a51ab3             mov edx,0xb31aa581  'Function 'compareTo':.'
0xb3008012    ff422b                 inc [edx+0x2b]
0xb3008015    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300801c    7c05                   jl 0xb3008023
0xb300801e    e89588ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008023    89ec                   mov esp,ebp
0xb3008025    5d                     pop ebp
0xb3008026    c3                     ret
0xb3008027    90                     nop
        ;; B8
        ;; t0 <- LoadLocal:57(i lvl:0)
0xb3008028    8b45e8                 mov eax,[ebp-0x18]
0xb300802b    50                     push eax
        ;; t0 <- StoreLocal:58(:expr_temp, t0, lvl: 0)
0xb300802c    58                     pop eax
0xb300802d    8945f8                 mov [ebp-0x8],eax
0xb3008030    50                     push eax
        ;; PushArgument:59(t0)
        ;; t0 <- Constant:60(#1)
0xb3008031    b802000000             mov eax,0x2
0xb3008036    50                     push eax
        ;; PushArgument:61(t0)
        ;; t0 <- InstanceCall:62(+, t0, t0)
0xb3008037    b9014229b3             mov ecx,0xb3294201  'ICData target:'+' num-checks: 0'
0xb300803c    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008041    e89282ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3008046    83c408                 add esp,0x8
0xb3008049    50                     push eax
        ;; StoreLocal:63(i, t0, lvl: 0)
0xb300804a    58                     pop eax
0xb300804b    8945e8                 mov [ebp-0x18],eax
        ;; goto:66 9
0xb300804e    e9ccfeffff             jmp 0xb3007f1f
        ;; B11
        ;; t0 <- LoadLocal:73(thisLength lvl:0)
0xb3008053    8b45f4                 mov eax,[ebp-0xc]
0xb3008056    50                     push eax
        ;; t1 <- LoadLocal:74(otherLength lvl:0)
0xb3008057    8b45f0                 mov eax,[ebp-0x10]
0xb300805a    50                     push eax
        ;; Branch if RelationalOp:75(<, t0, t1) goto (12, 13)
0xb300805b    59                     pop ecx
0xb300805c    58                     pop eax
0xb300805d    50                     push eax
0xb300805e    51                     push ecx
0xb300805f    b9594229b3             mov ecx,0xb3294259  'ICData target:'<' num-checks: 0'
0xb3008064    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008069    e86a82ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300806e    83c408                 add esp,0x8
0xb3008071    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3008076    0f8522000000           jnz 0xb300809e
        ;; B12
        ;; t0 <- Constant:77(#-1)
0xb300807c    b8feffffff             mov eax,0xfffffffe
0xb3008081    50                     push eax
        ;; Return:78(t0)
0xb3008082    58                     pop eax
0xb3008083    ba81a51ab3             mov edx,0xb31aa581  'Function 'compareTo':.'
0xb3008088    ff422b                 inc [edx+0x2b]
0xb300808b    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3008092    7c05                   jl 0xb3008099
0xb3008094    e81f88ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008099    89ec                   mov esp,ebp
0xb300809b    5d                     pop ebp
0xb300809c    c3                     ret
0xb300809d    90                     nop
        ;; B13
        ;; t0 <- LoadLocal:81(thisLength lvl:0)
0xb300809e    8b45f4                 mov eax,[ebp-0xc]
0xb30080a1    50                     push eax
        ;; t1 <- LoadLocal:82(otherLength lvl:0)
0xb30080a2    8b45f0                 mov eax,[ebp-0x10]
0xb30080a5    50                     push eax
        ;; Branch if RelationalOp:83(>, t0, t1) goto (14, 15)
0xb30080a6    59                     pop ecx
0xb30080a7    58                     pop eax
0xb30080a8    50                     push eax
0xb30080a9    51                     push ecx
0xb30080aa    b9b14229b3             mov ecx,0xb32942b1  'ICData target:'>' num-checks: 0'
0xb30080af    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30080b4    e81f82ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30080b9    83c408                 add esp,0x8
0xb30080bc    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30080c1    0f8522000000           jnz 0xb30080e9
        ;; B14
        ;; t0 <- Constant:85(#1)
0xb30080c7    b802000000             mov eax,0x2
0xb30080cc    50                     push eax
        ;; Return:86(t0)
0xb30080cd    58                     pop eax
0xb30080ce    ba81a51ab3             mov edx,0xb31aa581  'Function 'compareTo':.'
0xb30080d3    ff422b                 inc [edx+0x2b]
0xb30080d6    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30080dd    7c05                   jl 0xb30080e4
0xb30080df    e8d487ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30080e4    89ec                   mov esp,ebp
0xb30080e6    5d                     pop ebp
0xb30080e7    c3                     ret
0xb30080e8    90                     nop
        ;; B15
        ;; t0 <- Constant:89(#0)
0xb30080e9    b800000000             mov eax,0
0xb30080ee    50                     push eax
        ;; Return:90(t0)
0xb30080ef    58                     pop eax
0xb30080f0    ba81a51ab3             mov edx,0xb31aa581  'Function 'compareTo':.'
0xb30080f5    ff422b                 inc [edx+0x2b]
0xb30080f8    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30080ff    7c05                   jl 0xb3008106
0xb3008101    e8b287ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008106    89ec                   mov esp,ebp
0xb3008108    5d                     pop ebp
0xb3008109    c3                     ret
0xb300810a    90                     nop
0xb300810b    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300810c    b970d30a08             mov ecx,0x80ad370
0xb3008111    ba00000000             mov edx,0
0xb3008116    e80d7f3702             call 0xb5380028  [stub: CallToRuntime]
0xb300811b    e979fdffff             jmp 0xb3007e99
        ;; CheckStackOverflowSlowPath
0xb3008120    b970d30a08             mov ecx,0x80ad370
0xb3008125    ba00000000             mov edx,0
0xb300812a    e8f97e3702             call 0xb5380028  [stub: CallToRuntime]
0xb300812f    e920feffff             jmp 0xb3007f54
0xb3008134    e9ff823702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3008139    e9da833702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 54 : 0xb3007e9e 'ICData target:'get:length' num-checks: 0'
 59 : 0xb3007ea3 'ImmutableArray'
 81 : 0xb3007eb9 'ICData target:'get:length' num-checks: 0'
 86 : 0xb3007ebe 'ImmutableArray'
 116 : 0xb3007edc 'ICData target:'<' num-checks: 0'
 121 : 0xb3007ee1 'ImmutableArray'
 134 : 0xb3007eee 'true'
 196 : 0xb3007f2c 'ICData target:'<' num-checks: 0'
 201 : 0xb3007f31 'ImmutableArray'
 214 : 0xb3007f3e 'true'
 245 : 0xb3007f5d 'ICData target:'charCodeAt' num-checks: 0'
 250 : 0xb3007f62 'ImmutableArray'
 276 : 0xb3007f7c 'ICData target:'charCodeAt' num-checks: 0'
 281 : 0xb3007f81 'ImmutableArray'
 311 : 0xb3007f9f 'ICData target:'<' num-checks: 0'
 316 : 0xb3007fa4 'ImmutableArray'
 329 : 0xb3007fb1 'true'
 347 : 0xb3007fc3 'Function 'compareTo':.'
 386 : 0xb3007fea 'ICData target:'>' num-checks: 0'
 391 : 0xb3007fef 'ImmutableArray'
 404 : 0xb3007ffc 'true'
 422 : 0xb300800e 'Function 'compareTo':.'
 464 : 0xb3008038 'ICData target:'+' num-checks: 0'
 469 : 0xb300803d 'ImmutableArray'
 504 : 0xb3008060 'ICData target:'<' num-checks: 0'
 509 : 0xb3008065 'ImmutableArray'
 522 : 0xb3008072 'true'
 540 : 0xb3008084 'Function 'compareTo':.'
 579 : 0xb30080ab 'ICData target:'>' num-checks: 0'
 584 : 0xb30080b0 'ImmutableArray'
 597 : 0xb30080bd 'true'
 615 : 0xb30080cf 'Function 'compareTo':.'
 649 : 0xb30080f1 'Function 'compareTo':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_compareTo' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3007e9d	deopt-before 	5		12645	-1
0xb3007eac	ic-call      	5		12645	-1
0xb3007eac	deopt-after  	5		12645	-1
0xb3007eb8	deopt-before 	9		12654	-1
0xb3007ec7	ic-call      	9		12654	-1
0xb3007ec7	deopt-after  	9		12654	-1
0xb3007edb	deopt-before 	13		12664	-1
0xb3007eea	ic-call      	13		12664	-1
0xb3007eea	deopt-after  	13		12664	-1
0xb3007f00	deopt-before 	22		0	-1
0xb3007f0d	deopt-before 	23		0	-1
0xb3007f1f	deopt-before 	65		0	-1
0xb3007f2b	deopt-before 	69		12686	-1
0xb3007f3a	ic-call      	69		12686	-1
0xb3007f3a	deopt-after  	69		12686	-1
0xb3007f5c	deopt-before 	33		12703	-1
0xb3007f6b	ic-call      	33		12703	-1
0xb3007f6b	deopt-after  	33		12703	-1
0xb3007f7b	deopt-before 	39		12716	-1
0xb3007f8a	ic-call      	39		12716	-1
0xb3007f8a	deopt-after  	39		12716	-1
0xb3007f9e	deopt-before 	43		12725	-1
0xb3007fad	ic-call      	43		12725	-1
0xb3007fad	deopt-after  	43		12725	-1
0xb3007fd8	other        	-1		0	-1
0xb3007fdd	return       	-1		12730	-1
0xb3007fe9	deopt-before 	51		12740	-1
0xb3007ff8	ic-call      	51		12740	-1
0xb3007ff8	deopt-after  	51		12740	-1
0xb3008023	other        	-1		0	-1
0xb3008028	return       	-1		12745	-1
0xb3008037	deopt-before 	62		12690	-1
0xb3008046	ic-call      	62		12690	-1
0xb3008046	deopt-after  	62		12690	-1
0xb300804e	deopt-before 	66		0	-1
0xb300805f	deopt-before 	75		12755	-1
0xb300806e	ic-call      	75		12755	-1
0xb300806e	deopt-after  	75		12755	-1
0xb3008099	other        	-1		0	-1
0xb300809e	return       	-1		12759	-1
0xb30080aa	deopt-before 	83		12768	-1
0xb30080b9	ic-call      	83		12768	-1
0xb30080b9	deopt-after  	83		12768	-1
0xb30080e4	other        	-1		0	-1
0xb30080e9	return       	-1		12772	-1
0xb3008106	other        	-1		0	-1
0xb300810b	return       	-1		12776	-1
0xb300811b	other        	-1		12633	-1
0xb300812f	other        	-1		12675	-1
0xb3008134	patch        	-1		0	-1
0xb3008139	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_compareTo' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_compareTo' {
  stack var 'this' offset 3 (valid 12342-12781)
  stack var 'other' offset 2 (valid 12636-12781)
  stack var 'thisLength' offset -3 (valid 12640-12781)
  stack var 'otherLength' offset -4 (valid 12649-12781)
  stack var 'len' offset -5 (valid 12658-12781)
  stack var 'i' offset -6 (valid 12678-12751)
  stack var 'thisCodePoint' offset -7 (valid 12696-12751)
  stack var 'otherCodePoint' offset -8 (valid 12709-12751)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_compareTo' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb3007b22 to 'dart:builtin_::__logResolution@0x116c55de' 0xb30019b8
Compiling function: 'dart:builtin_::__filePathFromFileUri@0x116c55de' @ token 695
Before Optimizations
==== dart:builtin_::__filePathFromFileUri@0x116c55de
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(uri lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:domain, t0)
    t1 <- Constant:6(#)
    Branch if EqualityCompare:7(t0 != t1) goto (2, 3)
B2[target]
    t0 <- Constant:9(#URIs using the 'file:' scheme may not contain a domain.)
    PushArgument:10(t0)
    Throw:11()
B3[target]
    t0 <- Constant:14(## Path: )
    PushArgument:15(t0)
    t0 <- LoadLocal:16(uri lvl:0)
    PushArgument:17(t0)
    t0 <- InstanceCall:18(get:path, t0)
    PushArgument:19(t0)
    t0 <- Constant:20(#)
    PushArgument:21(t0)
    t0 <- Constant:22(#NULL AbstractTypeArguments)
    t0 <- CreateArray:23(t0, t0, t0, t0)
    PushArgument:24(t0)
    t0 <- StaticCall:25(_interpolate@0x36924d72 t0)
    PushArgument:26(t0)
    StaticCall:27(_logResolution@0x116c55de t0)
    t0 <- LoadLocal:28(uri lvl:0)
    PushArgument:29(t0)
    t0 <- InstanceCall:30(get:path, t0)
    Return:31(t0)
--> 'dart:builtin_::__filePathFromFileUri@0x116c55de' entry: 0xb3008158 time: 227 us
Code for function 'dart:builtin_::__filePathFromFileUri@0x116c55de' {
        ;; Enter frame
0xb3008158    55                     push ebp
0xb3008159    89e5                   mov ebp,esp
0xb300815b    e800000000             call 0xb3008160
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3008160    3b25bc195809           cmp esp,[0x95819bc]
0xb3008166    0f8610010000           jna 0xb300827c
        ;; t0 <- LoadLocal:3(uri lvl:0)
0xb300816c    8b4508                 mov eax,[ebp+0x8]
0xb300816f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:domain, t0)
0xb3008170    b9714b29b3             mov ecx,0xb3294b71  'ICData target:'get:domain' num-checks: 0'
0xb3008175    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300817a    e89980ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300817f    83c404                 add esp,0x4
0xb3008182    50                     push eax
        ;; t1 <- Constant:6(#)
0xb3008183    b8e11240b5             mov eax,0xb54012e1
0xb3008188    50                     push eax
        ;; Branch if EqualityCompare:7(t0 != t1) goto (2, 3)
0xb3008189    5a                     pop edx
0xb300818a    5b                     pop ebx
0xb300818b    53                     push ebx
0xb300818c    52                     push edx
0xb300818d    813c24190040b5         cmp [esp],0xb5400019
0xb3008194    0f8425000000           jz 0xb30081bf
0xb300819a    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb30081a2    0f8417000000           jz 0xb30081bf
0xb30081a8    b9c14b29b3             mov ecx,0xb3294bc1  'ICData target:'==' num-checks: 0'
0xb30081ad    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30081b2    e82181ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30081b7    83c408                 add esp,0x8
0xb30081ba    e90d000000             jmp 0xb30081cc
0xb30081bf    b9c14b29b3             mov ecx,0xb3294bc1  'ICData target:'==' num-checks: 0'
0xb30081c4    e87f87ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb30081c9    83c408                 add esp,0x8
0xb30081cc    3d391030b3             cmp eax, 0xb3301039  'true'
0xb30081d1    0f8416000000           jz 0xb30081ed
        ;; B2
        ;; t0 <- Constant:9(#URIs using the 'file:' scheme may not contain a domain.)
0xb30081d7    b8a9ff32b3             mov eax,0xb332ffa9  'URIs using the 'file:' scheme may not contain a domain.'
0xb30081dc    50                     push eax
        ;; PushArgument:10(t0)
        ;; Throw:11()
0xb30081dd    b9a0d70a08             mov ecx,0x80ad7a0
0xb30081e2    ba01000000             mov edx,0x1
0xb30081e7    e83c7e3702             call 0xb5380028  [stub: CallToRuntime]
0xb30081ec    cc                     int3
        ;; B3
        ;; t0 <- Constant:14(## Path: )
0xb30081ed    b8790133b3             mov eax,0xb3330179  '# Path: '
0xb30081f2    50                     push eax
        ;; PushArgument:15(t0)
        ;; t0 <- LoadLocal:16(uri lvl:0)
0xb30081f3    8b4508                 mov eax,[ebp+0x8]
0xb30081f6    50                     push eax
        ;; PushArgument:17(t0)
        ;; t0 <- InstanceCall:18(get:path, t0)
0xb30081f7    b9194c29b3             mov ecx,0xb3294c19  'ICData target:'get:path' num-checks: 0'
0xb30081fc    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008201    e81280ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3008206    83c404                 add esp,0x4
0xb3008209    50                     push eax
        ;; PushArgument:19(t0)
        ;; t0 <- Constant:20(#)
0xb300820a    b8e11240b5             mov eax,0xb54012e1
0xb300820f    50                     push eax
        ;; PushArgument:21(t0)
        ;; t0 <- Constant:22(#NULL AbstractTypeArguments)
0xb3008210    b8190040b5             mov eax,0xb5400019
0xb3008215    50                     push eax
        ;; t0 <- CreateArray:23(t0, t0, t0, t0)
0xb3008216    59                     pop ecx
0xb3008217    ba06000000             mov edx,0x6
0xb300821c    e8777f3702             call 0xb5380198  [stub: AllocateArray]
0xb3008221    8d500b                 lea edx,[eax+0xb]
0xb3008224    8f4208                 pop [edx+0x8]
0xb3008227    8f4204                 pop [edx+0x4]
0xb300822a    8f02                   pop [edx]
0xb300822c    50                     push eax
        ;; PushArgument:24(t0)
        ;; t0 <- StaticCall:25(_interpolate@0x36924d72 t0)
0xb300822d    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008232    e8f1803702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008237    83c404                 add esp,0x4
0xb300823a    50                     push eax
        ;; PushArgument:26(t0)
        ;; StaticCall:27(_logResolution@0x116c55de t0)
0xb300823b    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008240    e8e3803702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008245    83c404                 add esp,0x4
        ;; t0 <- LoadLocal:28(uri lvl:0)
0xb3008248    8b4508                 mov eax,[ebp+0x8]
0xb300824b    50                     push eax
        ;; PushArgument:29(t0)
        ;; t0 <- InstanceCall:30(get:path, t0)
0xb300824c    b9994c29b3             mov ecx,0xb3294c99  'ICData target:'get:path' num-checks: 0'
0xb3008251    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008256    e8bd7fffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300825b    83c404                 add esp,0x4
0xb300825e    50                     push eax
        ;; Return:31(t0)
0xb300825f    58                     pop eax
0xb3008260    baa90012b3             mov edx,0xb31200a9  'Function '_filePathFromFileUri@0x116c55de': static.'
0xb3008265    ff422b                 inc [edx+0x2b]
0xb3008268    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300826f    7c05                   jl 0xb3008276
0xb3008271    e84286ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008276    89ec                   mov esp,ebp
0xb3008278    5d                     pop ebp
0xb3008279    c3                     ret
0xb300827a    90                     nop
0xb300827b    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300827c    b970d30a08             mov ecx,0x80ad370
0xb3008281    ba00000000             mov edx,0
0xb3008286    e89d7d3702             call 0xb5380028  [stub: CallToRuntime]
0xb300828b    e9dcfeffff             jmp 0xb300816c
0xb3008290    e9a3813702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3008295    e97e823702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 25 : 0xb3008171 'ICData target:'get:domain' num-checks: 0'
 30 : 0xb3008176 'ImmutableArray'
 44 : 0xb3008184 ''
 81 : 0xb30081a9 'ICData target:'==' num-checks: 0'
 86 : 0xb30081ae 'ImmutableArray'
 104 : 0xb30081c0 'ICData target:'==' num-checks: 0'
 117 : 0xb30081cd 'true'
 128 : 0xb30081d8 'URIs using the 'file:' scheme may not contain a domain.'
 150 : 0xb30081ee '# Path: '
 160 : 0xb30081f8 'ICData target:'get:path' num-checks: 0'
 165 : 0xb30081fd 'ImmutableArray'
 179 : 0xb300820b ''
 214 : 0xb300822e 'ImmutableArray'
 228 : 0xb300823c 'ImmutableArray'
 245 : 0xb300824d 'ICData target:'get:path' num-checks: 0'
 250 : 0xb3008252 'ImmutableArray'
 265 : 0xb3008261 'Function '_filePathFromFileUri@0x116c55de': static.'
}
PC Descriptors for function 'dart:builtin_::__filePathFromFileUri@0x116c55de' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3008170	deopt-before 	5		707	-1
0xb300817f	ic-call      	5		707	-1
0xb300817f	deopt-after  	5		707	-1
0xb300818d	deopt-before 	7		709	-1
0xb30081b7	ic-call      	7		709	-1
0xb30081b7	deopt-after  	7		709	-1
0xb30081c9	other        	-1		709	-1
0xb30081ec	other        	-1		714	-1
0xb30081f7	deopt-before 	18		728	-1
0xb3008206	ic-call      	18		728	-1
0xb3008206	deopt-after  	18		728	-1
0xb3008221	other        	-1		722	-1
0xb3008237	fn-call      	25		722	-1
0xb3008237	deopt-after  	25		722	-1
0xb3008245	fn-call      	27		721	-1
0xb3008245	deopt-after  	27		721	-1
0xb300824c	deopt-before 	30		739	-1
0xb300825b	ic-call      	30		739	-1
0xb300825b	deopt-after  	30		739	-1
0xb3008276	other        	-1		0	-1
0xb300827b	return       	-1		735	-1
0xb300828b	other        	-1		695	-1
0xb3008290	patch        	-1		0	-1
0xb3008295	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:builtin_::__filePathFromFileUri@0x116c55de' {
}
Variable Descriptors for function 'dart:builtin_::__filePathFromFileUri@0x116c55de' {
  stack var 'uri' offset 2 (valid 698-743)
}
Exception Handlers for function 'dart:builtin_::__filePathFromFileUri@0x116c55de' {
No exception handlers
}
Static call target functions {
  0xb3008237: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3008245: dart:builtin_::__logResolution@0x116c55de, 0xb5400019
}
PatchStaticCall: patching from 0xb3007bb0 to 'dart:builtin_::__filePathFromFileUri@0x116c55de' 0xb3008158
PatchStaticCall: patching from 0xb3008237 to 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' 0xb30011a8
PatchStaticCall: patching from 0xb3008245 to 'dart:builtin_::__logResolution@0x116c55de' 0xb30019b8
Compiling  'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart'
Compiling function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main' @ token 1
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#### start ###)
    PushArgument:4(t0)
    StaticCall:5(print t0)
    t0 <- Constant:6(#0)
    StoreLocal:7(i, t0, lvl: 0)
    goto:71 2
B2[join] pred(B1, B3)
    t0 <- LoadLocal:73(i lvl:0)
    t1 <- Constant:74(#4)
    Branch if RelationalOp:75(<, t0, t1) goto (3, 4)
B3[target]
    CheckStackOverflow:8()
    t0 <- Constant:9(#substring time = )
    PushArgument:10(t0)
    t0 <- Constant:11(#null)
    PushArgument:12(t0)
    t0 <- Constant:13(#null)
    PushArgument:14(t0)
    t0 <- CreateClosure:15(Function '<anonymous closure>': static.t0, t0)
    PushArgument:16(t0)
    t0 <- StaticCall:17(gettime t0)
    PushArgument:18(t0)
    t0 <- Constant:19(# ms)
    PushArgument:20(t0)
    t0 <- Constant:21(#NULL AbstractTypeArguments)
    t0 <- CreateArray:22(t0, t0, t0, t0)
    PushArgument:23(t0)
    t0 <- StaticCall:24(_interpolate@0x36924d72 t0)
    PushArgument:25(t0)
    StaticCall:26(print t0)
    t0 <- Constant:27(#indeOf time = )
    PushArgument:28(t0)
    t0 <- Constant:29(#null)
    PushArgument:30(t0)
    t0 <- Constant:31(#null)
    PushArgument:32(t0)
    t0 <- CreateClosure:33(Function '<anonymous closure>': static.t0, t0)
    PushArgument:34(t0)
    t0 <- StaticCall:35(gettime t0)
    PushArgument:36(t0)
    t0 <- Constant:37(# ms)
    PushArgument:38(t0)
    t0 <- Constant:39(#NULL AbstractTypeArguments)
    t0 <- CreateArray:40(t0, t0, t0, t0)
    PushArgument:41(t0)
    t0 <- StaticCall:42(_interpolate@0x36924d72 t0)
    PushArgument:43(t0)
    StaticCall:44(print t0)
    t0 <- Constant:45(#charCodeAt time = )
    PushArgument:46(t0)
    t0 <- Constant:47(#null)
    PushArgument:48(t0)
    t0 <- Constant:49(#null)
    PushArgument:50(t0)
    t0 <- CreateClosure:51(Function '<anonymous closure>': static.t0, t0)
    PushArgument:52(t0)
    t0 <- StaticCall:53(gettime t0)
    PushArgument:54(t0)
    t0 <- Constant:55(# ms)
    PushArgument:56(t0)
    t0 <- Constant:57(#NULL AbstractTypeArguments)
    t0 <- CreateArray:58(t0, t0, t0, t0)
    PushArgument:59(t0)
    t0 <- StaticCall:60(_interpolate@0x36924d72 t0)
    PushArgument:61(t0)
    StaticCall:62(print t0)
    t0 <- LoadLocal:63(i lvl:0)
    t0 <- StoreLocal:64(:expr_temp, t0, lvl: 0)
    PushArgument:65(t0)
    t0 <- Constant:66(#1)
    PushArgument:67(t0)
    t0 <- InstanceCall:68(+, t0, t0)
    StoreLocal:69(i, t0, lvl: 0)
    goto:72 2
B4[target]
    t0 <- Constant:79(#### end   ###)
    PushArgument:80(t0)
    StaticCall:81(print t0)
    t0 <- Constant:82(#null)
    Return:83(t0)
Code for closure allocation stub 'Function '<anonymous closure>': static.': {
0xb30082b8    8b0508fe5609           mov eax,[0x956fe08]
0xb30082be    8d5810                 lea ebx,[eax+0x10]
0xb30082c1    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb30082c7    7322                   jnc 0xb30082eb
0xb30082c9    891d08fe5609           mov [0x956fe08],ebx
0xb30082cf    c70000025b02           mov [eax],0x25b0200
0xb30082d5    baf15929b3             mov edx,0xb32959f1  'Function '<anonymous closure>': static.'
0xb30082da    895008                 mov [eax+0x8],edx
0xb30082dd    89700c                 mov [eax+0xc],esi
0xb30082e0    8b542404               mov edx,[esp+0x4]
0xb30082e4    895004                 mov [eax+0x4],edx
0xb30082e7    83c001                 add eax,0x1
0xb30082ea    c3                     ret
0xb30082eb    55                     push ebp
0xb30082ec    89e5                   mov ebp,esp
0xb30082ee    6800000000             push 0
0xb30082f3    68190040b5             push 0xb5400019
0xb30082f8    68f15929b3             push 0xb32959f1
0xb30082fd    68190040b5             push 0xb5400019
0xb3008302    b9c00c0b08             mov ecx,0x80b0cc0
0xb3008307    ba02000000             mov edx,0x2
0xb300830c    e8177d3702             call 0xb5380028  [stub: CallToRuntime]
0xb3008311    58                     pop eax
0xb3008312    58                     pop eax
0xb3008313    58                     pop eax
0xb3008314    89ec                   mov esp,ebp
0xb3008316    5d                     pop ebp
0xb3008317    c3                     ret
}
Code for closure allocation stub 'Function '<anonymous closure>': static.': {
0xb3008328    8b0508fe5609           mov eax,[0x956fe08]
0xb300832e    8d5810                 lea ebx,[eax+0x10]
0xb3008331    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb3008337    7322                   jnc 0xb300835b
0xb3008339    891d08fe5609           mov [0x956fe08],ebx
0xb300833f    c70000025b02           mov [eax],0x25b0200
0xb3008345    ba495c29b3             mov edx,0xb3295c49  'Function '<anonymous closure>': static.'
0xb300834a    895008                 mov [eax+0x8],edx
0xb300834d    89700c                 mov [eax+0xc],esi
0xb3008350    8b542404               mov edx,[esp+0x4]
0xb3008354    895004                 mov [eax+0x4],edx
0xb3008357    83c001                 add eax,0x1
0xb300835a    c3                     ret
0xb300835b    55                     push ebp
0xb300835c    89e5                   mov ebp,esp
0xb300835e    6800000000             push 0
0xb3008363    68190040b5             push 0xb5400019
0xb3008368    68495c29b3             push 0xb3295c49
0xb300836d    68190040b5             push 0xb5400019
0xb3008372    b9c00c0b08             mov ecx,0x80b0cc0
0xb3008377    ba02000000             mov edx,0x2
0xb300837c    e8a77c3702             call 0xb5380028  [stub: CallToRuntime]
0xb3008381    58                     pop eax
0xb3008382    58                     pop eax
0xb3008383    58                     pop eax
0xb3008384    89ec                   mov esp,ebp
0xb3008386    5d                     pop ebp
0xb3008387    c3                     ret
}
Code for closure allocation stub 'Function '<anonymous closure>': static.': {
0xb3008398    8b0508fe5609           mov eax,[0x956fe08]
0xb300839e    8d5810                 lea ebx,[eax+0x10]
0xb30083a1    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb30083a7    7322                   jnc 0xb30083cb
0xb30083a9    891d08fe5609           mov [0x956fe08],ebx
0xb30083af    c70000025b02           mov [eax],0x25b0200
0xb30083b5    ba095e29b3             mov edx,0xb3295e09  'Function '<anonymous closure>': static.'
0xb30083ba    895008                 mov [eax+0x8],edx
0xb30083bd    89700c                 mov [eax+0xc],esi
0xb30083c0    8b542404               mov edx,[esp+0x4]
0xb30083c4    895004                 mov [eax+0x4],edx
0xb30083c7    83c001                 add eax,0x1
0xb30083ca    c3                     ret
0xb30083cb    55                     push ebp
0xb30083cc    89e5                   mov ebp,esp
0xb30083ce    6800000000             push 0
0xb30083d3    68190040b5             push 0xb5400019
0xb30083d8    68095e29b3             push 0xb3295e09
0xb30083dd    68190040b5             push 0xb5400019
0xb30083e2    b9c00c0b08             mov ecx,0x80b0cc0
0xb30083e7    ba02000000             mov edx,0x2
0xb30083ec    e8377c3702             call 0xb5380028  [stub: CallToRuntime]
0xb30083f1    58                     pop eax
0xb30083f2    58                     pop eax
0xb30083f3    58                     pop eax
0xb30083f4    89ec                   mov esp,ebp
0xb30083f6    5d                     pop ebp
0xb30083f7    c3                     ret
}
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main' entry: 0xb3008408 time: 2502 us
Code for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main' {
        ;; Enter frame
0xb3008408    55                     push ebp
0xb3008409    89e5                   mov ebp,esp
0xb300840b    e800000000             call 0xb3008410
0xb3008410    83ec08                 sub esp,0x8
        ;; Initialize spill slots
0xb3008413    b8190040b5             mov eax,0xb5400019
0xb3008418    8945f8                 mov [ebp-0x8],eax
0xb300841b    8945f4                 mov [ebp-0xc],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300841e    3b25bc195809           cmp esp,[0x95819bc]
0xb3008424    0f86ea010000           jna 0xb3008614
        ;; t0 <- Constant:3(#### start ###)
0xb300842a    b8895129b3             mov eax,0xb3295189  '### start ###'
0xb300842f    50                     push eax
        ;; PushArgument:4(t0)
        ;; StaticCall:5(print t0)
0xb3008430    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008435    e8ee7e3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300843a    83c404                 add esp,0x4
        ;; t0 <- Constant:6(#0)
0xb300843d    b800000000             mov eax,0
0xb3008442    50                     push eax
        ;; StoreLocal:7(i, t0, lvl: 0)
0xb3008443    58                     pop eax
0xb3008444    8945f4                 mov [ebp-0xc],eax
        ;; goto:71 2
        ;; B2
        ;; t0 <- LoadLocal:73(i lvl:0)
0xb3008447    8b45f4                 mov eax,[ebp-0xc]
0xb300844a    50                     push eax
        ;; t1 <- Constant:74(#4)
0xb300844b    b808000000             mov eax,0x8
0xb3008450    50                     push eax
        ;; Branch if RelationalOp:75(<, t0, t1) goto (3, 4)
0xb3008451    59                     pop ecx
0xb3008452    58                     pop eax
0xb3008453    50                     push eax
0xb3008454    51                     push ecx
0xb3008455    b9315f29b3             mov ecx,0xb3295f31  'ICData target:'<' num-checks: 0'
0xb300845a    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300845f    e8747effff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3008464    83c408                 add esp,0x8
0xb3008467    3d391030b3             cmp eax, 0xb3301039  'true'
0xb300846c    0f856c010000           jnz 0xb30085de
        ;; B3
        ;; CheckStackOverflow:8()
0xb3008472    3b25bc195809           cmp esp,[0x95819bc]
0xb3008478    0f86aa010000           jna 0xb3008628
        ;; t0 <- Constant:9(#substring time = )
0xb300847e    b8c95129b3             mov eax,0xb32951c9  'substring time = '
0xb3008483    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- Constant:11(#null)
0xb3008484    b8190040b5             mov eax,0xb5400019
0xb3008489    50                     push eax
        ;; PushArgument:12(t0)
        ;; t0 <- Constant:13(#null)
0xb300848a    b8190040b5             mov eax,0xb5400019
0xb300848f    50                     push eax
        ;; PushArgument:14(t0)
        ;; t0 <- CreateClosure:15(Function '<anonymous closure>': static.t0, t0)
0xb3008490    e823feffff             call 0xb30082b8 [ stub ]
0xb3008495    83c408                 add esp,0x8
0xb3008498    50                     push eax
        ;; PushArgument:16(t0)
        ;; t0 <- StaticCall:17(gettime t0)
0xb3008499    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300849e    e8857e3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30084a3    83c404                 add esp,0x4
0xb30084a6    50                     push eax
        ;; PushArgument:18(t0)
        ;; t0 <- Constant:19(# ms)
0xb30084a7    b8315229b3             mov eax,0xb3295231  ' ms'
0xb30084ac    50                     push eax
        ;; PushArgument:20(t0)
        ;; t0 <- Constant:21(#NULL AbstractTypeArguments)
0xb30084ad    b8190040b5             mov eax,0xb5400019
0xb30084b2    50                     push eax
        ;; t0 <- CreateArray:22(t0, t0, t0, t0)
0xb30084b3    59                     pop ecx
0xb30084b4    ba06000000             mov edx,0x6
0xb30084b9    e8da7c3702             call 0xb5380198  [stub: AllocateArray]
0xb30084be    8d500b                 lea edx,[eax+0xb]
0xb30084c1    8f4208                 pop [edx+0x8]
0xb30084c4    8f4204                 pop [edx+0x4]
0xb30084c7    8f02                   pop [edx]
0xb30084c9    50                     push eax
        ;; PushArgument:23(t0)
        ;; t0 <- StaticCall:24(_interpolate@0x36924d72 t0)
0xb30084ca    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30084cf    e8547e3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30084d4    83c404                 add esp,0x4
0xb30084d7    50                     push eax
        ;; PushArgument:25(t0)
        ;; StaticCall:26(print t0)
0xb30084d8    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30084dd    e8467e3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30084e2    83c404                 add esp,0x4
        ;; t0 <- Constant:27(#indeOf time = )
0xb30084e5    b8415229b3             mov eax,0xb3295241  'indeOf time = '
0xb30084ea    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- Constant:29(#null)
0xb30084eb    b8190040b5             mov eax,0xb5400019
0xb30084f0    50                     push eax
        ;; PushArgument:30(t0)
        ;; t0 <- Constant:31(#null)
0xb30084f1    b8190040b5             mov eax,0xb5400019
0xb30084f6    50                     push eax
        ;; PushArgument:32(t0)
        ;; t0 <- CreateClosure:33(Function '<anonymous closure>': static.t0, t0)
0xb30084f7    e82cfeffff             call 0xb3008328 [ stub ]
0xb30084fc    83c408                 add esp,0x8
0xb30084ff    50                     push eax
        ;; PushArgument:34(t0)
        ;; t0 <- StaticCall:35(gettime t0)
0xb3008500    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008505    e81e7e3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300850a    83c404                 add esp,0x4
0xb300850d    50                     push eax
        ;; PushArgument:36(t0)
        ;; t0 <- Constant:37(# ms)
0xb300850e    b8315229b3             mov eax,0xb3295231  ' ms'
0xb3008513    50                     push eax
        ;; PushArgument:38(t0)
        ;; t0 <- Constant:39(#NULL AbstractTypeArguments)
0xb3008514    b8190040b5             mov eax,0xb5400019
0xb3008519    50                     push eax
        ;; t0 <- CreateArray:40(t0, t0, t0, t0)
0xb300851a    59                     pop ecx
0xb300851b    ba06000000             mov edx,0x6
0xb3008520    e8737c3702             call 0xb5380198  [stub: AllocateArray]
0xb3008525    8d500b                 lea edx,[eax+0xb]
0xb3008528    8f4208                 pop [edx+0x8]
0xb300852b    8f4204                 pop [edx+0x4]
0xb300852e    8f02                   pop [edx]
0xb3008530    50                     push eax
        ;; PushArgument:41(t0)
        ;; t0 <- StaticCall:42(_interpolate@0x36924d72 t0)
0xb3008531    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008536    e8ed7d3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300853b    83c404                 add esp,0x4
0xb300853e    50                     push eax
        ;; PushArgument:43(t0)
        ;; StaticCall:44(print t0)
0xb300853f    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008544    e8df7d3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008549    83c404                 add esp,0x4
        ;; t0 <- Constant:45(#charCodeAt time = )
0xb300854c    b8795229b3             mov eax,0xb3295279  'charCodeAt time = '
0xb3008551    50                     push eax
        ;; PushArgument:46(t0)
        ;; t0 <- Constant:47(#null)
0xb3008552    b8190040b5             mov eax,0xb5400019
0xb3008557    50                     push eax
        ;; PushArgument:48(t0)
        ;; t0 <- Constant:49(#null)
0xb3008558    b8190040b5             mov eax,0xb5400019
0xb300855d    50                     push eax
        ;; PushArgument:50(t0)
        ;; t0 <- CreateClosure:51(Function '<anonymous closure>': static.t0, t0)
0xb300855e    e835feffff             call 0xb3008398 [ stub ]
0xb3008563    83c408                 add esp,0x8
0xb3008566    50                     push eax
        ;; PushArgument:52(t0)
        ;; t0 <- StaticCall:53(gettime t0)
0xb3008567    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300856c    e8b77d3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008571    83c404                 add esp,0x4
0xb3008574    50                     push eax
        ;; PushArgument:54(t0)
        ;; t0 <- Constant:55(# ms)
0xb3008575    b8315229b3             mov eax,0xb3295231  ' ms'
0xb300857a    50                     push eax
        ;; PushArgument:56(t0)
        ;; t0 <- Constant:57(#NULL AbstractTypeArguments)
0xb300857b    b8190040b5             mov eax,0xb5400019
0xb3008580    50                     push eax
        ;; t0 <- CreateArray:58(t0, t0, t0, t0)
0xb3008581    59                     pop ecx
0xb3008582    ba06000000             mov edx,0x6
0xb3008587    e80c7c3702             call 0xb5380198  [stub: AllocateArray]
0xb300858c    8d500b                 lea edx,[eax+0xb]
0xb300858f    8f4208                 pop [edx+0x8]
0xb3008592    8f4204                 pop [edx+0x4]
0xb3008595    8f02                   pop [edx]
0xb3008597    50                     push eax
        ;; PushArgument:59(t0)
        ;; t0 <- StaticCall:60(_interpolate@0x36924d72 t0)
0xb3008598    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300859d    e8867d3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30085a2    83c404                 add esp,0x4
0xb30085a5    50                     push eax
        ;; PushArgument:61(t0)
        ;; StaticCall:62(print t0)
0xb30085a6    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30085ab    e8787d3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30085b0    83c404                 add esp,0x4
        ;; t0 <- LoadLocal:63(i lvl:0)
0xb30085b3    8b45f4                 mov eax,[ebp-0xc]
0xb30085b6    50                     push eax
        ;; t0 <- StoreLocal:64(:expr_temp, t0, lvl: 0)
0xb30085b7    58                     pop eax
0xb30085b8    8945f8                 mov [ebp-0x8],eax
0xb30085bb    50                     push eax
        ;; PushArgument:65(t0)
        ;; t0 <- Constant:66(#1)
0xb30085bc    b802000000             mov eax,0x2
0xb30085c1    50                     push eax
        ;; PushArgument:67(t0)
        ;; t0 <- InstanceCall:68(+, t0, t0)
0xb30085c2    b9216129b3             mov ecx,0xb3296121  'ICData target:'+' num-checks: 0'
0xb30085c7    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30085cc    e8077dffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30085d1    83c408                 add esp,0x8
0xb30085d4    50                     push eax
        ;; StoreLocal:69(i, t0, lvl: 0)
0xb30085d5    58                     pop eax
0xb30085d6    8945f4                 mov [ebp-0xc],eax
        ;; goto:72 2
0xb30085d9    e969feffff             jmp 0xb3008447
        ;; B4
        ;; t0 <- Constant:79(#### end   ###)
0xb30085de    b8b15229b3             mov eax,0xb32952b1  '### end   ###'
0xb30085e3    50                     push eax
        ;; PushArgument:80(t0)
        ;; StaticCall:81(print t0)
0xb30085e4    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30085e9    e83a7d3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30085ee    83c404                 add esp,0x4
        ;; t0 <- Constant:82(#null)
0xb30085f1    b8190040b5             mov eax,0xb5400019
0xb30085f6    50                     push eax
        ;; Return:83(t0)
0xb30085f7    58                     pop eax
0xb30085f8    ba115629b3             mov edx,0xb3295611  'Function 'main': static.'
0xb30085fd    ff422b                 inc [edx+0x2b]
0xb3008600    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3008607    7c05                   jl 0xb300860e
0xb3008609    e8aa82ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300860e    89ec                   mov esp,ebp
0xb3008610    5d                     pop ebp
0xb3008611    c3                     ret
0xb3008612    90                     nop
0xb3008613    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3008614    b970d30a08             mov ecx,0x80ad370
0xb3008619    ba00000000             mov edx,0
0xb300861e    e8057a3702             call 0xb5380028  [stub: CallToRuntime]
0xb3008623    e902feffff             jmp 0xb300842a
        ;; CheckStackOverflowSlowPath
0xb3008628    b970d30a08             mov ecx,0x80ad370
0xb300862d    ba00000000             mov edx,0
0xb3008632    e8f1793702             call 0xb5380028  [stub: CallToRuntime]
0xb3008637    e942feffff             jmp 0xb300847e
0xb300863c    e9f77d3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3008641    e9d27e3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 35 : 0xb300842b '### start ###'
 41 : 0xb3008431 'ImmutableArray'
 78 : 0xb3008456 'ICData target:'<' num-checks: 0'
 83 : 0xb300845b 'ImmutableArray'
 96 : 0xb3008468 'true'
 119 : 0xb300847f 'substring time = '
 146 : 0xb300849a 'ImmutableArray'
 160 : 0xb30084a8 ' ms'
 195 : 0xb30084cb 'ImmutableArray'
 209 : 0xb30084d9 'ImmutableArray'
 222 : 0xb30084e6 'indeOf time = '
 249 : 0xb3008501 'ImmutableArray'
 263 : 0xb300850f ' ms'
 298 : 0xb3008532 'ImmutableArray'
 312 : 0xb3008540 'ImmutableArray'
 325 : 0xb300854d 'charCodeAt time = '
 352 : 0xb3008568 'ImmutableArray'
 366 : 0xb3008576 ' ms'
 401 : 0xb3008599 'ImmutableArray'
 415 : 0xb30085a7 'ImmutableArray'
 443 : 0xb30085c3 'ICData target:'+' num-checks: 0'
 448 : 0xb30085c8 'ImmutableArray'
 471 : 0xb30085df '### end   ###'
 477 : 0xb30085e5 'ImmutableArray'
 497 : 0xb30085f9 'Function 'main': static.'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300843a	fn-call      	5		5	-1
0xb300843a	deopt-after  	5		5	-1
0xb3008447	deopt-before 	71		0	-1
0xb3008455	deopt-before 	75		17	-1
0xb3008464	ic-call      	75		17	-1
0xb3008464	deopt-after  	75		17	-1
0xb3008495	other        	-1		30	-1
0xb30084a3	fn-call      	17		29	-1
0xb30084a3	deopt-after  	17		29	-1
0xb30084be	other        	-1		26	-1
0xb30084d4	fn-call      	24		26	-1
0xb30084d4	deopt-after  	24		26	-1
0xb30084e2	fn-call      	26		25	-1
0xb30084e2	deopt-after  	26		25	-1
0xb30084fc	other        	-1		51	-1
0xb300850a	fn-call      	35		50	-1
0xb300850a	deopt-after  	35		50	-1
0xb3008525	other        	-1		46	-1
0xb300853b	fn-call      	42		46	-1
0xb300853b	deopt-after  	42		46	-1
0xb3008549	fn-call      	44		45	-1
0xb3008549	deopt-after  	44		45	-1
0xb3008563	other        	-1		73	-1
0xb3008571	fn-call      	53		72	-1
0xb3008571	deopt-after  	53		72	-1
0xb300858c	other        	-1		68	-1
0xb30085a2	fn-call      	60		68	-1
0xb30085a2	deopt-after  	60		68	-1
0xb30085b0	fn-call      	62		67	-1
0xb30085b0	deopt-after  	62		67	-1
0xb30085c2	deopt-before 	68		20	-1
0xb30085d1	ic-call      	68		20	-1
0xb30085d1	deopt-after  	68		20	-1
0xb30085d9	deopt-before 	72		0	-1
0xb30085ee	fn-call      	81		90	-1
0xb30085ee	deopt-after  	81		90	-1
0xb300860e	other        	-1		0	-1
0xb3008613	return       	-1		95	-1
0xb3008623	other        	-1		1	-1
0xb3008637	other        	-1		9	-1
0xb300863c	patch        	-1		0	-1
0xb3008641	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main' {
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main' {
  stack var 'i' offset -3 (valid 12-89)
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main' {
No exception handlers
}
Static call target functions {
  0xb300843a: dart:core_::_print, 0xb5400019
  0xb30084a3: file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime, 0xb5400019
  0xb30084d4: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb30084e2: dart:core_::_print, 0xb5400019
  0xb300850a: file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime, 0xb5400019
  0xb300853b: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3008549: dart:core_::_print, 0xb5400019
  0xb3008571: file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime, 0xb5400019
  0xb30085a2: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb30085b0: dart:core_::_print, 0xb5400019
  0xb30085ee: dart:core_::_print, 0xb5400019
}
Compiling function: 'dart:core_::_print' @ token 11428
Before Optimizations
==== dart:core_::_print
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadStaticField:3(_printClosure@0x36924d72)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(obj lvl:0)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(toString, t0)
    PushArgument:8(t0)
    t0 <- CurrentContext:9()
    StoreLocal:10(:expr_temp, t0, lvl: 0)
    ClosureCall:11(t0, t0)
    t0 <- LoadLocal:12(:expr_temp lvl:0)
    StoreContext:13(t0)
    t0 <- Constant:14(#null)
    Return:15(t0)
--> 'dart:core_::_print' entry: 0xb3008658 time: 154 us
Code for function 'dart:core_::_print' {
        ;; Enter frame
0xb3008658    55                     push ebp
0xb3008659    89e5                   mov ebp,esp
0xb300865b    e800000000             call 0xb3008660
0xb3008660    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb3008663    b8190040b5             mov eax,0xb5400019
0xb3008668    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300866b    3b25bc195809           cmp esp,[0x95819bc]
0xb3008671    0f865c000000           jna 0xb30086d3
        ;; t0 <- LoadStaticField:3(_printClosure@0x36924d72)
0xb3008677    b869e919b3             mov eax,0xb319e969  'Field <::._printClosure@0x36924d72>: static'
0xb300867c    8b400f                 mov eax,[eax+0xf]
0xb300867f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(obj lvl:0)
0xb3008680    8b4508                 mov eax,[ebp+0x8]
0xb3008683    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(toString, t0)
0xb3008684    b9096629b3             mov ecx,0xb3296609  'ICData target:'toString' num-checks: 0'
0xb3008689    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300868e    e8857bffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3008693    83c404                 add esp,0x4
0xb3008696    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- CurrentContext:9()
0xb3008697    89f0                   mov eax,esi
0xb3008699    50                     push eax
        ;; StoreLocal:10(:expr_temp, t0, lvl: 0)
0xb300869a    58                     pop eax
0xb300869b    8945f8                 mov [ebp-0x8],eax
        ;; ClosureCall:11(t0, t0)
0xb300869e    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30086a3    e8c07c3702             call 0xb5380368  [stub: CallClosureFunction]
0xb30086a8    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:12(:expr_temp lvl:0)
0xb30086ab    8b45f8                 mov eax,[ebp-0x8]
0xb30086ae    50                     push eax
        ;; StoreContext:13(t0)
0xb30086af    5e                     pop esi
        ;; t0 <- Constant:14(#null)
0xb30086b0    b8190040b5             mov eax,0xb5400019
0xb30086b5    50                     push eax
        ;; Return:15(t0)
0xb30086b6    58                     pop eax
0xb30086b7    ba71eb19b3             mov edx,0xb319eb71  'Function 'print': static.'
0xb30086bc    ff422b                 inc [edx+0x2b]
0xb30086bf    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30086c6    7c05                   jl 0xb30086cd
0xb30086c8    e8eb81ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30086cd    89ec                   mov esp,ebp
0xb30086cf    5d                     pop ebp
0xb30086d0    c3                     ret
0xb30086d1    90                     nop
0xb30086d2    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30086d3    b970d30a08             mov ecx,0x80ad370
0xb30086d8    ba00000000             mov edx,0
0xb30086dd    e846793702             call 0xb5380028  [stub: CallToRuntime]
0xb30086e2    eb93                   jmp 0xb3008677
0xb30086e4    e94f7d3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30086e9    e92a7e3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 32 : 0xb3008678 'Field <::._printClosure@0x36924d72>: static'
 45 : 0xb3008685 'ICData target:'toString' num-checks: 0'
 50 : 0xb300868a 'ImmutableArray'
 71 : 0xb300869f 'ImmutableArray'
 96 : 0xb30086b8 'Function 'print': static.'
}
PC Descriptors for function 'dart:core_::_print' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3008684	deopt-before 	7		11443	-1
0xb3008693	ic-call      	7		11443	-1
0xb3008693	deopt-after  	7		11443	-1
0xb30086a8	other        	11		11437	-1
0xb30086a8	deopt-after  	11		11437	-1
0xb30086cd	other        	-1		0	-1
0xb30086d2	return       	-1		11448	-1
0xb30086e2	other        	-1		11428	-1
0xb30086e4	patch        	-1		0	-1
0xb30086e9	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_::_print' {
}
Variable Descriptors for function 'dart:core_::_print' {
  stack var 'obj' offset 2 (valid 11431-11448)
}
Exception Handlers for function 'dart:core_::_print' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb300843a to 'dart:core_::_print' 0xb3008658
Compiling function: 'dart:builtin_::__print@0x116c55de__print@0x116c55de' @ token 8
Before Optimizations
==== dart:builtin_::__print@0x116c55de__print@0x116c55de
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(arg lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(toString, t0)
    PushArgument:6(t0)
    StaticCall:7(_printString@0x116c55de t0)
    t0 <- Constant:8(#null)
    Return:9(t0)
--> 'dart:builtin_::__print@0x116c55de__print@0x116c55de' entry: 0xb3008708 time: 96 us
Code for function 'dart:builtin_::__print@0x116c55de__print@0x116c55de' {
        ;; Enter frame
0xb3008708    55                     push ebp
0xb3008709    89e5                   mov ebp,esp
0xb300870b    e800000000             call 0xb3008710
        ;; Check argument count
0xb3008710    8b420b                 mov eax,[edx+0xb]
0xb3008713    83f804                 cmp eax,0x4
0xb3008716    7505                   jnz 0xb300871d
0xb3008718    3b420f                 cmp eax,[edx+0xf]
0xb300871b    740e                   jz 0xb300872b
0xb300871d    b9316829b3             mov ecx,0xb3296831  'ICData target:'call' num-checks: 0'
0xb3008722    e8217b3702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb3008727    89ec                   mov esp,ebp
0xb3008729    5d                     pop ebp
0xb300872a    c3                     ret
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300872b    3b25bc195809           cmp esp,[0x95819bc]
0xb3008731    0f8647000000           jna 0xb300877e
        ;; t0 <- LoadLocal:3(arg lvl:0)
0xb3008737    8b4508                 mov eax,[ebp+0x8]
0xb300873a    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(toString, t0)
0xb300873b    b9696829b3             mov ecx,0xb3296869  'ICData target:'toString' num-checks: 0'
0xb3008740    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008745    e8ce7affff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300874a    83c404                 add esp,0x4
0xb300874d    50                     push eax
        ;; PushArgument:6(t0)
        ;; StaticCall:7(_printString@0x116c55de t0)
0xb300874e    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008753    e8d07b3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008758    83c404                 add esp,0x4
        ;; t0 <- Constant:8(#null)
0xb300875b    b8190040b5             mov eax,0xb5400019
0xb3008760    50                     push eax
        ;; Return:9(t0)
0xb3008761    58                     pop eax
0xb3008762    bab1b30bb3             mov edx,0xb30bb3b1  'Function '_print@0x116c55de': static.'
0xb3008767    ff422b                 inc [edx+0x2b]
0xb300876a    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3008771    7c05                   jl 0xb3008778
0xb3008773    e84081ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008778    89ec                   mov esp,ebp
0xb300877a    5d                     pop ebp
0xb300877b    c3                     ret
0xb300877c    90                     nop
0xb300877d    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300877e    b970d30a08             mov ecx,0x80ad370
0xb3008783    ba00000000             mov edx,0
0xb3008788    e89b783702             call 0xb5380028  [stub: CallToRuntime]
0xb300878d    eba8                   jmp 0xb3008737
0xb300878f    e9a47c3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3008794    e97f7d3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb300871e 'ICData target:'call' num-checks: 0'
 52 : 0xb300873c 'ICData target:'toString' num-checks: 0'
 57 : 0xb3008741 'ImmutableArray'
 71 : 0xb300874f 'ImmutableArray'
 91 : 0xb3008763 'Function '_print@0x116c55de': static.'
}
PC Descriptors for function 'dart:builtin_::__print@0x116c55de__print@0x116c55de' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300873b	deopt-before 	5		19	-1
0xb300874a	ic-call      	5		19	-1
0xb300874a	deopt-after  	5		19	-1
0xb3008758	fn-call      	7		15	-1
0xb3008758	deopt-after  	7		15	-1
0xb3008778	other        	-1		0	-1
0xb300877d	return       	-1		24	-1
0xb300878d	other        	-1		8	-1
0xb300878f	patch        	-1		0	-1
0xb3008794	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:builtin_::__print@0x116c55de__print@0x116c55de' {
}
Variable Descriptors for function 'dart:builtin_::__print@0x116c55de__print@0x116c55de' {
  stack var 'arg' offset 2 (valid 9-24)
}
Exception Handlers for function 'dart:builtin_::__print@0x116c55de__print@0x116c55de' {
No exception handlers
}
Static call target functions {
  0xb3008758: dart:builtin__Logger@0x116c55de__printString@0x116c55de, 0xb5400019
}
Compiling function: 'dart:builtin__Logger@0x116c55de__printString@0x116c55de' @ token 30
Before Optimizations
==== dart:builtin__Logger@0x116c55de__printString@0x116c55de
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(Logger_PrintString)
    Return:4(t0)
--> 'dart:builtin__Logger@0x116c55de__printString@0x116c55de' entry: 0xb30087b8 time: 57 us
Code for function 'dart:builtin__Logger@0x116c55de__printString@0x116c55de' {
        ;; Enter frame
0xb30087b8    55                     push ebp
0xb30087b9    89e5                   mov ebp,esp
0xb30087bb    e800000000             call 0xb30087c0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30087c0    3b25bc195809           cmp esp,[0x95819bc]
0xb30087c6    0f8628000000           jna 0xb30087f4
        ;; t0 <- NativeCall:3(Logger_PrintString)
0xb30087cc    68190040b5             push 0xb5400019
0xb30087d1    8d4508                 lea eax,[ebp+0x8]
0xb30087d4    b9b0400808             mov ecx,0x80840b0
0xb30087d9    ba01000000             mov edx,0x1
0xb30087de    e845793702             call 0xb5380128  [stub: CallNativeCFunction]
0xb30087e3    58                     pop eax
0xb30087e4    50                     push eax
        ;; Return:4(t0)
0xb30087e5    58                     pop eax
0xb30087e6    baa94a0bb3             mov edx,0xb30b4aa9  'Function '_printString@0x116c55de': static.'
0xb30087eb    ff422b                 inc [edx+0x2b]
0xb30087ee    89ec                   mov esp,ebp
0xb30087f0    5d                     pop ebp
0xb30087f1    c3                     ret
0xb30087f2    90                     nop
0xb30087f3    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30087f4    b970d30a08             mov ecx,0x80ad370
0xb30087f9    ba00000000             mov edx,0
0xb30087fe    e825783702             call 0xb5380028  [stub: CallToRuntime]
0xb3008803    ebc7                   jmp 0xb30087cc
0xb3008805    e92e7c3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300880a    e9097d3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 47 : 0xb30087e7 'Function '_printString@0x116c55de': static.'
}
PC Descriptors for function 'dart:builtin__Logger@0x116c55de__printString@0x116c55de' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30087e3	other        	-1		37	-1
0xb30087f3	return       	-1		37	-1
0xb3008803	other        	-1		30	-1
0xb3008805	patch        	-1		0	-1
0xb300880a	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:builtin__Logger@0x116c55de__printString@0x116c55de' {
}
Variable Descriptors for function 'dart:builtin__Logger@0x116c55de__printString@0x116c55de' {
  stack var 's' offset 2 (valid 32-37)
}
Exception Handlers for function 'dart:builtin__Logger@0x116c55de__printString@0x116c55de' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb3008758 to 'dart:builtin__Logger@0x116c55de__printString@0x116c55de' 0xb30087b8
### start ###
Compiling function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime' @ token 99
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#NULL AbstractTypeArguments)
    PushArgument:4(t0)
    t0 <- StaticCall:5(Date.now t0)
    StoreLocal:6(stime, t0, lvl: 0)
    t0 <- LoadLocal:7(func lvl:0)
    PushArgument:8(t0)
    t0 <- CurrentContext:9()
    StoreLocal:10(:expr_temp, t0, lvl: 0)
    t0 <- ClosureCall:11(t0)
    t1 <- LoadLocal:12(:expr_temp lvl:0)
    StoreContext:13(t1)
    StoreLocal:14(ret, t0, lvl: 0)
    t0 <- Constant:15(#NULL AbstractTypeArguments)
    PushArgument:16(t0)
    t0 <- StaticCall:17(Date.now t0)
    StoreLocal:18(etime, t0, lvl: 0)
    t0 <- LoadLocal:19(etime lvl:0)
    PushArgument:20(t0)
    t0 <- LoadLocal:21(stime lvl:0)
    PushArgument:22(t0)
    t0 <- InstanceCall:23(difference, t0, t0)
    PushArgument:24(t0)
    t0 <- InstanceCall:25(get:inMilliseconds, t0)
    StoreLocal:26(elapsedTime, t0, lvl: 0)
    t0 <- Constant:27(#ret = )
    PushArgument:28(t0)
    t0 <- LoadLocal:29(ret lvl:0)
    PushArgument:30(t0)
    t0 <- Constant:31(#)
    PushArgument:32(t0)
    t0 <- Constant:33(#NULL AbstractTypeArguments)
    t0 <- CreateArray:34(t0, t0, t0, t0)
    PushArgument:35(t0)
    t0 <- StaticCall:36(_interpolate@0x36924d72 t0)
    PushArgument:37(t0)
    StaticCall:38(print t0)
    t0 <- LoadLocal:39(elapsedTime lvl:0)
    Return:40(t0)
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime' entry: 0xb3008828 time: 316 us
Code for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime' {
        ;; Enter frame
0xb3008828    55                     push ebp
0xb3008829    89e5                   mov ebp,esp
0xb300882b    e800000000             call 0xb3008830
0xb3008830    83ec1c                 sub esp,0x1c
        ;; Initialize spill slots
0xb3008833    b8190040b5             mov eax,0xb5400019
0xb3008838    8945f8                 mov [ebp-0x8],eax
0xb300883b    8945f4                 mov [ebp-0xc],eax
0xb300883e    8945f0                 mov [ebp-0x10],eax
0xb3008841    8945ec                 mov [ebp-0x14],eax
0xb3008844    8945e8                 mov [ebp-0x18],eax
0xb3008847    8945e4                 mov [ebp-0x1c],eax
0xb300884a    8945e0                 mov [ebp-0x20],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300884d    3b25bc195809           cmp esp,[0x95819bc]
0xb3008853    0f86ed000000           jna 0xb3008946
        ;; t0 <- Constant:3(#NULL AbstractTypeArguments)
0xb3008859    b8190040b5             mov eax,0xb5400019
0xb300885e    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- StaticCall:5(Date.now t0)
0xb300885f    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008864    e8bf7a3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008869    83c404                 add esp,0x4
0xb300886c    50                     push eax
        ;; StoreLocal:6(stime, t0, lvl: 0)
0xb300886d    58                     pop eax
0xb300886e    8945f0                 mov [ebp-0x10],eax
        ;; t0 <- LoadLocal:7(func lvl:0)
0xb3008871    8b4508                 mov eax,[ebp+0x8]
0xb3008874    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- CurrentContext:9()
0xb3008875    89f0                   mov eax,esi
0xb3008877    50                     push eax
        ;; StoreLocal:10(:expr_temp, t0, lvl: 0)
0xb3008878    58                     pop eax
0xb3008879    8945f8                 mov [ebp-0x8],eax
        ;; t0 <- ClosureCall:11(t0)
0xb300887c    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008881    e8e27a3702             call 0xb5380368  [stub: CallClosureFunction]
0xb3008886    83c404                 add esp,0x4
0xb3008889    50                     push eax
        ;; t1 <- LoadLocal:12(:expr_temp lvl:0)
0xb300888a    8b45f8                 mov eax,[ebp-0x8]
0xb300888d    50                     push eax
        ;; StoreContext:13(t1)
0xb300888e    5e                     pop esi
        ;; StoreLocal:14(ret, t0, lvl: 0)
0xb300888f    58                     pop eax
0xb3008890    8945ec                 mov [ebp-0x14],eax
        ;; t0 <- Constant:15(#NULL AbstractTypeArguments)
0xb3008893    b8190040b5             mov eax,0xb5400019
0xb3008898    50                     push eax
        ;; PushArgument:16(t0)
        ;; t0 <- StaticCall:17(Date.now t0)
0xb3008899    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300889e    e8857a3702             call 0xb5380328  [stub: CallStaticFunction]
0xb30088a3    83c404                 add esp,0x4
0xb30088a6    50                     push eax
        ;; StoreLocal:18(etime, t0, lvl: 0)
0xb30088a7    58                     pop eax
0xb30088a8    8945e4                 mov [ebp-0x1c],eax
        ;; t0 <- LoadLocal:19(etime lvl:0)
0xb30088ab    8b45e4                 mov eax,[ebp-0x1c]
0xb30088ae    50                     push eax
        ;; PushArgument:20(t0)
        ;; t0 <- LoadLocal:21(stime lvl:0)
0xb30088af    8b45f0                 mov eax,[ebp-0x10]
0xb30088b2    50                     push eax
        ;; PushArgument:22(t0)
        ;; t0 <- InstanceCall:23(difference, t0, t0)
0xb30088b3    b9796c29b3             mov ecx,0xb3296c79  'ICData target:'difference' num-checks: 0'
0xb30088b8    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30088bd    e85679ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30088c2    83c408                 add esp,0x8
0xb30088c5    50                     push eax
        ;; PushArgument:24(t0)
        ;; t0 <- InstanceCall:25(get:inMilliseconds, t0)
0xb30088c6    b9c96c29b3             mov ecx,0xb3296cc9  'ICData target:'get:inMilliseconds' num-checks: 0'
0xb30088cb    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb30088d0    e84379ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb30088d5    83c404                 add esp,0x4
0xb30088d8    50                     push eax
        ;; StoreLocal:26(elapsedTime, t0, lvl: 0)
0xb30088d9    58                     pop eax
0xb30088da    8945e0                 mov [ebp-0x20],eax
        ;; t0 <- Constant:27(#ret = )
0xb30088dd    b8395329b3             mov eax,0xb3295339  'ret = '
0xb30088e2    50                     push eax
        ;; PushArgument:28(t0)
        ;; t0 <- LoadLocal:29(ret lvl:0)
0xb30088e3    8b45ec                 mov eax,[ebp-0x14]
0xb30088e6    50                     push eax
        ;; PushArgument:30(t0)
        ;; t0 <- Constant:31(#)
0xb30088e7    b8e11240b5             mov eax,0xb54012e1
0xb30088ec    50                     push eax
        ;; PushArgument:32(t0)
        ;; t0 <- Constant:33(#NULL AbstractTypeArguments)
0xb30088ed    b8190040b5             mov eax,0xb5400019
0xb30088f2    50                     push eax
        ;; t0 <- CreateArray:34(t0, t0, t0, t0)
0xb30088f3    59                     pop ecx
0xb30088f4    ba06000000             mov edx,0x6
0xb30088f9    e89a783702             call 0xb5380198  [stub: AllocateArray]
0xb30088fe    8d500b                 lea edx,[eax+0xb]
0xb3008901    8f4208                 pop [edx+0x8]
0xb3008904    8f4204                 pop [edx+0x4]
0xb3008907    8f02                   pop [edx]
0xb3008909    50                     push eax
        ;; PushArgument:35(t0)
        ;; t0 <- StaticCall:36(_interpolate@0x36924d72 t0)
0xb300890a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300890f    e8147a3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008914    83c404                 add esp,0x4
0xb3008917    50                     push eax
        ;; PushArgument:37(t0)
        ;; StaticCall:38(print t0)
0xb3008918    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300891d    e8067a3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008922    83c404                 add esp,0x4
        ;; t0 <- LoadLocal:39(elapsedTime lvl:0)
0xb3008925    8b45e0                 mov eax,[ebp-0x20]
0xb3008928    50                     push eax
        ;; Return:40(t0)
0xb3008929    58                     pop eax
0xb300892a    ba695629b3             mov edx,0xb3295669  'Function 'gettime': static.'
0xb300892f    ff422b                 inc [edx+0x2b]
0xb3008932    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3008939    7c05                   jl 0xb3008940
0xb300893b    e8787fffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008940    89ec                   mov esp,ebp
0xb3008942    5d                     pop ebp
0xb3008943    c3                     ret
0xb3008944    90                     nop
0xb3008945    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3008946    b970d30a08             mov ecx,0x80ad370
0xb300894b    ba00000000             mov edx,0
0xb3008950    e8d3763702             call 0xb5380028  [stub: CallToRuntime]
0xb3008955    e9fffeffff             jmp 0xb3008859
0xb300895a    e9d97a3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300895f    e9b47b3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 56 : 0xb3008860 'ImmutableArray'
 85 : 0xb300887d 'ImmutableArray'
 114 : 0xb300889a 'ImmutableArray'
 140 : 0xb30088b4 'ICData target:'difference' num-checks: 0'
 145 : 0xb30088b9 'ImmutableArray'
 159 : 0xb30088c7 'ICData target:'get:inMilliseconds' num-checks: 0'
 164 : 0xb30088cc 'ImmutableArray'
 182 : 0xb30088de 'ret = '
 192 : 0xb30088e8 ''
 227 : 0xb300890b 'ImmutableArray'
 241 : 0xb3008919 'ImmutableArray'
 259 : 0xb300892b 'Function 'gettime': static.'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3008869	fn-call      	5		109	-1
0xb3008869	deopt-after  	5		109	-1
0xb3008886	other        	11		124	-1
0xb3008886	deopt-after  	11		124	-1
0xb30088a3	fn-call      	17		131	-1
0xb30088a3	deopt-after  	17		131	-1
0xb30088b3	deopt-before 	23		149	-1
0xb30088c2	ic-call      	23		149	-1
0xb30088c2	deopt-after  	23		149	-1
0xb30088c6	deopt-before 	25		154	-1
0xb30088d5	ic-call      	25		154	-1
0xb30088d5	deopt-after  	25		154	-1
0xb30088fe	other        	-1		159	-1
0xb3008914	fn-call      	36		159	-1
0xb3008914	deopt-after  	36		159	-1
0xb3008922	fn-call      	38		158	-1
0xb3008922	deopt-after  	38		158	-1
0xb3008940	other        	-1		0	-1
0xb3008945	return       	-1		167	-1
0xb3008955	other        	-1		99	-1
0xb300895a	patch        	-1		0	-1
0xb300895f	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime' {
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime' {
  stack var 'func' offset 2 (valid 101-172)
  stack var 'stime' offset -4 (valid 106-172)
  stack var 'ret' offset -5 (valid 119-172)
  stack var 'etime' offset -7 (valid 128-172)
  stack var 'elapsedTime' offset -8 (valid 141-172)
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime' {
No exception handlers
}
Static call target functions {
  0xb3008869: dart:core_Date_Date.now, 0xb5400019
  0xb30088a3: dart:core_Date_Date.now, 0xb5400019
  0xb3008914: dart:core__StringBase@0x36924d72__interpolate@0x36924d72, 0xb5400019
  0xb3008922: dart:core_::_print, 0xb5400019
}
PatchStaticCall: patching from 0xb30084a3 to 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime' 0xb3008828
Compiling function: 'dart:core_Date_Date.now' @ token 682
Before Optimizations
==== dart:core_Date_Date.now
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- AllocateObject:3(Library:'dart:core' Class: _DateImpl@0x36924d72)
    t0 <- StoreLocal:4(:alloc685, t0, lvl: 0)
    PushArgument:5(t0)
    t0 <- Constant:6(#3)
    PushArgument:7(t0)
    StaticCall:8(_DateImpl@0x36924d72.now t0, t0)
    t0 <- LoadLocal:9(:alloc685 lvl:0)
    Return:10(t0)
Code for allocation stub 'Library:'dart:core' Class: _DateImpl@0x36924d72': {
0xb3008978    8b0508fe5609           mov eax,[0x956fe08]
0xb300897e    8d5810                 lea ebx,[eax+0x10]
0xb3008981    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb3008987    732a                   jnc 0xb30089b3
0xb3008989    891d08fe5609           mov [0x956fe08],ebx
0xb300898f    ba210c1ab3             mov edx,0xb31a0c21  'Library:'dart:core' Class: _DateImpl@0x36924d72'
0xb3008994    c7000002cd00           mov [eax],0xcd0200
0xb300899a    c74004190040b5         mov [eax+0x4],0xb5400019
0xb30089a1    c74008190040b5         mov [eax+0x8],0xb5400019
0xb30089a8    c7400c190040b5         mov [eax+0xc],0xb5400019
0xb30089af    83c001                 add eax,0x1
0xb30089b2    c3                     ret
0xb30089b3    55                     push ebp
0xb30089b4    89e5                   mov ebp,esp
0xb30089b6    6800000000             push 0
0xb30089bb    68190040b5             push 0xb5400019
0xb30089c0    68210c1ab3             push 0xb31a0c21
0xb30089c5    68190040b5             push 0xb5400019
0xb30089ca    6800000000             push 0
0xb30089cf    b9d0080b08             mov ecx,0x80b08d0
0xb30089d4    ba03000000             mov edx,0x3
0xb30089d9    e84a763702             call 0xb5380028  [stub: CallToRuntime]
0xb30089de    58                     pop eax
0xb30089df    58                     pop eax
0xb30089e0    58                     pop eax
0xb30089e1    58                     pop eax
0xb30089e2    89ec                   mov esp,ebp
0xb30089e4    5d                     pop ebp
0xb30089e5    c3                     ret
}
--> 'dart:core_Date_Date.now' entry: 0xb30089f8 time: 727 us
Code for function 'dart:core_Date_Date.now' {
        ;; Enter frame
0xb30089f8    55                     push ebp
0xb30089f9    89e5                   mov ebp,esp
0xb30089fb    e800000000             call 0xb3008a00
0xb3008a00    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb3008a03    b8190040b5             mov eax,0xb5400019
0xb3008a08    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3008a0b    3b25bc195809           cmp esp,[0x95819bc]
0xb3008a11    0f863f000000           jna 0xb3008a56
        ;; t0 <- AllocateObject:3(Library:'dart:core' Class: _DateImpl@0x36924d72)
0xb3008a17    e85cffffff             call 0xb3008978 [ stub ]
0xb3008a1c    50                     push eax
        ;; t0 <- StoreLocal:4(:alloc685, t0, lvl: 0)
0xb3008a1d    58                     pop eax
0xb3008a1e    8945f8                 mov [ebp-0x8],eax
0xb3008a21    50                     push eax
        ;; PushArgument:5(t0)
        ;; t0 <- Constant:6(#3)
0xb3008a22    b806000000             mov eax,0x6
0xb3008a27    50                     push eax
        ;; PushArgument:7(t0)
        ;; StaticCall:8(_DateImpl@0x36924d72.now t0, t0)
0xb3008a28    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008a2d    e8f6783702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008a32    83c408                 add esp,0x8
        ;; t0 <- LoadLocal:9(:alloc685 lvl:0)
0xb3008a35    8b45f8                 mov eax,[ebp-0x8]
0xb3008a38    50                     push eax
        ;; Return:10(t0)
0xb3008a39    58                     pop eax
0xb3008a3a    baa17a11b3             mov edx,0xb3117aa1  'Function 'Date.now': static factory.'
0xb3008a3f    ff422b                 inc [edx+0x2b]
0xb3008a42    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3008a49    7c05                   jl 0xb3008a50
0xb3008a4b    e8687effff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008a50    89ec                   mov esp,ebp
0xb3008a52    5d                     pop ebp
0xb3008a53    c3                     ret
0xb3008a54    90                     nop
0xb3008a55    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3008a56    b970d30a08             mov ecx,0x80ad370
0xb3008a5b    ba00000000             mov edx,0
0xb3008a60    e8c3753702             call 0xb5380028  [stub: CallToRuntime]
0xb3008a65    ebb0                   jmp 0xb3008a17
0xb3008a67    e9cc793702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3008a6c    e9a77a3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 49 : 0xb3008a29 'ImmutableArray'
 67 : 0xb3008a3b 'Function 'Date.now': static factory.'
}
PC Descriptors for function 'dart:core_Date_Date.now' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3008a1c	other        	-1		685	-1
0xb3008a32	fn-call      	8		685	-1
0xb3008a32	deopt-after  	8		685	-1
0xb3008a50	other        	-1		0	-1
0xb3008a55	return       	-1		685	-1
0xb3008a65	other        	-1		682	-1
0xb3008a67	patch        	-1		0	-1
0xb3008a6c	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_Date_Date.now' {
}
Variable Descriptors for function 'dart:core_Date_Date.now' {
}
Exception Handlers for function 'dart:core_Date_Date.now' {
No exception handlers
}
Static call target functions {
  0xb3008a32: dart:core__DateImpl@0x36924d72__DateImpl@0x36924d72.now, 0xb5400019
}
PatchStaticCall: patching from 0xb3008869 to 'dart:core_Date_Date.now' 0xb30089f8
Compiling function: 'dart:core__DateImpl@0x36924d72__DateImpl@0x36924d72.now' @ token 138
Before Optimizations
==== dart:core__DateImpl@0x36924d72__DateImpl@0x36924d72.now
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(:phase lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#1)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(&, t0, t0)
    t1 <- Constant:8(#0)
    Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:12(this lvl:0)
    t1 <- Constant:13(#false)
    StoreInstanceField:14(isUtc, t0, t1)
    t0 <- LoadLocal:15(this lvl:0)
    t1 <- StaticCall:16(_getCurrentMs@0x36924d72 )
    StoreInstanceField:17(millisecondsSinceEpoch, t0, t1)
    t0 <- LoadLocal:18(this lvl:0)
    PushArgument:19(t0)
    t0 <- Constant:20(#3)
    PushArgument:21(t0)
    StaticCall:22(Object. t0, t0)
    goto:26 4
B3[target]
    goto:27 4
B4[join] pred(B2, B3)
    t0 <- Constant:28(#null)
    Return:29(t0)
--> 'dart:core__DateImpl@0x36924d72__DateImpl@0x36924d72.now' entry: 0xb3008a88 time: 318 us
Code for function 'dart:core__DateImpl@0x36924d72__DateImpl@0x36924d72.now' {
        ;; Enter frame
0xb3008a88    55                     push ebp
0xb3008a89    89e5                   mov ebp,esp
0xb3008a8b    e800000000             call 0xb3008a90
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3008a90    3b25bc195809           cmp esp,[0x95819bc]
0xb3008a96    0f86ad000000           jna 0xb3008b49
        ;; t0 <- LoadLocal:3(:phase lvl:0)
0xb3008a9c    8b4508                 mov eax,[ebp+0x8]
0xb3008a9f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#1)
0xb3008aa0    b802000000             mov eax,0x2
0xb3008aa5    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(&, t0, t0)
0xb3008aa6    b9d97129b3             mov ecx,0xb32971d9  'ICData target:'&' num-checks: 0'
0xb3008aab    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008ab0    e82378ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3008ab5    83c408                 add esp,0x8
0xb3008ab8    50                     push eax
        ;; t1 <- Constant:8(#0)
0xb3008ab9    b800000000             mov eax,0
0xb3008abe    50                     push eax
        ;; Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
0xb3008abf    58                     pop eax
0xb3008ac0    59                     pop ecx
0xb3008ac1    51                     push ecx
0xb3008ac2    50                     push eax
0xb3008ac3    e8407d3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3008ac8    58                     pop eax
0xb3008ac9    59                     pop ecx
0xb3008aca    0f8456000000           jz 0xb3008b26
        ;; B2
        ;; t0 <- LoadLocal:12(this lvl:0)
0xb3008ad0    8b450c                 mov eax,[ebp+0xc]
0xb3008ad3    50                     push eax
        ;; t1 <- Constant:13(#false)
0xb3008ad4    b8411030b3             mov eax,0xb3301041  'false'
0xb3008ad9    50                     push eax
        ;; StoreInstanceField:14(isUtc, t0, t1)
0xb3008ada    58                     pop eax
0xb3008adb    59                     pop ecx
0xb3008adc    89410b                 mov [ecx+0xb],eax
        ;; t0 <- LoadLocal:15(this lvl:0)
0xb3008adf    8b450c                 mov eax,[ebp+0xc]
0xb3008ae2    50                     push eax
        ;; t1 <- StaticCall:16(_getCurrentMs@0x36924d72 )
0xb3008ae3    bab9b50bb3             mov edx,0xb30bb5b9  Array[0, 0, null]
0xb3008ae8    e83b783702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008aed    50                     push eax
        ;; StoreInstanceField:17(millisecondsSinceEpoch, t0, t1)
0xb3008aee    58                     pop eax
0xb3008aef    59                     pop ecx
0xb3008af0    894107                 mov [ecx+0x7],eax
0xb3008af3    83e005                 and eax,0x5
0xb3008af6    d1e8                   shr eax, 1
0xb3008af8    13c1                   adc eax,ecx
0xb3008afa    83e007                 and eax,0x7
0xb3008afd    83f804                 cmp eax,0x4
0xb3008b00    7508                   jnz 0xb3008b0a
0xb3008b02    8d4107                 lea eax,[ecx+0x7]
0xb3008b05    e85e76ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:18(this lvl:0)
0xb3008b0a    8b450c                 mov eax,[ebp+0xc]
0xb3008b0d    50                     push eax
        ;; PushArgument:19(t0)
        ;; t0 <- Constant:20(#3)
0xb3008b0e    b806000000             mov eax,0x6
0xb3008b13    50                     push eax
        ;; PushArgument:21(t0)
        ;; StaticCall:22(Object. t0, t0)
0xb3008b14    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008b19    e80a783702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008b1e    83c408                 add esp,0x8
        ;; goto:26 4
0xb3008b21    e900000000             jmp 0xb3008b26
        ;; B3
        ;; goto:27 4
        ;; B4
        ;; t0 <- Constant:28(#null)
0xb3008b26    b8190040b5             mov eax,0xb5400019
0xb3008b2b    50                     push eax
        ;; Return:29(t0)
0xb3008b2c    58                     pop eax
0xb3008b2d    bac9bb12b3             mov edx,0xb312bbc9  'Function '_DateImpl@0x36924d72.now': constructor.'
0xb3008b32    ff422b                 inc [edx+0x2b]
0xb3008b35    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3008b3c    7c05                   jl 0xb3008b43
0xb3008b3e    e8757dffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008b43    89ec                   mov esp,ebp
0xb3008b45    5d                     pop ebp
0xb3008b46    c3                     ret
0xb3008b47    90                     nop
0xb3008b48    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3008b49    b970d30a08             mov ecx,0x80ad370
0xb3008b4e    ba00000000             mov edx,0
0xb3008b53    e8d0743702             call 0xb5380028  [stub: CallToRuntime]
0xb3008b58    e93fffffff             jmp 0xb3008a9c
0xb3008b5d    e9d6783702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3008b62    e9b1793702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 31 : 0xb3008aa7 'ICData target:'&' num-checks: 0'
 36 : 0xb3008aac 'ImmutableArray'
 77 : 0xb3008ad5 'false'
 92 : 0xb3008ae4 'ImmutableArray'
 141 : 0xb3008b15 'ImmutableArray'
 166 : 0xb3008b2e 'Function '_DateImpl@0x36924d72.now': constructor.'
}
PC Descriptors for function 'dart:core__DateImpl@0x36924d72__DateImpl@0x36924d72.now' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3008aa6	deopt-before 	7		153	-1
0xb3008ab5	ic-call      	7		153	-1
0xb3008ab5	deopt-after  	7		153	-1
0xb3008aed	fn-call      	16		151	-1
0xb3008aed	deopt-after  	16		151	-1
0xb3008b1e	fn-call      	22		153	-1
0xb3008b1e	deopt-after  	22		153	-1
0xb3008b21	deopt-before 	26		0	-1
0xb3008b26	deopt-before 	27		0	-1
0xb3008b43	other        	-1		0	-1
0xb3008b48	return       	-1		155	-1
0xb3008b58	other        	-1		138	-1
0xb3008b5d	patch        	-1		0	-1
0xb3008b62	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__DateImpl@0x36924d72__DateImpl@0x36924d72.now' {
}
Variable Descriptors for function 'dart:core__DateImpl@0x36924d72__DateImpl@0x36924d72.now' {
  stack var 'this' offset 3 (valid 932-155)
}
Exception Handlers for function 'dart:core__DateImpl@0x36924d72__DateImpl@0x36924d72.now' {
No exception handlers
}
Static call target functions {
  0xb3008aed: dart:core__DateImpl@0x36924d72__getCurrentMs@0x36924d72, 0xb5400019
  0xb3008b1e: dart:core_Object_Object., 0xb5400019
}
PatchStaticCall: patching from 0xb3008a32 to 'dart:core__DateImpl@0x36924d72__DateImpl@0x36924d72.now' 0xb3008a88
Compiling function: 'dart:core__DateImpl@0x36924d72__getCurrentMs@0x36924d72' @ token 1757
Before Optimizations
==== dart:core__DateImpl@0x36924d72__getCurrentMs@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(DateNatives_currentTimeMillis)
    Return:4(t0)
--> 'dart:core__DateImpl@0x36924d72__getCurrentMs@0x36924d72' entry: 0xb3008b78 time: 168 us
Code for function 'dart:core__DateImpl@0x36924d72__getCurrentMs@0x36924d72' {
        ;; Enter frame
0xb3008b78    55                     push ebp
0xb3008b79    89e5                   mov ebp,esp
0xb3008b7b    e800000000             call 0xb3008b80
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3008b80    3b25bc195809           cmp esp,[0x95819bc]
0xb3008b86    0f8628000000           jna 0xb3008bb4
        ;; t0 <- NativeCall:3(DateNatives_currentTimeMillis)
0xb3008b8c    68190040b5             push 0xb5400019
0xb3008b91    8d4504                 lea eax,[ebp+0x4]
0xb3008b94    b9e0074408             mov ecx,0x84407e0
0xb3008b99    ba00000000             mov edx,0
0xb3008b9e    e885753702             call 0xb5380128  [stub: CallNativeCFunction]
0xb3008ba3    58                     pop eax
0xb3008ba4    50                     push eax
        ;; Return:4(t0)
0xb3008ba5    58                     pop eax
0xb3008ba6    ba49c412b3             mov edx,0xb312c449  'Function '_getCurrentMs@0x36924d72': static.'
0xb3008bab    ff422b                 inc [edx+0x2b]
0xb3008bae    89ec                   mov esp,ebp
0xb3008bb0    5d                     pop ebp
0xb3008bb1    c3                     ret
0xb3008bb2    90                     nop
0xb3008bb3    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3008bb4    b970d30a08             mov ecx,0x80ad370
0xb3008bb9    ba00000000             mov edx,0
0xb3008bbe    e865743702             call 0xb5380028  [stub: CallToRuntime]
0xb3008bc3    ebc7                   jmp 0xb3008b8c
0xb3008bc5    e96e783702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3008bca    e949793702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 47 : 0xb3008ba7 'Function '_getCurrentMs@0x36924d72': static.'
}
PC Descriptors for function 'dart:core__DateImpl@0x36924d72__getCurrentMs@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3008ba3	other        	-1		1764	-1
0xb3008bb3	return       	-1		1764	-1
0xb3008bc3	other        	-1		1757	-1
0xb3008bc5	patch        	-1		0	-1
0xb3008bca	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__DateImpl@0x36924d72__getCurrentMs@0x36924d72' {
}
Variable Descriptors for function 'dart:core__DateImpl@0x36924d72__getCurrentMs@0x36924d72' {
}
Exception Handlers for function 'dart:core__DateImpl@0x36924d72__getCurrentMs@0x36924d72' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb3008aed to 'dart:core__DateImpl@0x36924d72__getCurrentMs@0x36924d72' 0xb3008b78
PatchStaticCall: patching from 0xb3008b1e to 'dart:core_Object_Object.' 0xb30027a8
Compiling function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' @ token 30
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#Closure: (dynamic, String, int) => String from Function 'substring': static.)
    PushArgument:4(t0)
    t0 <- Constant:5(#10000)
    PushArgument:6(t0)
    t0 <- StaticCall:7(hotString t0, t0)
    Return:8(t0)
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' entry: 0xb3008be8 time: 96 us
Code for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
        ;; Enter frame
0xb3008be8    55                     push ebp
0xb3008be9    89e5                   mov ebp,esp
0xb3008beb    e800000000             call 0xb3008bf0
        ;; Check argument count
0xb3008bf0    8b420b                 mov eax,[edx+0xb]
0xb3008bf3    83f802                 cmp eax,0x2
0xb3008bf6    7505                   jnz 0xb3008bfd
0xb3008bf8    3b420f                 cmp eax,[edx+0xf]
0xb3008bfb    740e                   jz 0xb3008c0b
0xb3008bfd    b9617529b3             mov ecx,0xb3297561  'ICData target:'call' num-checks: 0'
0xb3008c02    e841763702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb3008c07    89ec                   mov esp,ebp
0xb3008c09    5d                     pop ebp
0xb3008c0a    c3                     ret
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3008c0b    3b25bc195809           cmp esp,[0x95819bc]
0xb3008c11    0f8637000000           jna 0xb3008c4e
        ;; t0 <- Constant:3(#Closure: (dynamic, String, int) => String from Function 'substring': static.)
0xb3008c17    b8517529b3             mov eax,0xb3297551  'instance of Library:'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart' Class: (dynamic, String, int) => String'
0xb3008c1c    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#10000)
0xb3008c1d    b8204e0000             mov eax,0x4e20
0xb3008c22    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- StaticCall:7(hotString t0, t0)
0xb3008c23    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008c28    e8fb763702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008c2d    83c408                 add esp,0x8
0xb3008c30    50                     push eax
        ;; Return:8(t0)
0xb3008c31    58                     pop eax
0xb3008c32    baf15929b3             mov edx,0xb32959f1  'Function '<anonymous closure>': static.'
0xb3008c37    ff422b                 inc [edx+0x2b]
0xb3008c3a    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3008c41    7c05                   jl 0xb3008c48
0xb3008c43    e8707cffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008c48    89ec                   mov esp,ebp
0xb3008c4a    5d                     pop ebp
0xb3008c4b    c3                     ret
0xb3008c4c    90                     nop
0xb3008c4d    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3008c4e    b970d30a08             mov ecx,0x80ad370
0xb3008c53    ba00000000             mov edx,0
0xb3008c58    e8cb733702             call 0xb5380028  [stub: CallToRuntime]
0xb3008c5d    ebb8                   jmp 0xb3008c17
0xb3008c5f    e9d4773702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3008c64    e9af783702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb3008bfe 'ICData target:'call' num-checks: 0'
 48 : 0xb3008c18 'Closure: (dynamic, String, int) => String from Function 'substring': static.'
 60 : 0xb3008c24 'ImmutableArray'
 75 : 0xb3008c33 'Function '<anonymous closure>': static.'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3008c2d	fn-call      	7		34	-1
0xb3008c2d	deopt-after  	7		34	-1
0xb3008c48	other        	-1		0	-1
0xb3008c4d	return       	-1		33	-1
0xb3008c5d	other        	-1		30	-1
0xb3008c5f	patch        	-1		0	-1
0xb3008c64	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
No exception handlers
}
Static call target functions {
  0xb3008c2d: file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString, 0xb5400019
}
Compiling function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' @ token 173
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789)
    StoreLocal:4(ret, t0, lvl: 0)
    t0 <- Constant:5(#0)
    StoreLocal:6(i, t0, lvl: 0)
    goto:27 2
B2[join] pred(B1, B3)
    t0 <- LoadLocal:29(i lvl:0)
    t1 <- LoadLocal:30(N lvl:0)
    Branch if RelationalOp:31(<, t0, t1) goto (3, 4)
B3[target]
    CheckStackOverflow:7()
    t0 <- LoadLocal:8(func lvl:0)
    PushArgument:9(t0)
    t0 <- LoadLocal:10(ret lvl:0)
    PushArgument:11(t0)
    t0 <- LoadLocal:12(i lvl:0)
    PushArgument:13(t0)
    t0 <- CurrentContext:14()
    StoreLocal:15(:expr_temp, t0, lvl: 0)
    ClosureCall:16(t0, t0, t0)
    t0 <- LoadLocal:17(:expr_temp lvl:0)
    StoreContext:18(t0)
    t0 <- LoadLocal:19(i lvl:0)
    t0 <- StoreLocal:20(:expr_temp, t0, lvl: 0)
    PushArgument:21(t0)
    t0 <- Constant:22(#1)
    PushArgument:23(t0)
    t0 <- InstanceCall:24(+, t0, t0)
    StoreLocal:25(i, t0, lvl: 0)
    goto:28 2
B4[target]
    t0 <- LoadLocal:35(ret lvl:0)
    PushArgument:36(t0)
    t0 <- InstanceCall:37(get:length, t0)
    Return:38(t0)
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' entry: 0xb3008c88 time: 267 us
Code for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' {
        ;; Enter frame
0xb3008c88    55                     push ebp
0xb3008c89    89e5                   mov ebp,esp
0xb3008c8b    e800000000             call 0xb3008c90
0xb3008c90    83ec0c                 sub esp,0xc
        ;; Initialize spill slots
0xb3008c93    b8190040b5             mov eax,0xb5400019
0xb3008c98    8945f8                 mov [ebp-0x8],eax
0xb3008c9b    8945f4                 mov [ebp-0xc],eax
0xb3008c9e    8945f0                 mov [ebp-0x10],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3008ca1    3b25bc195809           cmp esp,[0x95819bc]
0xb3008ca7    0f86cd000000           jna 0xb3008d7a
        ;; t0 <- Constant:3(#0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789)
0xb3008cad    b8515329b3             mov eax,0xb3295351  '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789'
0xb3008cb2    50                     push eax
        ;; StoreLocal:4(ret, t0, lvl: 0)
0xb3008cb3    58                     pop eax
0xb3008cb4    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- Constant:5(#0)
0xb3008cb7    b800000000             mov eax,0
0xb3008cbc    50                     push eax
        ;; StoreLocal:6(i, t0, lvl: 0)
0xb3008cbd    58                     pop eax
0xb3008cbe    8945f0                 mov [ebp-0x10],eax
        ;; goto:27 2
        ;; B2
        ;; t0 <- LoadLocal:29(i lvl:0)
0xb3008cc1    8b45f0                 mov eax,[ebp-0x10]
0xb3008cc4    50                     push eax
        ;; t1 <- LoadLocal:30(N lvl:0)
0xb3008cc5    8b4508                 mov eax,[ebp+0x8]
0xb3008cc8    50                     push eax
        ;; Branch if RelationalOp:31(<, t0, t1) goto (3, 4)
0xb3008cc9    59                     pop ecx
0xb3008cca    58                     pop eax
0xb3008ccb    50                     push eax
0xb3008ccc    51                     push ecx
0xb3008ccd    b9f17629b3             mov ecx,0xb32976f1  'ICData target:'<' num-checks: 0'
0xb3008cd2    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008cd7    e8fc75ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3008cdc    83c408                 add esp,0x8
0xb3008cdf    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3008ce4    0f855c000000           jnz 0xb3008d46
        ;; B3
        ;; CheckStackOverflow:7()
0xb3008cea    3b25bc195809           cmp esp,[0x95819bc]
0xb3008cf0    0f8698000000           jna 0xb3008d8e
        ;; t0 <- LoadLocal:8(func lvl:0)
0xb3008cf6    8b450c                 mov eax,[ebp+0xc]
0xb3008cf9    50                     push eax
        ;; PushArgument:9(t0)
        ;; t0 <- LoadLocal:10(ret lvl:0)
0xb3008cfa    8b45f4                 mov eax,[ebp-0xc]
0xb3008cfd    50                     push eax
        ;; PushArgument:11(t0)
        ;; t0 <- LoadLocal:12(i lvl:0)
0xb3008cfe    8b45f0                 mov eax,[ebp-0x10]
0xb3008d01    50                     push eax
        ;; PushArgument:13(t0)
        ;; t0 <- CurrentContext:14()
0xb3008d02    89f0                   mov eax,esi
0xb3008d04    50                     push eax
        ;; StoreLocal:15(:expr_temp, t0, lvl: 0)
0xb3008d05    58                     pop eax
0xb3008d06    8945f8                 mov [ebp-0x8],eax
        ;; ClosureCall:16(t0, t0, t0)
0xb3008d09    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3008d0e    e855763702             call 0xb5380368  [stub: CallClosureFunction]
0xb3008d13    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:17(:expr_temp lvl:0)
0xb3008d16    8b45f8                 mov eax,[ebp-0x8]
0xb3008d19    50                     push eax
        ;; StoreContext:18(t0)
0xb3008d1a    5e                     pop esi
        ;; t0 <- LoadLocal:19(i lvl:0)
0xb3008d1b    8b45f0                 mov eax,[ebp-0x10]
0xb3008d1e    50                     push eax
        ;; t0 <- StoreLocal:20(:expr_temp, t0, lvl: 0)
0xb3008d1f    58                     pop eax
0xb3008d20    8945f8                 mov [ebp-0x8],eax
0xb3008d23    50                     push eax
        ;; PushArgument:21(t0)
        ;; t0 <- Constant:22(#1)
0xb3008d24    b802000000             mov eax,0x2
0xb3008d29    50                     push eax
        ;; PushArgument:23(t0)
        ;; t0 <- InstanceCall:24(+, t0, t0)
0xb3008d2a    b9617729b3             mov ecx,0xb3297761  'ICData target:'+' num-checks: 0'
0xb3008d2f    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008d34    e89f75ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3008d39    83c408                 add esp,0x8
0xb3008d3c    50                     push eax
        ;; StoreLocal:25(i, t0, lvl: 0)
0xb3008d3d    58                     pop eax
0xb3008d3e    8945f0                 mov [ebp-0x10],eax
        ;; goto:28 2
0xb3008d41    e97bffffff             jmp 0xb3008cc1
        ;; B4
        ;; t0 <- LoadLocal:35(ret lvl:0)
0xb3008d46    8b45f4                 mov eax,[ebp-0xc]
0xb3008d49    50                     push eax
        ;; PushArgument:36(t0)
        ;; t0 <- InstanceCall:37(get:length, t0)
0xb3008d4a    b9b97729b3             mov ecx,0xb32977b9  'ICData target:'get:length' num-checks: 0'
0xb3008d4f    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3008d54    e8bf74ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3008d59    83c404                 add esp,0x4
0xb3008d5c    50                     push eax
        ;; Return:38(t0)
0xb3008d5d    58                     pop eax
0xb3008d5e    bae95629b3             mov edx,0xb32956e9  'Function 'hotString': static.'
0xb3008d63    ff422b                 inc [edx+0x2b]
0xb3008d66    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3008d6d    7c05                   jl 0xb3008d74
0xb3008d6f    e8447bffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008d74    89ec                   mov esp,ebp
0xb3008d76    5d                     pop ebp
0xb3008d77    c3                     ret
0xb3008d78    90                     nop
0xb3008d79    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3008d7a    b970d30a08             mov ecx,0x80ad370
0xb3008d7f    ba00000000             mov edx,0
0xb3008d84    e89f723702             call 0xb5380028  [stub: CallToRuntime]
0xb3008d89    e91fffffff             jmp 0xb3008cad
        ;; CheckStackOverflowSlowPath
0xb3008d8e    b970d30a08             mov ecx,0x80ad370
0xb3008d93    ba00000000             mov edx,0
0xb3008d98    e88b723702             call 0xb5380028  [stub: CallToRuntime]
0xb3008d9d    e954ffffff             jmp 0xb3008cf6
0xb3008da2    e991763702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3008da7    e96c773702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 38 : 0xb3008cae '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789'
 70 : 0xb3008cce 'ICData target:'<' num-checks: 0'
 75 : 0xb3008cd3 'ImmutableArray'
 88 : 0xb3008ce0 'true'
 130 : 0xb3008d0a 'ImmutableArray'
 163 : 0xb3008d2b 'ICData target:'+' num-checks: 0'
 168 : 0xb3008d30 'ImmutableArray'
 195 : 0xb3008d4b 'ICData target:'get:length' num-checks: 0'
 200 : 0xb3008d50 'ImmutableArray'
 215 : 0xb3008d5f 'Function 'hotString': static.'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3008cc1	deopt-before 	27		0	-1
0xb3008ccd	deopt-before 	31		201	-1
0xb3008cdc	ic-call      	31		201	-1
0xb3008cdc	deopt-after  	31		201	-1
0xb3008d13	other        	16		211	-1
0xb3008d13	deopt-after  	16		211	-1
0xb3008d2a	deopt-before 	24		205	-1
0xb3008d39	ic-call      	24		205	-1
0xb3008d39	deopt-after  	24		205	-1
0xb3008d41	deopt-before 	28		0	-1
0xb3008d4a	deopt-before 	37		223	-1
0xb3008d59	ic-call      	37		223	-1
0xb3008d59	deopt-after  	37		223	-1
0xb3008d74	other        	-1		0	-1
0xb3008d79	return       	-1		219	-1
0xb3008d89	other        	-1		173	-1
0xb3008d9d	other        	-1		192	-1
0xb3008da2	patch        	-1		0	-1
0xb3008da7	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' {
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' {
  stack var 'func' offset 3 (valid 175-227)
  stack var 'N' offset 2 (valid 180-227)
  stack var 'ret' offset -3 (valid 186-227)
  stack var 'i' offset -4 (valid 196-219)
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb3008c2d to 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' 0xb3008c88
Compiling function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' @ token 230
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(init lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(i lvl:0)
    PushArgument:6(t0)
    t0 <- Constant:7(#100)
    PushArgument:8(t0)
    t0 <- InstanceCall:9(%, t0, t0)
    PushArgument:10(t0)
    t0 <- InstanceCall:11(substring, t0, t0)
    Return:12(t0)
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' entry: 0xb3008dc8 time: 114 us
Code for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' {
        ;; Enter frame
0xb3008dc8    55                     push ebp
0xb3008dc9    89e5                   mov ebp,esp
0xb3008dcb    e800000000             call 0xb3008dd0
        ;; Check argument count
0xb3008dd0    8b420b                 mov eax,[edx+0xb]
0xb3008dd3    83f806                 cmp eax,0x6
0xb3008dd6    7505                   jnz 0xb3008ddd
0xb3008dd8    3b420f                 cmp eax,[edx+0xf]
0xb3008ddb    740e                   jz 0xb3008deb
0xb3008ddd    b9297b29b3             mov ecx,0xb3297b29  'ICData target:'call' num-checks: 0'
0xb3008de2    e861743702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb3008de7    89ec                   mov esp,ebp
0xb3008de9    5d                     pop ebp
0xb3008dea    c3                     ret
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3008deb    3b25bc195809           cmp esp,[0x95819bc]
0xb3008df1    0f8651000000           jna 0xb3008e48
        ;; t0 <- LoadLocal:3(init lvl:0)
0xb3008df7    8b450c                 mov eax,[ebp+0xc]
0xb3008dfa    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(i lvl:0)
0xb3008dfb    8b4508                 mov eax,[ebp+0x8]
0xb3008dfe    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- Constant:7(#100)
0xb3008dff    b8c8000000             mov eax,0xc8
0xb3008e04    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- InstanceCall:9(%, t0, t0)
0xb3008e05    b9617b29b3             mov ecx,0xb3297b61  'ICData target:'%' num-checks: 0'
0xb3008e0a    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008e0f    e8c474ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3008e14    83c408                 add esp,0x8
0xb3008e17    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- InstanceCall:11(substring, t0, t0)
0xb3008e18    b9b97b29b3             mov ecx,0xb3297bb9  'ICData target:'substring' num-checks: 0'
0xb3008e1d    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008e22    e8f173ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3008e27    83c408                 add esp,0x8
0xb3008e2a    50                     push eax
        ;; Return:12(t0)
0xb3008e2b    58                     pop eax
0xb3008e2c    ba615a29b3             mov edx,0xb3295a61  'Function 'substring': static.'
0xb3008e31    ff422b                 inc [edx+0x2b]
0xb3008e34    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3008e3b    7c05                   jl 0xb3008e42
0xb3008e3d    e8767affff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008e42    89ec                   mov esp,ebp
0xb3008e44    5d                     pop ebp
0xb3008e45    c3                     ret
0xb3008e46    90                     nop
0xb3008e47    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3008e48    b970d30a08             mov ecx,0x80ad370
0xb3008e4d    ba00000000             mov edx,0
0xb3008e52    e8d1713702             call 0xb5380028  [stub: CallToRuntime]
0xb3008e57    eb9e                   jmp 0xb3008df7
0xb3008e59    e9da753702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3008e5e    e9b5763702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb3008dde 'ICData target:'call' num-checks: 0'
 62 : 0xb3008e06 'ICData target:'%' num-checks: 0'
 67 : 0xb3008e0b 'ImmutableArray'
 81 : 0xb3008e19 'ICData target:'substring' num-checks: 0'
 86 : 0xb3008e1e 'ImmutableArray'
 101 : 0xb3008e2d 'Function 'substring': static.'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3008e05	deopt-before 	9		248	-1
0xb3008e14	ic-call      	9		248	-1
0xb3008e14	deopt-after  	9		248	-1
0xb3008e18	deopt-before 	11		246	-1
0xb3008e27	ic-call      	11		246	-1
0xb3008e27	deopt-after  	11		246	-1
0xb3008e42	other        	-1		0	-1
0xb3008e47	return       	-1		241	-1
0xb3008e57	other        	-1		230	-1
0xb3008e59	patch        	-1		0	-1
0xb3008e5e	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' {
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' {
  stack var 'init' offset 3 (valid 233-254)
  stack var 'i' offset 2 (valid 238-254)
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__IntegerImplementation@0x36924d72_%' @ token 9038
Compiling function: 'dart:core_IntegerDivisionByZeroException_IntegerDivisionByZeroException.' @ token 3215
Before Optimizations
==== dart:core_IntegerDivisionByZeroException_IntegerDivisionByZeroException.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(:phase lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#1)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(&, t0, t0)
    t1 <- Constant:8(#0)
    Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:12(this lvl:0)
    PushArgument:13(t0)
    t0 <- Constant:14(#3)
    PushArgument:15(t0)
    StaticCall:16(Object. t0, t0)
    goto:20 4
B3[target]
    goto:21 4
B4[join] pred(B2, B3)
    t0 <- Constant:22(#null)
    Return:23(t0)
--> 'dart:core_IntegerDivisionByZeroException_IntegerDivisionByZeroException.' entry: 0xb3008e78 time: 156 us
Code for function 'dart:core_IntegerDivisionByZeroException_IntegerDivisionByZeroException.' {
        ;; Enter frame
0xb3008e78    55                     push ebp
0xb3008e79    89e5                   mov ebp,esp
0xb3008e7b    e800000000             call 0xb3008e80
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3008e80    3b25bc195809           cmp esp,[0x95819bc]
0xb3008e86    0f8673000000           jna 0xb3008eff
        ;; t0 <- LoadLocal:3(:phase lvl:0)
0xb3008e8c    8b4508                 mov eax,[ebp+0x8]
0xb3008e8f    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#1)
0xb3008e90    b802000000             mov eax,0x2
0xb3008e95    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(&, t0, t0)
0xb3008e96    b9517e29b3             mov ecx,0xb3297e51  'ICData target:'&' num-checks: 0'
0xb3008e9b    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008ea0    e83374ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3008ea5    83c408                 add esp,0x8
0xb3008ea8    50                     push eax
        ;; t1 <- Constant:8(#0)
0xb3008ea9    b800000000             mov eax,0
0xb3008eae    50                     push eax
        ;; Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
0xb3008eaf    58                     pop eax
0xb3008eb0    59                     pop ecx
0xb3008eb1    51                     push ecx
0xb3008eb2    50                     push eax
0xb3008eb3    e850793702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3008eb8    58                     pop eax
0xb3008eb9    59                     pop ecx
0xb3008eba    0f841c000000           jz 0xb3008edc
        ;; B2
        ;; t0 <- LoadLocal:12(this lvl:0)
0xb3008ec0    8b450c                 mov eax,[ebp+0xc]
0xb3008ec3    50                     push eax
        ;; PushArgument:13(t0)
        ;; t0 <- Constant:14(#3)
0xb3008ec4    b806000000             mov eax,0x6
0xb3008ec9    50                     push eax
        ;; PushArgument:15(t0)
        ;; StaticCall:16(Object. t0, t0)
0xb3008eca    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3008ecf    e854743702             call 0xb5380328  [stub: CallStaticFunction]
0xb3008ed4    83c408                 add esp,0x8
        ;; goto:20 4
0xb3008ed7    e900000000             jmp 0xb3008edc
        ;; B3
        ;; goto:21 4
        ;; B4
        ;; t0 <- Constant:22(#null)
0xb3008edc    b8190040b5             mov eax,0xb5400019
0xb3008ee1    50                     push eax
        ;; Return:23(t0)
0xb3008ee2    58                     pop eax
0xb3008ee3    ba39f912b3             mov edx,0xb312f939  'Function 'IntegerDivisionByZeroException.': constructor const.'
0xb3008ee8    ff422b                 inc [edx+0x2b]
0xb3008eeb    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3008ef2    7c05                   jl 0xb3008ef9
0xb3008ef4    e8bf79ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3008ef9    89ec                   mov esp,ebp
0xb3008efb    5d                     pop ebp
0xb3008efc    c3                     ret
0xb3008efd    90                     nop
0xb3008efe    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3008eff    b970d30a08             mov ecx,0x80ad370
0xb3008f04    ba00000000             mov edx,0
0xb3008f09    e81a713702             call 0xb5380028  [stub: CallToRuntime]
0xb3008f0e    e979ffffff             jmp 0xb3008e8c
0xb3008f13    e920753702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3008f18    e9fb753702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 31 : 0xb3008e97 'ICData target:'&' num-checks: 0'
 36 : 0xb3008e9c 'ImmutableArray'
 83 : 0xb3008ecb 'ImmutableArray'
 108 : 0xb3008ee4 'Function 'IntegerDivisionByZeroException.': constructor const.'
}
PC Descriptors for function 'dart:core_IntegerDivisionByZeroException_IntegerDivisionByZeroException.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3008e96	deopt-before 	7		3217	-1
0xb3008ea5	ic-call      	7		3217	-1
0xb3008ea5	deopt-after  	7		3217	-1
0xb3008ed4	fn-call      	16		3217	-1
0xb3008ed4	deopt-after  	16		3217	-1
0xb3008ed7	deopt-before 	20		0	-1
0xb3008edc	deopt-before 	21		0	-1
0xb3008ef9	other        	-1		0	-1
0xb3008efe	return       	-1		3218	-1
0xb3008f0e	other        	-1		3215	-1
0xb3008f13	patch        	-1		0	-1
0xb3008f18	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_IntegerDivisionByZeroException_IntegerDivisionByZeroException.' {
}
Variable Descriptors for function 'dart:core_IntegerDivisionByZeroException_IntegerDivisionByZeroException.' {
  stack var 'this' offset 3 (valid 3215-3218)
}
Exception Handlers for function 'dart:core_IntegerDivisionByZeroException_IntegerDivisionByZeroException.' {
No exception handlers
}
Static call target functions {
  0xb3008ed4: dart:core_Object_Object., 0xb5400019
}
PatchStaticCall: patching from 0xb3008ed4 to 'dart:core_Object_Object.' 0xb30027a8
Before Optimizations
==== dart:core__IntegerImplementation@0x36924d72_%
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(other lvl:0)
    t1 <- Constant:4(#null)
    t2 <- Constant:5(#null)
    t0 <- InstanceOf:6(t0 IS int instantiator(t1) type-arg(t2))
    t1 <- Constant:7(#true)
    Branch if StrictCompare:8(===, t0, t1) goto (2, 5)
B2[target]
    t0 <- LoadLocal:10(other lvl:0)
    t1 <- Constant:11(#0)
    Branch if EqualityCompare:12(t0 == t1) goto (3, 6)
B3[target]
    t0 <- Constant:15(#Instance of 'IntegerDivisionByZeroException')
    PushArgument:16(t0)
    Throw:17()
B6[target]
    goto:23 4
B5[target]
    goto:21 4
B4[join] pred(B5, B6)
    t0 <- LoadLocal:24(other lvl:0)
    PushArgument:25(t0)
    t0 <- LoadLocal:26(this lvl:0)
    PushArgument:27(t0)
    t0 <- InstanceCall:28(_moduloFromInteger@0x36924d72, t0, t0)
    Return:29(t0)
--> 'dart:core__IntegerImplementation@0x36924d72_%' entry: 0xb3008f38 time: 2352 us
Code for function 'dart:core__IntegerImplementation@0x36924d72_%' {
0xb3008f38    8b442404               mov eax,[esp+0x4]
0xb3008f3c    8b5c2408               mov ebx,[esp+0x8]
0xb3008f40    0bd8                   or ebx,eax
0xb3008f42    f6c301                 test_b ebx,0x1
0xb3008f45    752c                   jnz 0xb3008f73
0xb3008f47    83f800                 cmp eax,0
0xb3008f4a    7427                   jz 0xb3008f73
0xb3008f4c    8b5c2408               mov ebx,[esp+0x8]
0xb3008f50    83fb00                 cmp ebx,0
0xb3008f53    7c1e                   jl 0xb3008f73
0xb3008f55    3bd8                   cmp ebx,eax
0xb3008f57    7405                   jz 0xb3008f5e
0xb3008f59    7f06                   jg 0xb3008f61
0xb3008f5b    89d8                   mov eax,ebx
0xb3008f5d    c3                     ret
0xb3008f5e    33c0                   xor eax,eax
0xb3008f60    c3                     ret
0xb3008f61    89c3                   mov ebx,eax
0xb3008f63    d1fb                   sar ebx, 1
0xb3008f65    8b442408               mov eax,[esp+0x8]
0xb3008f69    d1f8                   sar eax, 1
0xb3008f6b    99                     cdq
0xb3008f6c    f7fb                   idiv ebx
0xb3008f6e    89d0                   mov eax,edx
0xb3008f70    03c0                   add eax,eax
0xb3008f72    c3                     ret
        ;; Enter frame
0xb3008f73    55                     push ebp
0xb3008f74    89e5                   mov ebp,esp
0xb3008f76    e800000000             call 0xb3008f7b
0xb3008f7b    830424c5               add [esp],0xc5
0xb3008f7f    83ec04                 sub esp,0x4
        ;; Initialize spill slots
0xb3008f82    b8190040b5             mov eax,0xb5400019
0xb3008f87    8945f8                 mov [ebp-0x8],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3008f8a    3b25bc195809           cmp esp,[0x95819bc]
0xb3008f90    0f861e010000           jna 0xb30090b4
        ;; t0 <- LoadLocal:3(other lvl:0)
0xb3008f96    8b4508                 mov eax,[ebp+0x8]
0xb3008f99    50                     push eax
        ;; t1 <- Constant:4(#null)
0xb3008f9a    b8190040b5             mov eax,0xb5400019
0xb3008f9f    50                     push eax
        ;; t2 <- Constant:5(#null)
0xb3008fa0    b8190040b5             mov eax,0xb5400019
0xb3008fa5    50                     push eax
        ;; t0 <- InstanceOf:6(t0 IS int instantiator(t1) type-arg(t2))
0xb3008fa6    5a                     pop edx
0xb3008fa7    59                     pop ecx
0xb3008fa8    58                     pop eax
0xb3008fa9    51                     push ecx
0xb3008faa    52                     push edx
0xb3008fab    3d190040b5             cmp eax, 0xb5400019
0xb3008fb0    0f842d000000           jz 0xb3008fe3
        ;; InlineInstanceof
        ;; InstantiatedTypeNoArgumentsTest
0xb3008fb6    a801                   test al,0x1
0xb3008fb8    7505                   jnz 0xb3008fbf
0xb3008fba    e92b000000             jmp 0xb3008fea
0xb3008fbf    0fb74801               movzx_w ecx,[eax+0x1]
0xb3008fc3    83f956                 cmp ecx,0x56
0xb3008fc6    0f841e000000           jz 0xb3008fea
        ;; NumberTypeCheck
0xb3008fcc    83f92a                 cmp ecx,0x2a
0xb3008fcf    0f8415000000           jz 0xb3008fea
0xb3008fd5    83f92b                 cmp ecx,0x2b
0xb3008fd8    0f840c000000           jz 0xb3008fea
0xb3008fde    e900000000             jmp 0xb3008fe3
0xb3008fe3    b8411030b3             mov eax,0xb3301041  'false'
0xb3008fe8    eb05                   jmp 0xb3008fef
0xb3008fea    b8391030b3             mov eax,0xb3301039  'true'
0xb3008fef    5a                     pop edx
0xb3008ff0    59                     pop ecx
0xb3008ff1    50                     push eax
        ;; t1 <- Constant:7(#true)
0xb3008ff2    b8391030b3             mov eax,0xb3301039  'true'
0xb3008ff7    50                     push eax
        ;; Branch if StrictCompare:8(===, t0, t1) goto (2, 5)
0xb3008ff8    58                     pop eax
0xb3008ff9    59                     pop ecx
0xb3008ffa    51                     push ecx
0xb3008ffb    50                     push eax
0xb3008ffc    e807783702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3009001    58                     pop eax
0xb3009002    59                     pop ecx
0xb3009003    0f8573000000           jnz 0xb300907c
        ;; B2
        ;; t0 <- LoadLocal:10(other lvl:0)
0xb3009009    8b4508                 mov eax,[ebp+0x8]
0xb300900c    50                     push eax
        ;; t1 <- Constant:11(#0)
0xb300900d    b800000000             mov eax,0
0xb3009012    50                     push eax
        ;; Branch if EqualityCompare:12(t0 == t1) goto (3, 6)
0xb3009013    5a                     pop edx
0xb3009014    5b                     pop ebx
0xb3009015    53                     push ebx
0xb3009016    52                     push edx
0xb3009017    813c24190040b5         cmp [esp],0xb5400019
0xb300901e    0f8425000000           jz 0xb3009049
0xb3009024    817c2404190040b5       cmp [esp+0x4],0xb5400019
0xb300902c    0f8417000000           jz 0xb3009049
0xb3009032    b9c98029b3             mov ecx,0xb32980c9  'ICData target:'==' num-checks: 0'
0xb3009037    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300903c    e89772ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009041    83c408                 add esp,0x8
0xb3009044    e90d000000             jmp 0xb3009056
0xb3009049    b9c98029b3             mov ecx,0xb32980c9  'ICData target:'==' num-checks: 0'
0xb300904e    e8f578ffff             call 0xb3000948  [stub: EqualityWithNullArg]
0xb3009053    83c408                 add esp,0x8
0xb3009056    3d391030b3             cmp eax, 0xb3301039  'true'
0xb300905b    0f8516000000           jnz 0xb3009077
        ;; B3
        ;; t0 <- Constant:15(#Instance of 'IntegerDivisionByZeroException')
0xb3009061    b8317e29b3             mov eax,0xb3297e31  'instance of Library:'dart:core' Class: IntegerDivisionByZeroException'
0xb3009066    50                     push eax
        ;; PushArgument:16(t0)
        ;; Throw:17()
0xb3009067    b9a0d70a08             mov ecx,0x80ad7a0
0xb300906c    ba01000000             mov edx,0x1
0xb3009071    e8b26f3702             call 0xb5380028  [stub: CallToRuntime]
0xb3009076    cc                     int3
        ;; B6
        ;; goto:23 4
0xb3009077    e900000000             jmp 0xb300907c
        ;; B5
        ;; goto:21 4
        ;; B4
        ;; t0 <- LoadLocal:24(other lvl:0)
0xb300907c    8b4508                 mov eax,[ebp+0x8]
0xb300907f    50                     push eax
        ;; PushArgument:25(t0)
        ;; t0 <- LoadLocal:26(this lvl:0)
0xb3009080    8b450c                 mov eax,[ebp+0xc]
0xb3009083    50                     push eax
        ;; PushArgument:27(t0)
        ;; t0 <- InstanceCall:28(_moduloFromInteger@0x36924d72, t0, t0)
0xb3009084    b9398129b3             mov ecx,0xb3298139  'ICData target:'_moduloFromInteger@0x36924d72' num-checks: 0'
0xb3009089    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300908e    e88571ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3009093    83c408                 add esp,0x8
0xb3009096    50                     push eax
        ;; Return:29(t0)
0xb3009097    58                     pop eax
0xb3009098    ba81641ab3             mov edx,0xb31a6481  'Function '%':.'
0xb300909d    ff422b                 inc [edx+0x2b]
0xb30090a0    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30090a7    7c05                   jl 0xb30090ae
0xb30090a9    e80a78ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30090ae    89ec                   mov esp,ebp
0xb30090b0    5d                     pop ebp
0xb30090b1    c3                     ret
0xb30090b2    90                     nop
0xb30090b3    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30090b4    b970d30a08             mov ecx,0x80ad370
0xb30090b9    ba00000000             mov edx,0
0xb30090be    e8656f3702             call 0xb5380028  [stub: CallToRuntime]
0xb30090c3    e9cefeffff             jmp 0xb3008f96
0xb30090c8    e96b733702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30090cd    e946743702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 172 : 0xb3008fe4 'false'
 179 : 0xb3008feb 'true'
 187 : 0xb3008ff3 'true'
 251 : 0xb3009033 'ICData target:'==' num-checks: 0'
 256 : 0xb3009038 'ImmutableArray'
 274 : 0xb300904a 'ICData target:'==' num-checks: 0'
 287 : 0xb3009057 'true'
 298 : 0xb3009062 'Instance of 'IntegerDivisionByZeroException''
 333 : 0xb3009085 'ICData target:'_moduloFromInteger@0x36924d72' num-checks: 0'
 338 : 0xb300908a 'ImmutableArray'
 353 : 0xb3009099 'Function '%':.'
}
PC Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_%' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3009017	deopt-before 	12		9054	-1
0xb3009041	ic-call      	12		9054	-1
0xb3009041	deopt-after  	12		9054	-1
0xb3009053	other        	-1		9054	-1
0xb3009076	other        	-1		9060	-1
0xb3009077	deopt-before 	23		0	-1
0xb300907c	deopt-before 	21		0	-1
0xb3009084	deopt-before 	28		9073	-1
0xb3009093	ic-call      	28		9073	-1
0xb3009093	deopt-after  	28		9073	-1
0xb30090ae	other        	-1		0	-1
0xb30090b3	return       	-1		9068	-1
0xb30090c3	other        	-1		9038	-1
0xb30090c8	patch        	-1		0	-1
0xb30090cd	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__IntegerImplementation@0x36924d72_%' {
}
Variable Descriptors for function 'dart:core__IntegerImplementation@0x36924d72_%' {
  stack var 'this' offset 3 (valid 8886-9078)
  stack var 'other' offset 2 (valid 9041-9078)
}
Exception Handlers for function 'dart:core__IntegerImplementation@0x36924d72_%' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBase@0x36924d72_[]' @ token 12495
Before Optimizations
==== dart:core__StringBase@0x36924d72_[]
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(String_charAt)
    Return:4(t0)
--> 'dart:core__StringBase@0x36924d72_[]' entry: 0xb30090e8 time: 177 us
Code for function 'dart:core__StringBase@0x36924d72_[]' {
        ;; Enter frame
0xb30090e8    55                     push ebp
0xb30090e9    89e5                   mov ebp,esp
0xb30090eb    e800000000             call 0xb30090f0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30090f0    3b25bc195809           cmp esp,[0x95819bc]
0xb30090f6    0f8628000000           jna 0xb3009124
        ;; t0 <- NativeCall:3(String_charAt)
0xb30090fc    68190040b5             push 0xb5400019
0xb3009101    8d450c                 lea eax,[ebp+0xc]
0xb3009104    b9101f4608             mov ecx,0x8461f10
0xb3009109    ba02000001             mov edx,0x1000002
0xb300910e    e815703702             call 0xb5380128  [stub: CallNativeCFunction]
0xb3009113    58                     pop eax
0xb3009114    50                     push eax
        ;; Return:4(t0)
0xb3009115    58                     pop eax
0xb3009116    bad9a21ab3             mov edx,0xb31aa2d9  'Function '[]':.'
0xb300911b    ff422b                 inc [edx+0x2b]
0xb300911e    89ec                   mov esp,ebp
0xb3009120    5d                     pop ebp
0xb3009121    c3                     ret
0xb3009122    90                     nop
0xb3009123    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3009124    b970d30a08             mov ecx,0x80ad370
0xb3009129    ba00000000             mov edx,0
0xb300912e    e8f56e3702             call 0xb5380028  [stub: CallToRuntime]
0xb3009133    ebc7                   jmp 0xb30090fc
0xb3009135    e9fe723702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300913a    e9d9733702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 47 : 0xb3009117 'Function '[]':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_[]' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3009113	other        	-1		12505	-1
0xb3009123	return       	-1		12505	-1
0xb3009133	other        	-1		12495	-1
0xb3009135	patch        	-1		0	-1
0xb300913a	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_[]' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_[]' {
  stack var 'this' offset 3 (valid 12342-12505)
  stack var 'index' offset 2 (valid 12497-12505)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_[]' {
No exception handlers
}
Static call target functions {
}
Compiling optimized function: 'dart:core__StringBase@0x36924d72_substring' @ token 13217
Before Optimizations
==== dart:core__StringBase@0x36924d72_substring
B0[graph] {
      v0 <- Constant:99(#null)
      v1 <- Parameter:100(0)
      v2 <- Parameter:101(1)
      v3 <- Parameter:102(2)
}
B1[target]
    CheckStackOverflow:2()
    v4 <- Constant:4(#null)
    Branch if StrictCompare:6(===, v3, v4) goto (2, 3)
B2[target]
    PushArgument:9(v1)
    v17 <- InstanceCall:10(get:length, v1 IC[1: _OneByteString@0x36924d72 #300]) env={ v1, v2, v3, v0, v0, a0 }
    goto:15 4 env={ v1, v2, v17, v0, v0 }
B3[target]
    goto:16 4 env={ v1, v2, v3, v0, v0 }
B4[join] pred(B2, B3) {
      v5 <- phi(v17, v3) alive
}
    v6 <- Constant:18(#0)
    Branch if RelationalOp:19(<, v2, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (7, 5) env={ v1, v2, v5, v0, v0, v2, v6 }
B7[target]
    goto:41 6 env={ v1, v2, v5, v0, v0 }
B5[target]
    PushArgument:23(v1)
    v7 <- InstanceCall:24(get:length, v1 IC[1: _OneByteString@0x36924d72 #301]) env={ v1, v2, v5, v0, v0, v2, a0 }
    Branch if RelationalOp:25(>, v2, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (8, 9) env={ v1, v2, v5, v0, v0, v2, v7 }
B8[target]
    goto:43 6 env={ v1, v2, v5, v0, v0 }
B6[join] pred(B7, B8)
    v15 <- AllocateObject:28(Library:'dart:core' Class: RangeError)
    PushArgument:30(v15)
    v16 <- Constant:31(#3)
    PushArgument:32(v16)
    PushArgument:34(v2)
    StaticCall:35(RangeError.value v15, v16, v2) env={ v1, v2, v5, v0, v15, a0, a1, a2 }
    PushArgument:37(v15)
    Throw:38()
B9[target]
    v8 <- Constant:46(#0)
    Branch if RelationalOp:47(<, v5, v8 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (12, 10) env={ v1, v2, v5, v0, v0, v5, v8 }
B12[target]
    goto:69 11 env={ v1, v2, v5, v0, v0 }
B10[target]
    PushArgument:51(v1)
    v9 <- InstanceCall:52(get:length, v1 IC[1: _OneByteString@0x36924d72 #301]) env={ v1, v2, v5, v0, v0, v5, a0 }
    Branch if RelationalOp:53(>, v5, v9 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (13, 14) env={ v1, v2, v5, v0, v0, v5, v9 }
B13[target]
    goto:71 11 env={ v1, v2, v5, v0, v0 }
B11[join] pred(B12, B13)
    v13 <- AllocateObject:56(Library:'dart:core' Class: RangeError)
    PushArgument:58(v13)
    v14 <- Constant:59(#3)
    PushArgument:60(v14)
    PushArgument:62(v5)
    StaticCall:63(RangeError.value v13, v14, v5) env={ v1, v2, v5, v0, v13, a0, a1, a2 }
    PushArgument:65(v13)
    Throw:66()
B14[target]
    Branch if RelationalOp:75(>, v2, v5 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (15, 16) env={ v1, v2, v5, v0, v0, v2, v5 }
B15[target]
    v11 <- AllocateObject:77(Library:'dart:core' Class: RangeError)
    PushArgument:79(v11)
    v12 <- Constant:80(#3)
    PushArgument:81(v12)
    PushArgument:83(v2)
    StaticCall:84(RangeError.value v11, v12, v2) env={ v1, v2, v5, v0, v11, a0, a1, a2 }
    PushArgument:86(v11)
    Throw:87()
B16[target]
    PushArgument:91(v1)
    PushArgument:93(v2)
    PushArgument:95(v5)
    v10 <- InstanceCall:96(_substringUnchecked@0x36924d72, v1, v2, v5 IC[1: _OneByteString@0x36924d72 #301]) env={ v1, v2, v5, v0, v0, a0, a1, a2 }
    Return:97(v10)
Inlining calls in Function 'substring':.
Before Inlining of dart:core__StringBase@0x36924d72_substring
==== dart:core__StringBase@0x36924d72_substring
B0[graph] {
      v0 <- Constant:99(#null)
      v1 <- Parameter:100(0)
      v2 <- Parameter:101(1)
      v3 <- Parameter:102(2)
}
B1[target]
    CheckStackOverflow:2()
    v4 <- Constant:4(#null)
    Branch if StrictCompare:6(===, v3, v4) goto (2, 3)
B2[target]
    CheckClass:10(v1 IC[1: _OneByteString@0x36924d72 #300]) env={ v1, v2, v3, v0, v0, v1 }
    v17 <- LoadField:104(v1, 4, immutable=1) env={ v1, v2, v3, v0, v0, v1 }
    goto:15 4 env={ v1, v2, v17, v0, v0 }
B3[target]
    goto:16 4 env={ v1, v2, v3, v0, v0 }
B4[join] pred(B2, B3) {
      v5 <- phi(v17, v3) alive
}
    v6 <- Constant:18(#0)
    CheckSmi:19(v2) env={ v1, v2, v5, v0, v0, v2, v6 }
    CheckSmi:19(v6) env={ v1, v2, v5, v0, v0, v2, v6 }
    Branch if RelationalOp:19(<, v2, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (7, 5) env={ v1, v2, v5, v0, v0, v2, v6 }
B7[target]
    goto:41 6 env={ v1, v2, v5, v0, v0 }
B5[target]
    CheckClass:24(v1 IC[1: _OneByteString@0x36924d72 #301]) env={ v1, v2, v5, v0, v0, v2, v1 }
    v7 <- LoadField:108(v1, 4, immutable=1) env={ v1, v2, v5, v0, v0, v2, v1 }
    CheckSmi:25(v2) env={ v1, v2, v5, v0, v0, v2, v7 }
    CheckSmi:25(v7) env={ v1, v2, v5, v0, v0, v2, v7 }
    Branch if RelationalOp:25(>, v2, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (8, 9) env={ v1, v2, v5, v0, v0, v2, v7 }
B8[target]
    goto:43 6 env={ v1, v2, v5, v0, v0 }
B6[join] pred(B7, B8)
    v15 <- AllocateObject:28(Library:'dart:core' Class: RangeError)
    PushArgument:30(v15)
    v16 <- Constant:31(#3)
    PushArgument:32(v16)
    PushArgument:34(v2)
    StaticCall:35(RangeError.value v15, v16, v2) env={ v1, v2, v5, v0, v15, a0, a1, a2 }
    PushArgument:37(v15)
    Throw:38()
B9[target]
    v8 <- Constant:46(#0)
    CheckSmi:47(v5) env={ v1, v2, v5, v0, v0, v5, v8 }
    CheckSmi:47(v8) env={ v1, v2, v5, v0, v0, v5, v8 }
    Branch if RelationalOp:47(<, v5, v8 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (12, 10) env={ v1, v2, v5, v0, v0, v5, v8 }
B12[target]
    goto:69 11 env={ v1, v2, v5, v0, v0 }
B10[target]
    CheckClass:52(v1 IC[1: _OneByteString@0x36924d72 #301]) env={ v1, v2, v5, v0, v0, v5, v1 }
    v9 <- LoadField:114(v1, 4, immutable=1) env={ v1, v2, v5, v0, v0, v5, v1 }
    CheckSmi:53(v5) env={ v1, v2, v5, v0, v0, v5, v9 }
    CheckSmi:53(v9) env={ v1, v2, v5, v0, v0, v5, v9 }
    Branch if RelationalOp:53(>, v5, v9 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (13, 14) env={ v1, v2, v5, v0, v0, v5, v9 }
B13[target]
    goto:71 11 env={ v1, v2, v5, v0, v0 }
B11[join] pred(B12, B13)
    v13 <- AllocateObject:56(Library:'dart:core' Class: RangeError)
    PushArgument:58(v13)
    v14 <- Constant:59(#3)
    PushArgument:60(v14)
    PushArgument:62(v5)
    StaticCall:63(RangeError.value v13, v14, v5) env={ v1, v2, v5, v0, v13, a0, a1, a2 }
    PushArgument:65(v13)
    Throw:66()
B14[target]
    CheckSmi:75(v2) env={ v1, v2, v5, v0, v0, v2, v5 }
    CheckSmi:75(v5) env={ v1, v2, v5, v0, v0, v2, v5 }
    Branch if RelationalOp:75(>, v2, v5 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (15, 16) env={ v1, v2, v5, v0, v0, v2, v5 }
B15[target]
    v11 <- AllocateObject:77(Library:'dart:core' Class: RangeError)
    PushArgument:79(v11)
    v12 <- Constant:80(#3)
    PushArgument:81(v12)
    PushArgument:83(v2)
    StaticCall:84(RangeError.value v11, v12, v2) env={ v1, v2, v5, v0, v11, a0, a1, a2 }
    PushArgument:86(v11)
    Throw:87()
B16[target]
    PushArgument:91(v1)
    PushArgument:93(v2)
    PushArgument:95(v5)
    v10 <- PolymorphicInstanceCall:119(_substringUnchecked@0x36924d72, v1, v2, v5 IC[1: _OneByteString@0x36924d72 #301]) env={ v1, v2, v5, v0, v0, a0, a1, a2 }
    Return:97(v10)
  Depth 1 ----------
  Static Calls (0)
  Closure Calls (0)
  Polymorphic Instance Calls (1)
  => Function '_substringUnchecked@0x36924d72':. (deopt count 0)
Callee graph for inlining dart:core__StringBase@0x36924d72__substringUnchecked@0x36924d72
==== dart:core__StringBase@0x36924d72__substringUnchecked@0x36924d72
B0[graph] {
      v18 <- Constant:38(#null)
      v19 <- Parameter:35(0)
      v20 <- Parameter:36(1)
      v21 <- Parameter:37(2)
}
B17[target]
    CheckSmi:5(v20) env={ v19, v20, v21, v20, v21 }
    CheckSmi:5(v21) env={ v19, v20, v21, v20, v21 }
    Branch if EqualityCompare:5(v20 == v21 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #305]) goto (18, 19) env={ v19, v20, v21, v20, v21 }
B18[target]
    v26 <- Constant:7(#)
    Return:8(v26)
B19[target]
    v22 <- Constant:13(#1)
    CheckSmi:15(v20) env={ v19, v20, v21, v20, v22 }
    CheckSmi:15(v22) env={ v19, v20, v21, v20, v22 }
    v23 <- BinarySmiOp:15(+, v20, v22) +o env={ v19, v20, v21, v20, v22 }
    CheckSmi:17(v23) env={ v19, v20, v21, v23, v21 }
    CheckSmi:17(v21) env={ v19, v20, v21, v23, v21 }
    Branch if EqualityCompare:17(v23 == v21 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #304]) goto (20, 21) env={ v19, v20, v21, v23, v21 }
B20[target]
    CheckClass:23(v19 IC[1: _OneByteString@0x36924d72 #3]) env={ v19, v20, v21, v19, v20 }
    CheckSmi:23(v20) env={ v19, v20, v21, v19, v20 }
    CheckArrayBound:23(v19, v20) env={ v19, v20, v21, v19, v20 }
    v27 <- StringCharCodeAt:49(v19, v20)
    v25 <- StringFromCharCode:50(v27) env={ v19, v20, v21, v19, v20 }
    Return:24(v25)
B21[target]
    PushArgument:28(v19)
    PushArgument:30(v20)
    PushArgument:32(v21)
    CheckClass:33(v19 IC[1: _OneByteString@0x36924d72 #301]) env={ v19, v20, v21, a0, a1, a2 }
    v24 <- PolymorphicInstanceCall:52(_substringUncheckedNative@0x36924d72, v19, v20, v21 IC[1: _OneByteString@0x36924d72 #301]) env={ v19, v20, v21, a0, a1, a2 }
    Return:34(v24)
     Success
  Depth 2 ----------
  Static Calls (0)
  Closure Calls (0)
  Polymorphic Instance Calls (1)
  => Function '_substringUncheckedNative@0x36924d72':. (deopt count 0)
     Bailout: not inlinable
Inlining growth factor: 0.393443
After Inlining of dart:core__StringBase@0x36924d72_substring
==== dart:core__StringBase@0x36924d72_substring
B0[graph] {
      v0 <- Constant:99(#null)
      v1 <- Parameter:100(0)
      v2 <- Parameter:101(1)
      v3 <- Parameter:102(2)
}
B1[target]
    CheckStackOverflow:2()
    v4 <- Constant:4(#null)
    Branch if StrictCompare:6(===, v3, v4) goto (2, 3)
B2[target]
    CheckClass:10(v1 IC[1: _OneByteString@0x36924d72 #300]) env={ v1, v2, v3, v0, v0, v1 }
    v17 <- LoadField:104(v1, 4, immutable=1) env={ v1, v2, v3, v0, v0, v1 }
    goto:15 4 env={ v1, v2, v17, v0, v0 }
B3[target]
    goto:16 4 env={ v1, v2, v3, v0, v0 }
B4[join] pred(B2, B3) {
      v5 <- phi(v17, v3) alive
}
    v6 <- Constant:18(#0)
    CheckSmi:19(v2) env={ v1, v2, v5, v0, v0, v2, v6 }
    CheckSmi:19(v6) env={ v1, v2, v5, v0, v0, v2, v6 }
    Branch if RelationalOp:19(<, v2, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (7, 5) env={ v1, v2, v5, v0, v0, v2, v6 }
B7[target]
    goto:41 6 env={ v1, v2, v5, v0, v0 }
B5[target]
    CheckClass:24(v1 IC[1: _OneByteString@0x36924d72 #301]) env={ v1, v2, v5, v0, v0, v2, v1 }
    v7 <- LoadField:108(v1, 4, immutable=1) env={ v1, v2, v5, v0, v0, v2, v1 }
    CheckSmi:25(v2) env={ v1, v2, v5, v0, v0, v2, v7 }
    CheckSmi:25(v7) env={ v1, v2, v5, v0, v0, v2, v7 }
    Branch if RelationalOp:25(>, v2, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (8, 9) env={ v1, v2, v5, v0, v0, v2, v7 }
B8[target]
    goto:43 6 env={ v1, v2, v5, v0, v0 }
B6[join] pred(B7, B8)
    v15 <- AllocateObject:28(Library:'dart:core' Class: RangeError)
    PushArgument:30(v15)
    v16 <- Constant:31(#3)
    PushArgument:32(v16)
    PushArgument:34(v2)
    StaticCall:35(RangeError.value v15, v16, v2) env={ v1, v2, v5, v0, v15, a0, a1, a2 }
    PushArgument:37(v15)
    Throw:38()
B9[target]
    v8 <- Constant:46(#0)
    CheckSmi:47(v5) env={ v1, v2, v5, v0, v0, v5, v8 }
    CheckSmi:47(v8) env={ v1, v2, v5, v0, v0, v5, v8 }
    Branch if RelationalOp:47(<, v5, v8 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (12, 10) env={ v1, v2, v5, v0, v0, v5, v8 }
B12[target]
    goto:69 11 env={ v1, v2, v5, v0, v0 }
B10[target]
    CheckClass:52(v1 IC[1: _OneByteString@0x36924d72 #301]) env={ v1, v2, v5, v0, v0, v5, v1 }
    v9 <- LoadField:114(v1, 4, immutable=1) env={ v1, v2, v5, v0, v0, v5, v1 }
    CheckSmi:53(v5) env={ v1, v2, v5, v0, v0, v5, v9 }
    CheckSmi:53(v9) env={ v1, v2, v5, v0, v0, v5, v9 }
    Branch if RelationalOp:53(>, v5, v9 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (13, 14) env={ v1, v2, v5, v0, v0, v5, v9 }
B13[target]
    goto:71 11 env={ v1, v2, v5, v0, v0 }
B11[join] pred(B12, B13)
    v13 <- AllocateObject:56(Library:'dart:core' Class: RangeError)
    PushArgument:58(v13)
    v14 <- Constant:59(#3)
    PushArgument:60(v14)
    PushArgument:62(v5)
    StaticCall:63(RangeError.value v13, v14, v5) env={ v1, v2, v5, v0, v13, a0, a1, a2 }
    PushArgument:65(v13)
    Throw:66()
B14[target]
    CheckSmi:75(v2) env={ v1, v2, v5, v0, v0, v2, v5 }
    CheckSmi:75(v5) env={ v1, v2, v5, v0, v0, v2, v5 }
    Branch if RelationalOp:75(>, v2, v5 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (15, 16) env={ v1, v2, v5, v0, v0, v2, v5 }
B15[target]
    v11 <- AllocateObject:77(Library:'dart:core' Class: RangeError)
    PushArgument:79(v11)
    v12 <- Constant:80(#3)
    PushArgument:81(v12)
    PushArgument:83(v2)
    StaticCall:84(RangeError.value v11, v12, v2) env={ v1, v2, v5, v0, v11, a0, a1, a2 }
    PushArgument:86(v11)
    Throw:87()
B16[target]
    CheckSmi:5(v2) env={ v1, v2, v5, v2, v5 } env={ v1, v2, v5, v0, v0 }
    CheckSmi:5(v5) env={ v1, v2, v5, v2, v5 } env={ v1, v2, v5, v0, v0 }
    Branch if EqualityCompare:5(v2 == v5 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #305]) goto (18, 19) env={ v1, v2, v5, v2, v5 } env={ v1, v2, v5, v0, v0 }
B18[target]
    v26 <- Constant:7(#)
    goto:54 22
B19[target]
    v22 <- Constant:13(#1)
    CheckSmi:15(v2) env={ v1, v2, v5, v2, v22 } env={ v1, v2, v5, v0, v0 }
    CheckSmi:15(v22) env={ v1, v2, v5, v2, v22 } env={ v1, v2, v5, v0, v0 }
    v23 <- BinarySmiOp:15(+, v2, v22) +o env={ v1, v2, v5, v2, v22 } env={ v1, v2, v5, v0, v0 }
    CheckSmi:17(v23) env={ v1, v2, v5, v23, v5 } env={ v1, v2, v5, v0, v0 }
    CheckSmi:17(v5) env={ v1, v2, v5, v23, v5 } env={ v1, v2, v5, v0, v0 }
    Branch if EqualityCompare:17(v23 == v5 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #304]) goto (20, 21) env={ v1, v2, v5, v23, v5 } env={ v1, v2, v5, v0, v0 }
B20[target]
    CheckClass:23(v1 IC[1: _OneByteString@0x36924d72 #3]) env={ v1, v2, v5, v1, v2 } env={ v1, v2, v5, v0, v0 }
    CheckSmi:23(v2) env={ v1, v2, v5, v1, v2 } env={ v1, v2, v5, v0, v0 }
    CheckArrayBound:23(v1, v2) env={ v1, v2, v5, v1, v2 } env={ v1, v2, v5, v0, v0 }
    v27 <- StringCharCodeAt:49(v1, v2)
    v25 <- StringFromCharCode:50(v27) env={ v1, v2, v5, v1, v2 } env={ v1, v2, v5, v0, v0 }
    goto:55 22
B21[target]
    PushArgument:28(v1)
    PushArgument:30(v2)
    PushArgument:32(v5)
    CheckClass:33(v1 IC[1: _OneByteString@0x36924d72 #301]) env={ v1, v2, v5, a0, a1, a2 } env={ v1, v2, v5, v0, v0 }
    v24 <- PolymorphicInstanceCall:52(_substringUncheckedNative@0x36924d72, v1, v2, v5 IC[1: _OneByteString@0x36924d72 #301]) env={ v1, v2, v5, a0, a1, a2 } env={ v1, v2, v5, v0, v0 }
    goto:56 22
B22[join] pred(B18, B20, B21) {
      v28 <- phi(v26, v25, v24) alive
}
    Return:97(v28)
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Replacing v8 with v6
Removing CheckClass
Replacing v9 with v7
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckClass
Removing CheckClass
Removing CheckSmi
After Optimizations:
==== dart:core__StringBase@0x36924d72_substring
  0: B0[graph] {
      v0 <- Constant:99(#null)
      v1 <- Parameter:100(0) {PT: _StringBase@0x36924d72} {PCid: dynamic}
      v2 <- Parameter:101(1) {PT: dynamic} {PCid: dynamic}
      v3 <- Parameter:102(2) {PT: dynamic} {PCid: dynamic}
}
  2: B1[target] ParallelMove eax <- S+2
  4:     CheckStackOverflow:2()
  6:     v4 <- Constant:4(#null) {PT: Null} {PCid: Null}
  8:     Branch if StrictCompare:6(===, v3, v4) goto (2, 3)
 10: B2[target] ParallelMove ecx <- S+0
 12:     CheckClass:10(v1 IC[1: _OneByteString@0x36924d72 #300]) env={ v1 [ecx], v2 [S+1], v3 [eax], v0 [C], v0 [C], v1 [ecx] }
 14:     v17 <- LoadField:104(v1, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
 16:     ParallelMove edx <- eax, eax <- S+1 goto:15 4
 18: B3[target] ParallelMove ecx <- S+0
 20:     ParallelMove edx <- eax, eax <- S+1 goto:16 4
 22: B4[join] pred(B2, B3) {
      v5 <- phi(v17, v3) {PT: dynamic} {PCid: dynamic} alive
}
 23:     ParallelMove S+2 <- edx
 24:     v6 <- Constant:18(#0) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, 0]
 26:     CheckSmi:19(v2) env={ v1 [ecx], v2 [eax], v5 [edx], v0 [C], v0 [C], v2 [eax], v6 [C] }
 28:     Branch if RelationalOp:19(<, v2, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (7, 5)
 30: B7[target]
 32:     goto:41 6
 34: B5[target]
 36:     CheckClass:24(v1 IC[1: _OneByteString@0x36924d72 #301]) env={ v1 [ecx], v2 [eax], v5 [edx], v0 [C], v0 [C], v2 [eax], v1 [ecx] }
 38:     v7 <- LoadField:108(v1, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
 40:     Branch if RelationalOp:25(>, v2, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (8, 9)
 42: B8[target]
 44:     goto:43 6
 46: B6[join] pred(B7, B8)
 48:     v15 <- AllocateObject:28(Library:'dart:core' Class: RangeError) {PT: dynamic} {PCid: dynamic}
 49:     ParallelMove eax <- eax
 50:     ParallelMove S+3 <- eax
 50:     PushArgument:30(v15) {PCid: dynamic}
 52:     v16 <- Constant:31(#3) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [3, 3]
 54:     PushArgument:32(v16) {PCid: dynamic}
 55:     ParallelMove ecx <- S+1
 56:     PushArgument:34(v2) {PCid: dynamic}
 58:     StaticCall:35(RangeError.value v15, v16, v2) {PT: dynamic} {PCid: dynamic} env={ v1 [S+0], v2 [S+1], v5 [S+2], v0 [C], v15 [S+3], a0, a1, a2 }
 59:     ParallelMove eax <- S+3
 60:     PushArgument:37(v15) {PCid: dynamic}
 62:     Throw:38()
 64: B9[target] ParallelMove eax <- edx
 66:     CheckSmi:47(v5) env={ v1 [S+0], v2 [S+1], v5 [eax], v0 [C], v0 [C], v5 [eax], v6 [C] }
 68:     Branch if RelationalOp:47(<, v5, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (12, 10)
 70: B12[target]
 72:     goto:69 11
 74: B10[target]
 76:     Branch if RelationalOp:53(>, v5, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (13, 14)
 78: B13[target]
 80:     goto:71 11
 82: B11[join] pred(B12, B13)
 84:     v13 <- AllocateObject:56(Library:'dart:core' Class: RangeError) {PT: dynamic} {PCid: dynamic}
 85:     ParallelMove eax <- eax
 86:     ParallelMove S+3 <- eax
 86:     PushArgument:58(v13) {PCid: dynamic}
 88:     v14 <- Constant:59(#3) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [3, 3]
 90:     PushArgument:60(v14) {PCid: dynamic}
 91:     ParallelMove ecx <- S+2
 92:     PushArgument:62(v5) {PCid: dynamic}
 94:     StaticCall:63(RangeError.value v13, v14, v5) {PT: dynamic} {PCid: dynamic} env={ v1 [S+0], v2 [S+1], v5 [S+2], v0 [C], v13 [S+3], a0, a1, a2 }
 95:     ParallelMove eax <- S+3
 96:     PushArgument:65(v13) {PCid: dynamic}
 98:     Throw:66()
100: B14[target] ParallelMove ecx <- S+1
102:     Branch if RelationalOp:75(>, v2, v5 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (15, 16)
104: B15[target]
106:     v11 <- AllocateObject:77(Library:'dart:core' Class: RangeError) {PT: dynamic} {PCid: dynamic}
107:     ParallelMove eax <- eax
108:     ParallelMove S+3 <- eax
108:     PushArgument:79(v11) {PCid: dynamic}
110:     v12 <- Constant:80(#3) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [3, 3]
112:     PushArgument:81(v12) {PCid: dynamic}
113:     ParallelMove ecx <- S+1
114:     PushArgument:83(v2) {PCid: dynamic}
116:     StaticCall:84(RangeError.value v11, v12, v2) {PT: dynamic} {PCid: dynamic} env={ v1 [S+0], v2 [S+1], v5 [S+2], v0 [C], v11 [S+3], a0, a1, a2 }
117:     ParallelMove eax <- S+3
118:     PushArgument:86(v11) {PCid: dynamic}
120:     Throw:87()
122: B16[target] ParallelMove eax <- ecx, ecx <- eax
124:     Branch if EqualityCompare:5(v2 == v5 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #305]) goto (18, 19)
126: B18[target]
128:     v26 <- Constant:7(#) {PT: _OneByteString@0x36924d72} {PCid: _OneByteString@0x36924d72}
130:     ParallelMove eax <- C goto:54 22
132: B19[target]
134:     v22 <- Constant:13(#1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, 1]
136:     ParallelMove edx <- eax
136:     v23 <- BinarySmiOp:15(+, v2, v22) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, +inf] +o env={ v1 [S+0], v2 [eax], v5 [ecx], v2 [eax], v22 [C] } env={ v1 [S+0], v2 [eax], v5 [ecx], v0 [C], v0 [C] }
138:     Branch if EqualityCompare:17(v23 == v5 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #304]) goto (20, 21)
140: B20[target] ParallelMove edx <- S+0
142:     CheckArrayBound:23(v1, v2) env={ v1 [edx], v2 [eax], v5 [ecx], v1 [edx], v2 [eax] } env={ v1 [edx], v2 [eax], v5 [ecx], v0 [C], v0 [C] }
144:     v27 <- StringCharCodeAt:49(v1, v2) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
146:     v25 <- StringFromCharCode:50(v27) {PT: String} {PCid: _OneByteString@0x36924d72}
148:     ParallelMove eax <- eax goto:55 22
150: B21[target] ParallelMove edx <- S+0
152:     PushArgument:28(v1) {PCid: dynamic}
154:     PushArgument:30(v2) {PCid: dynamic}
156:     PushArgument:32(v5) {PCid: dynamic}
158:     v24 <- PolymorphicInstanceCall:52(_substringUncheckedNative@0x36924d72, v1, v2, v5 IC[1: _OneByteString@0x36924d72 #301]) {PT: dynamic} {PCid: dynamic} env={ v1 [S+0], v2 [S+1], v5 [S+2], a0, a1, a2 } env={ v1 [S+0], v2 [S+1], v5 [S+2], v0 [C], v0 [C] }
159:     ParallelMove eax <- eax
160:     ParallelMove eax <- eax goto:56 22
162: B22[join] pred(B18, B20, B21) {
      v28 <- phi(v26, v25, v24) {PT: dynamic} {PCid: dynamic} alive
}
163:     ParallelMove eax <- eax
164:     Return:97(v28)
--> patching entry 0xb3004b68
--> 'dart:core__StringBase@0x36924d72_substring' entry: 0xb3009158 time: 2708 us
Code for optimized function 'dart:core__StringBase@0x36924d72_substring' {
        ;; Enter frame
0xb3009158    55                     push ebp
0xb3009159    89e5                   mov ebp,esp
0xb300915b    e800000000             call 0xb3009160
0xb3009160    83ec10                 sub esp,0x10
        ;; Copy parameters
0xb3009163    8b4a0f                 mov ecx,[edx+0xf]
0xb3009166    83f904                 cmp ecx,0x4
0xb3009169    0f8c41000000           jl 0xb30091b0
0xb300916f    83f906                 cmp ecx,0x6
0xb3009172    0f8f38000000           jg 0xb30091b0
0xb3009178    8b5a0b                 mov ebx,[edx+0xb]
0xb300917b    2bd9                   sub ebx,ecx
0xb300917d    8d5c5d08               lea ebx,[ebp+ebx*0x2+0x8]
0xb3009181    8d7dfc                 lea edi,[ebp-0x4]
0xb3009184    2bf9                   sub edi,ecx
0xb3009186    2bf9                   sub edi,ecx
0xb3009188    d1f9                   sar ecx, 1
0xb300918a    eb06                   jmp 0xb3009192
0xb300918c    8b048b                 mov eax,[ebx+ecx*0x4]
0xb300918f    89048f                 mov [edi+ecx*0x4],eax
0xb3009192    49                     dec ecx
0xb3009193    79f7                   jns 0xb300918c
0xb3009195    8b4a0f                 mov ecx,[edx+0xf]
0xb3009198    d1f9                   sar ecx, 1
0xb300919a    83f902                 cmp ecx,0x2
0xb300919d    7f08                   jg 0xb30091a7
0xb300919f    b8190040b5             mov eax,0xb5400019
0xb30091a4    8945f0                 mov [ebp-0x10],eax
0xb30091a7    8b5a0b                 mov ebx,[edx+0xb]
0xb30091aa    d1fb                   sar ebx, 1
0xb30091ac    3bcb                   cmp ecx,ebx
0xb30091ae    7411                   jz 0xb30091c1
0xb30091b0    83c410                 add esp,0x10
0xb30091b3    b9f18829b3             mov ecx,0xb32988f1  'ICData target:'substring' num-checks: 0'
0xb30091b8    e88b703702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb30091bd    89ec                   mov esp,ebp
0xb30091bf    5d                     pop ebp
0xb30091c0    c3                     ret
0xb30091c1    8b4a0b                 mov ecx,[edx+0xb]
0xb30091c4    d1f9                   sar ecx, 1
0xb30091c6    eb08                   jmp 0xb30091d0
0xb30091c8    c7448d08190040b5       mov [ebp+ecx*0x4+0x8],0xb5400019
0xb30091d0    49                     dec ecx
0xb30091d1    79f5                   jns 0xb30091c8
        ;; B0
        ;; B1
0xb30091d3    8b45f0                 mov eax,[ebp-0x10]
        ;; CheckStackOverflow:2()
0xb30091d6    3b25bc195809           cmp esp,[0x95819bc]
0xb30091dc    0f86a2010000           jna 0xb3009384
        ;; v4 <- Constant:4(#null) {PT: Null} {PCid: Null}
        ;; Branch if StrictCompare:6(===, v3, v4) goto (2, 3)
0xb30091e2    3d190040b5             cmp eax, 0xb5400019
0xb30091e7    0f8526000000           jnz 0xb3009213
        ;; B2
0xb30091ed    8b4df8                 mov ecx,[ebp-0x8]
        ;; CheckClass:10(v1 IC[1: _OneByteString@0x36924d72 #300])
0xb30091f0    f6c101                 test_b ecx,0x1
0xb30091f3    0f84a1010000           jz 0xb300939a
0xb30091f9    0fb75101               movzx_w edx,[ecx+0x1]
0xb30091fd    83fa4d                 cmp edx,0x4d
0xb3009200    0f8594010000           jnz 0xb300939a
        ;; v17 <- LoadField:104(v1, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
0xb3009206    8b4103                 mov eax,[ecx+0x3]
        ;; ParallelMove edx <- eax, eax <- S+1 goto:15 4
0xb3009209    89c2                   mov edx,eax
0xb300920b    8b45f4                 mov eax,[ebp-0xc]
0xb300920e    e908000000             jmp 0xb300921b
        ;; B3
0xb3009213    8b4df8                 mov ecx,[ebp-0x8]
        ;; ParallelMove edx <- eax, eax <- S+1 goto:16 4
0xb3009216    89c2                   mov edx,eax
0xb3009218    8b45f4                 mov eax,[ebp-0xc]
        ;; B4
        ;; ParallelMove S+2 <- edx
0xb300921b    8955f0                 mov [ebp-0x10],edx
        ;; v6 <- Constant:18(#0) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, 0]
        ;; CheckSmi:19(v2)
0xb300921e    a801                   test al,0x1
0xb3009220    0f8579010000           jnz 0xb300939f
        ;; Branch if RelationalOp:19(<, v2, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (7, 5)
0xb3009226    83f800                 cmp eax,0
0xb3009229    0f8d05000000           jnl 0xb3009234
        ;; B7
        ;; goto:41 6
0xb300922f    e921000000             jmp 0xb3009255
        ;; B5
        ;; CheckClass:24(v1 IC[1: _OneByteString@0x36924d72 #301])
0xb3009234    f6c101                 test_b ecx,0x1
0xb3009237    0f8467010000           jz 0xb30093a4
0xb300923d    0fb75901               movzx_w ebx,[ecx+0x1]
0xb3009241    83fb4d                 cmp ebx,0x4d
0xb3009244    0f855a010000           jnz 0xb30093a4
        ;; v7 <- LoadField:108(v1, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
0xb300924a    8b5903                 mov ebx,[ecx+0x3]
        ;; Branch if RelationalOp:25(>, v2, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (8, 9)
0xb300924d    3bc3                   cmp eax,ebx
0xb300924f    0f8e34000000           jng 0xb3009289
        ;; B8
        ;; goto:43 6
        ;; B6
        ;; v15 <- AllocateObject:28(Library:'dart:core' Class: RangeError) {PT: dynamic} {PCid: dynamic}
0xb3009255    e85ea0ffff             call 0xb30032b8 [ stub ]
        ;; ParallelMove eax <- eax
        ;; ParallelMove S+3 <- eax
0xb300925a    8945ec                 mov [ebp-0x14],eax
        ;; PushArgument:30(v15) {PCid: dynamic}
0xb300925d    50                     push eax
        ;; v16 <- Constant:31(#3) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [3, 3]
0xb300925e    b906000000             mov ecx,0x6
        ;; PushArgument:32(v16) {PCid: dynamic}
0xb3009263    51                     push ecx
        ;; ParallelMove ecx <- S+1
0xb3009264    8b4df4                 mov ecx,[ebp-0xc]
        ;; PushArgument:34(v2) {PCid: dynamic}
0xb3009267    51                     push ecx
        ;; StaticCall:35(RangeError.value v15, v16, v2) {PT: dynamic} {PCid: dynamic}
0xb3009268    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb300926d    e8b6703702             call 0xb5380328  [stub: CallStaticFunction]
0xb3009272    83c40c                 add esp,0xc
        ;; ParallelMove eax <- S+3
0xb3009275    8b45ec                 mov eax,[ebp-0x14]
        ;; PushArgument:37(v15) {PCid: dynamic}
0xb3009278    50                     push eax
        ;; Throw:38()
0xb3009279    b9a0d70a08             mov ecx,0x80ad7a0
0xb300927e    ba01000000             mov edx,0x1
0xb3009283    e8a06d3702             call 0xb5380028  [stub: CallToRuntime]
0xb3009288    cc                     int3
        ;; B9
0xb3009289    89d0                   mov eax,edx
        ;; CheckSmi:47(v5)
0xb300928b    a801                   test al,0x1
0xb300928d    0f8516010000           jnz 0xb30093a9
        ;; Branch if RelationalOp:47(<, v5, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (12, 10)
0xb3009293    83f800                 cmp eax,0
0xb3009296    0f8d05000000           jnl 0xb30092a1
        ;; B12
        ;; goto:69 11
0xb300929c    e908000000             jmp 0xb30092a9
        ;; B10
        ;; Branch if RelationalOp:53(>, v5, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (13, 14)
0xb30092a1    3bc3                   cmp eax,ebx
0xb30092a3    0f8e34000000           jng 0xb30092dd
        ;; B13
        ;; goto:71 11
        ;; B11
        ;; v13 <- AllocateObject:56(Library:'dart:core' Class: RangeError) {PT: dynamic} {PCid: dynamic}
0xb30092a9    e80aa0ffff             call 0xb30032b8 [ stub ]
        ;; ParallelMove eax <- eax
        ;; ParallelMove S+3 <- eax
0xb30092ae    8945ec                 mov [ebp-0x14],eax
        ;; PushArgument:58(v13) {PCid: dynamic}
0xb30092b1    50                     push eax
        ;; v14 <- Constant:59(#3) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [3, 3]
0xb30092b2    b906000000             mov ecx,0x6
        ;; PushArgument:60(v14) {PCid: dynamic}
0xb30092b7    51                     push ecx
        ;; ParallelMove ecx <- S+2
0xb30092b8    8b4df0                 mov ecx,[ebp-0x10]
        ;; PushArgument:62(v5) {PCid: dynamic}
0xb30092bb    51                     push ecx
        ;; StaticCall:63(RangeError.value v13, v14, v5) {PT: dynamic} {PCid: dynamic}
0xb30092bc    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb30092c1    e862703702             call 0xb5380328  [stub: CallStaticFunction]
0xb30092c6    83c40c                 add esp,0xc
        ;; ParallelMove eax <- S+3
0xb30092c9    8b45ec                 mov eax,[ebp-0x14]
        ;; PushArgument:65(v13) {PCid: dynamic}
0xb30092cc    50                     push eax
        ;; Throw:66()
0xb30092cd    b9a0d70a08             mov ecx,0x80ad7a0
0xb30092d2    ba01000000             mov edx,0x1
0xb30092d7    e84c6d3702             call 0xb5380028  [stub: CallToRuntime]
0xb30092dc    cc                     int3
        ;; B14
0xb30092dd    8b4df4                 mov ecx,[ebp-0xc]
        ;; Branch if RelationalOp:75(>, v2, v5 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #301]) goto (15, 16)
0xb30092e0    3bc8                   cmp ecx,eax
0xb30092e2    0f8e34000000           jng 0xb300931c
        ;; B15
        ;; v11 <- AllocateObject:77(Library:'dart:core' Class: RangeError) {PT: dynamic} {PCid: dynamic}
0xb30092e8    e8cb9fffff             call 0xb30032b8 [ stub ]
        ;; ParallelMove eax <- eax
        ;; ParallelMove S+3 <- eax
0xb30092ed    8945ec                 mov [ebp-0x14],eax
        ;; PushArgument:79(v11) {PCid: dynamic}
0xb30092f0    50                     push eax
        ;; v12 <- Constant:80(#3) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [3, 3]
0xb30092f1    b906000000             mov ecx,0x6
        ;; PushArgument:81(v12) {PCid: dynamic}
0xb30092f6    51                     push ecx
        ;; ParallelMove ecx <- S+1
0xb30092f7    8b4df4                 mov ecx,[ebp-0xc]
        ;; PushArgument:83(v2) {PCid: dynamic}
0xb30092fa    51                     push ecx
        ;; StaticCall:84(RangeError.value v11, v12, v2) {PT: dynamic} {PCid: dynamic}
0xb30092fb    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3009300    e823703702             call 0xb5380328  [stub: CallStaticFunction]
0xb3009305    83c40c                 add esp,0xc
        ;; ParallelMove eax <- S+3
0xb3009308    8b45ec                 mov eax,[ebp-0x14]
        ;; PushArgument:86(v11) {PCid: dynamic}
0xb300930b    50                     push eax
        ;; Throw:87()
0xb300930c    b9a0d70a08             mov ecx,0x80ad7a0
0xb3009311    ba01000000             mov edx,0x1
0xb3009316    e80d6d3702             call 0xb5380028  [stub: CallToRuntime]
0xb300931b    cc                     int3
        ;; B16
0xb300931c    87c8                   xchg ecx,eax
        ;; Branch if EqualityCompare:5(v2 == v5 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #305]) goto (18, 19)
0xb300931e    3bc1                   cmp eax,ecx
0xb3009320    0f850a000000           jnz 0xb3009330
        ;; B18
        ;; v26 <- Constant:7(#) {PT: _OneByteString@0x36924d72} {PCid: _OneByteString@0x36924d72}
        ;; ParallelMove eax <- C goto:54 22
0xb3009326    b8e11240b5             mov eax,0xb54012e1
0xb300932b    e94e000000             jmp 0xb300937e
        ;; B19
        ;; v22 <- Constant:13(#1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, 1]
        ;; ParallelMove edx <- eax
0xb3009330    89c2                   mov edx,eax
        ;; v23 <- BinarySmiOp:15(+, v2, v22) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, +inf] +o
0xb3009332    83c202                 add edx,0x2
0xb3009335    0f8073000000           jo 0xb30093ae
        ;; Branch if EqualityCompare:17(v23 == v5 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #304]) goto (20, 21)
0xb300933b    3bd1                   cmp edx,ecx
0xb300933d    0f8528000000           jnz 0xb300936b
        ;; B20
0xb3009343    8b55f8                 mov edx,[ebp-0x8]
        ;; CheckArrayBound:23(v1, v2)
0xb3009346    3b4203                 cmp eax,[edx+0x3]
0xb3009349    0f8364000000           jnc 0xb30093b3
        ;; v27 <- StringCharCodeAt:49(v1, v2) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
0xb300934f    d1f8                   sar eax, 1
0xb3009351    0fb64c020b             movzx_b ecx,[edx+eax*0x1+0xb]
0xb3009356    03c0                   add eax,eax
0xb3009358    03c9                   add ecx,ecx
        ;; v25 <- StringFromCharCode:50(v27) {PT: String} {PCid: _OneByteString@0x36924d72}
0xb300935a    b8802f6d08             mov eax,0x86d2f80
0xb300935f    8b844804020000         mov eax,[eax+ecx*0x2+0x204]
        ;; ParallelMove eax <- eax goto:55 22
0xb3009366    e913000000             jmp 0xb300937e
        ;; B21
0xb300936b    8b55f8                 mov edx,[ebp-0x8]
        ;; PushArgument:28(v1) {PCid: dynamic}
0xb300936e    52                     push edx
        ;; PushArgument:30(v2) {PCid: dynamic}
0xb300936f    50                     push eax
        ;; PushArgument:32(v5) {PCid: dynamic}
0xb3009370    51                     push ecx
        ;; v24 <- PolymorphicInstanceCall:52(_substringUncheckedNative@0x36924d72, v1, v2, v5 IC[1: _OneByteString@0x36924d72 #301]) {PT: dynamic} {PCid: dynamic}
0xb3009371    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb3009376    e8ad6f3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300937b    83c40c                 add esp,0xc
        ;; ParallelMove eax <- eax
        ;; ParallelMove eax <- eax goto:56 22
        ;; B22
        ;; ParallelMove eax <- eax
        ;; Return:97(v28)
0xb300937e    89ec                   mov esp,ebp
0xb3009380    5d                     pop ebp
0xb3009381    c3                     ret
0xb3009382    90                     nop
0xb3009383    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3009384    50                     push eax
0xb3009385    b970d30a08             mov ecx,0x80ad370
0xb300938a    ba00000000             mov edx,0
0xb300938f    e8946c3702             call 0xb5380028  [stub: CallToRuntime]
0xb3009394    58                     pop eax
0xb3009395    e948feffff             jmp 0xb30091e2
        ;; Deopt stub for id 10
0xb300939a    e8d9703702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 19
0xb300939f    e8d4703702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 24
0xb30093a4    e8cf703702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 47
0xb30093a9    e8ca703702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 15
0xb30093ae    e8c5703702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 23
0xb30093b3    e8c0703702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 33
0xb30093b8    e8bb703702             call 0xb5380478  [stub: Deoptimize]
0xb30093bd    e976703702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30093c2    e951713702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 92 : 0xb30091b4 'ICData target:'substring' num-checks: 0'
 273 : 0xb3009269 'ImmutableArray'
 357 : 0xb30092bd 'ImmutableArray'
 420 : 0xb30092fc 'ImmutableArray'
 463 : 0xb3009327 ''
 538 : 0xb3009372 'ImmutableArray'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_substring' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300925a	other        	-1		13266	-1
0xb3009272	fn-call      	35		13266	-1
0xb3009288	other        	-1		13265	-1
0xb30092ae	other        	-1		13300	-1
0xb30092c6	fn-call      	63		13300	-1
0xb30092dc	other        	-1		13299	-1
0xb30092ed	other        	-1		13322	-1
0xb3009305	fn-call      	84		13322	-1
0xb300931b	other        	-1		13321	-1
0xb300937b	fn-call      	33		13458	-1
0xb3009383	return       	-1		13334	-1
0xb3009394	other        	-1		13217	-1
0xb30093bd	patch        	-1		0	-1
0xb30093c2	lazy-deopt   	-1		0	-1
}
DeoptInfo: {
   0: 0xb300939f  [ret bef oti:0(10)][ecx][const oti:1][const oti:1][eax][s4][ecx][pcmark oti:0][callerfp][callerpc]  (CheckClass)
   1: 0xb30093a4  [ret bef oti:0(19)][const oti:2][eax][const oti:1][const oti:1][edx][eax][suffix 0:4]  (CheckSmi)
   2: 0xb30093a9  [ret bef oti:0(24)][ecx][suffix 1:9]  (CheckClass)
   3: 0xb3009272  [ret aft oti:0(35)][s9][s8][s7][s6][const oti:1][s5][s4][s3][suffix 0:3]  (AtCall)
   4: 0xb30093ae  [ret bef oti:0(47)][const oti:2][eax][const oti:1][const oti:1][eax][suffix 3:5]  (CheckSmi)
   5: 0xb30092c6  [ret aft oti:0(63)][suffix 3:11]  (AtCall)
   6: 0xb3009305  [ret aft oti:0(84)][suffix 3:11]  (AtCall)
   7: 0xb30093b3  [ret bef oti:3(15)][const oti:4][eax][pcmark oti:3][callerfp][ret aft oti:0(96)][ecx][eax][s3][const oti:1][const oti:1][ecx][eax][suffix 3:4]  (BinarySmiOp)
   8: 0xb30093b8  [ret bef oti:3(23)][eax][edx][pcmark oti:3][callerfp][ret aft oti:0(96)][ecx][eax][edx][const oti:1][const oti:1][ecx][eax][edx][suffix 0:3]  (CheckArrayBound)
   9: 0xb30093bd  [ret bef oti:3(33)][s9][s8][s7][pcmark oti:3][callerfp][ret aft oti:0(96)][s5][s4][s3][const oti:1][suffix 3:7]  (PolymorphicInstanceCallTestFail)
  10: 0xb300937b  [ret aft oti:3(33)][suffix 9:17]  (AtCall)
}
Object Table: {
  0: Function 'substring':.
  1: null
  2: 0
  3: Function '_substringUnchecked@0x36924d72':.
  4: 1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_substring' {
0xb30091bd: 
0xb300925a: 1110
0xb3009272: 1111
0xb3009288: 0000
0xb30092ae: 1110
0xb30092c6: 1111
0xb30092dc: 0000
0xb30092ed: 1110
0xb3009305: 1111
0xb300931b: 0000
0xb300937b: 1110
0xb3009394: 11101
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_substring' {
  stack var 'this' offset -2 (valid 12342-13346)
  stack var 'startIndex' offset -3 (valid 13219-13346)
  stack var 'endIndex' offset -4 (valid 13224-13346)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_substring' {
No exception handlers
}
Static call target functions {
  0xb3009272: dart:core_RangeError_RangeError.value, 0xb5400019
  0xb30092c6: dart:core_RangeError_RangeError.value, 0xb5400019
  0xb3009305: dart:core_RangeError_RangeError.value, 0xb5400019
  0xb300937b: dart:core__OneByteString@0x36924d72__substringUncheckedNative@0x36924d72, 0xb5400019
}
PatchStaticCall: patching from 0xb300937b to 'dart:core__OneByteString@0x36924d72__substringUncheckedNative@0x36924d72' 0xb3003b98
Compiling optimized function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' @ token 230
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring
B0[graph] {
      v0 <- Constant:13(#null)
      v1 <- Parameter:14(0)
      v2 <- Parameter:15(1)
      v3 <- Parameter:16(2)
}
B1[target]
    CheckStackOverflow:2()
    PushArgument:4(v2)
    PushArgument:6(v3)
    v4 <- Constant:7(#100)
    PushArgument:8(v4)
    v5 <- InstanceCall:9(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #1000]) env={ v1, v2, v3, a0, a1, a2 }
    PushArgument:10(v5)
    v6 <- InstanceCall:11(substring, v2, v5 IC[1: _OneByteString@0x36924d72 #1000]) env={ v1, v2, v3, a0, a1 }
    Return:12(v6)
Inlining calls in Function 'substring': static.
Before Inlining of file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring
B0[graph] {
      v0 <- Constant:13(#null)
      v1 <- Parameter:14(0)
      v2 <- Parameter:15(1)
      v3 <- Parameter:16(2)
}
B1[target]
    CheckStackOverflow:2()
    PushArgument:4(v2)
    PushArgument:6(v3)
    v4 <- Constant:7(#100)
    PushArgument:8(v4)
    CheckSmi:9(v3) env={ v1, v2, v3, a0, a1, a2 }
    v5 <- PolymorphicInstanceCall:18(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #1000]) env={ v1, v2, v3, a0, a1, a2 }
    PushArgument:10(v5)
    CheckClass:11(v2 IC[1: _OneByteString@0x36924d72 #1000]) env={ v1, v2, v3, a0, a1 }
    v6 <- PolymorphicInstanceCall:20(substring, v2, v5 IC[1: _OneByteString@0x36924d72 #1000]) env={ v1, v2, v3, a0, a1 }
    Return:12(v6)
  Depth 1 ----------
  Static Calls (0)
  Closure Calls (0)
  Polymorphic Instance Calls (2)
  => Function '%':. (deopt count 0)
     Bailout: not inlinable
  => Function 'substring':. (deopt count 0)
     Bailout: not inlinable
After Optimizations:
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring
  0: B0[graph] {
      v0 <- Constant:13(#null)
      v1 <- Parameter:14(0) {PT: dynamic} {PCid: dynamic}
      v2 <- Parameter:15(1) {PT: dynamic} {PCid: dynamic}
      v3 <- Parameter:16(2) {PT: dynamic} {PCid: dynamic}
}
  2: B1[target] ParallelMove ecx <- S-2, eax <- S-1
  4:     CheckStackOverflow:2()
  6:     PushArgument:4(v2) {PCid: dynamic}
  8:     PushArgument:6(v3) {PCid: dynamic}
 10:     v4 <- Constant:7(#100) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [100, 100]
 12:     PushArgument:8(v4) {PCid: dynamic}
 14:     CheckSmi:9(v3) env={ v1 [S-3], v2 [ecx], v3 [eax], a0, a1, a2 }
 16:     v5 <- PolymorphicInstanceCall:18(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #1000]) {PT: dynamic} {PCid: dynamic} env={ v1 [S-3], v2 [S-2], v3 [S-1], a0, a1, a2 }
 17:     ParallelMove eax <- eax
 18:     PushArgument:10(v5) {PCid: dynamic}
 19:     ParallelMove eax <- S-2
 20:     CheckClass:11(v2 IC[1: _OneByteString@0x36924d72 #1000]) env={ v1 [S-3], v2 [eax], v3 [S-1], a0, a1 }
 22:     v6 <- PolymorphicInstanceCall:20(substring, v2, v5 IC[1: _OneByteString@0x36924d72 #1000]) {PT: dynamic} {PCid: dynamic} env={ v1 [S-3], v2 [S-2], v3 [S-1], a0, a1 }
 23:     ParallelMove eax <- eax
 24:     Return:12(v6)
--> patching entry 0xb3008dc8
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' entry: 0xb30093d8 time: 397 us
Code for optimized function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' {
        ;; Enter frame
0xb30093d8    55                     push ebp
0xb30093d9    89e5                   mov ebp,esp
0xb30093db    e800000000             call 0xb30093e0
        ;; Check argument count
0xb30093e0    8b420b                 mov eax,[edx+0xb]
0xb30093e3    83f806                 cmp eax,0x6
0xb30093e6    7505                   jnz 0xb30093ed
0xb30093e8    3b420f                 cmp eax,[edx+0xf]
0xb30093eb    740e                   jz 0xb30093fb
0xb30093ed    b9a99129b3             mov ecx,0xb32991a9  'ICData target:'call' num-checks: 0'
0xb30093f2    e8516e3702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb30093f7    89ec                   mov esp,ebp
0xb30093f9    5d                     pop ebp
0xb30093fa    c3                     ret
        ;; B0
        ;; B1
0xb30093fb    8b4d0c                 mov ecx,[ebp+0xc]
0xb30093fe    8b4508                 mov eax,[ebp+0x8]
        ;; CheckStackOverflow:2()
0xb3009401    3b25bc195809           cmp esp,[0x95819bc]
0xb3009407    0f8649000000           jna 0xb3009456
        ;; PushArgument:4(v2) {PCid: dynamic}
0xb300940d    51                     push ecx
        ;; PushArgument:6(v3) {PCid: dynamic}
0xb300940e    50                     push eax
        ;; v4 <- Constant:7(#100) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [100, 100]
0xb300940f    bac8000000             mov edx,0xc8
        ;; PushArgument:8(v4) {PCid: dynamic}
0xb3009414    52                     push edx
        ;; CheckSmi:9(v3)
0xb3009415    a801                   test al,0x1
0xb3009417    0f854e000000           jnz 0xb300946b
        ;; v5 <- PolymorphicInstanceCall:18(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #1000]) {PT: dynamic} {PCid: dynamic}
0xb300941d    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009422    e8016f3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3009427    83c408                 add esp,0x8
        ;; ParallelMove eax <- eax
        ;; PushArgument:10(v5) {PCid: dynamic}
0xb300942a    50                     push eax
        ;; ParallelMove eax <- S-2
0xb300942b    8b450c                 mov eax,[ebp+0xc]
        ;; CheckClass:11(v2 IC[1: _OneByteString@0x36924d72 #1000])
0xb300942e    a801                   test al,0x1
0xb3009430    0f843f000000           jz 0xb3009475
0xb3009436    0fb74801               movzx_w ecx,[eax+0x1]
0xb300943a    83f94d                 cmp ecx,0x4d
0xb300943d    0f8532000000           jnz 0xb3009475
        ;; v6 <- PolymorphicInstanceCall:20(substring, v2, v5 IC[1: _OneByteString@0x36924d72 #1000]) {PT: dynamic} {PCid: dynamic}
0xb3009443    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009448    e8db6e3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300944d    83c408                 add esp,0x8
        ;; ParallelMove eax <- eax
        ;; Return:12(v6)
0xb3009450    89ec                   mov esp,ebp
0xb3009452    5d                     pop ebp
0xb3009453    c3                     ret
0xb3009454    90                     nop
0xb3009455    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3009456    50                     push eax
0xb3009457    51                     push ecx
0xb3009458    b970d30a08             mov ecx,0x80ad370
0xb300945d    ba00000000             mov edx,0
0xb3009462    e8c16b3702             call 0xb5380028  [stub: CallToRuntime]
0xb3009467    59                     pop ecx
0xb3009468    58                     pop eax
0xb3009469    eba2                   jmp 0xb300940d
        ;; Deopt stub for id 9
0xb300946b    e808703702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 9
0xb3009470    e803703702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 11
0xb3009475    e8fe6f3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 11
0xb300947a    e8f96f3702             call 0xb5380478  [stub: Deoptimize]
0xb300947f    e9b46f3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3009484    e98f703702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb30093ee 'ICData target:'call' num-checks: 0'
 70 : 0xb300941e 'ImmutableArray'
 108 : 0xb3009444 'ImmutableArray'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3009427	fn-call      	9		248	-1
0xb300944d	fn-call      	11		246	-1
0xb3009455	return       	-1		241	-1
0xb3009467	other        	-1		230	-1
0xb300947f	patch        	-1		0	-1
0xb3009484	lazy-deopt   	-1		0	-1
}
DeoptInfo: {
   0: 0xb3009470  [ret bef oti:0(9)][s8][s7][s6][pcmark oti:0][callerfp][callerpc][eax][ecx][s0]  (CheckSmi)
   1: 0xb3009475  [ret bef oti:0(9)][s8][s7][s6][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (PolymorphicInstanceCallTestFail)
   2: 0xb3009427  [ret aft oti:0(9)][s8][s7][s6][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (AtCall)
   3: 0xb300947a  [ret bef oti:0(11)][s7][s6][pcmark oti:0][callerfp][callerpc][s2][eax][s0]  (CheckClass)
   4: 0xb300947f  [ret bef oti:0(11)][s7][s6][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (PolymorphicInstanceCallTestFail)
   5: 0xb300944d  [ret aft oti:0(11)][s7][s6][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (AtCall)
}
Object Table: {
  0: Function 'substring': static.
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' {
0xb30093f7: 
0xb3009427: 
0xb300944d: 
0xb3009467: 11
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' {
  stack var 'init' offset 3 (valid 233-254)
  stack var 'i' offset 2 (valid 238-254)
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_substring_substring' {
No exception handlers
}
Static call target functions {
  0xb3009427: dart:core__IntegerImplementation@0x36924d72_%, 0xb5400019
  0xb300944d: dart:core__StringBase@0x36924d72_substring, 0xb5400019
}
PatchStaticCall: patching from 0xb3009427 to 'dart:core__IntegerImplementation@0x36924d72_%' 0xb3008f38
PatchStaticCall: patching from 0xb300944d to 'dart:core__StringBase@0x36924d72_substring' 0xb3009158
Compiling optimized function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' @ token 173
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString
B0[graph] {
      v0 <- Constant:41(#null)
      v1 <- Parameter:42(0)
      v2 <- Parameter:43(1)
}
B1[target]
    CheckStackOverflow:2()
    v3 <- Constant:3(#0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789)
    v4 <- Constant:5(#0)
    goto:27 2 env={ v1, v2, v0, v3, v4 }
B2[join] pred(B1, B3) {
      v5 <- phi(v0, v6) dead
      v6 <- phi(v4, v10) alive
}
    Branch if RelationalOp:31(<, v6, v2 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #10001]) goto (3, 4) env={ v1, v2, v5, v3, v6, v6, v2 }
B3[target]
    CheckStackOverflow:7()
    PushArgument:9(v1)
    PushArgument:11(v3)
    PushArgument:13(v6)
    v8 <- CurrentContext:14()
    ClosureCall:16(v1, v3, v6) env={ v1, v2, v8, v3, v6, a0, a1, a2 }
    StoreContext:18(v8)
    PushArgument:21(v6)
    v9 <- Constant:22(#1)
    PushArgument:23(v9)
    v10 <- InstanceCall:24(+, v6, v9 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #10000]) env={ v1, v2, v6, v3, v6, a0, a1 }
    goto:28 2 env={ v1, v2, v6, v3, v10 }
B4[target]
    PushArgument:36(v3)
    v7 <- InstanceCall:37(get:length, v3 IC[1: _OneByteString@0x36924d72 #1]) env={ v1, v2, v5, v3, v6, a0 }
    Return:38(v7)
Inlining calls in Function 'hotString': static.
Before Inlining of file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString
B0[graph] {
      v0 <- Constant:41(#null)
      v1 <- Parameter:42(0)
      v2 <- Parameter:43(1)
}
B1[target]
    CheckStackOverflow:2()
    v3 <- Constant:3(#0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789)
    v4 <- Constant:5(#0)
    goto:27 2 env={ v1, v2, v0, v3, v4 }
B2[join] pred(B1, B3) {
      v5 <- phi(v0, v6) dead
      v6 <- phi(v4, v10) alive
}
    CheckSmi:31(v6) env={ v1, v2, v5, v3, v6, v6, v2 }
    CheckSmi:31(v2) env={ v1, v2, v5, v3, v6, v6, v2 }
    Branch if RelationalOp:31(<, v6, v2 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #10001]) goto (3, 4) env={ v1, v2, v5, v3, v6, v6, v2 }
B3[target]
    CheckStackOverflow:7()
    PushArgument:9(v1)
    PushArgument:11(v3)
    PushArgument:13(v6)
    v8 <- CurrentContext:14()
    ClosureCall:16(v1, v3, v6) env={ v1, v2, v8, v3, v6, a0, a1, a2 }
    StoreContext:18(v8)
    v9 <- Constant:22(#1)
    CheckSmi:24(v6) env={ v1, v2, v6, v3, v6, v6, v9 }
    CheckSmi:24(v9) env={ v1, v2, v6, v3, v6, v6, v9 }
    v10 <- BinarySmiOp:24(+, v6, v9) +o env={ v1, v2, v6, v3, v6, v6, v9 }
    goto:28 2 env={ v1, v2, v6, v3, v10 }
B4[target]
    CheckClass:37(v3 IC[1: _OneByteString@0x36924d72 #1]) env={ v1, v2, v5, v3, v6, v3 }
    v7 <- LoadField:50(v3, 4, immutable=1) env={ v1, v2, v5, v3, v6, v3 }
    Return:38(v7)
  Depth 1 ----------
  Static Calls (0)
  Closure Calls (1)
     Bailout: non-closure operator
  Polymorphic Instance Calls (0)
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckClass
Back edge B3 -> B2
  B2
  B4
Hoisting instruction CheckSmi:31 from B2 to B1
Hoisting instruction Constant:22 from B3 to B1
After Optimizations:
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString
  0: B0[graph] {
      v0 <- Constant:41(#null) {PT: Null} {PCid: Null}
      v1 <- Parameter:42(0) {PT: dynamic} {PCid: dynamic}
      v2 <- Parameter:43(1) {PT: dynamic} {PCid: dynamic}
}
  2: B1[target] ParallelMove eax <- S-1
  4:     CheckStackOverflow:2()
  6:     v3 <- Constant:3(#0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789) {PT: _OneByteString@0x36924d72} {PCid: _OneByteString@0x36924d72}
  7:     ParallelMove S+2 <- ecx
  8:     v4 <- Constant:5(#0) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, 0]
 10:     CheckSmi:27(v2) env={ v1 [S-2], v2 [eax], v0 [C], v3 [C], v4 [C] }
 12:     v9 <- Constant:27(#1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, 1]
 14:     ParallelMove ebx <- C, edx <- S-2 goto:27 2
 16: B2[join] pred(B1, B3) {
      v6 <- phi(v4, v10) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} alive [0, 1073741823]
}
 17:     ParallelMove S+1 <- ebx
 18:     Branch if RelationalOp:31(<, v6, v2 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #10001]) goto (3, 4)
 20: B3[target]
 22:     CheckStackOverflow:7()
 24:     PushArgument:9(v1) {PCid: dynamic}
 26:     PushArgument:11(v3) {PCid: dynamic}
 28:     PushArgument:13(v6) {PCid: dynamic}
 30:     v8 <- CurrentContext:14() {PCid: dynamic}
 31:     ParallelMove S+0 <- edi
 32:     ClosureCall:16(v1, v3, v6) {PT: dynamic} {PCid: dynamic} env={ v1 [S-2], v2 [S-1], v8 [S+0], v3 [C], v6 [S+1], a0, a1, a2 }
 33:     ParallelMove esi <- S+0
 34:     StoreContext:18(v8)
 36:     ParallelMove eax <- S+1
 36:     v10 <- BinarySmiOp:24(+, v6, v9) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, v11] -o
 38:     ParallelMove ebx <- eax, edx <- S-2, eax <- S-1, ecx <- S+2 goto:28 2
 40: B4[target] ParallelMove eax <- ecx
 42:     v7 <- LoadField:50(v3, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
 43:     ParallelMove eax <- ecx
 44:     Return:38(v7)
--> patching entry 0xb3008c88
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' entry: 0xb30094a8 time: 671 us
Code for optimized function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' {
        ;; Enter frame
0xb30094a8    55                     push ebp
0xb30094a9    89e5                   mov ebp,esp
0xb30094ab    e800000000             call 0xb30094b0
0xb30094b0    83ec0c                 sub esp,0xc
        ;; B0
        ;; B1
0xb30094b3    8b4508                 mov eax,[ebp+0x8]
        ;; CheckStackOverflow:2()
0xb30094b6    3b25bc195809           cmp esp,[0x95819bc]
0xb30094bc    0f8664000000           jna 0xb3009526
        ;; v3 <- Constant:3(#0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789) {PT: _OneByteString@0x36924d72} {PCid: _OneByteString@0x36924d72}
0xb30094c2    b9515329b3             mov ecx,0xb3295351  '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789'
        ;; ParallelMove S+2 <- ecx
0xb30094c7    894df0                 mov [ebp-0x10],ecx
        ;; v4 <- Constant:5(#0) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, 0]
        ;; CheckSmi:27(v2)
0xb30094ca    a801                   test al,0x1
0xb30094cc    0f8580000000           jnz 0xb3009552
        ;; v9 <- Constant:27(#1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, 1]
        ;; ParallelMove ebx <- C, edx <- S-2 goto:27 2
0xb30094d2    8b550c                 mov edx,[ebp+0xc]
0xb30094d5    33db                   xor ebx,ebx
        ;; B2
        ;; ParallelMove S+1 <- ebx
0xb30094d7    895df4                 mov [ebp-0xc],ebx
        ;; Branch if RelationalOp:31(<, v6, v2 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #10001]) goto (3, 4)
0xb30094da    3bd8                   cmp ebx,eax
0xb30094dc    0f8d37000000           jnl 0xb3009519
        ;; B3
        ;; CheckStackOverflow:7()
0xb30094e2    3b25bc195809           cmp esp,[0x95819bc]
0xb30094e8    0f864b000000           jna 0xb3009539
        ;; PushArgument:9(v1) {PCid: dynamic}
0xb30094ee    52                     push edx
        ;; PushArgument:11(v3) {PCid: dynamic}
0xb30094ef    51                     push ecx
        ;; PushArgument:13(v6) {PCid: dynamic}
0xb30094f0    53                     push ebx
        ;; v8 <- CurrentContext:14() {PCid: dynamic}
0xb30094f1    89f7                   mov edi,esi
        ;; ParallelMove S+0 <- edi
0xb30094f3    897df8                 mov [ebp-0x8],edi
        ;; ClosureCall:16(v1, v3, v6) {PT: dynamic} {PCid: dynamic}
0xb30094f6    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb30094fb    e8686e3702             call 0xb5380368  [stub: CallClosureFunction]
0xb3009500    83c40c                 add esp,0xc
        ;; ParallelMove esi <- S+0
0xb3009503    8b75f8                 mov esi,[ebp-0x8]
        ;; StoreContext:18(v8)
        ;; ParallelMove eax <- S+1
0xb3009506    8b45f4                 mov eax,[ebp-0xc]
        ;; v10 <- BinarySmiOp:24(+, v6, v9) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, v11] -o
0xb3009509    83c002                 add eax,0x2
        ;; ParallelMove ebx <- eax, edx <- S-2, eax <- S-1, ecx <- S+2 goto:28 2
0xb300950c    89c3                   mov ebx,eax
0xb300950e    8b550c                 mov edx,[ebp+0xc]
0xb3009511    8b4508                 mov eax,[ebp+0x8]
0xb3009514    8b4df0                 mov ecx,[ebp-0x10]
0xb3009517    ebbe                   jmp 0xb30094d7
        ;; B4
0xb3009519    89c8                   mov eax,ecx
        ;; v7 <- LoadField:50(v3, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
0xb300951b    8b4803                 mov ecx,[eax+0x3]
        ;; ParallelMove eax <- ecx
0xb300951e    89c8                   mov eax,ecx
        ;; Return:38(v7)
0xb3009520    89ec                   mov esp,ebp
0xb3009522    5d                     pop ebp
0xb3009523    c3                     ret
0xb3009524    90                     nop
0xb3009525    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3009526    50                     push eax
0xb3009527    b970d30a08             mov ecx,0x80ad370
0xb300952c    ba00000000             mov edx,0
0xb3009531    e8f26a3702             call 0xb5380028  [stub: CallToRuntime]
0xb3009536    58                     pop eax
0xb3009537    eb89                   jmp 0xb30094c2
        ;; CheckStackOverflowSlowPath
0xb3009539    50                     push eax
0xb300953a    51                     push ecx
0xb300953b    52                     push edx
0xb300953c    53                     push ebx
0xb300953d    b970d30a08             mov ecx,0x80ad370
0xb3009542    ba00000000             mov edx,0
0xb3009547    e8dc6a3702             call 0xb5380028  [stub: CallToRuntime]
0xb300954c    5b                     pop ebx
0xb300954d    5a                     pop edx
0xb300954e    59                     pop ecx
0xb300954f    58                     pop eax
0xb3009550    eb9c                   jmp 0xb30094ee
        ;; Deopt stub for id 27
0xb3009552    e8216f3702             call 0xb5380478  [stub: Deoptimize]
0xb3009557    e9dc6e3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300955c    e9b76f3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 27 : 0xb30094c3 '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789'
 79 : 0xb30094f7 'ImmutableArray'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3009500	other        	16		211	-1
0xb3009525	return       	-1		219	-1
0xb3009536	other        	-1		173	-1
0xb300954c	other        	-1		192	-1
0xb3009557	patch        	-1		0	-1
0xb300955c	lazy-deopt   	-1		0	-1
}
DeoptInfo: {
   0: 0xb3009557  [ret bef oti:0(27)][const oti:1][const oti:2][const oti:3][pcmark oti:0][callerfp][callerpc][eax][s0]  (CheckSmi)
   1: 0xb3009500  [ret aft oti:0(16)][s10][s9][s8][s6][const oti:2][s5][pcmark oti:0][callerfp][callerpc][s1][s0]  (AtCall)
}
Object Table: {
  0: Function 'hotString': static.
  1: 0
  2: 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
  3: null
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' {
0xb3009500: 111
0xb3009536: 0001
0xb300954c: 0111111
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' {
  stack var 'func' offset 3 (valid 175-227)
  stack var 'N' offset 2 (valid 180-227)
  stack var 'ret' offset -3 (valid 186-227)
  stack var 'i' offset -4 (valid 196-219)
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb30088a3 to 'dart:core_Date_Date.now' 0xb30089f8
Compiling function: 'dart:core__DateImpl@0x36924d72_difference' @ token 2084
Before Optimizations
==== dart:core__DateImpl@0x36924d72_difference
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:millisecondsSinceEpoch, t0)
    StoreLocal:6(ms, t0, lvl: 0)
    t0 <- LoadLocal:7(other lvl:0)
    PushArgument:8(t0)
    t0 <- InstanceCall:9(get:millisecondsSinceEpoch, t0)
    StoreLocal:10(otherMs, t0, lvl: 0)
    t0 <- AllocateObject:11(Library:'dart:core' Class: Duration)
    t0 <- StoreLocal:12(:alloc2109, t0, lvl: 0)
    PushArgument:13(t0)
    t0 <- Constant:14(#3)
    PushArgument:15(t0)
    t0 <- LoadLocal:16(ms lvl:0)
    PushArgument:17(t0)
    t0 <- LoadLocal:18(otherMs lvl:0)
    PushArgument:19(t0)
    t0 <- InstanceCall:20(-, t0, t0)
    PushArgument:21(t0)
    StaticCall:22(Duration. t0, t0, t0)
    t0 <- LoadLocal:23(:alloc2109 lvl:0)
    Return:24(t0)
Code for allocation stub 'Library:'dart:core' Class: Duration': {
0xb3009578    8b0508fe5609           mov eax,[0x956fe08]
0xb300957e    8d5810                 lea ebx,[eax+0x10]
0xb3009581    3b1d0cfe5609           cmp ebx,[0x956fe0c]
0xb3009587    732a                   jnc 0xb30095b3
0xb3009589    891d08fe5609           mov [0x956fe08],ebx
0xb300958f    bac9fb19b3             mov edx,0xb319fbc9  'Library:'dart:core' Class: Duration'
0xb3009594    c7000002ba00           mov [eax],0xba0200
0xb300959a    c74004190040b5         mov [eax+0x4],0xb5400019
0xb30095a1    c74008190040b5         mov [eax+0x8],0xb5400019
0xb30095a8    c7400c190040b5         mov [eax+0xc],0xb5400019
0xb30095af    83c001                 add eax,0x1
0xb30095b2    c3                     ret
0xb30095b3    55                     push ebp
0xb30095b4    89e5                   mov ebp,esp
0xb30095b6    6800000000             push 0
0xb30095bb    68190040b5             push 0xb5400019
0xb30095c0    68c9fb19b3             push 0xb319fbc9
0xb30095c5    68190040b5             push 0xb5400019
0xb30095ca    6800000000             push 0
0xb30095cf    b9d0080b08             mov ecx,0x80b08d0
0xb30095d4    ba03000000             mov edx,0x3
0xb30095d9    e84a6a3702             call 0xb5380028  [stub: CallToRuntime]
0xb30095de    58                     pop eax
0xb30095df    58                     pop eax
0xb30095e0    58                     pop eax
0xb30095e1    58                     pop eax
0xb30095e2    89ec                   mov esp,ebp
0xb30095e4    5d                     pop ebp
0xb30095e5    c3                     ret
}
--> 'dart:core__DateImpl@0x36924d72_difference' entry: 0xb30095f8 time: 1076 us
Code for function 'dart:core__DateImpl@0x36924d72_difference' {
        ;; Enter frame
0xb30095f8    55                     push ebp
0xb30095f9    89e5                   mov ebp,esp
0xb30095fb    e800000000             call 0xb3009600
0xb3009600    83ec0c                 sub esp,0xc
        ;; Initialize spill slots
0xb3009603    b8190040b5             mov eax,0xb5400019
0xb3009608    8945f8                 mov [ebp-0x8],eax
0xb300960b    8945f4                 mov [ebp-0xc],eax
0xb300960e    8945f0                 mov [ebp-0x10],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3009611    3b25bc195809           cmp esp,[0x95819bc]
0xb3009617    0f8690000000           jna 0xb30096ad
        ;; t0 <- LoadLocal:3(this lvl:0)
0xb300961d    8b450c                 mov eax,[ebp+0xc]
0xb3009620    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:millisecondsSinceEpoch, t0)
0xb3009621    b9899a29b3             mov ecx,0xb3299a89  'ICData target:'get:millisecondsSinceEpoch' num-checks: 0'
0xb3009626    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300962b    e8e86bffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3009630    83c404                 add esp,0x4
0xb3009633    50                     push eax
        ;; StoreLocal:6(ms, t0, lvl: 0)
0xb3009634    58                     pop eax
0xb3009635    8945f8                 mov [ebp-0x8],eax
        ;; t0 <- LoadLocal:7(other lvl:0)
0xb3009638    8b4508                 mov eax,[ebp+0x8]
0xb300963b    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- InstanceCall:9(get:millisecondsSinceEpoch, t0)
0xb300963c    b9d99a29b3             mov ecx,0xb3299ad9  'ICData target:'get:millisecondsSinceEpoch' num-checks: 0'
0xb3009641    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3009646    e8cd6bffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300964b    83c404                 add esp,0x4
0xb300964e    50                     push eax
        ;; StoreLocal:10(otherMs, t0, lvl: 0)
0xb300964f    58                     pop eax
0xb3009650    8945f4                 mov [ebp-0xc],eax
        ;; t0 <- AllocateObject:11(Library:'dart:core' Class: Duration)
0xb3009653    e820ffffff             call 0xb3009578 [ stub ]
0xb3009658    50                     push eax
        ;; t0 <- StoreLocal:12(:alloc2109, t0, lvl: 0)
0xb3009659    58                     pop eax
0xb300965a    8945f0                 mov [ebp-0x10],eax
0xb300965d    50                     push eax
        ;; PushArgument:13(t0)
        ;; t0 <- Constant:14(#3)
0xb300965e    b806000000             mov eax,0x6
0xb3009663    50                     push eax
        ;; PushArgument:15(t0)
        ;; t0 <- LoadLocal:16(ms lvl:0)
0xb3009664    8b45f8                 mov eax,[ebp-0x8]
0xb3009667    50                     push eax
        ;; PushArgument:17(t0)
        ;; t0 <- LoadLocal:18(otherMs lvl:0)
0xb3009668    8b45f4                 mov eax,[ebp-0xc]
0xb300966b    50                     push eax
        ;; PushArgument:19(t0)
        ;; t0 <- InstanceCall:20(-, t0, t0)
0xb300966c    b9699b29b3             mov ecx,0xb3299b69  'ICData target:'-' num-checks: 0'
0xb3009671    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009676    e85d6cffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300967b    83c408                 add esp,0x8
0xb300967e    50                     push eax
        ;; PushArgument:21(t0)
        ;; StaticCall:22(Duration. t0, t0, t0)
0xb300967f    bac19b29b3             mov edx,0xb3299bc1  Array[3, 2, milliseconds, 2, null]
0xb3009684    e89f6c3702             call 0xb5380328  [stub: CallStaticFunction]
0xb3009689    83c40c                 add esp,0xc
        ;; t0 <- LoadLocal:23(:alloc2109 lvl:0)
0xb300968c    8b45f0                 mov eax,[ebp-0x10]
0xb300968f    50                     push eax
        ;; Return:24(t0)
0xb3009690    58                     pop eax
0xb3009691    baa9ba12b3             mov edx,0xb312baa9  'Function 'difference':.'
0xb3009696    ff422b                 inc [edx+0x2b]
0xb3009699    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30096a0    7c05                   jl 0xb30096a7
0xb30096a2    e81172ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30096a7    89ec                   mov esp,ebp
0xb30096a9    5d                     pop ebp
0xb30096aa    c3                     ret
0xb30096ab    90                     nop
0xb30096ac    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30096ad    b970d30a08             mov ecx,0x80ad370
0xb30096b2    ba00000000             mov edx,0
0xb30096b7    e86c693702             call 0xb5380028  [stub: CallToRuntime]
0xb30096bc    e95cffffff             jmp 0xb300961d
0xb30096c1    e9726d3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30096c6    e94d6e3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 42 : 0xb3009622 'ICData target:'get:millisecondsSinceEpoch' num-checks: 0'
 47 : 0xb3009627 'ImmutableArray'
 69 : 0xb300963d 'ICData target:'get:millisecondsSinceEpoch' num-checks: 0'
 74 : 0xb3009642 'ImmutableArray'
 117 : 0xb300966d 'ICData target:'-' num-checks: 0'
 122 : 0xb3009672 'ImmutableArray'
 136 : 0xb3009680 'ImmutableArray'
 154 : 0xb3009692 'Function 'difference':.'
}
PC Descriptors for function 'dart:core__DateImpl@0x36924d72_difference' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3009621	deopt-before 	5		2095	-1
0xb3009630	ic-call      	5		2095	-1
0xb3009630	deopt-after  	5		2095	-1
0xb300963c	deopt-before 	9		2105	-1
0xb300964b	ic-call      	9		2105	-1
0xb300964b	deopt-after  	9		2105	-1
0xb3009658	other        	-1		2109	-1
0xb300966c	deopt-before 	20		2118	-1
0xb300967b	ic-call      	20		2118	-1
0xb300967b	deopt-after  	20		2118	-1
0xb3009689	fn-call      	22		2109	-1
0xb3009689	deopt-after  	22		2109	-1
0xb30096a7	other        	-1		0	-1
0xb30096ac	return       	-1		2108	-1
0xb30096bc	other        	-1		2084	-1
0xb30096c1	patch        	-1		0	-1
0xb30096c6	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__DateImpl@0x36924d72_difference' {
}
Variable Descriptors for function 'dart:core__DateImpl@0x36924d72_difference' {
  stack var 'this' offset 3 (valid 932-2124)
  stack var 'other' offset 2 (valid 2087-2124)
  stack var 'ms' offset -2 (valid 2092-2124)
  stack var 'otherMs' offset -3 (valid 2099-2124)
}
Exception Handlers for function 'dart:core__DateImpl@0x36924d72_difference' {
No exception handlers
}
Static call target functions {
  0xb3009689: dart:core_Duration_Duration., 0xb5400019
}
Compiling function: 'dart:core__DateImpl@0x36924d72_get_millisecondsSinceEpoch' @ token 930
Before Optimizations
==== dart:core__DateImpl@0x36924d72_get_millisecondsSinceEpoch
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 8, immutable=0)
    Return:5(t0)
--> 'dart:core__DateImpl@0x36924d72_get_millisecondsSinceEpoch' entry: 0xb30096e8 time: 46 us
Code for function 'dart:core__DateImpl@0x36924d72_get_millisecondsSinceEpoch' {
0xb30096e8    8b442404               mov eax,[esp+0x4]
0xb30096ec    8b4007                 mov eax,[eax+0x7]
0xb30096ef    c3                     ret
0xb30096f0    cc                     int3
0xb30096f1    e9426d3702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core__DateImpl@0x36924d72_get_millisecondsSinceEpoch' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core__DateImpl@0x36924d72_get_millisecondsSinceEpoch' {
}
Variable Descriptors for function 'dart:core__DateImpl@0x36924d72_get_millisecondsSinceEpoch' {
  stack var 'this' offset 2 (valid 932-930)
}
Exception Handlers for function 'dart:core__DateImpl@0x36924d72_get_millisecondsSinceEpoch' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__IntegerImplementation@0x36924d72__subFromInteger@0x36924d72' @ token 9216
Before Optimizations
==== dart:core__IntegerImplementation@0x36924d72__subFromInteger@0x36924d72
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(Integer_subFromInteger)
    Return:4(t0)
--> 'dart:core__IntegerImplementation@0x36924d72__subFromInteger@0x36924d72' entry: 0xb3009708 time: 79 us
Code for function 'dart:core__IntegerImplementation@0x36924d72__subFromInteger@0x36924d72' {
0xb3009708    8b442404               mov eax,[esp+0x4]
0xb300970c    8b5c2408               mov ebx,[esp+0x8]
0xb3009710    0bd8                   or ebx,eax
0xb3009712    f6c301                 test_b ebx,0x1
0xb3009715    7507                   jnz 0xb300971e
0xb3009717    2b442408               sub eax,[esp+0x8]
0xb300971b    7001                   jo 0xb300971e
0xb300971d    c3                     ret
        ;; Enter frame
0xb300971e    55                     push ebp
0xb300971f    89e5                   mov ebp,esp
0xb3009721    e800000000             call 0xb3009726
0xb3009726    830424ea               add [esp],0xea
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300972a    3b25bc195809           cmp esp,[0x95819bc]
0xb3009730    0f8628000000           jna 0xb300975e
        ;; t0 <- NativeCall:3(Integer_subFromInteger)
0xb3009736    68190040b5             push 0xb5400019
0xb300973b    8d450c                 lea eax,[ebp+0xc]
0xb300973e    b9503d4508             mov ecx,0x8453d50
0xb3009743    ba02000001             mov edx,0x1000002
0xb3009748    e8db693702             call 0xb5380128  [stub: CallNativeCFunction]
0xb300974d    58                     pop eax
0xb300974e    50                     push eax
        ;; Return:4(t0)
0xb300974f    58                     pop eax
0xb3009750    ba81681ab3             mov edx,0xb31a6881  'Function '_subFromInteger@0x36924d72':.'
0xb3009755    ff422b                 inc [edx+0x2b]
0xb3009758    89ec                   mov esp,ebp
0xb300975a    5d                     pop ebp
0xb300975b    c3                     ret
0xb300975c    90                     nop
0xb300975d    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300975e    b970d30a08             mov ecx,0x80ad370
0xb3009763    ba00000000             mov edx,0
0xb3009768    e8bb683702             call 0xb5380028  [stub: CallToRuntime]
0xb300976d    ebc7                   jmp 0xb3009736
0xb300976f    e9c46c3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3009774    e99f6d3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 73 : 0xb3009751 'Function '_subFromInteger@0x36924d72':.'
}
PC Descriptors for function 'dart:core__IntegerImplementation@0x36924d72__subFromInteger@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300974d	other        	-1		9225	-1
0xb300975d	return       	-1		9225	-1
0xb300976d	other        	-1		9216	-1
0xb300976f	patch        	-1		0	-1
0xb3009774	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__IntegerImplementation@0x36924d72__subFromInteger@0x36924d72' {
}
Variable Descriptors for function 'dart:core__IntegerImplementation@0x36924d72__subFromInteger@0x36924d72' {
  stack var 'this' offset 3 (valid 8886-9225)
  stack var 'other' offset 2 (valid 9218-9225)
}
Exception Handlers for function 'dart:core__IntegerImplementation@0x36924d72__subFromInteger@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core_Duration_Duration.' @ token 2600
Compiling function: 'dart:core_Duration_get_MILLISECONDS_PER_DAY' @ token 2547
Compiling function: 'dart:core_Duration_get_MILLISECONDS_PER_HOUR' @ token 2535
Compiling function: 'dart:core_Duration_get_MILLISECONDS_PER_MINUTE' @ token 2523
Before Optimizations
==== dart:core_Duration_get_MILLISECONDS_PER_MINUTE
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#1000)
    PushArgument:4(t0)
    t0 <- Constant:5(#60)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(*, t0, t0)
    Return:8(t0)
--> 'dart:core_Duration_get_MILLISECONDS_PER_MINUTE' entry: 0xb3009798 time: 79 us
Code for function 'dart:core_Duration_get_MILLISECONDS_PER_MINUTE' {
        ;; Enter frame
0xb3009798    55                     push ebp
0xb3009799    89e5                   mov ebp,esp
0xb300979b    e800000000             call 0xb30097a0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30097a0    3b25bc195809           cmp esp,[0x95819bc]
0xb30097a6    0f863c000000           jna 0xb30097e8
        ;; t0 <- Constant:3(#1000)
0xb30097ac    b8d0070000             mov eax,0x7d0
0xb30097b1    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#60)
0xb30097b2    b878000000             mov eax,0x78
0xb30097b7    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(*, t0, t0)
0xb30097b8    b9c1a129b3             mov ecx,0xb329a1c1  'ICData target:'*' num-checks: 0'
0xb30097bd    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30097c2    e8116bffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30097c7    83c408                 add esp,0x8
0xb30097ca    50                     push eax
        ;; Return:8(t0)
0xb30097cb    58                     pop eax
0xb30097cc    ba319a12b3             mov edx,0xb3129a31  'Function 'get:MILLISECONDS_PER_MINUTE': static const-getter const.'
0xb30097d1    ff422b                 inc [edx+0x2b]
0xb30097d4    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30097db    7c05                   jl 0xb30097e2
0xb30097dd    e8d670ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30097e2    89ec                   mov esp,ebp
0xb30097e4    5d                     pop ebp
0xb30097e5    c3                     ret
0xb30097e6    90                     nop
0xb30097e7    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30097e8    b970d30a08             mov ecx,0x80ad370
0xb30097ed    ba00000000             mov edx,0
0xb30097f2    e831683702             call 0xb5380028  [stub: CallToRuntime]
0xb30097f7    ebb3                   jmp 0xb30097ac
0xb30097f9    e93a6c3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30097fe    e9156d3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 33 : 0xb30097b9 'ICData target:'*' num-checks: 0'
 38 : 0xb30097be 'ImmutableArray'
 53 : 0xb30097cd 'Function 'get:MILLISECONDS_PER_MINUTE': static const-getter const.'
}
PC Descriptors for function 'dart:core_Duration_get_MILLISECONDS_PER_MINUTE' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30097b8	deopt-before 	7		2528	-1
0xb30097c7	ic-call      	7		2528	-1
0xb30097c7	deopt-after  	7		2528	-1
0xb30097e2	other        	-1		0	-1
0xb30097e7	return       	-1		2531	-1
0xb30097f7	other        	-1		2523	-1
0xb30097f9	patch        	-1		0	-1
0xb30097fe	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_Duration_get_MILLISECONDS_PER_MINUTE' {
}
Variable Descriptors for function 'dart:core_Duration_get_MILLISECONDS_PER_MINUTE' {
}
Exception Handlers for function 'dart:core_Duration_get_MILLISECONDS_PER_MINUTE' {
No exception handlers
}
Static call target functions {
}
Before Optimizations
==== dart:core_Duration_get_MILLISECONDS_PER_HOUR
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#60000)
    PushArgument:4(t0)
    t0 <- Constant:5(#60)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(*, t0, t0)
    Return:8(t0)
--> 'dart:core_Duration_get_MILLISECONDS_PER_HOUR' entry: 0xb3009818 time: 954 us
Code for function 'dart:core_Duration_get_MILLISECONDS_PER_HOUR' {
        ;; Enter frame
0xb3009818    55                     push ebp
0xb3009819    89e5                   mov ebp,esp
0xb300981b    e800000000             call 0xb3009820
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3009820    3b25bc195809           cmp esp,[0x95819bc]
0xb3009826    0f863c000000           jna 0xb3009868
        ;; t0 <- Constant:3(#60000)
0xb300982c    b8c0d40100             mov eax,0x1d4c0
0xb3009831    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#60)
0xb3009832    b878000000             mov eax,0x78
0xb3009837    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(*, t0, t0)
0xb3009838    b989a329b3             mov ecx,0xb329a389  'ICData target:'*' num-checks: 0'
0xb300983d    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009842    e8916affff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009847    83c408                 add esp,0x8
0xb300984a    50                     push eax
        ;; Return:8(t0)
0xb300984b    58                     pop eax
0xb300984c    ba699a12b3             mov edx,0xb3129a69  'Function 'get:MILLISECONDS_PER_HOUR': static const-getter const.'
0xb3009851    ff422b                 inc [edx+0x2b]
0xb3009854    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300985b    7c05                   jl 0xb3009862
0xb300985d    e85670ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3009862    89ec                   mov esp,ebp
0xb3009864    5d                     pop ebp
0xb3009865    c3                     ret
0xb3009866    90                     nop
0xb3009867    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3009868    b970d30a08             mov ecx,0x80ad370
0xb300986d    ba00000000             mov edx,0
0xb3009872    e8b1673702             call 0xb5380028  [stub: CallToRuntime]
0xb3009877    ebb3                   jmp 0xb300982c
0xb3009879    e9ba6b3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300987e    e9956c3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 33 : 0xb3009839 'ICData target:'*' num-checks: 0'
 38 : 0xb300983e 'ImmutableArray'
 53 : 0xb300984d 'Function 'get:MILLISECONDS_PER_HOUR': static const-getter const.'
}
PC Descriptors for function 'dart:core_Duration_get_MILLISECONDS_PER_HOUR' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3009838	deopt-before 	7		2540	-1
0xb3009847	ic-call      	7		2540	-1
0xb3009847	deopt-after  	7		2540	-1
0xb3009862	other        	-1		0	-1
0xb3009867	return       	-1		2543	-1
0xb3009877	other        	-1		2535	-1
0xb3009879	patch        	-1		0	-1
0xb300987e	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_Duration_get_MILLISECONDS_PER_HOUR' {
}
Variable Descriptors for function 'dart:core_Duration_get_MILLISECONDS_PER_HOUR' {
}
Exception Handlers for function 'dart:core_Duration_get_MILLISECONDS_PER_HOUR' {
No exception handlers
}
Static call target functions {
}
Before Optimizations
==== dart:core_Duration_get_MILLISECONDS_PER_DAY
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#3600000)
    PushArgument:4(t0)
    t0 <- Constant:5(#24)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(*, t0, t0)
    Return:8(t0)
--> 'dart:core_Duration_get_MILLISECONDS_PER_DAY' entry: 0xb3009898 time: 1787 us
Code for function 'dart:core_Duration_get_MILLISECONDS_PER_DAY' {
        ;; Enter frame
0xb3009898    55                     push ebp
0xb3009899    89e5                   mov ebp,esp
0xb300989b    e800000000             call 0xb30098a0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb30098a0    3b25bc195809           cmp esp,[0x95819bc]
0xb30098a6    0f863c000000           jna 0xb30098e8
        ;; t0 <- Constant:3(#3600000)
0xb30098ac    b800dd6d00             mov eax,0x6ddd00
0xb30098b1    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#24)
0xb30098b2    b830000000             mov eax,0x30
0xb30098b7    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(*, t0, t0)
0xb30098b8    b951a529b3             mov ecx,0xb329a551  'ICData target:'*' num-checks: 0'
0xb30098bd    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb30098c2    e8116affff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb30098c7    83c408                 add esp,0x8
0xb30098ca    50                     push eax
        ;; Return:8(t0)
0xb30098cb    58                     pop eax
0xb30098cc    baa19a12b3             mov edx,0xb3129aa1  'Function 'get:MILLISECONDS_PER_DAY': static const-getter const.'
0xb30098d1    ff422b                 inc [edx+0x2b]
0xb30098d4    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb30098db    7c05                   jl 0xb30098e2
0xb30098dd    e8d66fffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb30098e2    89ec                   mov esp,ebp
0xb30098e4    5d                     pop ebp
0xb30098e5    c3                     ret
0xb30098e6    90                     nop
0xb30098e7    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb30098e8    b970d30a08             mov ecx,0x80ad370
0xb30098ed    ba00000000             mov edx,0
0xb30098f2    e831673702             call 0xb5380028  [stub: CallToRuntime]
0xb30098f7    ebb3                   jmp 0xb30098ac
0xb30098f9    e93a6b3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb30098fe    e9156c3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 33 : 0xb30098b9 'ICData target:'*' num-checks: 0'
 38 : 0xb30098be 'ImmutableArray'
 53 : 0xb30098cd 'Function 'get:MILLISECONDS_PER_DAY': static const-getter const.'
}
PC Descriptors for function 'dart:core_Duration_get_MILLISECONDS_PER_DAY' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb30098b8	deopt-before 	7		2552	-1
0xb30098c7	ic-call      	7		2552	-1
0xb30098c7	deopt-after  	7		2552	-1
0xb30098e2	other        	-1		0	-1
0xb30098e7	return       	-1		2555	-1
0xb30098f7	other        	-1		2547	-1
0xb30098f9	patch        	-1		0	-1
0xb30098fe	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_Duration_get_MILLISECONDS_PER_DAY' {
}
Variable Descriptors for function 'dart:core_Duration_get_MILLISECONDS_PER_DAY' {
}
Exception Handlers for function 'dart:core_Duration_get_MILLISECONDS_PER_DAY' {
No exception handlers
}
Static call target functions {
}
Before Optimizations
==== dart:core_Duration_Duration.
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(:phase lvl:0)
    PushArgument:4(t0)
    t0 <- Constant:5(#1)
    PushArgument:6(t0)
    t0 <- InstanceCall:7(&, t0, t0)
    t1 <- Constant:8(#0)
    Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:12(this lvl:0)
    t1 <- LoadLocal:13(days lvl:0)
    PushArgument:14(t1)
    t1 <- Constant:15(#86400000)
    PushArgument:16(t1)
    t1 <- InstanceCall:17(*, t1, t1)
    PushArgument:18(t1)
    t1 <- LoadLocal:19(hours lvl:0)
    PushArgument:20(t1)
    t1 <- Constant:21(#3600000)
    PushArgument:22(t1)
    t1 <- InstanceCall:23(*, t1, t1)
    PushArgument:24(t1)
    t1 <- InstanceCall:25(+, t1, t1)
    PushArgument:26(t1)
    t1 <- LoadLocal:27(minutes lvl:0)
    PushArgument:28(t1)
    t1 <- Constant:29(#60000)
    PushArgument:30(t1)
    t1 <- InstanceCall:31(*, t1, t1)
    PushArgument:32(t1)
    t1 <- InstanceCall:33(+, t1, t1)
    PushArgument:34(t1)
    t1 <- LoadLocal:35(seconds lvl:0)
    PushArgument:36(t1)
    t1 <- Constant:37(#1000)
    PushArgument:38(t1)
    t1 <- InstanceCall:39(*, t1, t1)
    PushArgument:40(t1)
    t1 <- InstanceCall:41(+, t1, t1)
    PushArgument:42(t1)
    t1 <- LoadLocal:43(milliseconds lvl:0)
    PushArgument:44(t1)
    t1 <- InstanceCall:45(+, t1, t1)
    StoreInstanceField:46(inMilliseconds, t0, t1)
    t0 <- LoadLocal:47(this lvl:0)
    PushArgument:48(t0)
    t0 <- Constant:49(#3)
    PushArgument:50(t0)
    StaticCall:51(Object. t0, t0)
    goto:55 4
B3[target]
    goto:56 4
B4[join] pred(B2, B3)
    t0 <- Constant:57(#null)
    Return:58(t0)
--> 'dart:core_Duration_Duration.' entry: 0xb3009918 time: 2940 us
Code for function 'dart:core_Duration_Duration.' {
        ;; Enter frame
0xb3009918    55                     push ebp
0xb3009919    89e5                   mov ebp,esp
0xb300991b    e800000000             call 0xb3009920
0xb3009920    83ec1c                 sub esp,0x1c
        ;; Copy parameters
0xb3009923    8b4a0f                 mov ecx,[edx+0xf]
0xb3009926    83f904                 cmp ecx,0x4
0xb3009929    0f8cd3000000           jl 0xb3009a02
0xb300992f    83f904                 cmp ecx,0x4
0xb3009932    0f8fca000000           jg 0xb3009a02
0xb3009938    8b5a0b                 mov ebx,[edx+0xb]
0xb300993b    2bd9                   sub ebx,ecx
0xb300993d    8d5c5d08               lea ebx,[ebp+ebx*0x2+0x8]
0xb3009941    8d7dfc                 lea edi,[ebp-0x4]
0xb3009944    2bf9                   sub edi,ecx
0xb3009946    2bf9                   sub edi,ecx
0xb3009948    d1f9                   sar ecx, 1
0xb300994a    eb06                   jmp 0xb3009952
0xb300994c    8b048b                 mov eax,[ebx+ecx*0x4]
0xb300994f    89048f                 mov [edi+ecx*0x4],eax
0xb3009952    49                     dec ecx
0xb3009953    79f7                   jns 0xb300994c
0xb3009955    8b5a0b                 mov ebx,[edx+0xb]
0xb3009958    8b4a0f                 mov ecx,[edx+0xf]
0xb300995b    d1f9                   sar ecx, 1
0xb300995d    8d5c5d04               lea ebx,[ebp+ebx*0x2+0x4]
0xb3009961    8d7a13                 lea edi,[edx+0x13]
0xb3009964    8b07                   mov eax,[edi]
0xb3009966    3dc92c30b3             cmp eax, 0xb3302cc9  'days'
0xb300996b    750d                   jnz 0xb300997a
0xb300996d    8b4704                 mov eax,[edi+0x4]
0xb3009970    83c708                 add edi,0x8
0xb3009973    f7d8                   neg eax
0xb3009975    8b0443                 mov eax,[ebx+eax*0x2]
0xb3009978    eb05                   jmp 0xb300997f
0xb300997a    b800000000             mov eax,0
0xb300997f    8945f0                 mov [ebp-0x10],eax
0xb3009982    8b07                   mov eax,[edi]
0xb3009984    3dd92c30b3             cmp eax, 0xb3302cd9  'hours'
0xb3009989    750d                   jnz 0xb3009998
0xb300998b    8b4704                 mov eax,[edi+0x4]
0xb300998e    83c708                 add edi,0x8
0xb3009991    f7d8                   neg eax
0xb3009993    8b0443                 mov eax,[ebx+eax*0x2]
0xb3009996    eb05                   jmp 0xb300999d
0xb3009998    b800000000             mov eax,0
0xb300999d    8945ec                 mov [ebp-0x14],eax
0xb30099a0    8b07                   mov eax,[edi]
0xb30099a2    3d992930b3             cmp eax, 0xb3302999  'milliseconds'
0xb30099a7    750d                   jnz 0xb30099b6
0xb30099a9    8b4704                 mov eax,[edi+0x4]
0xb30099ac    83c708                 add edi,0x8
0xb30099af    f7d8                   neg eax
0xb30099b1    8b0443                 mov eax,[ebx+eax*0x2]
0xb30099b4    eb05                   jmp 0xb30099bb
0xb30099b6    b800000000             mov eax,0
0xb30099bb    8945e0                 mov [ebp-0x20],eax
0xb30099be    8b07                   mov eax,[edi]
0xb30099c0    3df12c30b3             cmp eax, 0xb3302cf1  'minutes'
0xb30099c5    750d                   jnz 0xb30099d4
0xb30099c7    8b4704                 mov eax,[edi+0x4]
0xb30099ca    83c708                 add edi,0x8
0xb30099cd    f7d8                   neg eax
0xb30099cf    8b0443                 mov eax,[ebx+eax*0x2]
0xb30099d2    eb05                   jmp 0xb30099d9
0xb30099d4    b800000000             mov eax,0
0xb30099d9    8945e8                 mov [ebp-0x18],eax
0xb30099dc    8b07                   mov eax,[edi]
0xb30099de    3d092d30b3             cmp eax, 0xb3302d09  'seconds'
0xb30099e3    750d                   jnz 0xb30099f2
0xb30099e5    8b4704                 mov eax,[edi+0x4]
0xb30099e8    83c708                 add edi,0x8
0xb30099eb    f7d8                   neg eax
0xb30099ed    8b0443                 mov eax,[ebx+eax*0x2]
0xb30099f0    eb05                   jmp 0xb30099f7
0xb30099f2    b800000000             mov eax,0
0xb30099f7    8945e4                 mov [ebp-0x1c],eax
0xb30099fa    813f190040b5           cmp [edi],0xb5400019
0xb3009a00    7411                   jz 0xb3009a13
0xb3009a02    83c41c                 add esp,0x1c
0xb3009a05    b919a729b3             mov ecx,0xb329a719  'ICData target:'Duration.' num-checks: 0'
0xb3009a0a    e839683702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb3009a0f    89ec                   mov esp,ebp
0xb3009a11    5d                     pop ebp
0xb3009a12    c3                     ret
0xb3009a13    8b4a0b                 mov ecx,[edx+0xb]
0xb3009a16    d1f9                   sar ecx, 1
0xb3009a18    eb08                   jmp 0xb3009a22
0xb3009a1a    c7448d08190040b5       mov [ebp+ecx*0x4+0x8],0xb5400019
0xb3009a22    49                     dec ecx
0xb3009a23    79f5                   jns 0xb3009a1a
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3009a25    3b25bc195809           cmp esp,[0x95819bc]
0xb3009a2b    0f8657010000           jna 0xb3009b88
        ;; t0 <- LoadLocal:3(:phase lvl:0)
0xb3009a31    8b45f4                 mov eax,[ebp-0xc]
0xb3009a34    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#1)
0xb3009a35    b802000000             mov eax,0x2
0xb3009a3a    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- InstanceCall:7(&, t0, t0)
0xb3009a3b    b951a729b3             mov ecx,0xb329a751  'ICData target:'&' num-checks: 0'
0xb3009a40    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009a45    e88e68ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009a4a    83c408                 add esp,0x8
0xb3009a4d    50                     push eax
        ;; t1 <- Constant:8(#0)
0xb3009a4e    b800000000             mov eax,0
0xb3009a53    50                     push eax
        ;; Branch if StrictCompare:10(!==, t0, t1) goto (2, 3)
0xb3009a54    58                     pop eax
0xb3009a55    59                     pop ecx
0xb3009a56    51                     push ecx
0xb3009a57    50                     push eax
0xb3009a58    e8ab6d3702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3009a5d    58                     pop eax
0xb3009a5e    59                     pop ecx
0xb3009a5f    0f8400010000           jz 0xb3009b65
        ;; B2
        ;; t0 <- LoadLocal:12(this lvl:0)
0xb3009a65    8b45f8                 mov eax,[ebp-0x8]
0xb3009a68    50                     push eax
        ;; t1 <- LoadLocal:13(days lvl:0)
0xb3009a69    8b45f0                 mov eax,[ebp-0x10]
0xb3009a6c    50                     push eax
        ;; PushArgument:14(t1)
        ;; t1 <- Constant:15(#86400000)
0xb3009a6d    b800b84c0a             mov eax,0xa4cb800
0xb3009a72    50                     push eax
        ;; PushArgument:16(t1)
        ;; t1 <- InstanceCall:17(*, t1, t1)
0xb3009a73    b9a9a729b3             mov ecx,0xb329a7a9  'ICData target:'*' num-checks: 0'
0xb3009a78    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009a7d    e85668ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009a82    83c408                 add esp,0x8
0xb3009a85    50                     push eax
        ;; PushArgument:18(t1)
        ;; t1 <- LoadLocal:19(hours lvl:0)
0xb3009a86    8b45ec                 mov eax,[ebp-0x14]
0xb3009a89    50                     push eax
        ;; PushArgument:20(t1)
        ;; t1 <- Constant:21(#3600000)
0xb3009a8a    b800dd6d00             mov eax,0x6ddd00
0xb3009a8f    50                     push eax
        ;; PushArgument:22(t1)
        ;; t1 <- InstanceCall:23(*, t1, t1)
0xb3009a90    b901a829b3             mov ecx,0xb329a801  'ICData target:'*' num-checks: 0'
0xb3009a95    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009a9a    e83968ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009a9f    83c408                 add esp,0x8
0xb3009aa2    50                     push eax
        ;; PushArgument:24(t1)
        ;; t1 <- InstanceCall:25(+, t1, t1)
0xb3009aa3    b959a829b3             mov ecx,0xb329a859  'ICData target:'+' num-checks: 0'
0xb3009aa8    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009aad    e82668ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009ab2    83c408                 add esp,0x8
0xb3009ab5    50                     push eax
        ;; PushArgument:26(t1)
        ;; t1 <- LoadLocal:27(minutes lvl:0)
0xb3009ab6    8b45e8                 mov eax,[ebp-0x18]
0xb3009ab9    50                     push eax
        ;; PushArgument:28(t1)
        ;; t1 <- Constant:29(#60000)
0xb3009aba    b8c0d40100             mov eax,0x1d4c0
0xb3009abf    50                     push eax
        ;; PushArgument:30(t1)
        ;; t1 <- InstanceCall:31(*, t1, t1)
0xb3009ac0    b9b1a829b3             mov ecx,0xb329a8b1  'ICData target:'*' num-checks: 0'
0xb3009ac5    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009aca    e80968ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009acf    83c408                 add esp,0x8
0xb3009ad2    50                     push eax
        ;; PushArgument:32(t1)
        ;; t1 <- InstanceCall:33(+, t1, t1)
0xb3009ad3    b909a929b3             mov ecx,0xb329a909  'ICData target:'+' num-checks: 0'
0xb3009ad8    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009add    e8f667ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009ae2    83c408                 add esp,0x8
0xb3009ae5    50                     push eax
        ;; PushArgument:34(t1)
        ;; t1 <- LoadLocal:35(seconds lvl:0)
0xb3009ae6    8b45e4                 mov eax,[ebp-0x1c]
0xb3009ae9    50                     push eax
        ;; PushArgument:36(t1)
        ;; t1 <- Constant:37(#1000)
0xb3009aea    b8d0070000             mov eax,0x7d0
0xb3009aef    50                     push eax
        ;; PushArgument:38(t1)
        ;; t1 <- InstanceCall:39(*, t1, t1)
0xb3009af0    b961a929b3             mov ecx,0xb329a961  'ICData target:'*' num-checks: 0'
0xb3009af5    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009afa    e8d967ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009aff    83c408                 add esp,0x8
0xb3009b02    50                     push eax
        ;; PushArgument:40(t1)
        ;; t1 <- InstanceCall:41(+, t1, t1)
0xb3009b03    b9b9a929b3             mov ecx,0xb329a9b9  'ICData target:'+' num-checks: 0'
0xb3009b08    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009b0d    e8c667ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009b12    83c408                 add esp,0x8
0xb3009b15    50                     push eax
        ;; PushArgument:42(t1)
        ;; t1 <- LoadLocal:43(milliseconds lvl:0)
0xb3009b16    8b45e0                 mov eax,[ebp-0x20]
0xb3009b19    50                     push eax
        ;; PushArgument:44(t1)
        ;; t1 <- InstanceCall:45(+, t1, t1)
0xb3009b1a    b911aa29b3             mov ecx,0xb329aa11  'ICData target:'+' num-checks: 0'
0xb3009b1f    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009b24    e8af67ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009b29    83c408                 add esp,0x8
0xb3009b2c    50                     push eax
        ;; StoreInstanceField:46(inMilliseconds, t0, t1)
0xb3009b2d    58                     pop eax
0xb3009b2e    59                     pop ecx
0xb3009b2f    894107                 mov [ecx+0x7],eax
0xb3009b32    83e005                 and eax,0x5
0xb3009b35    d1e8                   shr eax, 1
0xb3009b37    13c1                   adc eax,ecx
0xb3009b39    83e007                 and eax,0x7
0xb3009b3c    83f804                 cmp eax,0x4
0xb3009b3f    7508                   jnz 0xb3009b49
0xb3009b41    8d4107                 lea eax,[ecx+0x7]
0xb3009b44    e81f66ffff             call 0xb3000168  [stub: UpdateStoreBuffer]
        ;; t0 <- LoadLocal:47(this lvl:0)
0xb3009b49    8b45f8                 mov eax,[ebp-0x8]
0xb3009b4c    50                     push eax
        ;; PushArgument:48(t0)
        ;; t0 <- Constant:49(#3)
0xb3009b4d    b806000000             mov eax,0x6
0xb3009b52    50                     push eax
        ;; PushArgument:50(t0)
        ;; StaticCall:51(Object. t0, t0)
0xb3009b53    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009b58    e8cb673702             call 0xb5380328  [stub: CallStaticFunction]
0xb3009b5d    83c408                 add esp,0x8
        ;; goto:55 4
0xb3009b60    e900000000             jmp 0xb3009b65
        ;; B3
        ;; goto:56 4
        ;; B4
        ;; t0 <- Constant:57(#null)
0xb3009b65    b8190040b5             mov eax,0xb5400019
0xb3009b6a    50                     push eax
        ;; Return:58(t0)
0xb3009b6b    58                     pop eax
0xb3009b6c    bad99b12b3             mov edx,0xb3129bd9  'Function 'Duration.': constructor const.'
0xb3009b71    ff422b                 inc [edx+0x2b]
0xb3009b74    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3009b7b    7c05                   jl 0xb3009b82
0xb3009b7d    e8366dffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3009b82    89ec                   mov esp,ebp
0xb3009b84    5d                     pop ebp
0xb3009b85    c3                     ret
0xb3009b86    90                     nop
0xb3009b87    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3009b88    b970d30a08             mov ecx,0x80ad370
0xb3009b8d    ba00000000             mov edx,0
0xb3009b92    e891643702             call 0xb5380028  [stub: CallToRuntime]
0xb3009b97    e995feffff             jmp 0xb3009a31
0xb3009b9c    e997683702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3009ba1    e972693702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 79 : 0xb3009967 'days'
 109 : 0xb3009985 'hours'
 139 : 0xb30099a3 'milliseconds'
 169 : 0xb30099c1 'minutes'
 199 : 0xb30099df 'seconds'
 238 : 0xb3009a06 'ICData target:'Duration.' num-checks: 0'
 292 : 0xb3009a3c 'ICData target:'&' num-checks: 0'
 297 : 0xb3009a41 'ImmutableArray'
 348 : 0xb3009a74 'ICData target:'*' num-checks: 0'
 353 : 0xb3009a79 'ImmutableArray'
 377 : 0xb3009a91 'ICData target:'*' num-checks: 0'
 382 : 0xb3009a96 'ImmutableArray'
 396 : 0xb3009aa4 'ICData target:'+' num-checks: 0'
 401 : 0xb3009aa9 'ImmutableArray'
 425 : 0xb3009ac1 'ICData target:'*' num-checks: 0'
 430 : 0xb3009ac6 'ImmutableArray'
 444 : 0xb3009ad4 'ICData target:'+' num-checks: 0'
 449 : 0xb3009ad9 'ImmutableArray'
 473 : 0xb3009af1 'ICData target:'*' num-checks: 0'
 478 : 0xb3009af6 'ImmutableArray'
 492 : 0xb3009b04 'ICData target:'+' num-checks: 0'
 497 : 0xb3009b09 'ImmutableArray'
 515 : 0xb3009b1b 'ICData target:'+' num-checks: 0'
 520 : 0xb3009b20 'ImmutableArray'
 572 : 0xb3009b54 'ImmutableArray'
 597 : 0xb3009b6d 'Function 'Duration.': constructor const.'
}
PC Descriptors for function 'dart:core_Duration_Duration.' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3009a3b	deopt-before 	7		2680	-1
0xb3009a4a	ic-call      	7		2680	-1
0xb3009a4a	deopt-after  	7		2680	-1
0xb3009a73	deopt-before 	17		2644	-1
0xb3009a82	ic-call      	17		2644	-1
0xb3009a82	deopt-after  	17		2644	-1
0xb3009a90	deopt-before 	23		2653	-1
0xb3009a9f	ic-call      	23		2653	-1
0xb3009a9f	deopt-after  	23		2653	-1
0xb3009aa3	deopt-before 	25		2650	-1
0xb3009ab2	ic-call      	25		2650	-1
0xb3009ab2	deopt-after  	25		2650	-1
0xb3009ac0	deopt-before 	31		2662	-1
0xb3009acf	ic-call      	31		2662	-1
0xb3009acf	deopt-after  	31		2662	-1
0xb3009ad3	deopt-before 	33		2659	-1
0xb3009ae2	ic-call      	33		2659	-1
0xb3009ae2	deopt-after  	33		2659	-1
0xb3009af0	deopt-before 	39		2671	-1
0xb3009aff	ic-call      	39		2671	-1
0xb3009aff	deopt-after  	39		2671	-1
0xb3009b03	deopt-before 	41		2668	-1
0xb3009b12	ic-call      	41		2668	-1
0xb3009b12	deopt-after  	41		2668	-1
0xb3009b1a	deopt-before 	45		2677	-1
0xb3009b29	ic-call      	45		2677	-1
0xb3009b29	deopt-after  	45		2677	-1
0xb3009b5d	fn-call      	51		2680	-1
0xb3009b5d	deopt-after  	51		2680	-1
0xb3009b60	deopt-before 	55		0	-1
0xb3009b65	deopt-before 	56		0	-1
0xb3009b82	other        	-1		0	-1
0xb3009b87	return       	-1		2681	-1
0xb3009b97	other        	-1		2600	-1
0xb3009b9c	patch        	-1		0	-1
0xb3009ba1	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_Duration_Duration.' {
}
Variable Descriptors for function 'dart:core_Duration_Duration.' {
  stack var 'this' offset -2 (valid 824-2681)
  stack var 'days' offset -4 (valid 2603-2681)
  stack var 'hours' offset -5 (valid 2610-2681)
  stack var 'minutes' offset -6 (valid 2617-2681)
  stack var 'seconds' offset -7 (valid 2624-2681)
  stack var 'milliseconds' offset -8 (valid 2631-2681)
}
Exception Handlers for function 'dart:core_Duration_Duration.' {
No exception handlers
}
Static call target functions {
  0xb3009b5d: dart:core_Object_Object., 0xb5400019
}
PatchStaticCall: patching from 0xb3009689 to 'dart:core_Duration_Duration.' 0xb3009918
PatchStaticCall: patching from 0xb3009b5d to 'dart:core_Object_Object.' 0xb30027a8
Compiling function: 'dart:core_Duration_get_inMilliseconds' @ token 2594
Before Optimizations
==== dart:core_Duration_get_inMilliseconds
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(this lvl:0)
    t0 <- LoadField:4(t0, 8, immutable=0)
    Return:5(t0)
--> 'dart:core_Duration_get_inMilliseconds' entry: 0xb3009bb8 time: 43 us
Code for function 'dart:core_Duration_get_inMilliseconds' {
0xb3009bb8    8b442404               mov eax,[esp+0x4]
0xb3009bbc    8b4007                 mov eax,[eax+0x7]
0xb3009bbf    c3                     ret
0xb3009bc0    cc                     int3
0xb3009bc1    e972683702             jmp 0xb5380438  [stub: FixCallersTarget]
}
Pointer offsets for function: {
}
PC Descriptors for function 'dart:core_Duration_get_inMilliseconds' {
pc        	kind    	deopt-id	tok-ix	try-ix
No pc descriptors
}
Stackmaps for function 'dart:core_Duration_get_inMilliseconds' {
}
Variable Descriptors for function 'dart:core_Duration_get_inMilliseconds' {
  stack var 'this' offset 2 (valid 824-2594)
}
Exception Handlers for function 'dart:core_Duration_get_inMilliseconds' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb3008914 to 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' 0xb30011a8
Compiling function: 'dart:core_Object_toString' @ token 11308
Before Optimizations
==== dart:core_Object_toString
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- NativeCall:3(Object_toString)
    Return:4(t0)
--> 'dart:core_Object_toString' entry: 0xb3009bd8 time: 49 us
Code for function 'dart:core_Object_toString' {
        ;; Enter frame
0xb3009bd8    55                     push ebp
0xb3009bd9    89e5                   mov ebp,esp
0xb3009bdb    e800000000             call 0xb3009be0
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3009be0    3b25bc195809           cmp esp,[0x95819bc]
0xb3009be6    0f8628000000           jna 0xb3009c14
        ;; t0 <- NativeCall:3(Object_toString)
0xb3009bec    68190040b5             push 0xb5400019
0xb3009bf1    8d4508                 lea eax,[ebp+0x8]
0xb3009bf4    b970a14508             mov ecx,0x845a170
0xb3009bf9    ba01000001             mov edx,0x1000001
0xb3009bfe    e825653702             call 0xb5380128  [stub: CallNativeCFunction]
0xb3009c03    58                     pop eax
0xb3009c04    50                     push eax
        ;; Return:4(t0)
0xb3009c05    58                     pop eax
0xb3009c06    ba91e619b3             mov edx,0xb319e691  'Function 'toString':.'
0xb3009c0b    ff422b                 inc [edx+0x2b]
0xb3009c0e    89ec                   mov esp,ebp
0xb3009c10    5d                     pop ebp
0xb3009c11    c3                     ret
0xb3009c12    90                     nop
0xb3009c13    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3009c14    b970d30a08             mov ecx,0x80ad370
0xb3009c19    ba00000000             mov edx,0
0xb3009c1e    e805643702             call 0xb5380028  [stub: CallToRuntime]
0xb3009c23    ebc7                   jmp 0xb3009bec
0xb3009c25    e90e683702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3009c2a    e9e9683702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 47 : 0xb3009c07 'Function 'toString':.'
}
PC Descriptors for function 'dart:core_Object_toString' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3009c03	other        	-1		11315	-1
0xb3009c13	return       	-1		11315	-1
0xb3009c23	other        	-1		11308	-1
0xb3009c25	patch        	-1		0	-1
0xb3009c2a	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core_Object_toString' {
}
Variable Descriptors for function 'dart:core_Object_toString' {
  stack var 'this' offset 2 (valid 0-11315)
}
Exception Handlers for function 'dart:core_Object_toString' {
No exception handlers
}
Static call target functions {
}
PatchStaticCall: patching from 0xb3008922 to 'dart:core_::_print' 0xb3008658
ret = 100
PatchStaticCall: patching from 0xb30084d4 to 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' 0xb30011a8
PatchStaticCall: patching from 0xb30084e2 to 'dart:core_::_print' 0xb3008658
substring time = 25 ms
PatchStaticCall: patching from 0xb300850a to 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime' 0xb3008828
Compiling function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' @ token 51
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#Closure: (dynamic, String, int) => int from Function 'indexOf': static.)
    PushArgument:4(t0)
    t0 <- Constant:5(#10000)
    PushArgument:6(t0)
    t0 <- StaticCall:7(hotString t0, t0)
    Return:8(t0)
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' entry: 0xb3009c48 time: 100 us
Code for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
        ;; Enter frame
0xb3009c48    55                     push ebp
0xb3009c49    89e5                   mov ebp,esp
0xb3009c4b    e800000000             call 0xb3009c50
        ;; Check argument count
0xb3009c50    8b420b                 mov eax,[edx+0xb]
0xb3009c53    83f802                 cmp eax,0x2
0xb3009c56    7505                   jnz 0xb3009c5d
0xb3009c58    3b420f                 cmp eax,[edx+0xf]
0xb3009c5b    740e                   jz 0xb3009c6b
0xb3009c5d    b9a1b229b3             mov ecx,0xb329b2a1  'ICData target:'call' num-checks: 0'
0xb3009c62    e8e1653702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb3009c67    89ec                   mov esp,ebp
0xb3009c69    5d                     pop ebp
0xb3009c6a    c3                     ret
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3009c6b    3b25bc195809           cmp esp,[0x95819bc]
0xb3009c71    0f8637000000           jna 0xb3009cae
        ;; t0 <- Constant:3(#Closure: (dynamic, String, int) => int from Function 'indexOf': static.)
0xb3009c77    b891b229b3             mov eax,0xb329b291  'instance of Library:'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart' Class: (dynamic, String, int) => int'
0xb3009c7c    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#10000)
0xb3009c7d    b8204e0000             mov eax,0x4e20
0xb3009c82    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- StaticCall:7(hotString t0, t0)
0xb3009c83    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009c88    e89b663702             call 0xb5380328  [stub: CallStaticFunction]
0xb3009c8d    83c408                 add esp,0x8
0xb3009c90    50                     push eax
        ;; Return:8(t0)
0xb3009c91    58                     pop eax
0xb3009c92    ba495c29b3             mov edx,0xb3295c49  'Function '<anonymous closure>': static.'
0xb3009c97    ff422b                 inc [edx+0x2b]
0xb3009c9a    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3009ca1    7c05                   jl 0xb3009ca8
0xb3009ca3    e8106cffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3009ca8    89ec                   mov esp,ebp
0xb3009caa    5d                     pop ebp
0xb3009cab    c3                     ret
0xb3009cac    90                     nop
0xb3009cad    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3009cae    b970d30a08             mov ecx,0x80ad370
0xb3009cb3    ba00000000             mov edx,0
0xb3009cb8    e86b633702             call 0xb5380028  [stub: CallToRuntime]
0xb3009cbd    ebb8                   jmp 0xb3009c77
0xb3009cbf    e974673702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3009cc4    e94f683702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb3009c5e 'ICData target:'call' num-checks: 0'
 48 : 0xb3009c78 'Closure: (dynamic, String, int) => int from Function 'indexOf': static.'
 60 : 0xb3009c84 'ImmutableArray'
 75 : 0xb3009c93 'Function '<anonymous closure>': static.'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3009c8d	fn-call      	7		55	-1
0xb3009c8d	deopt-after  	7		55	-1
0xb3009ca8	other        	-1		0	-1
0xb3009cad	return       	-1		54	-1
0xb3009cbd	other        	-1		51	-1
0xb3009cbf	patch        	-1		0	-1
0xb3009cc4	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
No exception handlers
}
Static call target functions {
  0xb3009c8d: file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString, 0xb5400019
}
PatchStaticCall: patching from 0xb3009c8d to 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' 0xb30094a8
Compiling function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' @ token 258
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(init lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(i lvl:0)
    PushArgument:6(t0)
    t0 <- Constant:7(#100)
    PushArgument:8(t0)
    t0 <- InstanceCall:9(%, t0, t0)
    PushArgument:10(t0)
    t0 <- InstanceCall:11(toString, t0)
    PushArgument:12(t0)
    t0 <- InstanceCall:13(indexOf, t0, t0)
    Return:14(t0)
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' entry: 0xb3009ce8 time: 132 us
Code for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' {
        ;; Enter frame
0xb3009ce8    55                     push ebp
0xb3009ce9    89e5                   mov ebp,esp
0xb3009ceb    e800000000             call 0xb3009cf0
        ;; Check argument count
0xb3009cf0    8b420b                 mov eax,[edx+0xb]
0xb3009cf3    83f806                 cmp eax,0x6
0xb3009cf6    7505                   jnz 0xb3009cfd
0xb3009cf8    3b420f                 cmp eax,[edx+0xf]
0xb3009cfb    740e                   jz 0xb3009d0b
0xb3009cfd    b989b429b3             mov ecx,0xb329b489  'ICData target:'call' num-checks: 0'
0xb3009d02    e841653702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb3009d07    89ec                   mov esp,ebp
0xb3009d09    5d                     pop ebp
0xb3009d0a    c3                     ret
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3009d0b    3b25bc195809           cmp esp,[0x95819bc]
0xb3009d11    0f8664000000           jna 0xb3009d7b
        ;; t0 <- LoadLocal:3(init lvl:0)
0xb3009d17    8b450c                 mov eax,[ebp+0xc]
0xb3009d1a    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(i lvl:0)
0xb3009d1b    8b4508                 mov eax,[ebp+0x8]
0xb3009d1e    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- Constant:7(#100)
0xb3009d1f    b8c8000000             mov eax,0xc8
0xb3009d24    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- InstanceCall:9(%, t0, t0)
0xb3009d25    b9c1b429b3             mov ecx,0xb329b4c1  'ICData target:'%' num-checks: 0'
0xb3009d2a    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009d2f    e8a465ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009d34    83c408                 add esp,0x8
0xb3009d37    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- InstanceCall:11(toString, t0)
0xb3009d38    b919b529b3             mov ecx,0xb329b519  'ICData target:'toString' num-checks: 0'
0xb3009d3d    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3009d42    e8d164ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3009d47    83c404                 add esp,0x4
0xb3009d4a    50                     push eax
        ;; PushArgument:12(t0)
        ;; t0 <- InstanceCall:13(indexOf, t0, t0)
0xb3009d4b    b969b529b3             mov ecx,0xb329b569  'ICData target:'indexOf' num-checks: 0'
0xb3009d50    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009d55    e8be64ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3009d5a    83c408                 add esp,0x8
0xb3009d5d    50                     push eax
        ;; Return:14(t0)
0xb3009d5e    58                     pop eax
0xb3009d5f    bab95c29b3             mov edx,0xb3295cb9  'Function 'indexOf': static.'
0xb3009d64    ff422b                 inc [edx+0x2b]
0xb3009d67    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3009d6e    7c05                   jl 0xb3009d75
0xb3009d70    e8436bffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3009d75    89ec                   mov esp,ebp
0xb3009d77    5d                     pop ebp
0xb3009d78    c3                     ret
0xb3009d79    90                     nop
0xb3009d7a    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb3009d7b    b970d30a08             mov ecx,0x80ad370
0xb3009d80    ba00000000             mov edx,0
0xb3009d85    e89e623702             call 0xb5380028  [stub: CallToRuntime]
0xb3009d8a    eb8b                   jmp 0xb3009d17
0xb3009d8c    e9a7663702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb3009d91    e982673702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb3009cfe 'ICData target:'call' num-checks: 0'
 62 : 0xb3009d26 'ICData target:'%' num-checks: 0'
 67 : 0xb3009d2b 'ImmutableArray'
 81 : 0xb3009d39 'ICData target:'toString' num-checks: 0'
 86 : 0xb3009d3e 'ImmutableArray'
 100 : 0xb3009d4c 'ICData target:'indexOf' num-checks: 0'
 105 : 0xb3009d51 'ImmutableArray'
 120 : 0xb3009d60 'Function 'indexOf': static.'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3009d25	deopt-before 	9		278	-1
0xb3009d34	ic-call      	9		278	-1
0xb3009d34	deopt-after  	9		278	-1
0xb3009d38	deopt-before 	11		285	-1
0xb3009d47	ic-call      	11		285	-1
0xb3009d47	deopt-after  	11		285	-1
0xb3009d4b	deopt-before 	13		275	-1
0xb3009d5a	ic-call      	13		275	-1
0xb3009d5a	deopt-after  	13		275	-1
0xb3009d75	other        	-1		0	-1
0xb3009d7a	return       	-1		269	-1
0xb3009d8a	other        	-1		258	-1
0xb3009d8c	patch        	-1		0	-1
0xb3009d91	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' {
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' {
  stack var 'init' offset 3 (valid 261-290)
  stack var 'i' offset 2 (valid 266-290)
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' {
No exception handlers
}
Static call target functions {
}
Compiling function: 'dart:core__StringBase@0x36924d72_indexOf' @ token 12962
Before Optimizations
==== dart:core__StringBase@0x36924d72_indexOf
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(other lvl:0)
    PushArgument:4(t0)
    t0 <- InstanceCall:5(get:isEmpty, t0)
    t1 <- Constant:6(#true)
    Branch if StrictCompare:7(===, t0, t1) goto (5, 6)
B5[target]
    t0 <- LoadLocal:9(start lvl:0)
    t1 <- LoadLocal:10(this lvl:0)
    PushArgument:11(t1)
    t1 <- InstanceCall:12(get:length, t1)
    Branch if RelationalOp:13(<, t0, t1) goto (2, 3)
B2[target]
    t0 <- LoadLocal:15(start lvl:0)
    StoreLocal:16(:expr_temp, t0, lvl: 0)
    goto:24 4
B3[target]
    t0 <- LoadLocal:17(this lvl:0)
    PushArgument:18(t0)
    t0 <- InstanceCall:19(get:length, t0)
    StoreLocal:20(:expr_temp, t0, lvl: 0)
    goto:25 4
B4[join] pred(B2, B3)
    t0 <- LoadLocal:26(:expr_temp lvl:0)
    Return:27(t0)
B6[target]
    t0 <- LoadLocal:30(start lvl:0)
    t1 <- Constant:31(#0)
    Branch if RelationalOp:32(<, t0, t1) goto (9, 7)
B9[target]
    goto:45 8
B7[target]
    t0 <- LoadLocal:34(start lvl:0)
    t1 <- LoadLocal:35(this lvl:0)
    PushArgument:36(t1)
    t1 <- InstanceCall:37(get:length, t1)
    Branch if RelationalOp:38(>=, t0, t1) goto (10, 11)
B10[target]
    goto:47 8
B8[join] pred(B9, B10)
    t0 <- Constant:41(#-1)
    Return:42(t0)
B11[target]
    t0 <- LoadLocal:49(this lvl:0)
    PushArgument:50(t0)
    t0 <- InstanceCall:51(get:length, t0)
    PushArgument:52(t0)
    t0 <- LoadLocal:53(other lvl:0)
    PushArgument:54(t0)
    t0 <- InstanceCall:55(get:length, t0)
    PushArgument:56(t0)
    t0 <- InstanceCall:57(-, t0, t0)
    PushArgument:58(t0)
    t0 <- Constant:59(#1)
    PushArgument:60(t0)
    t0 <- InstanceCall:61(+, t0, t0)
    StoreLocal:62(len, t0, lvl: 0)
    t0 <- LoadLocal:63(start lvl:0)
    StoreLocal:64(index, t0, lvl: 0)
    goto:88 14
B14[join] pred(B11, B13)
    t0 <- LoadLocal:90(index lvl:0)
    t1 <- LoadLocal:91(len lvl:0)
    Branch if RelationalOp:92(<, t0, t1) goto (15, 16)
B15[target]
    CheckStackOverflow:65()
    t0 <- LoadLocal:66(this lvl:0)
    PushArgument:67(t0)
    t0 <- LoadLocal:68(index lvl:0)
    PushArgument:69(t0)
    t0 <- LoadLocal:70(other lvl:0)
    PushArgument:71(t0)
    t0 <- InstanceCall:72(_substringMatches@0x36924d72, t0, t0, t0)
    t1 <- Constant:73(#true)
    Branch if StrictCompare:74(===, t0, t1) goto (12, 13)
B12[target]
    t0 <- LoadLocal:76(index lvl:0)
    Return:77(t0)
B13[target]
    t0 <- LoadLocal:80(index lvl:0)
    t0 <- StoreLocal:81(:expr_temp, t0, lvl: 0)
    PushArgument:82(t0)
    t0 <- Constant:83(#1)
    PushArgument:84(t0)
    t0 <- InstanceCall:85(+, t0, t0)
    StoreLocal:86(index, t0, lvl: 0)
    goto:89 14
B16[target]
    t0 <- Constant:96(#-1)
    Return:97(t0)
--> 'dart:core__StringBase@0x36924d72_indexOf' entry: 0xb3009da8 time: 698 us
Code for function 'dart:core__StringBase@0x36924d72_indexOf' {
        ;; Enter frame
0xb3009da8    55                     push ebp
0xb3009da9    89e5                   mov ebp,esp
0xb3009dab    e800000000             call 0xb3009db0
0xb3009db0    83ec18                 sub esp,0x18
        ;; Copy parameters
0xb3009db3    8b4a0f                 mov ecx,[edx+0xf]
0xb3009db6    83f904                 cmp ecx,0x4
0xb3009db9    0f8c41000000           jl 0xb3009e00
0xb3009dbf    83f906                 cmp ecx,0x6
0xb3009dc2    0f8f38000000           jg 0xb3009e00
0xb3009dc8    8b5a0b                 mov ebx,[edx+0xb]
0xb3009dcb    2bd9                   sub ebx,ecx
0xb3009dcd    8d5c5d08               lea ebx,[ebp+ebx*0x2+0x8]
0xb3009dd1    8d7dfc                 lea edi,[ebp-0x4]
0xb3009dd4    2bf9                   sub edi,ecx
0xb3009dd6    2bf9                   sub edi,ecx
0xb3009dd8    d1f9                   sar ecx, 1
0xb3009dda    eb06                   jmp 0xb3009de2
0xb3009ddc    8b048b                 mov eax,[ebx+ecx*0x4]
0xb3009ddf    89048f                 mov [edi+ecx*0x4],eax
0xb3009de2    49                     dec ecx
0xb3009de3    79f7                   jns 0xb3009ddc
0xb3009de5    8b4a0f                 mov ecx,[edx+0xf]
0xb3009de8    d1f9                   sar ecx, 1
0xb3009dea    83f902                 cmp ecx,0x2
0xb3009ded    7f08                   jg 0xb3009df7
0xb3009def    b800000000             mov eax,0
0xb3009df4    8945f0                 mov [ebp-0x10],eax
0xb3009df7    8b5a0b                 mov ebx,[edx+0xb]
0xb3009dfa    d1fb                   sar ebx, 1
0xb3009dfc    3bcb                   cmp ecx,ebx
0xb3009dfe    7411                   jz 0xb3009e11
0xb3009e00    83c418                 add esp,0x18
0xb3009e03    b951b829b3             mov ecx,0xb329b851  'ICData target:'indexOf' num-checks: 0'
0xb3009e08    e83b643702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb3009e0d    89ec                   mov esp,ebp
0xb3009e0f    5d                     pop ebp
0xb3009e10    c3                     ret
0xb3009e11    8b4a0b                 mov ecx,[edx+0xb]
0xb3009e14    d1f9                   sar ecx, 1
0xb3009e16    eb08                   jmp 0xb3009e20
0xb3009e18    c7448d08190040b5       mov [ebp+ecx*0x4+0x8],0xb5400019
0xb3009e20    49                     dec ecx
0xb3009e21    79f5                   jns 0xb3009e18
        ;; Initialize spill slots
0xb3009e23    b8190040b5             mov eax,0xb5400019
0xb3009e28    8945ec                 mov [ebp-0x14],eax
0xb3009e2b    8945e8                 mov [ebp-0x18],eax
0xb3009e2e    8945e4                 mov [ebp-0x1c],eax
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb3009e31    3b25bc195809           cmp esp,[0x95819bc]
0xb3009e37    0f867f020000           jna 0xb300a0bc
        ;; t0 <- LoadLocal:3(other lvl:0)
0xb3009e3d    8b45f4                 mov eax,[ebp-0xc]
0xb3009e40    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- InstanceCall:5(get:isEmpty, t0)
0xb3009e41    b989b829b3             mov ecx,0xb329b889  'ICData target:'get:isEmpty' num-checks: 0'
0xb3009e46    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3009e4b    e8c863ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3009e50    83c404                 add esp,0x4
0xb3009e53    50                     push eax
        ;; t1 <- Constant:6(#true)
0xb3009e54    b8391030b3             mov eax,0xb3301039  'true'
0xb3009e59    50                     push eax
        ;; Branch if StrictCompare:7(===, t0, t1) goto (5, 6)
0xb3009e5a    58                     pop eax
0xb3009e5b    59                     pop ecx
0xb3009e5c    51                     push ecx
0xb3009e5d    50                     push eax
0xb3009e5e    e8a5693702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb3009e63    58                     pop eax
0xb3009e64    59                     pop ecx
0xb3009e65    0f8584000000           jnz 0xb3009eef
        ;; B5
        ;; t0 <- LoadLocal:9(start lvl:0)
0xb3009e6b    8b45f0                 mov eax,[ebp-0x10]
0xb3009e6e    50                     push eax
        ;; t1 <- LoadLocal:10(this lvl:0)
0xb3009e6f    8b45f8                 mov eax,[ebp-0x8]
0xb3009e72    50                     push eax
        ;; PushArgument:11(t1)
        ;; t1 <- InstanceCall:12(get:length, t1)
0xb3009e73    b9d9b829b3             mov ecx,0xb329b8d9  'ICData target:'get:length' num-checks: 0'
0xb3009e78    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3009e7d    e89663ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3009e82    83c404                 add esp,0x4
0xb3009e85    50                     push eax
        ;; Branch if RelationalOp:13(<, t0, t1) goto (2, 3)
0xb3009e86    59                     pop ecx
0xb3009e87    58                     pop eax
0xb3009e88    50                     push eax
0xb3009e89    51                     push ecx
0xb3009e8a    b929b929b3             mov ecx,0xb329b929  'ICData target:'<' num-checks: 0'
0xb3009e8f    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009e94    e83f64ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009e99    83c408                 add esp,0x8
0xb3009e9c    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3009ea1    0f850d000000           jnz 0xb3009eb4
        ;; B2
        ;; t0 <- LoadLocal:15(start lvl:0)
0xb3009ea7    8b45f0                 mov eax,[ebp-0x10]
0xb3009eaa    50                     push eax
        ;; StoreLocal:16(:expr_temp, t0, lvl: 0)
0xb3009eab    58                     pop eax
0xb3009eac    8945ec                 mov [ebp-0x14],eax
        ;; goto:24 4
0xb3009eaf    e91b000000             jmp 0xb3009ecf
        ;; B3
        ;; t0 <- LoadLocal:17(this lvl:0)
0xb3009eb4    8b45f8                 mov eax,[ebp-0x8]
0xb3009eb7    50                     push eax
        ;; PushArgument:18(t0)
        ;; t0 <- InstanceCall:19(get:length, t0)
0xb3009eb8    b981b929b3             mov ecx,0xb329b981  'ICData target:'get:length' num-checks: 0'
0xb3009ebd    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3009ec2    e85163ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3009ec7    83c404                 add esp,0x4
0xb3009eca    50                     push eax
        ;; StoreLocal:20(:expr_temp, t0, lvl: 0)
0xb3009ecb    58                     pop eax
0xb3009ecc    8945ec                 mov [ebp-0x14],eax
        ;; goto:25 4
        ;; B4
        ;; t0 <- LoadLocal:26(:expr_temp lvl:0)
0xb3009ecf    8b45ec                 mov eax,[ebp-0x14]
0xb3009ed2    50                     push eax
        ;; Return:27(t0)
0xb3009ed3    58                     pop eax
0xb3009ed4    ba21a71ab3             mov edx,0xb31aa721  'Function 'indexOf':.'
0xb3009ed9    ff422b                 inc [edx+0x2b]
0xb3009edc    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3009ee3    7c05                   jl 0xb3009eea
0xb3009ee5    e8ce69ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3009eea    89ec                   mov esp,ebp
0xb3009eec    5d                     pop ebp
0xb3009eed    c3                     ret
0xb3009eee    90                     nop
        ;; B6
        ;; t0 <- LoadLocal:30(start lvl:0)
0xb3009eef    8b45f0                 mov eax,[ebp-0x10]
0xb3009ef2    50                     push eax
        ;; t1 <- Constant:31(#0)
0xb3009ef3    b800000000             mov eax,0
0xb3009ef8    50                     push eax
        ;; Branch if RelationalOp:32(<, t0, t1) goto (9, 7)
0xb3009ef9    59                     pop ecx
0xb3009efa    58                     pop eax
0xb3009efb    50                     push eax
0xb3009efc    51                     push ecx
0xb3009efd    b9d1b929b3             mov ecx,0xb329b9d1  'ICData target:'<' num-checks: 0'
0xb3009f02    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009f07    e8cc63ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009f0c    83c408                 add esp,0x8
0xb3009f0f    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3009f14    0f8505000000           jnz 0xb3009f1f
        ;; B9
        ;; goto:45 8
0xb3009f1a    e93c000000             jmp 0xb3009f5b
        ;; B7
        ;; t0 <- LoadLocal:34(start lvl:0)
0xb3009f1f    8b45f0                 mov eax,[ebp-0x10]
0xb3009f22    50                     push eax
        ;; t1 <- LoadLocal:35(this lvl:0)
0xb3009f23    8b45f8                 mov eax,[ebp-0x8]
0xb3009f26    50                     push eax
        ;; PushArgument:36(t1)
        ;; t1 <- InstanceCall:37(get:length, t1)
0xb3009f27    b929ba29b3             mov ecx,0xb329ba29  'ICData target:'get:length' num-checks: 0'
0xb3009f2c    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3009f31    e8e262ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3009f36    83c404                 add esp,0x4
0xb3009f39    50                     push eax
        ;; Branch if RelationalOp:38(>=, t0, t1) goto (10, 11)
0xb3009f3a    59                     pop ecx
0xb3009f3b    58                     pop eax
0xb3009f3c    50                     push eax
0xb3009f3d    51                     push ecx
0xb3009f3e    b979ba29b3             mov ecx,0xb329ba79  'ICData target:'>=' num-checks: 0'
0xb3009f43    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009f48    e88b63ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009f4d    83c408                 add esp,0x8
0xb3009f50    3d391030b3             cmp eax, 0xb3301039  'true'
0xb3009f55    0f8522000000           jnz 0xb3009f7d
        ;; B10
        ;; goto:47 8
        ;; B8
        ;; t0 <- Constant:41(#-1)
0xb3009f5b    b8feffffff             mov eax,0xfffffffe
0xb3009f60    50                     push eax
        ;; Return:42(t0)
0xb3009f61    58                     pop eax
0xb3009f62    ba21a71ab3             mov edx,0xb31aa721  'Function 'indexOf':.'
0xb3009f67    ff422b                 inc [edx+0x2b]
0xb3009f6a    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb3009f71    7c05                   jl 0xb3009f78
0xb3009f73    e84069ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb3009f78    89ec                   mov esp,ebp
0xb3009f7a    5d                     pop ebp
0xb3009f7b    c3                     ret
0xb3009f7c    90                     nop
        ;; B11
        ;; t0 <- LoadLocal:49(this lvl:0)
0xb3009f7d    8b45f8                 mov eax,[ebp-0x8]
0xb3009f80    50                     push eax
        ;; PushArgument:50(t0)
        ;; t0 <- InstanceCall:51(get:length, t0)
0xb3009f81    b9d1ba29b3             mov ecx,0xb329bad1  'ICData target:'get:length' num-checks: 0'
0xb3009f86    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3009f8b    e88862ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3009f90    83c404                 add esp,0x4
0xb3009f93    50                     push eax
        ;; PushArgument:52(t0)
        ;; t0 <- LoadLocal:53(other lvl:0)
0xb3009f94    8b45f4                 mov eax,[ebp-0xc]
0xb3009f97    50                     push eax
        ;; PushArgument:54(t0)
        ;; t0 <- InstanceCall:55(get:length, t0)
0xb3009f98    b921bb29b3             mov ecx,0xb329bb21  'ICData target:'get:length' num-checks: 0'
0xb3009f9d    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb3009fa2    e87162ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb3009fa7    83c404                 add esp,0x4
0xb3009faa    50                     push eax
        ;; PushArgument:56(t0)
        ;; t0 <- InstanceCall:57(-, t0, t0)
0xb3009fab    b971bb29b3             mov ecx,0xb329bb71  'ICData target:'-' num-checks: 0'
0xb3009fb0    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009fb5    e81e63ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009fba    83c408                 add esp,0x8
0xb3009fbd    50                     push eax
        ;; PushArgument:58(t0)
        ;; t0 <- Constant:59(#1)
0xb3009fbe    b802000000             mov eax,0x2
0xb3009fc3    50                     push eax
        ;; PushArgument:60(t0)
        ;; t0 <- InstanceCall:61(+, t0, t0)
0xb3009fc4    b9c9bb29b3             mov ecx,0xb329bbc9  'ICData target:'+' num-checks: 0'
0xb3009fc9    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009fce    e80563ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009fd3    83c408                 add esp,0x8
0xb3009fd6    50                     push eax
        ;; StoreLocal:62(len, t0, lvl: 0)
0xb3009fd7    58                     pop eax
0xb3009fd8    8945e8                 mov [ebp-0x18],eax
        ;; t0 <- LoadLocal:63(start lvl:0)
0xb3009fdb    8b45f0                 mov eax,[ebp-0x10]
0xb3009fde    50                     push eax
        ;; StoreLocal:64(index, t0, lvl: 0)
0xb3009fdf    58                     pop eax
0xb3009fe0    8945e4                 mov [ebp-0x1c],eax
        ;; goto:88 14
        ;; B14
        ;; t0 <- LoadLocal:90(index lvl:0)
0xb3009fe3    8b45e4                 mov eax,[ebp-0x1c]
0xb3009fe6    50                     push eax
        ;; t1 <- LoadLocal:91(len lvl:0)
0xb3009fe7    8b45e8                 mov eax,[ebp-0x18]
0xb3009fea    50                     push eax
        ;; Branch if RelationalOp:92(<, t0, t1) goto (15, 16)
0xb3009feb    59                     pop ecx
0xb3009fec    58                     pop eax
0xb3009fed    50                     push eax
0xb3009fee    51                     push ecx
0xb3009fef    b921bc29b3             mov ecx,0xb329bc21  'ICData target:'<' num-checks: 0'
0xb3009ff4    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb3009ff9    e8da62ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb3009ffe    83c408                 add esp,0x8
0xb300a001    3d391030b3             cmp eax, 0xb3301039  'true'
0xb300a006    0f858d000000           jnz 0xb300a099
        ;; B15
        ;; CheckStackOverflow:65()
0xb300a00c    3b25bc195809           cmp esp,[0x95819bc]
0xb300a012    0f86b8000000           jna 0xb300a0d0
        ;; t0 <- LoadLocal:66(this lvl:0)
0xb300a018    8b45f8                 mov eax,[ebp-0x8]
0xb300a01b    50                     push eax
        ;; PushArgument:67(t0)
        ;; t0 <- LoadLocal:68(index lvl:0)
0xb300a01c    8b45e4                 mov eax,[ebp-0x1c]
0xb300a01f    50                     push eax
        ;; PushArgument:69(t0)
        ;; t0 <- LoadLocal:70(other lvl:0)
0xb300a020    8b45f4                 mov eax,[ebp-0xc]
0xb300a023    50                     push eax
        ;; PushArgument:71(t0)
        ;; t0 <- InstanceCall:72(_substringMatches@0x36924d72, t0, t0, t0)
0xb300a024    b979bc29b3             mov ecx,0xb329bc79  'ICData target:'_substringMatches@0x36924d72' num-checks: 0'
0xb300a029    ba81bc0bb3             mov edx,0xb30bbc81  Array[3, 3, null]
0xb300a02e    e8e561ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300a033    83c40c                 add esp,0xc
0xb300a036    50                     push eax
        ;; t1 <- Constant:73(#true)
0xb300a037    b8391030b3             mov eax,0xb3301039  'true'
0xb300a03c    50                     push eax
        ;; Branch if StrictCompare:74(===, t0, t1) goto (12, 13)
0xb300a03d    58                     pop eax
0xb300a03e    59                     pop ecx
0xb300a03f    51                     push ecx
0xb300a040    50                     push eax
0xb300a041    e8c2673702             call 0xb5380808  [stub: IdenticalWithNumberCheck]
0xb300a046    58                     pop eax
0xb300a047    59                     pop ecx
0xb300a048    0f8520000000           jnz 0xb300a06e
        ;; B12
        ;; t0 <- LoadLocal:76(index lvl:0)
0xb300a04e    8b45e4                 mov eax,[ebp-0x1c]
0xb300a051    50                     push eax
        ;; Return:77(t0)
0xb300a052    58                     pop eax
0xb300a053    ba21a71ab3             mov edx,0xb31aa721  'Function 'indexOf':.'
0xb300a058    ff422b                 inc [edx+0x2b]
0xb300a05b    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300a062    7c05                   jl 0xb300a069
0xb300a064    e84f68ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300a069    89ec                   mov esp,ebp
0xb300a06b    5d                     pop ebp
0xb300a06c    c3                     ret
0xb300a06d    90                     nop
        ;; B13
        ;; t0 <- LoadLocal:80(index lvl:0)
0xb300a06e    8b45e4                 mov eax,[ebp-0x1c]
0xb300a071    50                     push eax
        ;; t0 <- StoreLocal:81(:expr_temp, t0, lvl: 0)
0xb300a072    58                     pop eax
0xb300a073    8945ec                 mov [ebp-0x14],eax
0xb300a076    50                     push eax
        ;; PushArgument:82(t0)
        ;; t0 <- Constant:83(#1)
0xb300a077    b802000000             mov eax,0x2
0xb300a07c    50                     push eax
        ;; PushArgument:84(t0)
        ;; t0 <- InstanceCall:85(+, t0, t0)
0xb300a07d    b9c9bc29b3             mov ecx,0xb329bcc9  'ICData target:'+' num-checks: 0'
0xb300a082    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300a087    e84c62ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300a08c    83c408                 add esp,0x8
0xb300a08f    50                     push eax
        ;; StoreLocal:86(index, t0, lvl: 0)
0xb300a090    58                     pop eax
0xb300a091    8945e4                 mov [ebp-0x1c],eax
        ;; goto:89 14
0xb300a094    e94affffff             jmp 0xb3009fe3
        ;; B16
        ;; t0 <- Constant:96(#-1)
0xb300a099    b8feffffff             mov eax,0xfffffffe
0xb300a09e    50                     push eax
        ;; Return:97(t0)
0xb300a09f    58                     pop eax
0xb300a0a0    ba21a71ab3             mov edx,0xb31aa721  'Function 'indexOf':.'
0xb300a0a5    ff422b                 inc [edx+0x2b]
0xb300a0a8    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300a0af    7c05                   jl 0xb300a0b6
0xb300a0b1    e80268ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300a0b6    89ec                   mov esp,ebp
0xb300a0b8    5d                     pop ebp
0xb300a0b9    c3                     ret
0xb300a0ba    90                     nop
0xb300a0bb    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300a0bc    b970d30a08             mov ecx,0x80ad370
0xb300a0c1    ba00000000             mov edx,0
0xb300a0c6    e85d5f3702             call 0xb5380028  [stub: CallToRuntime]
0xb300a0cb    e96dfdffff             jmp 0xb3009e3d
        ;; CheckStackOverflowSlowPath
0xb300a0d0    b970d30a08             mov ecx,0x80ad370
0xb300a0d5    ba00000000             mov edx,0
0xb300a0da    e8495f3702             call 0xb5380028  [stub: CallToRuntime]
0xb300a0df    e934ffffff             jmp 0xb300a018
0xb300a0e4    e94f633702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300a0e9    e92a643702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 92 : 0xb3009e04 'ICData target:'indexOf' num-checks: 0'
 154 : 0xb3009e42 'ICData target:'get:isEmpty' num-checks: 0'
 159 : 0xb3009e47 'ImmutableArray'
 173 : 0xb3009e55 'true'
 204 : 0xb3009e74 'ICData target:'get:length' num-checks: 0'
 209 : 0xb3009e79 'ImmutableArray'
 227 : 0xb3009e8b 'ICData target:'<' num-checks: 0'
 232 : 0xb3009e90 'ImmutableArray'
 245 : 0xb3009e9d 'true'
 273 : 0xb3009eb9 'ICData target:'get:length' num-checks: 0'
 278 : 0xb3009ebe 'ImmutableArray'
 301 : 0xb3009ed5 'Function 'indexOf':.'
 342 : 0xb3009efe 'ICData target:'<' num-checks: 0'
 347 : 0xb3009f03 'ImmutableArray'
 360 : 0xb3009f10 'true'
 384 : 0xb3009f28 'ICData target:'get:length' num-checks: 0'
 389 : 0xb3009f2d 'ImmutableArray'
 407 : 0xb3009f3f 'ICData target:'>=' num-checks: 0'
 412 : 0xb3009f44 'ImmutableArray'
 425 : 0xb3009f51 'true'
 443 : 0xb3009f63 'Function 'indexOf':.'
 474 : 0xb3009f82 'ICData target:'get:length' num-checks: 0'
 479 : 0xb3009f87 'ImmutableArray'
 497 : 0xb3009f99 'ICData target:'get:length' num-checks: 0'
 502 : 0xb3009f9e 'ImmutableArray'
 516 : 0xb3009fac 'ICData target:'-' num-checks: 0'
 521 : 0xb3009fb1 'ImmutableArray'
 541 : 0xb3009fc5 'ICData target:'+' num-checks: 0'
 546 : 0xb3009fca 'ImmutableArray'
 584 : 0xb3009ff0 'ICData target:'<' num-checks: 0'
 589 : 0xb3009ff5 'ImmutableArray'
 602 : 0xb300a002 'true'
 637 : 0xb300a025 'ICData target:'_substringMatches@0x36924d72' num-checks: 0'
 642 : 0xb300a02a 'ImmutableArray'
 656 : 0xb300a038 'true'
 684 : 0xb300a054 'Function 'indexOf':.'
 726 : 0xb300a07e 'ICData target:'+' num-checks: 0'
 731 : 0xb300a083 'ImmutableArray'
 761 : 0xb300a0a1 'Function 'indexOf':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_indexOf' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb3009e41	deopt-before 	5		12981	-1
0xb3009e50	ic-call      	5		12981	-1
0xb3009e50	deopt-after  	5		12981	-1
0xb3009e73	deopt-before 	12		12991	-1
0xb3009e82	ic-call      	12		12991	-1
0xb3009e82	deopt-after  	12		12991	-1
0xb3009e8a	deopt-before 	13		12988	-1
0xb3009e99	ic-call      	13		12988	-1
0xb3009e99	deopt-after  	13		12988	-1
0xb3009eaf	deopt-before 	24		0	-1
0xb3009eb8	deopt-before 	19		12999	-1
0xb3009ec7	ic-call      	19		12999	-1
0xb3009ec7	deopt-after  	19		12999	-1
0xb3009ecf	deopt-before 	25		0	-1
0xb3009eea	other        	-1		0	-1
0xb3009eef	return       	-1		12985	-1
0xb3009efd	deopt-before 	32		13008	-1
0xb3009f0c	ic-call      	32		13008	-1
0xb3009f0c	deopt-after  	32		13008	-1
0xb3009f1a	deopt-before 	45		0	-1
0xb3009f27	deopt-before 	37		13019	-1
0xb3009f36	ic-call      	37		13019	-1
0xb3009f36	deopt-after  	37		13019	-1
0xb3009f3e	deopt-before 	38		13016	-1
0xb3009f4d	ic-call      	38		13016	-1
0xb3009f4d	deopt-after  	38		13016	-1
0xb3009f5b	deopt-before 	47		0	-1
0xb3009f78	other        	-1		0	-1
0xb3009f7d	return       	-1		13024	-1
0xb3009f81	deopt-before 	51		13036	-1
0xb3009f90	ic-call      	51		13036	-1
0xb3009f90	deopt-after  	51		13036	-1
0xb3009f98	deopt-before 	55		13041	-1
0xb3009fa7	ic-call      	55		13041	-1
0xb3009fa7	deopt-after  	55		13041	-1
0xb3009fab	deopt-before 	57		13038	-1
0xb3009fba	ic-call      	57		13038	-1
0xb3009fba	deopt-after  	57		13038	-1
0xb3009fc4	deopt-before 	61		13043	-1
0xb3009fd3	ic-call      	61		13043	-1
0xb3009fd3	deopt-after  	61		13043	-1
0xb3009fe3	deopt-before 	88		0	-1
0xb3009fef	deopt-before 	92		13058	-1
0xb3009ffe	ic-call      	92		13058	-1
0xb3009ffe	deopt-after  	92		13058	-1
0xb300a024	deopt-before 	72		13071	-1
0xb300a033	ic-call      	72		13071	-1
0xb300a033	deopt-after  	72		13071	-1
0xb300a069	other        	-1		0	-1
0xb300a06e	return       	-1		13079	-1
0xb300a07d	deopt-before 	85		13062	-1
0xb300a08c	ic-call      	85		13062	-1
0xb300a08c	deopt-after  	85		13062	-1
0xb300a094	deopt-before 	89		0	-1
0xb300a0b6	other        	-1		0	-1
0xb300a0bb	return       	-1		13085	-1
0xb300a0cb	other        	-1		12962	-1
0xb300a0df	other        	-1		13047	-1
0xb300a0e4	patch        	-1		0	-1
0xb300a0e9	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_indexOf' {
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_indexOf' {
  stack var 'this' offset -2 (valid 12342-13091)
  stack var 'other' offset -3 (valid 12965-13091)
  stack var 'start' offset -4 (valid 12969-13091)
  stack var 'len' offset -6 (valid 13031-13091)
  stack var 'index' offset -7 (valid 13050-13085)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_indexOf' {
No exception handlers
}
Static call target functions {
}
Compiling optimized function: 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' @ token 12784
Before Optimizations
==== dart:core__StringBase@0x36924d72__substringMatches@0x36924d72
B0[graph] {
      v0 <- Constant:93(#null)
      v1 <- Parameter:94(0)
      v2 <- Parameter:95(1)
      v3 <- Parameter:96(2)
}
B1[target]
    CheckStackOverflow:2()
    PushArgument:4(v3)
    v4 <- InstanceCall:5(get:isEmpty, v3 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v2, v3, v0, v0, v0, a0 }
    v5 <- Constant:6(#true)
    Branch if StrictCompare:7(===, v4, v5) goto (2, 3)
B2[target]
    v23 <- Constant:9(#true)
    Return:10(v23)
B3[target]
    v6 <- Constant:14(#0)
    Branch if RelationalOp:15(<, v2, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (6, 4) env={ v1, v2, v3, v0, v0, v0, v2, v6 }
B6[target]
    goto:28 5 env={ v1, v2, v3, v0, v0, v0 }
B4[target]
    PushArgument:19(v1)
    v7 <- InstanceCall:20(get:length, v1 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v2, v3, v0, v0, v0, v2, a0 }
    Branch if RelationalOp:21(>=, v2, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (7, 8) env={ v1, v2, v3, v0, v0, v0, v2, v7 }
B7[target]
    goto:30 5 env={ v1, v2, v3, v0, v0, v0 }
B5[join] pred(B6, B7)
    v22 <- Constant:24(#false)
    Return:25(v22)
B8[target]
    PushArgument:33(v3)
    v8 <- InstanceCall:34(get:length, v3 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v2, v3, v0, v0, v0, a0 }
    PushArgument:37(v2)
    PushArgument:39(v8)
    v9 <- InstanceCall:40(+, v2, v8 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) env={ v1, v2, v3, v0, v8, v0, a0, a1 }
    PushArgument:42(v1)
    v10 <- InstanceCall:43(get:length, v1 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v2, v3, v0, v8, v0, v9, a0 }
    Branch if RelationalOp:44(>, v9, v10 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (9, 10) env={ v1, v2, v3, v0, v8, v0, v9, v10 }
B9[target]
    v21 <- Constant:46(#false)
    Return:47(v21)
B10[target]
    v11 <- Constant:50(#0)
    goto:81 13 env={ v1, v2, v3, v0, v8, v11 }
B13[join] pred(B10, B12) {
      v12 <- phi(v0, v13) dead
      v13 <- phi(v11, v19) alive
}
    Branch if RelationalOp:85(<, v13, v8 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (14, 15) env={ v1, v2, v3, v12, v8, v13, v13, v8 }
B14[target]
    CheckStackOverflow:52()
    PushArgument:54(v1)
    PushArgument:56(v13)
    PushArgument:58(v2)
    v15 <- InstanceCall:59(+, v13, v2 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) env={ v1, v2, v3, v12, v8, v13, a0, a1, a2 }
    PushArgument:60(v15)
    v16 <- InstanceCall:61(charCodeAt, v1, v15 IC[1: _OneByteString@0x36924d72 #222]) env={ v1, v2, v3, v12, v8, v13, a0, a1 }
    PushArgument:63(v3)
    PushArgument:65(v13)
    v17 <- InstanceCall:66(charCodeAt, v3, v13 IC[1: _OneByteString@0x36924d72 #222]) env={ v1, v2, v3, v12, v8, v13, v16, a0, a1 }
    Branch if EqualityCompare:67(v16 != v17 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (11, 12) env={ v1, v2, v3, v12, v8, v13, v16, v17 }
B11[target]
    v20 <- Constant:69(#false)
    Return:70(v20)
B12[target]
    PushArgument:75(v13)
    v18 <- Constant:76(#1)
    PushArgument:77(v18)
    v19 <- InstanceCall:78(+, v13, v18 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #26]) env={ v1, v2, v3, v13, v8, v13, a0, a1 }
    goto:82 13 env={ v1, v2, v3, v13, v8, v19 }
B15[target]
    v14 <- Constant:89(#true)
    Return:90(v14)
Inlining calls in Function '_substringMatches@0x36924d72':.
Before Inlining of dart:core__StringBase@0x36924d72__substringMatches@0x36924d72
==== dart:core__StringBase@0x36924d72__substringMatches@0x36924d72
B0[graph] {
      v0 <- Constant:93(#null)
      v1 <- Parameter:94(0)
      v2 <- Parameter:95(1)
      v3 <- Parameter:96(2)
}
B1[target]
    CheckStackOverflow:2()
    CheckClass:5(v3 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v2, v3, v0, v0, v0, v3 }
    v24 <- LoadField:98(v3, 4, immutable=1)
    v25 <- Constant:99(#0)
    v4 <- StrictCompare:100(===, v24, v25) env={ v1, v2, v3, v0, v0, v0, v3 }
    v5 <- Constant:6(#true)
    Branch if StrictCompare:7(===, v4, v5) goto (2, 3)
B2[target]
    v23 <- Constant:9(#true)
    Return:10(v23)
B3[target]
    v6 <- Constant:14(#0)
    CheckSmi:15(v2) env={ v1, v2, v3, v0, v0, v0, v2, v6 }
    CheckSmi:15(v6) env={ v1, v2, v3, v0, v0, v0, v2, v6 }
    Branch if RelationalOp:15(<, v2, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (6, 4) env={ v1, v2, v3, v0, v0, v0, v2, v6 }
B6[target]
    goto:28 5 env={ v1, v2, v3, v0, v0, v0 }
B4[target]
    CheckClass:20(v1 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v2, v3, v0, v0, v0, v2, v1 }
    v7 <- LoadField:104(v1, 4, immutable=1) env={ v1, v2, v3, v0, v0, v0, v2, v1 }
    CheckSmi:21(v2) env={ v1, v2, v3, v0, v0, v0, v2, v7 }
    CheckSmi:21(v7) env={ v1, v2, v3, v0, v0, v0, v2, v7 }
    Branch if RelationalOp:21(>=, v2, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (7, 8) env={ v1, v2, v3, v0, v0, v0, v2, v7 }
B7[target]
    goto:30 5 env={ v1, v2, v3, v0, v0, v0 }
B5[join] pred(B6, B7)
    v22 <- Constant:24(#false)
    Return:25(v22)
B8[target]
    CheckClass:34(v3 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v2, v3, v0, v0, v0, v3 }
    v8 <- LoadField:108(v3, 4, immutable=1) env={ v1, v2, v3, v0, v0, v0, v3 }
    CheckSmi:40(v2) env={ v1, v2, v3, v0, v8, v0, v2, v8 }
    CheckSmi:40(v8) env={ v1, v2, v3, v0, v8, v0, v2, v8 }
    v9 <- BinarySmiOp:40(+, v2, v8) +o env={ v1, v2, v3, v0, v8, v0, v2, v8 }
    CheckClass:43(v1 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v2, v3, v0, v8, v0, v9, v1 }
    v10 <- LoadField:113(v1, 4, immutable=1) env={ v1, v2, v3, v0, v8, v0, v9, v1 }
    CheckSmi:44(v9) env={ v1, v2, v3, v0, v8, v0, v9, v10 }
    CheckSmi:44(v10) env={ v1, v2, v3, v0, v8, v0, v9, v10 }
    Branch if RelationalOp:44(>, v9, v10 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (9, 10) env={ v1, v2, v3, v0, v8, v0, v9, v10 }
B9[target]
    v21 <- Constant:46(#false)
    Return:47(v21)
B10[target]
    v11 <- Constant:50(#0)
    goto:81 13 env={ v1, v2, v3, v0, v8, v11 }
B13[join] pred(B10, B12) {
      v12 <- phi(v0, v13) dead
      v13 <- phi(v11, v19) alive
}
    CheckSmi:85(v13) env={ v1, v2, v3, v12, v8, v13, v13, v8 }
    CheckSmi:85(v8) env={ v1, v2, v3, v12, v8, v13, v13, v8 }
    Branch if RelationalOp:85(<, v13, v8 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (14, 15) env={ v1, v2, v3, v12, v8, v13, v13, v8 }
B14[target]
    CheckStackOverflow:52()
    CheckSmi:59(v13) env={ v1, v2, v3, v12, v8, v13, v1, v13, v2 }
    CheckSmi:59(v2) env={ v1, v2, v3, v12, v8, v13, v1, v13, v2 }
    v15 <- BinarySmiOp:59(+, v13, v2) +o env={ v1, v2, v3, v12, v8, v13, v1, v13, v2 }
    CheckClass:61(v1 IC[1: _OneByteString@0x36924d72 #222]) env={ v1, v2, v3, v12, v8, v13, v1, v15 }
    CheckSmi:61(v15) env={ v1, v2, v3, v12, v8, v13, v1, v15 }
    CheckArrayBound:61(v1, v15) env={ v1, v2, v3, v12, v8, v13, v1, v15 }
    v16 <- StringCharCodeAt:124(v1, v15) env={ v1, v2, v3, v12, v8, v13, v1, v15 }
    CheckClass:66(v3 IC[1: _OneByteString@0x36924d72 #222]) env={ v1, v2, v3, v12, v8, v13, v16, v3, v13 }
    CheckSmi:66(v13) env={ v1, v2, v3, v12, v8, v13, v16, v3, v13 }
    CheckArrayBound:66(v3, v13) env={ v1, v2, v3, v12, v8, v13, v16, v3, v13 }
    v17 <- StringCharCodeAt:128(v3, v13) env={ v1, v2, v3, v12, v8, v13, v16, v3, v13 }
    CheckSmi:67(v16) env={ v1, v2, v3, v12, v8, v13, v16, v17 }
    CheckSmi:67(v17) env={ v1, v2, v3, v12, v8, v13, v16, v17 }
    Branch if EqualityCompare:67(v16 != v17 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (11, 12) env={ v1, v2, v3, v12, v8, v13, v16, v17 }
B11[target]
    v20 <- Constant:69(#false)
    Return:70(v20)
B12[target]
    v18 <- Constant:76(#1)
    CheckSmi:78(v13) env={ v1, v2, v3, v13, v8, v13, v13, v18 }
    CheckSmi:78(v18) env={ v1, v2, v3, v13, v8, v13, v13, v18 }
    v19 <- BinarySmiOp:78(+, v13, v18) +o env={ v1, v2, v3, v13, v8, v13, v13, v18 }
    goto:82 13 env={ v1, v2, v3, v13, v8, v19 }
B15[target]
    v14 <- Constant:89(#true)
    Return:90(v14)
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Replacing v6 with v25
Removing CheckSmi
Removing CheckClass
Replacing v8 with v24
Removing CheckSmi
Removing CheckClass
Replacing v10 with v7
Replacing v11 with v25
Replacing v14 with v5
Removing CheckSmi
Removing CheckClass
Removing CheckClass
Replacing v23 with v5
Back edge B12 -> B13
  B6
  B8
  B9
Hoisting instruction Constant:76 from B12 to B10
After Optimizations:
==== dart:core__StringBase@0x36924d72__substringMatches@0x36924d72
  0: B0[graph] {
      v0 <- Constant:93(#null) {PT: Null} {PCid: Null}
      v1 <- Parameter:94(0) {PT: _StringBase@0x36924d72} {PCid: dynamic}
      v2 <- Parameter:95(1) {PT: dynamic} {PCid: dynamic}
      v3 <- Parameter:96(2) {PT: dynamic} {PCid: dynamic}
}
  2: B1[target] ParallelMove eax <- S-1
  4:     CheckStackOverflow:2()
  6:     CheckClass:5(v3 IC[1: _OneByteString@0x36924d72 #207]) env={ v1 [S-3], v2 [S-2], v3 [eax], v0 [C], v0 [C], v0 [C], v3 [eax] }
  8:     v24 <- LoadField:98(v3, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [-1073741824, 1073741823]
  9:     ParallelMove S+1 <- ecx
 10:     v25 <- Constant:99(#0) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, 0]
 12:     v4 <- StrictCompare:100(===, v24, v25) {PT: bool} {PCid: bool}
 14:     v5 <- Constant:6(#true) {PT: bool} {PCid: bool}
 15:     ParallelMove S+0 <- ebx
 16:     Branch if StrictCompare:7(===, v4, v5) goto (2, 3)
 18: B2[target]
 19:     ParallelMove eax <- ebx
 20:     Return:10(v5)
 22: B3[target] ParallelMove edx <- S-2
 24:     CheckSmi:15(v2) env={ v1 [S-3], v2 [edx], v3 [eax], v0 [C], v0 [C], v0 [C], v2 [edx], v25 [C] }
 26:     Branch if RelationalOp:15(<, v2, v25 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (6, 4)
 28: B6[target]
 30:     goto:28 5
 32: B4[target] ParallelMove edi <- S-3
 34:     CheckClass:20(v1 IC[1: _OneByteString@0x36924d72 #207]) env={ v1 [edi], v2 [edx], v3 [eax], v0 [C], v0 [C], v0 [C], v2 [edx], v1 [edi] }
 36:     v7 <- LoadField:104(v1, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
 38:     Branch if RelationalOp:21(>=, v2, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (7, 8)
 40: B7[target]
 42:     goto:30 5
 44: B5[join] pred(B6, B7)
 46:     v22 <- Constant:24(#false) {PT: bool} {PCid: bool}
 47:     ParallelMove eax <- eax
 48:     Return:25(v22)
 50: B8[target]
 52:     ParallelMove eax <- edx
 52:     v9 <- BinarySmiOp:40(+, v2, v24) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741824, +inf] +o env={ v1 [edi], v2 [edx], v3 [S-1], v0 [C], v24 [ecx], v0 [C], v2 [edx], v24 [ecx] }
 54:     Branch if RelationalOp:44(>, v9, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (9, 10)
 56: B9[target]
 58:     v21 <- Constant:46(#false) {PT: bool} {PCid: bool}
 59:     ParallelMove eax <- eax
 60:     Return:47(v21)
 62: B10[target]
 64:     v18 <- Constant:81(#1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, 1]
 66:     ParallelMove ebx <- C, eax <- S-1 goto:81 13
 68: B13[join] pred(B10, B12) {
      v13 <- phi(v25, v19) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} alive [0, 1073741823]
}
 70:     Branch if RelationalOp:85(<, v13, v24 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (14, 15)
 72: B14[target]
 74:     CheckStackOverflow:52()
 76:     ParallelMove ecx <- ebx
 76:     v15 <- BinarySmiOp:59(+, v13, v2) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, v24+1073741822] -o
 78:     CheckArrayBound:61(v1, v15) env={ v1 [edi], v2 [edx], v3 [eax], v0 [C], v24 [S+1], v13 [ebx], v1 [edi], v15 [ecx] }
 80:     v16 <- StringCharCodeAt:124(v1, v15) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
 82:     CheckArrayBound:66(v3, v13) env={ v1 [edi], v2 [S-2], v3 [eax], v0 [C], v24 [S+1], v13 [ebx], v16 [edx], v3 [eax], v13 [ebx] }
 84:     v17 <- StringCharCodeAt:128(v3, v13) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
 86:     Branch if EqualityCompare:67(v16 != v17 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (11, 12)
 88: B11[target]
 90:     v20 <- Constant:69(#false) {PT: bool} {PCid: bool}
 91:     ParallelMove eax <- eax
 92:     Return:70(v20)
 94: B12[target]
 96:     ParallelMove ebx <- ebx
 96:     v19 <- BinarySmiOp:78(+, v13, v18) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, v24] -o
 98:     ParallelMove ebx <- ebx, edx <- S-2, ecx <- S+1 goto:82 13
100: B15[target]
101:     ParallelMove eax <- S+0
102:     Return:90(v5)
--> patching entry 0xb3001be8
--> 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' entry: 0xb300a108 time: 1531 us
Code for optimized function 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' {
        ;; Enter frame
0xb300a108    55                     push ebp
0xb300a109    89e5                   mov ebp,esp
0xb300a10b    e800000000             call 0xb300a110
0xb300a110    83ec08                 sub esp,0x8
        ;; B0
        ;; B1
0xb300a113    8b4508                 mov eax,[ebp+0x8]
        ;; CheckStackOverflow:2()
0xb300a116    3b25bc195809           cmp esp,[0x95819bc]
0xb300a11c    0f8618010000           jna 0xb300a23a
        ;; CheckClass:5(v3 IC[1: _OneByteString@0x36924d72 #207])
0xb300a122    a801                   test al,0x1
0xb300a124    0f8444010000           jz 0xb300a26e
0xb300a12a    0fb74801               movzx_w ecx,[eax+0x1]
0xb300a12e    83f94d                 cmp ecx,0x4d
0xb300a131    0f8537010000           jnz 0xb300a26e
        ;; v24 <- LoadField:98(v3, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [-1073741824, 1073741823]
0xb300a137    8b4803                 mov ecx,[eax+0x3]
        ;; ParallelMove S+1 <- ecx
0xb300a13a    894df4                 mov [ebp-0xc],ecx
        ;; v25 <- Constant:99(#0) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, 0]
        ;; v4 <- StrictCompare:100(===, v24, v25) {PT: bool} {PCid: bool}
0xb300a13d    85c9                   test ecx,ecx
0xb300a13f    7407                   jz 0xb300a148
0xb300a141    ba411030b3             mov edx,0xb3301041  'false'
0xb300a146    eb05                   jmp 0xb300a14d
0xb300a148    ba391030b3             mov edx,0xb3301039  'true'
        ;; v5 <- Constant:6(#true) {PT: bool} {PCid: bool}
0xb300a14d    bb391030b3             mov ebx,0xb3301039  'true'
        ;; ParallelMove S+0 <- ebx
0xb300a152    895df8                 mov [ebp-0x8],ebx
        ;; Branch if StrictCompare:7(===, v4, v5) goto (2, 3)
0xb300a155    81fa391030b3           cmp edx,0xb3301039
0xb300a15b    0f8507000000           jnz 0xb300a168
        ;; B2
        ;; ParallelMove eax <- ebx
0xb300a161    89d8                   mov eax,ebx
        ;; Return:10(v5)
0xb300a163    89ec                   mov esp,ebp
0xb300a165    5d                     pop ebp
0xb300a166    c3                     ret
0xb300a167    90                     nop
        ;; B3
0xb300a168    8b550c                 mov edx,[ebp+0xc]
        ;; CheckSmi:15(v2)
0xb300a16b    f6c201                 test_b edx,0x1
0xb300a16e    0f85ff000000           jnz 0xb300a273
        ;; Branch if RelationalOp:15(<, v2, v25 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (6, 4)
0xb300a174    83fa00                 cmp edx,0
0xb300a177    0f8d05000000           jnl 0xb300a182
        ;; B6
        ;; goto:28 5
0xb300a17d    e927000000             jmp 0xb300a1a9
        ;; B4
0xb300a182    8b7d10                 mov edi,[ebp+0x10]
        ;; CheckClass:20(v1 IC[1: _OneByteString@0x36924d72 #207])
0xb300a185    f7c701000000           test edi,0x1
0xb300a18b    0f84e7000000           jz 0xb300a278
0xb300a191    0fb75f01               movzx_w ebx,[edi+0x1]
0xb300a195    83fb4d                 cmp ebx,0x4d
0xb300a198    0f85da000000           jnz 0xb300a278
        ;; v7 <- LoadField:104(v1, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
0xb300a19e    8b5f03                 mov ebx,[edi+0x3]
        ;; Branch if RelationalOp:21(>=, v2, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (7, 8)
0xb300a1a1    3bd3                   cmp edx,ebx
0xb300a1a3    0f8c0a000000           jl 0xb300a1b3
        ;; B7
        ;; goto:30 5
        ;; B5
        ;; v22 <- Constant:24(#false) {PT: bool} {PCid: bool}
0xb300a1a9    b8411030b3             mov eax,0xb3301041  'false'
        ;; ParallelMove eax <- eax
        ;; Return:25(v22)
0xb300a1ae    89ec                   mov esp,ebp
0xb300a1b0    5d                     pop ebp
0xb300a1b1    c3                     ret
0xb300a1b2    90                     nop
        ;; B8
        ;; ParallelMove eax <- edx
0xb300a1b3    89d0                   mov eax,edx
        ;; v9 <- BinarySmiOp:40(+, v2, v24) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741824, +inf] +o
0xb300a1b5    03c1                   add eax,ecx
0xb300a1b7    0f80c0000000           jo 0xb300a27d
        ;; Branch if RelationalOp:44(>, v9, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (9, 10)
0xb300a1bd    3bc3                   cmp eax,ebx
0xb300a1bf    0f8e0a000000           jng 0xb300a1cf
        ;; B9
        ;; v21 <- Constant:46(#false) {PT: bool} {PCid: bool}
0xb300a1c5    b8411030b3             mov eax,0xb3301041  'false'
        ;; ParallelMove eax <- eax
        ;; Return:47(v21)
0xb300a1ca    89ec                   mov esp,ebp
0xb300a1cc    5d                     pop ebp
0xb300a1cd    c3                     ret
0xb300a1ce    90                     nop
        ;; B10
        ;; v18 <- Constant:81(#1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, 1]
        ;; ParallelMove ebx <- C, eax <- S-1 goto:81 13
0xb300a1cf    8b4508                 mov eax,[ebp+0x8]
0xb300a1d2    33db                   xor ebx,ebx
        ;; B13
        ;; Branch if RelationalOp:85(<, v13, v24 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (14, 15)
0xb300a1d4    3bd9                   cmp ebx,ecx
0xb300a1d6    0f8d55000000           jnl 0xb300a231
        ;; B14
        ;; CheckStackOverflow:52()
0xb300a1dc    3b25bc195809           cmp esp,[0x95819bc]
0xb300a1e2    0f8668000000           jna 0xb300a250
        ;; ParallelMove ecx <- ebx
0xb300a1e8    89d9                   mov ecx,ebx
        ;; v15 <- BinarySmiOp:59(+, v13, v2) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, v24+1073741822] -o
0xb300a1ea    03ca                   add ecx,edx
        ;; CheckArrayBound:61(v1, v15)
0xb300a1ec    3b4f03                 cmp ecx,[edi+0x3]
0xb300a1ef    0f838d000000           jnc 0xb300a282
        ;; v16 <- StringCharCodeAt:124(v1, v15) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
0xb300a1f5    d1f9                   sar ecx, 1
0xb300a1f7    0fb6540f0b             movzx_b edx,[edi+ecx*0x1+0xb]
0xb300a1fc    03c9                   add ecx,ecx
0xb300a1fe    03d2                   add edx,edx
        ;; CheckArrayBound:66(v3, v13)
0xb300a200    3b5803                 cmp ebx,[eax+0x3]
0xb300a203    0f837e000000           jnc 0xb300a287
        ;; v17 <- StringCharCodeAt:128(v3, v13) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
0xb300a209    d1fb                   sar ebx, 1
0xb300a20b    0fb64c180b             movzx_b ecx,[eax+ebx*0x1+0xb]
0xb300a210    03db                   add ebx,ebx
0xb300a212    03c9                   add ecx,ecx
        ;; Branch if EqualityCompare:67(v16 != v17 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (11, 12)
0xb300a214    3bd1                   cmp edx,ecx
0xb300a216    0f840a000000           jz 0xb300a226
        ;; B11
        ;; v20 <- Constant:69(#false) {PT: bool} {PCid: bool}
0xb300a21c    b8411030b3             mov eax,0xb3301041  'false'
        ;; ParallelMove eax <- eax
        ;; Return:70(v20)
0xb300a221    89ec                   mov esp,ebp
0xb300a223    5d                     pop ebp
0xb300a224    c3                     ret
0xb300a225    90                     nop
        ;; B12
        ;; ParallelMove ebx <- ebx
        ;; v19 <- BinarySmiOp:78(+, v13, v18) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, v24] -o
0xb300a226    83c302                 add ebx,0x2
        ;; ParallelMove ebx <- ebx, edx <- S-2, ecx <- S+1 goto:82 13
0xb300a229    8b550c                 mov edx,[ebp+0xc]
0xb300a22c    8b4df4                 mov ecx,[ebp-0xc]
0xb300a22f    eba3                   jmp 0xb300a1d4
        ;; B15
        ;; ParallelMove eax <- S+0
0xb300a231    8b45f8                 mov eax,[ebp-0x8]
        ;; Return:90(v5)
0xb300a234    89ec                   mov esp,ebp
0xb300a236    5d                     pop ebp
0xb300a237    c3                     ret
0xb300a238    90                     nop
0xb300a239    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300a23a    50                     push eax
0xb300a23b    b970d30a08             mov ecx,0x80ad370
0xb300a240    ba00000000             mov edx,0
0xb300a245    e8de5d3702             call 0xb5380028  [stub: CallToRuntime]
0xb300a24a    58                     pop eax
0xb300a24b    e9d2feffff             jmp 0xb300a122
        ;; CheckStackOverflowSlowPath
0xb300a250    50                     push eax
0xb300a251    51                     push ecx
0xb300a252    52                     push edx
0xb300a253    53                     push ebx
0xb300a254    57                     push edi
0xb300a255    b970d30a08             mov ecx,0x80ad370
0xb300a25a    ba00000000             mov edx,0
0xb300a25f    e8c45d3702             call 0xb5380028  [stub: CallToRuntime]
0xb300a264    5f                     pop edi
0xb300a265    5b                     pop ebx
0xb300a266    5a                     pop edx
0xb300a267    59                     pop ecx
0xb300a268    58                     pop eax
0xb300a269    e97affffff             jmp 0xb300a1e8
        ;; Deopt stub for id 5
0xb300a26e    e805623702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 15
0xb300a273    e800623702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 20
0xb300a278    e8fb613702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 40
0xb300a27d    e8f6613702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 61
0xb300a282    e8f1613702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 66
0xb300a287    e8ec613702             call 0xb5380478  [stub: Deoptimize]
0xb300a28c    e9a7613702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300a291    e982623702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 58 : 0xb300a142 'false'
 65 : 0xb300a149 'true'
 70 : 0xb300a14e 'true'
 79 : 0xb300a157 'true'
 162 : 0xb300a1aa 'false'
 190 : 0xb300a1c6 'false'
 277 : 0xb300a21d 'false'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300a168	return       	-1		12801	-1
0xb300a1b3	return       	-1		12825	-1
0xb300a1cf	return       	-1		12855	-1
0xb300a226	return       	-1		12903	-1
0xb300a239	return       	-1		12908	-1
0xb300a24a	other        	-1		12784	-1
0xb300a264	other        	-1		12859	-1
0xb300a28c	patch        	-1		0	-1
0xb300a291	lazy-deopt   	-1		0	-1
}
DeoptInfo: {
   0: 0xb300a273  [ret bef oti:0(5)][eax][const oti:1][const oti:1][const oti:1][pcmark oti:0][callerfp][callerpc][eax][s1][s0]  (CheckClass)
   1: 0xb300a278  [ret bef oti:0(15)][const oti:2][edx][const oti:1][const oti:1][const oti:1][pcmark oti:0][callerfp][callerpc][eax][edx][s0]  (CheckSmi)
   2: 0xb300a27d  [ret bef oti:0(20)][edi][edx][const oti:1][const oti:1][const oti:1][pcmark oti:0][callerfp][callerpc][eax][edx][edi]  (CheckClass)
   3: 0xb300a282  [ret bef oti:0(40)][ecx][edx][const oti:1][ecx][const oti:1][pcmark oti:0][callerfp][callerpc][s2][suffix 2:2]  (BinarySmiOp)
   4: 0xb300a287  [ret bef oti:0(61)][ecx][edi][ebx][s7][suffix 2:7]  (CheckArrayBound)
   5: 0xb300a28c  [ret bef oti:0(66)][ebx][eax][edx][ebx][s7][const oti:1][pcmark oti:0][callerfp][callerpc][eax][s1][edi]  (CheckArrayBound)
}
Object Table: {
  0: Function '_substringMatches@0x36924d72':.
  1: null
  2: 0
}
Stackmaps for function 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' {
0xb300a24a: 001
0xb300a264: 1111111
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' {
  stack var 'this' offset 4 (valid 12342-12912)
  stack var 'start' offset 3 (valid 12786-12912)
  stack var 'other' offset 2 (valid 12791-12912)
  stack var 'len' offset -3 (valid 12831-12912)
  stack var 'i' offset -4 (valid 12862-12908)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72__substringMatches@0x36924d72' {
No exception handlers
}
Static call target functions {
}
Compiling optimized function: 'dart:core__StringBase@0x36924d72_indexOf' @ token 12962
Before Optimizations
==== dart:core__StringBase@0x36924d72_indexOf
B0[graph] {
      v0 <- Constant:101(#null)
      v1 <- Parameter:102(0)
      v2 <- Parameter:103(1)
      v3 <- Parameter:104(2)
}
B1[target]
    CheckStackOverflow:2()
    PushArgument:4(v2)
    v4 <- InstanceCall:5(get:isEmpty, v2 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, a0 }
    v5 <- Constant:6(#true)
    Branch if StrictCompare:7(===, v4, v5) goto (5, 6)
B5[target]
    PushArgument:11(v1)
    v21 <- InstanceCall:12(get:length, v1 IC[0: ]) env={ v1, v2, v3, v0, v0, v0, v3, a0 }
    Branch if RelationalOp:13(<, v3, v21 IC[0: ]) goto (2, 3) env={ v1, v2, v3, v0, v0, v0, v3, v21 }
B2[target]
    goto:24 4 env={ v1, v2, v3, v3, v0, v0 }
B3[target]
    PushArgument:18(v1)
    v22 <- InstanceCall:19(get:length, v1 IC[0: ]) env={ v1, v2, v3, v0, v0, v0, a0 }
    goto:25 4 env={ v1, v2, v3, v22, v0, v0 }
B4[join] pred(B2, B3) {
      v23 <- phi(v3, v22) alive
}
    Return:27(v23)
B6[target]
    v6 <- Constant:31(#0)
    Branch if RelationalOp:32(<, v3, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (9, 7) env={ v1, v2, v3, v0, v0, v0, v3, v6 }
B9[target]
    goto:45 8 env={ v1, v2, v3, v0, v0, v0 }
B7[target]
    PushArgument:36(v1)
    v7 <- InstanceCall:37(get:length, v1 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, v3, a0 }
    Branch if RelationalOp:38(>=, v3, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (10, 11) env={ v1, v2, v3, v0, v0, v0, v3, v7 }
B10[target]
    goto:47 8 env={ v1, v2, v3, v0, v0, v0 }
B8[join] pred(B9, B10)
    v20 <- Constant:41(#-1)
    Return:42(v20)
B11[target]
    PushArgument:50(v1)
    v8 <- InstanceCall:51(get:length, v1 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, a0 }
    PushArgument:52(v8)
    PushArgument:54(v2)
    v9 <- InstanceCall:55(get:length, v2 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, a0, a1 }
    PushArgument:56(v9)
    v10 <- InstanceCall:57(-, v8, v9 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, a0, a1 }
    PushArgument:58(v10)
    v11 <- Constant:59(#1)
    PushArgument:60(v11)
    v12 <- InstanceCall:61(+, v10, v11 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, a0, a1 }
    goto:88 14 env={ v1, v2, v3, v0, v12, v3 }
B14[join] pred(B11, B13) {
      v13 <- phi(v0, v14) dead
      v14 <- phi(v3, v19) alive
}
    Branch if RelationalOp:92(<, v14, v12 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #957]) goto (15, 16) env={ v1, v2, v3, v13, v12, v14, v14, v12 }
B15[target]
    CheckStackOverflow:65()
    PushArgument:67(v1)
    PushArgument:69(v14)
    PushArgument:71(v2)
    v16 <- InstanceCall:72(_substringMatches@0x36924d72, v1, v14, v2 IC[1: _OneByteString@0x36924d72 #948]) env={ v1, v2, v3, v13, v12, v14, a0, a1, a2 }
    v17 <- Constant:73(#true)
    Branch if StrictCompare:74(===, v16, v17) goto (12, 13)
B12[target]
    Return:77(v14)
B13[target]
    PushArgument:82(v14)
    v18 <- Constant:83(#1)
    PushArgument:84(v18)
    v19 <- InstanceCall:85(+, v14, v18 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #937]) env={ v1, v2, v3, v14, v12, v14, a0, a1 }
    goto:89 14 env={ v1, v2, v3, v14, v12, v19 }
B16[target]
    v15 <- Constant:96(#-1)
    Return:97(v15)
Inlining calls in Function 'indexOf':.
Before Inlining of dart:core__StringBase@0x36924d72_indexOf
==== dart:core__StringBase@0x36924d72_indexOf
B0[graph] {
      v0 <- Constant:101(#null)
      v1 <- Parameter:102(0)
      v2 <- Parameter:103(1)
      v3 <- Parameter:104(2)
}
B1[target]
    CheckStackOverflow:2()
    CheckClass:5(v2 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, v2 }
    v24 <- LoadField:106(v2, 4, immutable=1)
    v25 <- Constant:107(#0)
    v4 <- StrictCompare:108(===, v24, v25) env={ v1, v2, v3, v0, v0, v0, v2 }
    v5 <- Constant:6(#true)
    Branch if StrictCompare:7(===, v4, v5) goto (5, 6)
B5[target]
    PushArgument:11(v1)
    v21 <- InstanceCall:12(get:length, v1 IC[0: ]) env={ v1, v2, v3, v0, v0, v0, v3, a0 }
    Branch if RelationalOp:13(<, v3, v21 IC[0: ]) goto (2, 3) env={ v1, v2, v3, v0, v0, v0, v3, v21 }
B2[target]
    goto:24 4 env={ v1, v2, v3, v3, v0, v0 }
B3[target]
    PushArgument:18(v1)
    v22 <- InstanceCall:19(get:length, v1 IC[0: ]) env={ v1, v2, v3, v0, v0, v0, a0 }
    goto:25 4 env={ v1, v2, v3, v22, v0, v0 }
B4[join] pred(B2, B3) {
      v23 <- phi(v3, v22) alive
}
    Return:27(v23)
B6[target]
    v6 <- Constant:31(#0)
    CheckSmi:32(v3) env={ v1, v2, v3, v0, v0, v0, v3, v6 }
    CheckSmi:32(v6) env={ v1, v2, v3, v0, v0, v0, v3, v6 }
    Branch if RelationalOp:32(<, v3, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (9, 7) env={ v1, v2, v3, v0, v0, v0, v3, v6 }
B9[target]
    goto:45 8 env={ v1, v2, v3, v0, v0, v0 }
B7[target]
    CheckClass:37(v1 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, v3, v1 }
    v7 <- LoadField:112(v1, 4, immutable=1) env={ v1, v2, v3, v0, v0, v0, v3, v1 }
    CheckSmi:38(v3) env={ v1, v2, v3, v0, v0, v0, v3, v7 }
    CheckSmi:38(v7) env={ v1, v2, v3, v0, v0, v0, v3, v7 }
    Branch if RelationalOp:38(>=, v3, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (10, 11) env={ v1, v2, v3, v0, v0, v0, v3, v7 }
B10[target]
    goto:47 8 env={ v1, v2, v3, v0, v0, v0 }
B8[join] pred(B9, B10)
    v20 <- Constant:41(#-1)
    Return:42(v20)
B11[target]
    CheckClass:51(v1 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, v1 }
    v8 <- LoadField:116(v1, 4, immutable=1) env={ v1, v2, v3, v0, v0, v0, v1 }
    CheckClass:55(v2 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, v8, v2 }
    v9 <- LoadField:118(v2, 4, immutable=1) env={ v1, v2, v3, v0, v0, v0, v8, v2 }
    CheckSmi:57(v8) env={ v1, v2, v3, v0, v0, v0, v8, v9 }
    CheckSmi:57(v9) env={ v1, v2, v3, v0, v0, v0, v8, v9 }
    v10 <- BinarySmiOp:57(-, v8, v9) +o env={ v1, v2, v3, v0, v0, v0, v8, v9 }
    v11 <- Constant:59(#1)
    CheckSmi:61(v10) env={ v1, v2, v3, v0, v0, v0, v10, v11 }
    CheckSmi:61(v11) env={ v1, v2, v3, v0, v0, v0, v10, v11 }
    v12 <- BinarySmiOp:61(+, v10, v11) +o env={ v1, v2, v3, v0, v0, v0, v10, v11 }
    goto:88 14 env={ v1, v2, v3, v0, v12, v3 }
B14[join] pred(B11, B13) {
      v13 <- phi(v0, v14) dead
      v14 <- phi(v3, v19) alive
}
    CheckSmi:92(v14) env={ v1, v2, v3, v13, v12, v14, v14, v12 }
    CheckSmi:92(v12) env={ v1, v2, v3, v13, v12, v14, v14, v12 }
    Branch if RelationalOp:92(<, v14, v12 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #957]) goto (15, 16) env={ v1, v2, v3, v13, v12, v14, v14, v12 }
B15[target]
    CheckStackOverflow:65()
    PushArgument:67(v1)
    PushArgument:69(v14)
    PushArgument:71(v2)
    v16 <- PolymorphicInstanceCall:127(_substringMatches@0x36924d72, v1, v14, v2 IC[1: _OneByteString@0x36924d72 #948]) env={ v1, v2, v3, v13, v12, v14, a0, a1, a2 }
    v17 <- Constant:73(#true)
    Branch if StrictCompare:74(===, v16, v17) goto (12, 13)
B12[target]
    Return:77(v14)
B13[target]
    v18 <- Constant:83(#1)
    CheckSmi:85(v14) env={ v1, v2, v3, v14, v12, v14, v14, v18 }
    CheckSmi:85(v18) env={ v1, v2, v3, v14, v12, v14, v14, v18 }
    v19 <- BinarySmiOp:85(+, v14, v18) +o env={ v1, v2, v3, v14, v12, v14, v14, v18 }
    goto:89 14 env={ v1, v2, v3, v14, v12, v19 }
B16[target]
    v15 <- Constant:96(#-1)
    Return:97(v15)
  Depth 1 ----------
  Static Calls (0)
  Closure Calls (0)
  Polymorphic Instance Calls (1)
  => Function '_substringMatches@0x36924d72':. (deopt count 0)
Callee graph for inlining dart:core__StringBase@0x36924d72__substringMatches@0x36924d72
==== dart:core__StringBase@0x36924d72__substringMatches@0x36924d72
B0[graph] {
      v26 <- Constant:96(#null)
      v27 <- Parameter:91(0)
      v28 <- Parameter:92(1)
      v29 <- Parameter:93(2)
}
B17[target]
    CheckClass:5(v29 IC[1: _OneByteString@0x36924d72 #207]) env={ v27, v28, v29, v26, v26, v26, v29 }
    v50 <- LoadField:98(v29, 4, immutable=1)
    v51 <- Constant:99(#0)
    v30 <- StrictCompare:100(===, v50, v51) env={ v27, v28, v29, v26, v26, v26, v29 }
    v31 <- Constant:6(#true)
    Branch if StrictCompare:7(===, v30, v31) goto (18, 19)
B18[target]
    v49 <- Constant:9(#true)
    Return:10(v49)
B19[target]
    v32 <- Constant:14(#0)
    CheckSmi:15(v28) env={ v27, v28, v29, v26, v26, v26, v28, v32 }
    CheckSmi:15(v32) env={ v27, v28, v29, v26, v26, v26, v28, v32 }
    Branch if RelationalOp:15(<, v28, v32 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (22, 20) env={ v27, v28, v29, v26, v26, v26, v28, v32 }
B22[target]
    goto:28 21 env={ v27, v28, v29, v26, v26, v26 }
B20[target]
    CheckClass:20(v27 IC[1: _OneByteString@0x36924d72 #207]) env={ v27, v28, v29, v26, v26, v26, v28, v27 }
    v33 <- LoadField:104(v27, 4, immutable=1) env={ v27, v28, v29, v26, v26, v26, v28, v27 }
    CheckSmi:21(v28) env={ v27, v28, v29, v26, v26, v26, v28, v33 }
    CheckSmi:21(v33) env={ v27, v28, v29, v26, v26, v26, v28, v33 }
    Branch if RelationalOp:21(>=, v28, v33 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (23, 24) env={ v27, v28, v29, v26, v26, v26, v28, v33 }
B23[target]
    goto:30 21 env={ v27, v28, v29, v26, v26, v26 }
B21[join] pred(B22, B23)
    v48 <- Constant:24(#false)
    Return:25(v48)
B24[target]
    CheckClass:34(v29 IC[1: _OneByteString@0x36924d72 #207]) env={ v27, v28, v29, v26, v26, v26, v29 }
    v34 <- LoadField:108(v29, 4, immutable=1) env={ v27, v28, v29, v26, v26, v26, v29 }
    CheckSmi:40(v28) env={ v27, v28, v29, v26, v34, v26, v28, v34 }
    CheckSmi:40(v34) env={ v27, v28, v29, v26, v34, v26, v28, v34 }
    v35 <- BinarySmiOp:40(+, v28, v34) +o env={ v27, v28, v29, v26, v34, v26, v28, v34 }
    CheckClass:43(v27 IC[1: _OneByteString@0x36924d72 #207]) env={ v27, v28, v29, v26, v34, v26, v35, v27 }
    v36 <- LoadField:113(v27, 4, immutable=1) env={ v27, v28, v29, v26, v34, v26, v35, v27 }
    CheckSmi:44(v35) env={ v27, v28, v29, v26, v34, v26, v35, v36 }
    CheckSmi:44(v36) env={ v27, v28, v29, v26, v34, v26, v35, v36 }
    Branch if RelationalOp:44(>, v35, v36 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (25, 26) env={ v27, v28, v29, v26, v34, v26, v35, v36 }
B25[target]
    v47 <- Constant:46(#false)
    Return:47(v47)
B26[target]
    v37 <- Constant:50(#0)
    goto:81 29 env={ v27, v28, v29, v26, v34, v37 }
B29[join] pred(B26, B28) {
      v38 <- phi(v26, v39) dead
      v39 <- phi(v37, v45) alive
}
    CheckSmi:85(v39) env={ v27, v28, v29, v38, v34, v39, v39, v34 }
    CheckSmi:85(v34) env={ v27, v28, v29, v38, v34, v39, v39, v34 }
    Branch if RelationalOp:85(<, v39, v34 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (30, 31) env={ v27, v28, v29, v38, v34, v39, v39, v34 }
B30[target]
    CheckStackOverflow:52()
    CheckSmi:59(v39) env={ v27, v28, v29, v38, v34, v39, v27, v39, v28 }
    CheckSmi:59(v28) env={ v27, v28, v29, v38, v34, v39, v27, v39, v28 }
    v41 <- BinarySmiOp:59(+, v39, v28) +o env={ v27, v28, v29, v38, v34, v39, v27, v39, v28 }
    CheckClass:61(v27 IC[1: _OneByteString@0x36924d72 #222]) env={ v27, v28, v29, v38, v34, v39, v27, v41 }
    CheckSmi:61(v41) env={ v27, v28, v29, v38, v34, v39, v27, v41 }
    CheckArrayBound:61(v27, v41) env={ v27, v28, v29, v38, v34, v39, v27, v41 }
    v42 <- StringCharCodeAt:124(v27, v41) env={ v27, v28, v29, v38, v34, v39, v27, v41 }
    CheckClass:66(v29 IC[1: _OneByteString@0x36924d72 #222]) env={ v27, v28, v29, v38, v34, v39, v42, v29, v39 }
    CheckSmi:66(v39) env={ v27, v28, v29, v38, v34, v39, v42, v29, v39 }
    CheckArrayBound:66(v29, v39) env={ v27, v28, v29, v38, v34, v39, v42, v29, v39 }
    v43 <- StringCharCodeAt:128(v29, v39) env={ v27, v28, v29, v38, v34, v39, v42, v29, v39 }
    CheckSmi:67(v42) env={ v27, v28, v29, v38, v34, v39, v42, v43 }
    CheckSmi:67(v43) env={ v27, v28, v29, v38, v34, v39, v42, v43 }
    Branch if EqualityCompare:67(v42 != v43 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (27, 28) env={ v27, v28, v29, v38, v34, v39, v42, v43 }
B27[target]
    v46 <- Constant:69(#false)
    Return:70(v46)
B28[target]
    v44 <- Constant:76(#1)
    CheckSmi:78(v39) env={ v27, v28, v29, v39, v34, v39, v39, v44 }
    CheckSmi:78(v44) env={ v27, v28, v29, v39, v34, v39, v39, v44 }
    v45 <- BinarySmiOp:78(+, v39, v44) +o env={ v27, v28, v29, v39, v34, v39, v39, v44 }
    goto:82 29 env={ v27, v28, v29, v39, v34, v45 }
B31[target]
    v40 <- Constant:89(#true)
    Return:90(v40)
     Success
Inlining growth factor: 1.068966
After Inlining of dart:core__StringBase@0x36924d72_indexOf
==== dart:core__StringBase@0x36924d72_indexOf
B0[graph] {
      v0 <- Constant:101(#null)
      v1 <- Parameter:102(0)
      v2 <- Parameter:103(1)
      v3 <- Parameter:104(2)
}
B1[target]
    CheckStackOverflow:2()
    CheckClass:5(v2 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, v2 }
    v24 <- LoadField:106(v2, 4, immutable=1)
    v25 <- Constant:107(#0)
    v4 <- StrictCompare:108(===, v24, v25) env={ v1, v2, v3, v0, v0, v0, v2 }
    v5 <- Constant:6(#true)
    Branch if StrictCompare:7(===, v4, v5) goto (5, 6)
B5[target]
    PushArgument:11(v1)
    v21 <- InstanceCall:12(get:length, v1 IC[0: ]) env={ v1, v2, v3, v0, v0, v0, v3, a0 }
    Branch if RelationalOp:13(<, v3, v21 IC[0: ]) goto (2, 3) env={ v1, v2, v3, v0, v0, v0, v3, v21 }
B2[target]
    goto:24 4 env={ v1, v2, v3, v3, v0, v0 }
B3[target]
    PushArgument:18(v1)
    v22 <- InstanceCall:19(get:length, v1 IC[0: ]) env={ v1, v2, v3, v0, v0, v0, a0 }
    goto:25 4 env={ v1, v2, v3, v22, v0, v0 }
B4[join] pred(B2, B3) {
      v23 <- phi(v3, v22) alive
}
    Return:27(v23)
B6[target]
    v6 <- Constant:31(#0)
    CheckSmi:32(v3) env={ v1, v2, v3, v0, v0, v0, v3, v6 }
    CheckSmi:32(v6) env={ v1, v2, v3, v0, v0, v0, v3, v6 }
    Branch if RelationalOp:32(<, v3, v6 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (9, 7) env={ v1, v2, v3, v0, v0, v0, v3, v6 }
B9[target]
    goto:45 8 env={ v1, v2, v3, v0, v0, v0 }
B7[target]
    CheckClass:37(v1 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, v3, v1 }
    v7 <- LoadField:112(v1, 4, immutable=1) env={ v1, v2, v3, v0, v0, v0, v3, v1 }
    CheckSmi:38(v3) env={ v1, v2, v3, v0, v0, v0, v3, v7 }
    CheckSmi:38(v7) env={ v1, v2, v3, v0, v0, v0, v3, v7 }
    Branch if RelationalOp:38(>=, v3, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (10, 11) env={ v1, v2, v3, v0, v0, v0, v3, v7 }
B10[target]
    goto:47 8 env={ v1, v2, v3, v0, v0, v0 }
B8[join] pred(B9, B10)
    v20 <- Constant:41(#-1)
    Return:42(v20)
B11[target]
    CheckClass:51(v1 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, v1 }
    v8 <- LoadField:116(v1, 4, immutable=1) env={ v1, v2, v3, v0, v0, v0, v1 }
    CheckClass:55(v2 IC[1: _OneByteString@0x36924d72 #20]) env={ v1, v2, v3, v0, v0, v0, v8, v2 }
    v9 <- LoadField:118(v2, 4, immutable=1) env={ v1, v2, v3, v0, v0, v0, v8, v2 }
    CheckSmi:57(v8) env={ v1, v2, v3, v0, v0, v0, v8, v9 }
    CheckSmi:57(v9) env={ v1, v2, v3, v0, v0, v0, v8, v9 }
    v10 <- BinarySmiOp:57(-, v8, v9) +o env={ v1, v2, v3, v0, v0, v0, v8, v9 }
    v11 <- Constant:59(#1)
    CheckSmi:61(v10) env={ v1, v2, v3, v0, v0, v0, v10, v11 }
    CheckSmi:61(v11) env={ v1, v2, v3, v0, v0, v0, v10, v11 }
    v12 <- BinarySmiOp:61(+, v10, v11) +o env={ v1, v2, v3, v0, v0, v0, v10, v11 }
    goto:88 14 env={ v1, v2, v3, v0, v12, v3 }
B14[join] pred(B11, B13) {
      v13 <- phi(v0, v14) dead
      v14 <- phi(v3, v19) alive
}
    CheckSmi:92(v14) env={ v1, v2, v3, v13, v12, v14, v14, v12 }
    CheckSmi:92(v12) env={ v1, v2, v3, v13, v12, v14, v14, v12 }
    Branch if RelationalOp:92(<, v14, v12 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #957]) goto (15, 16) env={ v1, v2, v3, v13, v12, v14, v14, v12 }
B15[target]
    CheckStackOverflow:65()
    CheckClass:5(v2 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v14, v2, v0, v0, v0, v2 } env={ v1, v2, v3, v13, v12, v14 }
    v50 <- LoadField:98(v2, 4, immutable=1)
    v51 <- Constant:99(#0)
    v30 <- StrictCompare:100(===, v50, v51) env={ v1, v14, v2, v0, v0, v0, v2 } env={ v1, v2, v3, v13, v12, v14 }
    v31 <- Constant:6(#true)
    Branch if StrictCompare:7(===, v30, v31) goto (18, 19)
B18[target]
    v49 <- Constant:9(#true)
    goto:135 32
B19[target]
    v32 <- Constant:14(#0)
    CheckSmi:15(v14) env={ v1, v14, v2, v0, v0, v0, v14, v32 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:15(v32) env={ v1, v14, v2, v0, v0, v0, v14, v32 } env={ v1, v2, v3, v13, v12, v14 }
    Branch if RelationalOp:15(<, v14, v32 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (22, 20) env={ v1, v14, v2, v0, v0, v0, v14, v32 } env={ v1, v2, v3, v13, v12, v14 }
B22[target]
    goto:28 21 env={ v1, v14, v2, v0, v0, v0 } env={ v1, v2, v3, v13, v12, v14 }
B20[target]
    CheckClass:20(v1 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v14, v2, v0, v0, v0, v14, v1 } env={ v1, v2, v3, v13, v12, v14 }
    v33 <- LoadField:104(v1, 4, immutable=1) env={ v1, v14, v2, v0, v0, v0, v14, v1 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:21(v14) env={ v1, v14, v2, v0, v0, v0, v14, v33 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:21(v33) env={ v1, v14, v2, v0, v0, v0, v14, v33 } env={ v1, v2, v3, v13, v12, v14 }
    Branch if RelationalOp:21(>=, v14, v33 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (23, 24) env={ v1, v14, v2, v0, v0, v0, v14, v33 } env={ v1, v2, v3, v13, v12, v14 }
B23[target]
    goto:30 21 env={ v1, v14, v2, v0, v0, v0 } env={ v1, v2, v3, v13, v12, v14 }
B21[join] pred(B22, B23)
    v48 <- Constant:24(#false)
    goto:136 32
B24[target]
    CheckClass:34(v2 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v14, v2, v0, v0, v0, v2 } env={ v1, v2, v3, v13, v12, v14 }
    v34 <- LoadField:108(v2, 4, immutable=1) env={ v1, v14, v2, v0, v0, v0, v2 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:40(v14) env={ v1, v14, v2, v0, v34, v0, v14, v34 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:40(v34) env={ v1, v14, v2, v0, v34, v0, v14, v34 } env={ v1, v2, v3, v13, v12, v14 }
    v35 <- BinarySmiOp:40(+, v14, v34) +o env={ v1, v14, v2, v0, v34, v0, v14, v34 } env={ v1, v2, v3, v13, v12, v14 }
    CheckClass:43(v1 IC[1: _OneByteString@0x36924d72 #207]) env={ v1, v14, v2, v0, v34, v0, v35, v1 } env={ v1, v2, v3, v13, v12, v14 }
    v36 <- LoadField:113(v1, 4, immutable=1) env={ v1, v14, v2, v0, v34, v0, v35, v1 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:44(v35) env={ v1, v14, v2, v0, v34, v0, v35, v36 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:44(v36) env={ v1, v14, v2, v0, v34, v0, v35, v36 } env={ v1, v2, v3, v13, v12, v14 }
    Branch if RelationalOp:44(>, v35, v36 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (25, 26) env={ v1, v14, v2, v0, v34, v0, v35, v36 } env={ v1, v2, v3, v13, v12, v14 }
B25[target]
    v47 <- Constant:46(#false)
    goto:137 32
B26[target]
    v37 <- Constant:50(#0)
    goto:81 29 env={ v1, v14, v2, v0, v34, v37 } env={ v1, v2, v3, v13, v12, v14 }
B29[join] pred(B26, B28) {
      v38 <- phi(v0, v39) dead
      v39 <- phi(v37, v45) alive
}
    CheckSmi:85(v39) env={ v1, v14, v2, v38, v34, v39, v39, v34 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:85(v34) env={ v1, v14, v2, v38, v34, v39, v39, v34 } env={ v1, v2, v3, v13, v12, v14 }
    Branch if RelationalOp:85(<, v39, v34 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (30, 31) env={ v1, v14, v2, v38, v34, v39, v39, v34 } env={ v1, v2, v3, v13, v12, v14 }
B30[target]
    CheckStackOverflow:52()
    CheckSmi:59(v39) env={ v1, v14, v2, v38, v34, v39, v1, v39, v14 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:59(v14) env={ v1, v14, v2, v38, v34, v39, v1, v39, v14 } env={ v1, v2, v3, v13, v12, v14 }
    v41 <- BinarySmiOp:59(+, v39, v14) +o env={ v1, v14, v2, v38, v34, v39, v1, v39, v14 } env={ v1, v2, v3, v13, v12, v14 }
    CheckClass:61(v1 IC[1: _OneByteString@0x36924d72 #222]) env={ v1, v14, v2, v38, v34, v39, v1, v41 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:61(v41) env={ v1, v14, v2, v38, v34, v39, v1, v41 } env={ v1, v2, v3, v13, v12, v14 }
    CheckArrayBound:61(v1, v41) env={ v1, v14, v2, v38, v34, v39, v1, v41 } env={ v1, v2, v3, v13, v12, v14 }
    v42 <- StringCharCodeAt:124(v1, v41) env={ v1, v14, v2, v38, v34, v39, v1, v41 } env={ v1, v2, v3, v13, v12, v14 }
    CheckClass:66(v2 IC[1: _OneByteString@0x36924d72 #222]) env={ v1, v14, v2, v38, v34, v39, v42, v2, v39 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:66(v39) env={ v1, v14, v2, v38, v34, v39, v42, v2, v39 } env={ v1, v2, v3, v13, v12, v14 }
    CheckArrayBound:66(v2, v39) env={ v1, v14, v2, v38, v34, v39, v42, v2, v39 } env={ v1, v2, v3, v13, v12, v14 }
    v43 <- StringCharCodeAt:128(v2, v39) env={ v1, v14, v2, v38, v34, v39, v42, v2, v39 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:67(v42) env={ v1, v14, v2, v38, v34, v39, v42, v43 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:67(v43) env={ v1, v14, v2, v38, v34, v39, v42, v43 } env={ v1, v2, v3, v13, v12, v14 }
    Branch if EqualityCompare:67(v42 != v43 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (27, 28) env={ v1, v14, v2, v38, v34, v39, v42, v43 } env={ v1, v2, v3, v13, v12, v14 }
B27[target]
    v46 <- Constant:69(#false)
    goto:138 32
B28[target]
    v44 <- Constant:76(#1)
    CheckSmi:78(v39) env={ v1, v14, v2, v39, v34, v39, v39, v44 } env={ v1, v2, v3, v13, v12, v14 }
    CheckSmi:78(v44) env={ v1, v14, v2, v39, v34, v39, v39, v44 } env={ v1, v2, v3, v13, v12, v14 }
    v45 <- BinarySmiOp:78(+, v39, v44) +o env={ v1, v14, v2, v39, v34, v39, v39, v44 } env={ v1, v2, v3, v13, v12, v14 }
    goto:82 29 env={ v1, v14, v2, v39, v34, v45 } env={ v1, v2, v3, v13, v12, v14 }
B31[target]
    v40 <- Constant:89(#true)
    goto:139 32
B32[join] pred(B18, B21, B25, B27, B31) {
      v52 <- phi(v49, v48, v47, v46, v40) alive
}
    v17 <- Constant:73(#true)
    Branch if StrictCompare:74(===, v52, v17) goto (12, 13)
B12[target]
    Return:77(v14)
B13[target]
    v18 <- Constant:83(#1)
    CheckSmi:85(v14) env={ v1, v2, v3, v14, v12, v14, v14, v18 }
    CheckSmi:85(v18) env={ v1, v2, v3, v14, v12, v14, v14, v18 }
    v19 <- BinarySmiOp:85(+, v14, v18) +o env={ v1, v2, v3, v14, v12, v14, v14, v18 }
    goto:89 14 env={ v1, v2, v3, v14, v12, v19 }
B16[target]
    v15 <- Constant:96(#-1)
    Return:97(v15)
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Replacing v6 with v25
Removing CheckSmi
Removing CheckClass
Replacing v8 with v7
Removing CheckClass
Replacing v9 with v24
Removing CheckClass
Replacing v50 with v24
Replacing v51 with v25
Replacing v30 with v4
Replacing v31 with v5
Replacing v32 with v25
Removing CheckClass
Replacing v33 with v7
Removing CheckClass
Replacing v34 with v24
Removing CheckClass
Replacing v36 with v7
Replacing v37 with v25
Replacing v40 with v5
Removing CheckClass
Removing CheckClass
Replacing v44 with v11
Replacing v17 with v5
Replacing v18 with v11
Replacing v49 with v5
Back edge B28 -> B29
  B12
  B17
  B18
Back edge B13 -> B14
  B5
  B7
  B8
  B9
  B10
  B11
  B12
  B13
  B14
  B15
  B17
  B18
  B19
  B20
  B21
  B22
  B23
  B24
Hoisting instruction Constant:69 from B27 to B11
Hoisting instruction Constant:46 from B25 to B11
Hoisting instruction Constant:24 from B21 to B11
After Optimizations:
==== dart:core__StringBase@0x36924d72_indexOf
  0: B0[graph] {
      v0 <- Constant:101(#null) {PT: Null} {PCid: Null}
      v1 <- Parameter:102(0) {PT: _StringBase@0x36924d72} {PCid: dynamic}
      v2 <- Parameter:103(1) {PT: dynamic} {PCid: dynamic}
      v3 <- Parameter:104(2) {PT: dynamic} {PCid: dynamic}
}
  2: B1[target] ParallelMove eax <- S+1
  4:     CheckStackOverflow:2()
  6:     CheckClass:5(v2 IC[1: _OneByteString@0x36924d72 #20]) env={ v1 [S+0], v2 [eax], v3 [S+2], v0 [C], v0 [C], v0 [C], v2 [eax] }
  8:     v24 <- LoadField:106(v2, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [-1073741824, 1073741823]
  9:     ParallelMove S+4 <- ecx
 10:     v25 <- Constant:107(#0) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, 0]
 12:     v4 <- StrictCompare:108(===, v24, v25) {PT: bool} {PCid: bool}
 13:     ParallelMove S+5 <- edx
 14:     v5 <- Constant:6(#true) {PT: bool} {PCid: bool}
 16:     Branch if StrictCompare:7(===, v4, v5) goto (5, 6)
 18: B5[target] ParallelMove ecx <- S+0
 20:     PushArgument:11(v1) {PCid: dynamic}
 22:     v21 <- InstanceCall:12(get:length, v1 IC[0: ]) {PT: dynamic} {PCid: dynamic} env={ v1 [S+0], v2 [S+1], v3 [S+2], v0 [C], v0 [C], v0 [C], v3 [S+2], a0 }
 23:     ParallelMove eax <- S+2, ecx <- eax, edx <- eax
 24:     ParallelMove S+3 <- edx
 24:     Branch if RelationalOp:13(<, v3, v21 IC[0: ]) goto (2, 3) env={ v1 [S+0], v2 [S+1], v3 [S+2], v0 [C], v0 [C], v0 [C], v3 [S+2], v21 [S+3] }
 26: B2[target] ParallelMove eax <- S+2
 28:     ParallelMove eax <- eax goto:24 4
 30: B3[target] ParallelMove ecx <- S+0, eax <- S+2
 32:     PushArgument:18(v1) {PCid: dynamic}
 34:     v22 <- InstanceCall:19(get:length, v1 IC[0: ]) {PT: dynamic} {PCid: dynamic} env={ v1 [S+0], v2 [S+1], v3 [S+2], v0 [C], v0 [C], v0 [C], a0 }
 35:     ParallelMove eax <- eax
 36:     ParallelMove eax <- eax goto:25 4
 38: B4[join] pred(B2, B3) {
      v23 <- phi(v3, v22) {PT: dynamic} {PCid: dynamic} alive
}
 39:     ParallelMove eax <- eax
 40:     Return:27(v23)
 42: B6[target] ParallelMove eax <- S+2
 44:     CheckSmi:32(v3) env={ v1 [S+0], v2 [S+1], v3 [eax], v0 [C], v0 [C], v0 [C], v3 [eax], v25 [C] }
 46:     Branch if RelationalOp:32(<, v3, v25 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (9, 7)
 48: B9[target]
 50:     goto:45 8
 52: B7[target] ParallelMove ebx <- S+0
 54:     CheckClass:37(v1 IC[1: _OneByteString@0x36924d72 #20]) env={ v1 [ebx], v2 [S+1], v3 [eax], v0 [C], v0 [C], v0 [C], v3 [eax], v1 [ebx] }
 56:     v7 <- LoadField:112(v1, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
 57:     ParallelMove S+6 <- edi
 58:     Branch if RelationalOp:38(>=, v3, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (10, 11)
 60: B10[target]
 62:     goto:47 8
 64: B8[join] pred(B9, B10)
 66:     v20 <- Constant:41(#-1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1, -1]
 67:     ParallelMove eax <- eax
 68:     Return:42(v20)
 70: B11[target]
 72:     ParallelMove ebx <- edi
 72:     v10 <- BinarySmiOp:57(-, v7, v24) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741822, +inf] +o env={ v1 [S+0], v2 [S+1], v3 [eax], v0 [C], v0 [C], v0 [C], v7 [edi], v24 [ecx] }
 74:     v11 <- Constant:59(#1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, 1]
 76:     ParallelMove ecx <- ebx
 76:     v12 <- BinarySmiOp:61(+, v10, v11) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741821, +inf] +o env={ v1 [S+0], v2 [S+1], v3 [eax], v0 [C], v0 [C], v0 [C], v10 [ebx], v11 [C] }
 77:     ParallelMove S+3 <- ecx
 78:     v46 <- Constant:88(#false) {PT: bool} {PCid: bool}
 80:     v47 <- Constant:88(#false) {PT: bool} {PCid: bool}
 82:     v48 <- Constant:88(#false) {PT: bool} {PCid: bool}
 84:     ParallelMove eax <- eax, ebx <- S+4 goto:88 14
 86: B14[join] pred(B11, B13) {
      v14 <- phi(v3, v19) {PT: dynamic} {PCid: _Smi@0x36924d72} alive [v55, 1073741823]
}
 87:     ParallelMove S+7 <- eax
 88:     Branch if RelationalOp:92(<, v14, v12 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #957]) goto (15, 16)
 90: B15[target]
 92:     CheckStackOverflow:65()
 94:     Branch if StrictCompare:7(===, v4, v5) goto (18, 19)
 96: B18[target]
 98:     ParallelMove eax <- C, ecx <- S+0, edx <- S+1 goto:135 32
100: B19[target]
102:     Branch if RelationalOp:15(<, v14, v25 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (22, 20)
104: B22[target]
106:     goto:28 21
108: B20[target]
110:     Branch if RelationalOp:21(>=, v14, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (23, 24)
112: B23[target]
114:     goto:30 21
116: B21[join] pred(B22, B23)
118:     ParallelMove eax <- C, ecx <- S+0, edx <- S+1 goto:136 32
120: B24[target]
122:     ParallelMove ecx <- eax
122:     v35 <- BinarySmiOp:40(+, v14, v24) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741824, +inf] +o env={ v1 [S+0], v14 [eax], v2 [S+1], v0 [C], v24 [ebx], v0 [C], v14 [eax], v24 [ebx] } env={ v1 [S+0], v2 [S+1], v3 [S+2], v0 [C], v12 [S+3], v14 [eax] }
124:     Branch if RelationalOp:44(>, v35, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (25, 26)
126: B25[target]
128:     ParallelMove eax <- C, ecx <- S+0, edx <- S+1 goto:137 32
130: B26[target]
132:     ParallelMove edi <- C, ecx <- S+0, edx <- S+1 goto:81 29
134: B29[join] pred(B26, B28) {
      v39 <- phi(v25, v45) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} alive [0, 1073741823]
}
136:     Branch if RelationalOp:85(<, v39, v24 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (30, 31)
138: B30[target]
140:     CheckStackOverflow:52()
142:     ParallelMove ebx <- edi
142:     v41 <- BinarySmiOp:59(+, v39, v14) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, v24+536870909] -o
144:     CheckArrayBound:61(v1, v41) env={ v1 [ecx], v14 [eax], v2 [edx], v0 [C], v24 [S+4], v39 [edi], v1 [ecx], v41 [ebx] } env={ v1 [ecx], v2 [edx], v3 [S+2], v0 [C], v12 [S+3], v14 [eax] }
146:     v42 <- StringCharCodeAt:124(v1, v41) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
148:     CheckArrayBound:66(v2, v39) env={ v1 [ecx], v14 [S+7], v2 [edx], v0 [C], v24 [S+4], v39 [edi], v42 [eax], v2 [edx], v39 [edi] } env={ v1 [ecx], v2 [edx], v3 [S+2], v0 [C], v12 [S+3], v14 [S+7] }
150:     v43 <- StringCharCodeAt:128(v2, v39) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
152:     Branch if EqualityCompare:67(v42 != v43 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (27, 28)
154: B27[target]
156:     ParallelMove eax <- C goto:138 32
158: B28[target]
160:     ParallelMove edi <- edi
160:     v45 <- BinarySmiOp:78(+, v39, v11) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, v24] -o
162:     ParallelMove edi <- edi, eax <- S+7, ebx <- S+4 goto:82 29
164: B31[target]
166:     ParallelMove eax <- C goto:139 32
168: B32[join] pred(B18, B21, B25, B27, B31) {
      v52 <- phi(v5, v48, v47, v46, v5) {PT: bool} {PCid: bool} alive
}
170:     Branch if StrictCompare:74(===, v52, v5) goto (12, 13)
172: B12[target]
173:     ParallelMove eax <- S+7
174:     Return:77(v14)
176: B13[target]
178:     ParallelMove eax <- S+7
178:     v19 <- BinarySmiOp:85(+, v14, v11) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [v55+1, v12] -o
180:     ParallelMove eax <- eax, edx <- S+5, edi <- S+6, ecx <- S+3, ebx <- S+4 goto:89 14
182: B16[target]
184:     v15 <- Constant:96(#-1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1, -1]
185:     ParallelMove eax <- eax
186:     Return:97(v15)
--> patching entry 0xb3009da8
--> 'dart:core__StringBase@0x36924d72_indexOf' entry: 0xb300a2a8 time: 3438 us
Code for optimized function 'dart:core__StringBase@0x36924d72_indexOf' {
        ;; Enter frame
0xb300a2a8    55                     push ebp
0xb300a2a9    89e5                   mov ebp,esp
0xb300a2ab    e800000000             call 0xb300a2b0
0xb300a2b0    83ec20                 sub esp,0x20
        ;; Copy parameters
0xb300a2b3    8b4a0f                 mov ecx,[edx+0xf]
0xb300a2b6    83f904                 cmp ecx,0x4
0xb300a2b9    0f8c41000000           jl 0xb300a300
0xb300a2bf    83f906                 cmp ecx,0x6
0xb300a2c2    0f8f38000000           jg 0xb300a300
0xb300a2c8    8b5a0b                 mov ebx,[edx+0xb]
0xb300a2cb    2bd9                   sub ebx,ecx
0xb300a2cd    8d5c5d08               lea ebx,[ebp+ebx*0x2+0x8]
0xb300a2d1    8d7dfc                 lea edi,[ebp-0x4]
0xb300a2d4    2bf9                   sub edi,ecx
0xb300a2d6    2bf9                   sub edi,ecx
0xb300a2d8    d1f9                   sar ecx, 1
0xb300a2da    eb06                   jmp 0xb300a2e2
0xb300a2dc    8b048b                 mov eax,[ebx+ecx*0x4]
0xb300a2df    89048f                 mov [edi+ecx*0x4],eax
0xb300a2e2    49                     dec ecx
0xb300a2e3    79f7                   jns 0xb300a2dc
0xb300a2e5    8b4a0f                 mov ecx,[edx+0xf]
0xb300a2e8    d1f9                   sar ecx, 1
0xb300a2ea    83f902                 cmp ecx,0x2
0xb300a2ed    7f08                   jg 0xb300a2f7
0xb300a2ef    b800000000             mov eax,0
0xb300a2f4    8945f0                 mov [ebp-0x10],eax
0xb300a2f7    8b5a0b                 mov ebx,[edx+0xb]
0xb300a2fa    d1fb                   sar ebx, 1
0xb300a2fc    3bcb                   cmp ecx,ebx
0xb300a2fe    7411                   jz 0xb300a311
0xb300a300    83c420                 add esp,0x20
0xb300a303    b991d629b3             mov ecx,0xb329d691  'ICData target:'indexOf' num-checks: 0'
0xb300a308    e83b5f3702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb300a30d    89ec                   mov esp,ebp
0xb300a30f    5d                     pop ebp
0xb300a310    c3                     ret
0xb300a311    8b4a0b                 mov ecx,[edx+0xb]
0xb300a314    d1f9                   sar ecx, 1
0xb300a316    eb08                   jmp 0xb300a320
0xb300a318    c7448d08190040b5       mov [ebp+ecx*0x4+0x8],0xb5400019
0xb300a320    49                     dec ecx
0xb300a321    79f5                   jns 0xb300a318
        ;; B0
        ;; B1
0xb300a323    8b45f4                 mov eax,[ebp-0xc]
        ;; CheckStackOverflow:2()
0xb300a326    3b25bc195809           cmp esp,[0x95819bc]
0xb300a32c    0f8679020000           jna 0xb300a5ab
        ;; CheckClass:5(v2 IC[1: _OneByteString@0x36924d72 #20])
0xb300a332    a801                   test al,0x1
0xb300a334    0f84c3020000           jz 0xb300a5fd
0xb300a33a    0fb74801               movzx_w ecx,[eax+0x1]
0xb300a33e    83f94d                 cmp ecx,0x4d
0xb300a341    0f85b6020000           jnz 0xb300a5fd
        ;; v24 <- LoadField:106(v2, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [-1073741824, 1073741823]
0xb300a347    8b4803                 mov ecx,[eax+0x3]
        ;; ParallelMove S+4 <- ecx
0xb300a34a    894de8                 mov [ebp-0x18],ecx
        ;; v25 <- Constant:107(#0) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, 0]
        ;; v4 <- StrictCompare:108(===, v24, v25) {PT: bool} {PCid: bool}
0xb300a34d    85c9                   test ecx,ecx
0xb300a34f    7407                   jz 0xb300a358
0xb300a351    ba411030b3             mov edx,0xb3301041  'false'
0xb300a356    eb05                   jmp 0xb300a35d
0xb300a358    ba391030b3             mov edx,0xb3301039  'true'
        ;; ParallelMove S+5 <- edx
0xb300a35d    8955e4                 mov [ebp-0x1c],edx
        ;; v5 <- Constant:6(#true) {PT: bool} {PCid: bool}
        ;; Branch if StrictCompare:7(===, v4, v5) goto (5, 6)
0xb300a360    81fa391030b3           cmp edx,0xb3301039
0xb300a366    0f8587000000           jnz 0xb300a3f3
        ;; B5
0xb300a36c    8b4df8                 mov ecx,[ebp-0x8]
        ;; PushArgument:11(v1) {PCid: dynamic}
0xb300a36f    51                     push ecx
        ;; v21 <- InstanceCall:12(get:length, v1 IC[0: ]) {PT: dynamic} {PCid: dynamic}
0xb300a370    bf21a71ab3             mov edi,0xb31aa721  'Function 'indexOf':.'
0xb300a375    b9d9b829b3             mov ecx,0xb329b8d9  'ICData target:'get:length' num-checks: 0'
0xb300a37a    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300a37f    e83461ffff             call 0xb30004b8  [stub: OneArgOptimizedCheckInlineCache]
0xb300a384    83c404                 add esp,0x4
        ;; ParallelMove eax <- S+2, ecx <- eax, edx <- eax
0xb300a387    89c1                   mov ecx,eax
0xb300a389    89c2                   mov edx,eax
0xb300a38b    8b45f0                 mov eax,[ebp-0x10]
        ;; ParallelMove S+3 <- edx
0xb300a38e    8955ec                 mov [ebp-0x14],edx
        ;; Branch if RelationalOp:13(<, v3, v21 IC[0: ]) goto (2, 3)
0xb300a391    50                     push eax
0xb300a392    51                     push ecx
0xb300a393    bf21a71ab3             mov edi,0xb31aa721  'Function 'indexOf':.'
0xb300a398    b929b929b3             mov ecx,0xb329b929  'ICData target:'<' num-checks: 0'
0xb300a39d    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300a3a2    e8d161ffff             call 0xb3000578  [stub: TwoArgsOptimizedCheckInlineCache]
0xb300a3a7    83c408                 add esp,0x8
0xb300a3aa    3d391030b3             cmp eax, 0xb3301039  'true'
0xb300a3af    0f8508000000           jnz 0xb300a3bd
        ;; B2
0xb300a3b5    8b45f0                 mov eax,[ebp-0x10]
        ;; ParallelMove eax <- eax goto:24 4
0xb300a3b8    e91e000000             jmp 0xb300a3db
        ;; B3
0xb300a3bd    8b4df8                 mov ecx,[ebp-0x8]
0xb300a3c0    8b45f0                 mov eax,[ebp-0x10]
        ;; PushArgument:18(v1) {PCid: dynamic}
0xb300a3c3    51                     push ecx
        ;; v22 <- InstanceCall:19(get:length, v1 IC[0: ]) {PT: dynamic} {PCid: dynamic}
0xb300a3c4    bf21a71ab3             mov edi,0xb31aa721  'Function 'indexOf':.'
0xb300a3c9    b981b929b3             mov ecx,0xb329b981  'ICData target:'get:length' num-checks: 0'
0xb300a3ce    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300a3d3    e8e060ffff             call 0xb30004b8  [stub: OneArgOptimizedCheckInlineCache]
0xb300a3d8    83c404                 add esp,0x4
        ;; ParallelMove eax <- eax
        ;; ParallelMove eax <- eax goto:25 4
        ;; B4
        ;; ParallelMove eax <- eax
        ;; Return:27(v23)
0xb300a3db    ba21a71ab3             mov edx,0xb31aa721  'Function 'indexOf':.'
0xb300a3e0    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300a3e7    7c05                   jl 0xb300a3ee
0xb300a3e9    e8ca64ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300a3ee    89ec                   mov esp,ebp
0xb300a3f0    5d                     pop ebp
0xb300a3f1    c3                     ret
0xb300a3f2    90                     nop
        ;; B6
0xb300a3f3    8b45f0                 mov eax,[ebp-0x10]
        ;; CheckSmi:32(v3)
0xb300a3f6    a801                   test al,0x1
0xb300a3f8    0f8504020000           jnz 0xb300a602
        ;; Branch if RelationalOp:32(<, v3, v25 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (9, 7)
0xb300a3fe    83f800                 cmp eax,0
0xb300a401    0f8d05000000           jnl 0xb300a40c
        ;; B9
        ;; goto:45 8
0xb300a407    e927000000             jmp 0xb300a433
        ;; B7
0xb300a40c    8b5df8                 mov ebx,[ebp-0x8]
        ;; CheckClass:37(v1 IC[1: _OneByteString@0x36924d72 #20])
0xb300a40f    f6c301                 test_b ebx,0x1
0xb300a412    0f84ef010000           jz 0xb300a607
0xb300a418    0fb77b01               movzx_w edi,[ebx+0x1]
0xb300a41c    83ff4d                 cmp edi,0x4d
0xb300a41f    0f85e2010000           jnz 0xb300a607
        ;; v7 <- LoadField:112(v1, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
0xb300a425    8b7b03                 mov edi,[ebx+0x3]
        ;; ParallelMove S+6 <- edi
0xb300a428    897de0                 mov [ebp-0x20],edi
        ;; Branch if RelationalOp:38(>=, v3, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (10, 11)
0xb300a42b    3bc7                   cmp eax,edi
0xb300a42d    0f8c1d000000           jl 0xb300a450
        ;; B10
        ;; goto:47 8
        ;; B8
        ;; v20 <- Constant:41(#-1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1, -1]
0xb300a433    b8feffffff             mov eax,0xfffffffe
        ;; ParallelMove eax <- eax
        ;; Return:42(v20)
0xb300a438    ba21a71ab3             mov edx,0xb31aa721  'Function 'indexOf':.'
0xb300a43d    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300a444    7c05                   jl 0xb300a44b
0xb300a446    e86d64ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300a44b    89ec                   mov esp,ebp
0xb300a44d    5d                     pop ebp
0xb300a44e    c3                     ret
0xb300a44f    90                     nop
        ;; B11
        ;; ParallelMove ebx <- edi
0xb300a450    89fb                   mov ebx,edi
        ;; v10 <- BinarySmiOp:57(-, v7, v24) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741822, +inf] +o
0xb300a452    2bd9                   sub ebx,ecx
0xb300a454    0f80b2010000           jo 0xb300a60c
        ;; v11 <- Constant:59(#1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, 1]
        ;; ParallelMove ecx <- ebx
0xb300a45a    89d9                   mov ecx,ebx
        ;; v12 <- BinarySmiOp:61(+, v10, v11) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741821, +inf] +o
0xb300a45c    83c102                 add ecx,0x2
0xb300a45f    0f80ac010000           jo 0xb300a611
        ;; ParallelMove S+3 <- ecx
0xb300a465    894dec                 mov [ebp-0x14],ecx
        ;; v46 <- Constant:88(#false) {PT: bool} {PCid: bool}
        ;; v47 <- Constant:88(#false) {PT: bool} {PCid: bool}
        ;; v48 <- Constant:88(#false) {PT: bool} {PCid: bool}
        ;; ParallelMove eax <- eax, ebx <- S+4 goto:88 14
0xb300a468    8b5de8                 mov ebx,[ebp-0x18]
        ;; B14
        ;; ParallelMove S+7 <- eax
0xb300a46b    8945dc                 mov [ebp-0x24],eax
        ;; Branch if RelationalOp:92(<, v14, v12 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #957]) goto (15, 16)
0xb300a46e    3bc1                   cmp eax,ecx
0xb300a470    0f8d17010000           jnl 0xb300a58d
        ;; B15
        ;; CheckStackOverflow:65()
0xb300a476    3b25bc195809           cmp esp,[0x95819bc]
0xb300a47c    0f863f010000           jna 0xb300a5c1
        ;; Branch if StrictCompare:7(===, v4, v5) goto (18, 19)
0xb300a482    81fa391030b3           cmp edx,0xb3301039
0xb300a488    0f8510000000           jnz 0xb300a49e
        ;; B18
        ;; ParallelMove eax <- C, ecx <- S+0, edx <- S+1 goto:135 32
0xb300a48e    8b4df8                 mov ecx,[ebp-0x8]
0xb300a491    8b55f4                 mov edx,[ebp-0xc]
0xb300a494    b8391030b3             mov eax,0xb3301039  'true'
0xb300a499    e9b2000000             jmp 0xb300a550
        ;; B19
        ;; Branch if RelationalOp:15(<, v14, v25 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (22, 20)
0xb300a49e    83f800                 cmp eax,0
0xb300a4a1    0f8d05000000           jnl 0xb300a4ac
        ;; B22
        ;; goto:28 21
0xb300a4a7    e908000000             jmp 0xb300a4b4
        ;; B20
        ;; Branch if RelationalOp:21(>=, v14, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (23, 24)
0xb300a4ac    3bc7                   cmp eax,edi
0xb300a4ae    0f8c10000000           jl 0xb300a4c4
        ;; B23
        ;; goto:30 21
        ;; B21
        ;; ParallelMove eax <- C, ecx <- S+0, edx <- S+1 goto:136 32
0xb300a4b4    8b4df8                 mov ecx,[ebp-0x8]
0xb300a4b7    8b55f4                 mov edx,[ebp-0xc]
0xb300a4ba    b8411030b3             mov eax,0xb3301041  'false'
0xb300a4bf    e98c000000             jmp 0xb300a550
        ;; B24
        ;; ParallelMove ecx <- eax
0xb300a4c4    89c1                   mov ecx,eax
        ;; v35 <- BinarySmiOp:40(+, v14, v24) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741824, +inf] +o
0xb300a4c6    03cb                   add ecx,ebx
0xb300a4c8    0f8048010000           jo 0xb300a616
        ;; Branch if RelationalOp:44(>, v35, v7 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (25, 26)
0xb300a4ce    3bcf                   cmp ecx,edi
0xb300a4d0    0f8e10000000           jng 0xb300a4e6
        ;; B25
        ;; ParallelMove eax <- C, ecx <- S+0, edx <- S+1 goto:137 32
0xb300a4d6    8b4df8                 mov ecx,[ebp-0x8]
0xb300a4d9    8b55f4                 mov edx,[ebp-0xc]
0xb300a4dc    b8411030b3             mov eax,0xb3301041  'false'
0xb300a4e1    e96a000000             jmp 0xb300a550
        ;; B26
        ;; ParallelMove edi <- C, ecx <- S+0, edx <- S+1 goto:81 29
0xb300a4e6    8b4df8                 mov ecx,[ebp-0x8]
0xb300a4e9    8b55f4                 mov edx,[ebp-0xc]
0xb300a4ec    33ff                   xor edi,edi
        ;; B29
        ;; Branch if RelationalOp:85(<, v39, v24 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (30, 31)
0xb300a4ee    3bfb                   cmp edi,ebx
0xb300a4f0    0f8d55000000           jnl 0xb300a54b
        ;; B30
        ;; CheckStackOverflow:52()
0xb300a4f6    3b25bc195809           cmp esp,[0x95819bc]
0xb300a4fc    0f86dd000000           jna 0xb300a5df
        ;; ParallelMove ebx <- edi
0xb300a502    89fb                   mov ebx,edi
        ;; v41 <- BinarySmiOp:59(+, v39, v14) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, v24+536870909] -o
0xb300a504    03d8                   add ebx,eax
        ;; CheckArrayBound:61(v1, v41)
0xb300a506    3b5903                 cmp ebx,[ecx+0x3]
0xb300a509    0f830c010000           jnc 0xb300a61b
        ;; v42 <- StringCharCodeAt:124(v1, v41) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
0xb300a50f    d1fb                   sar ebx, 1
0xb300a511    0fb644190b             movzx_b eax,[ecx+ebx*0x1+0xb]
0xb300a516    03db                   add ebx,ebx
0xb300a518    03c0                   add eax,eax
        ;; CheckArrayBound:66(v2, v39)
0xb300a51a    3b7a03                 cmp edi,[edx+0x3]
0xb300a51d    0f83fd000000           jnc 0xb300a620
        ;; v43 <- StringCharCodeAt:128(v2, v39) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
0xb300a523    d1ff                   sar edi, 1
0xb300a525    0fb65c3a0b             movzx_b ebx,[edx+edi*0x1+0xb]
0xb300a52a    03ff                   add edi,edi
0xb300a52c    03db                   add ebx,ebx
        ;; Branch if EqualityCompare:67(v42 != v43 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (27, 28)
0xb300a52e    3bc3                   cmp eax,ebx
0xb300a530    0f840a000000           jz 0xb300a540
        ;; B27
        ;; ParallelMove eax <- C goto:138 32
0xb300a536    b8411030b3             mov eax,0xb3301041  'false'
0xb300a53b    e910000000             jmp 0xb300a550
        ;; B28
        ;; ParallelMove edi <- edi
        ;; v45 <- BinarySmiOp:78(+, v39, v11) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, v24] -o
0xb300a540    83c702                 add edi,0x2
        ;; ParallelMove edi <- edi, eax <- S+7, ebx <- S+4 goto:82 29
0xb300a543    8b45dc                 mov eax,[ebp-0x24]
0xb300a546    8b5de8                 mov ebx,[ebp-0x18]
0xb300a549    eba3                   jmp 0xb300a4ee
        ;; B31
        ;; ParallelMove eax <- C goto:139 32
0xb300a54b    b8391030b3             mov eax,0xb3301039  'true'
        ;; B32
        ;; Branch if StrictCompare:74(===, v52, v5) goto (12, 13)
0xb300a550    3d391030b3             cmp eax, 0xb3301039  'true'
0xb300a555    0f851b000000           jnz 0xb300a576
        ;; B12
        ;; ParallelMove eax <- S+7
0xb300a55b    8b45dc                 mov eax,[ebp-0x24]
        ;; Return:77(v14)
0xb300a55e    ba21a71ab3             mov edx,0xb31aa721  'Function 'indexOf':.'
0xb300a563    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300a56a    7c05                   jl 0xb300a571
0xb300a56c    e84763ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300a571    89ec                   mov esp,ebp
0xb300a573    5d                     pop ebp
0xb300a574    c3                     ret
0xb300a575    90                     nop
        ;; B13
        ;; ParallelMove eax <- S+7
0xb300a576    8b45dc                 mov eax,[ebp-0x24]
        ;; v19 <- BinarySmiOp:85(+, v14, v11) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [v55+1, v12] -o
0xb300a579    83c002                 add eax,0x2
        ;; ParallelMove eax <- eax, edx <- S+5, edi <- S+6, ecx <- S+3, ebx <- S+4 goto:89 14
0xb300a57c    8b55e4                 mov edx,[ebp-0x1c]
0xb300a57f    8b7de0                 mov edi,[ebp-0x20]
0xb300a582    8b4dec                 mov ecx,[ebp-0x14]
0xb300a585    8b5de8                 mov ebx,[ebp-0x18]
0xb300a588    e9defeffff             jmp 0xb300a46b
        ;; B16
        ;; v15 <- Constant:96(#-1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1, -1]
0xb300a58d    b8feffffff             mov eax,0xfffffffe
        ;; ParallelMove eax <- eax
        ;; Return:97(v15)
0xb300a592    ba21a71ab3             mov edx,0xb31aa721  'Function 'indexOf':.'
0xb300a597    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300a59e    7c05                   jl 0xb300a5a5
0xb300a5a0    e81363ffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300a5a5    89ec                   mov esp,ebp
0xb300a5a7    5d                     pop ebp
0xb300a5a8    c3                     ret
0xb300a5a9    90                     nop
0xb300a5aa    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300a5ab    50                     push eax
0xb300a5ac    b970d30a08             mov ecx,0x80ad370
0xb300a5b1    ba00000000             mov edx,0
0xb300a5b6    e86d5a3702             call 0xb5380028  [stub: CallToRuntime]
0xb300a5bb    58                     pop eax
0xb300a5bc    e971fdffff             jmp 0xb300a332
        ;; CheckStackOverflowSlowPath
0xb300a5c1    50                     push eax
0xb300a5c2    51                     push ecx
0xb300a5c3    52                     push edx
0xb300a5c4    53                     push ebx
0xb300a5c5    57                     push edi
0xb300a5c6    b970d30a08             mov ecx,0x80ad370
0xb300a5cb    ba00000000             mov edx,0
0xb300a5d0    e8535a3702             call 0xb5380028  [stub: CallToRuntime]
0xb300a5d5    5f                     pop edi
0xb300a5d6    5b                     pop ebx
0xb300a5d7    5a                     pop edx
0xb300a5d8    59                     pop ecx
0xb300a5d9    58                     pop eax
0xb300a5da    e9a3feffff             jmp 0xb300a482
        ;; CheckStackOverflowSlowPath
0xb300a5df    50                     push eax
0xb300a5e0    51                     push ecx
0xb300a5e1    52                     push edx
0xb300a5e2    53                     push ebx
0xb300a5e3    57                     push edi
0xb300a5e4    b970d30a08             mov ecx,0x80ad370
0xb300a5e9    ba00000000             mov edx,0
0xb300a5ee    e8355a3702             call 0xb5380028  [stub: CallToRuntime]
0xb300a5f3    5f                     pop edi
0xb300a5f4    5b                     pop ebx
0xb300a5f5    5a                     pop edx
0xb300a5f6    59                     pop ecx
0xb300a5f7    58                     pop eax
0xb300a5f8    e905ffffff             jmp 0xb300a502
        ;; Deopt stub for id 5
0xb300a5fd    e8765e3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 32
0xb300a602    e8715e3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 37
0xb300a607    e86c5e3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 57
0xb300a60c    e8675e3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 61
0xb300a611    e8625e3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 40
0xb300a616    e85d5e3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 61
0xb300a61b    e8585e3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 66
0xb300a620    e8535e3702             call 0xb5380478  [stub: Deoptimize]
0xb300a625    e90e5e3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300a62a    e9e95e3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 92 : 0xb300a304 'ICData target:'indexOf' num-checks: 0'
 170 : 0xb300a352 'false'
 177 : 0xb300a359 'true'
 186 : 0xb300a362 'true'
 201 : 0xb300a371 'Function 'indexOf':.'
 206 : 0xb300a376 'ICData target:'get:length' num-checks: 0'
 211 : 0xb300a37b 'ImmutableArray'
 236 : 0xb300a394 'Function 'indexOf':.'
 241 : 0xb300a399 'ICData target:'<' num-checks: 0'
 246 : 0xb300a39e 'ImmutableArray'
 259 : 0xb300a3ab 'true'
 285 : 0xb300a3c5 'Function 'indexOf':.'
 290 : 0xb300a3ca 'ICData target:'get:length' num-checks: 0'
 295 : 0xb300a3cf 'ImmutableArray'
 308 : 0xb300a3dc 'Function 'indexOf':.'
 401 : 0xb300a439 'Function 'indexOf':.'
 476 : 0xb300a484 'true'
 493 : 0xb300a495 'true'
 531 : 0xb300a4bb 'false'
 565 : 0xb300a4dd 'false'
 655 : 0xb300a537 'false'
 676 : 0xb300a54c 'true'
 681 : 0xb300a551 'true'
 695 : 0xb300a55f 'Function 'indexOf':.'
 747 : 0xb300a593 'Function 'indexOf':.'
}
PC Descriptors for function 'dart:core__StringBase@0x36924d72_indexOf' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300a384	ic-call      	12		12991	-1
0xb300a3a7	ic-call      	13		12988	-1
0xb300a3d8	ic-call      	19		12999	-1
0xb300a3ee	other        	-1		0	-1
0xb300a3f3	return       	-1		12985	-1
0xb300a44b	other        	-1		0	-1
0xb300a450	return       	-1		13024	-1
0xb300a571	other        	-1		0	-1
0xb300a576	return       	-1		13079	-1
0xb300a5a5	other        	-1		0	-1
0xb300a5aa	return       	-1		13085	-1
0xb300a5bb	other        	-1		12962	-1
0xb300a5d5	other        	-1		13047	-1
0xb300a5f3	other        	-1		12859	-1
0xb300a625	patch        	-1		0	-1
0xb300a62a	lazy-deopt   	-1		0	-1
}
DeoptInfo: {
   0: 0xb300a602  [ret bef oti:0(5)][eax][const oti:1][const oti:1][const oti:1][s5][eax][s3][pcmark oti:0][callerfp][callerpc]  (CheckClass)
   1: 0xb300a384  [ret aft oti:0(12)][s11][s5][const oti:1][const oti:1][const oti:1][s5][s4][suffix 0:4]  (AtCall)
   2: 0xb300a3a7  [ret aft oti:0(13)][s6][suffix 1:10]  (AtCall)
   3: 0xb300a3d8  [ret aft oti:0(19)][s11][suffix 1:9]  (AtCall)
   4: 0xb300a607  [ret bef oti:0(32)][const oti:2][eax][const oti:1][const oti:1][const oti:1][eax][suffix 1:5]  (CheckSmi)
   5: 0xb300a60c  [ret bef oti:0(37)][ebx][eax][const oti:1][const oti:1][const oti:1][eax][s4][ebx][suffix 0:3]  (CheckClass)
   6: 0xb300a611  [ret bef oti:0(57)][ecx][edi][suffix 4:9]  (BinarySmiOp)
   7: 0xb300a616  [ret bef oti:0(61)][const oti:3][ebx][suffix 4:9]  (BinarySmiOp)
   8: 0xb300a61b  [ret bef oti:4(40)][ebx][eax][const oti:1][ebx][const oti:1][pcmark oti:4][callerfp][ret aft oti:0(72)][s4][eax][s3][eax][s6][suffix 1:7]  (BinarySmiOp)
   9: 0xb300a620  [ret bef oti:4(61)][ebx][ecx][edi][s7][const oti:1][pcmark oti:4][callerfp][ret aft oti:0(72)][edx][eax][ecx][eax][s6][const oti:1][s5][edx][ecx][suffix 0:3]  (CheckArrayBound)
  10: 0xb300a625  [ret bef oti:4(66)][edi][edx][eax][edi][s7][const oti:1][pcmark oti:4][callerfp][ret aft oti:0(72)][edx][s10][ecx][s10][suffix 9:8]  (CheckArrayBound)
}
Object Table: {
  0: Function 'indexOf':.
  1: null
  2: 0
  3: 1
  4: Function '_substringMatches@0x36924d72':.
}
Stackmaps for function 'dart:core__StringBase@0x36924d72_indexOf' {
0xb300a30d: 
0xb300a384: 11100000
0xb300a3a7: 11110000
0xb300a3d8: 11100000
0xb300a3ee: 00000000
0xb300a44b: 00000000
0xb300a571: 00000000
0xb300a5a5: 00000000
0xb300a5bb: 111000001
0xb300a5d5: 1111111111111
0xb300a5f3: 1111111111111
}
Variable Descriptors for function 'dart:core__StringBase@0x36924d72_indexOf' {
  stack var 'this' offset -2 (valid 12342-13091)
  stack var 'other' offset -3 (valid 12965-13091)
  stack var 'start' offset -4 (valid 12969-13091)
  stack var 'len' offset -6 (valid 13031-13091)
  stack var 'index' offset -7 (valid 13050-13085)
}
Exception Handlers for function 'dart:core__StringBase@0x36924d72_indexOf' {
No exception handlers
}
Static call target functions {
}
Compiling optimized function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' @ token 258
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf
B0[graph] {
      v0 <- Constant:15(#null)
      v1 <- Parameter:16(0)
      v2 <- Parameter:17(1)
      v3 <- Parameter:18(2)
}
B1[target]
    CheckStackOverflow:2()
    PushArgument:4(v2)
    PushArgument:6(v3)
    v4 <- Constant:7(#100)
    PushArgument:8(v4)
    v5 <- InstanceCall:9(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #750]) env={ v1, v2, v3, a0, a1, a2 }
    PushArgument:10(v5)
    v6 <- InstanceCall:11(toString, v5 IC[1: _Smi@0x36924d72 #750]) env={ v1, v2, v3, a0, a1 }
    PushArgument:12(v6)
    v7 <- InstanceCall:13(indexOf, v2, v6 IC[1: _OneByteString@0x36924d72 #750]) env={ v1, v2, v3, a0, a1 }
    Return:14(v7)
Inlining calls in Function 'indexOf': static.
Before Inlining of file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf
B0[graph] {
      v0 <- Constant:15(#null)
      v1 <- Parameter:16(0)
      v2 <- Parameter:17(1)
      v3 <- Parameter:18(2)
}
B1[target]
    CheckStackOverflow:2()
    PushArgument:4(v2)
    PushArgument:6(v3)
    v4 <- Constant:7(#100)
    PushArgument:8(v4)
    CheckSmi:9(v3) env={ v1, v2, v3, a0, a1, a2 }
    v5 <- PolymorphicInstanceCall:20(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #750]) env={ v1, v2, v3, a0, a1, a2 }
    PushArgument:10(v5)
    CheckSmi:11(v5) env={ v1, v2, v3, a0, a1 }
    v6 <- PolymorphicInstanceCall:22(toString, v5 IC[1: _Smi@0x36924d72 #750]) env={ v1, v2, v3, a0, a1 }
    PushArgument:12(v6)
    CheckClass:13(v2 IC[1: _OneByteString@0x36924d72 #750]) env={ v1, v2, v3, a0, a1 }
    v7 <- PolymorphicInstanceCall:24(indexOf, v2, v6 IC[1: _OneByteString@0x36924d72 #750]) env={ v1, v2, v3, a0, a1 }
    Return:14(v7)
  Depth 1 ----------
  Static Calls (0)
  Closure Calls (0)
  Polymorphic Instance Calls (3)
  => Function '%':. (deopt count 0)
     Bailout: not inlinable
  => Function 'toString':. (deopt count 0)
     Bailout: not inlinable
  => Function 'indexOf':. (deopt count 0)
     adjusting for optional parameters
Callee graph for inlining dart:core__StringBase@0x36924d72_indexOf
==== dart:core__StringBase@0x36924d72_indexOf
B0[graph] {
      v8 <- Constant:104(#null)
      v9 <- Parameter:98(0)
      v10 <- Parameter:99(1)
      v11 <- Constant:100(#0)
}
B2[target]
    CheckClass:5(v10 IC[1: _OneByteString@0x36924d72 #20]) env={ v9, v10, v11, v8, v8, v8, v10 }
    v32 <- LoadField:106(v10, 4, immutable=1)
    v33 <- Constant:107(#0)
    v12 <- StrictCompare:108(===, v32, v33) env={ v9, v10, v11, v8, v8, v8, v10 }
    v13 <- Constant:6(#true)
    Branch if StrictCompare:7(===, v12, v13) goto (6, 7)
B6[target]
    PushArgument:11(v9)
    v29 <- InstanceCall:12(get:length, v9 IC[0: ]) env={ v9, v10, v11, v8, v8, v8, v11, a0 }
    Branch if RelationalOp:13(<, v11, v29 IC[0: ]) goto (3, 4) env={ v9, v10, v11, v8, v8, v8, v11, v29 }
B3[target]
    goto:24 5 env={ v9, v10, v11, v11, v8, v8 }
B4[target]
    PushArgument:18(v9)
    v30 <- InstanceCall:19(get:length, v9 IC[0: ]) env={ v9, v10, v11, v8, v8, v8, a0 }
    goto:25 5 env={ v9, v10, v11, v30, v8, v8 }
B5[join] pred(B3, B4) {
      v31 <- phi(v11, v30) alive
}
    Return:27(v31)
B7[target]
    v14 <- Constant:31(#0)
    CheckSmi:32(v11) env={ v9, v10, v11, v8, v8, v8, v11, v14 }
    CheckSmi:32(v14) env={ v9, v10, v11, v8, v8, v8, v11, v14 }
    Branch if RelationalOp:32(<, v11, v14 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (10, 8) env={ v9, v10, v11, v8, v8, v8, v11, v14 }
B10[target]
    goto:45 9 env={ v9, v10, v11, v8, v8, v8 }
B8[target]
    CheckClass:37(v9 IC[1: _OneByteString@0x36924d72 #20]) env={ v9, v10, v11, v8, v8, v8, v11, v9 }
    v15 <- LoadField:112(v9, 4, immutable=1) env={ v9, v10, v11, v8, v8, v8, v11, v9 }
    CheckSmi:38(v11) env={ v9, v10, v11, v8, v8, v8, v11, v15 }
    CheckSmi:38(v15) env={ v9, v10, v11, v8, v8, v8, v11, v15 }
    Branch if RelationalOp:38(>=, v11, v15 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (11, 12) env={ v9, v10, v11, v8, v8, v8, v11, v15 }
B11[target]
    goto:47 9 env={ v9, v10, v11, v8, v8, v8 }
B9[join] pred(B10, B11)
    v28 <- Constant:41(#-1)
    Return:42(v28)
B12[target]
    CheckClass:51(v9 IC[1: _OneByteString@0x36924d72 #20]) env={ v9, v10, v11, v8, v8, v8, v9 }
    v16 <- LoadField:116(v9, 4, immutable=1) env={ v9, v10, v11, v8, v8, v8, v9 }
    CheckClass:55(v10 IC[1: _OneByteString@0x36924d72 #20]) env={ v9, v10, v11, v8, v8, v8, v16, v10 }
    v17 <- LoadField:118(v10, 4, immutable=1) env={ v9, v10, v11, v8, v8, v8, v16, v10 }
    CheckSmi:57(v16) env={ v9, v10, v11, v8, v8, v8, v16, v17 }
    CheckSmi:57(v17) env={ v9, v10, v11, v8, v8, v8, v16, v17 }
    v18 <- BinarySmiOp:57(-, v16, v17) +o env={ v9, v10, v11, v8, v8, v8, v16, v17 }
    v19 <- Constant:59(#1)
    CheckSmi:61(v18) env={ v9, v10, v11, v8, v8, v8, v18, v19 }
    CheckSmi:61(v19) env={ v9, v10, v11, v8, v8, v8, v18, v19 }
    v20 <- BinarySmiOp:61(+, v18, v19) +o env={ v9, v10, v11, v8, v8, v8, v18, v19 }
    goto:88 15 env={ v9, v10, v11, v8, v20, v11 }
B15[join] pred(B12, B14) {
      v21 <- phi(v8, v22) dead
      v22 <- phi(v11, v27) alive
}
    CheckSmi:92(v22) env={ v9, v10, v11, v21, v20, v22, v22, v20 }
    CheckSmi:92(v20) env={ v9, v10, v11, v21, v20, v22, v22, v20 }
    Branch if RelationalOp:92(<, v22, v20 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #957]) goto (16, 17) env={ v9, v10, v11, v21, v20, v22, v22, v20 }
B16[target]
    CheckStackOverflow:65()
    PushArgument:67(v9)
    PushArgument:69(v22)
    PushArgument:71(v10)
    v24 <- PolymorphicInstanceCall:127(_substringMatches@0x36924d72, v9, v22, v10 IC[1: _OneByteString@0x36924d72 #948]) env={ v9, v10, v11, v21, v20, v22, a0, a1, a2 }
    v25 <- Constant:73(#true)
    Branch if StrictCompare:74(===, v24, v25) goto (13, 14)
B13[target]
    Return:77(v22)
B14[target]
    v26 <- Constant:83(#1)
    CheckSmi:85(v22) env={ v9, v10, v11, v22, v20, v22, v22, v26 }
    CheckSmi:85(v26) env={ v9, v10, v11, v22, v20, v22, v22, v26 }
    v27 <- BinarySmiOp:85(+, v22, v26) +o env={ v9, v10, v11, v22, v20, v22, v22, v26 }
    goto:89 15 env={ v9, v10, v11, v22, v20, v27 }
B17[target]
    v23 <- Constant:96(#-1)
    Return:97(v23)
     Success
  Depth 2 ----------
  Static Calls (0)
  Closure Calls (0)
  Polymorphic Instance Calls (1)
  => Function '_substringMatches@0x36924d72':. (deopt count 0)
Callee graph for inlining dart:core__StringBase@0x36924d72__substringMatches@0x36924d72
==== dart:core__StringBase@0x36924d72__substringMatches@0x36924d72
B0[graph] {
      v36 <- Constant:96(#null)
      v37 <- Parameter:91(0)
      v38 <- Parameter:92(1)
      v39 <- Parameter:93(2)
}
B19[target]
    CheckClass:5(v39 IC[1: _OneByteString@0x36924d72 #207]) env={ v37, v38, v39, v36, v36, v36, v39 }
    v60 <- LoadField:98(v39, 4, immutable=1)
    v61 <- Constant:99(#0)
    v40 <- StrictCompare:100(===, v60, v61) env={ v37, v38, v39, v36, v36, v36, v39 }
    v41 <- Constant:6(#true)
    Branch if StrictCompare:7(===, v40, v41) goto (20, 21)
B20[target]
    v59 <- Constant:9(#true)
    Return:10(v59)
B21[target]
    v42 <- Constant:14(#0)
    CheckSmi:15(v38) env={ v37, v38, v39, v36, v36, v36, v38, v42 }
    CheckSmi:15(v42) env={ v37, v38, v39, v36, v36, v36, v38, v42 }
    Branch if RelationalOp:15(<, v38, v42 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (24, 22) env={ v37, v38, v39, v36, v36, v36, v38, v42 }
B24[target]
    goto:28 23 env={ v37, v38, v39, v36, v36, v36 }
B22[target]
    CheckClass:20(v37 IC[1: _OneByteString@0x36924d72 #207]) env={ v37, v38, v39, v36, v36, v36, v38, v37 }
    v43 <- LoadField:104(v37, 4, immutable=1) env={ v37, v38, v39, v36, v36, v36, v38, v37 }
    CheckSmi:21(v38) env={ v37, v38, v39, v36, v36, v36, v38, v43 }
    CheckSmi:21(v43) env={ v37, v38, v39, v36, v36, v36, v38, v43 }
    Branch if RelationalOp:21(>=, v38, v43 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (25, 26) env={ v37, v38, v39, v36, v36, v36, v38, v43 }
B25[target]
    goto:30 23 env={ v37, v38, v39, v36, v36, v36 }
B23[join] pred(B24, B25)
    v58 <- Constant:24(#false)
    Return:25(v58)
B26[target]
    CheckClass:34(v39 IC[1: _OneByteString@0x36924d72 #207]) env={ v37, v38, v39, v36, v36, v36, v39 }
    v44 <- LoadField:108(v39, 4, immutable=1) env={ v37, v38, v39, v36, v36, v36, v39 }
    CheckSmi:40(v38) env={ v37, v38, v39, v36, v44, v36, v38, v44 }
    CheckSmi:40(v44) env={ v37, v38, v39, v36, v44, v36, v38, v44 }
    v45 <- BinarySmiOp:40(+, v38, v44) +o env={ v37, v38, v39, v36, v44, v36, v38, v44 }
    CheckClass:43(v37 IC[1: _OneByteString@0x36924d72 #207]) env={ v37, v38, v39, v36, v44, v36, v45, v37 }
    v46 <- LoadField:113(v37, 4, immutable=1) env={ v37, v38, v39, v36, v44, v36, v45, v37 }
    CheckSmi:44(v45) env={ v37, v38, v39, v36, v44, v36, v45, v46 }
    CheckSmi:44(v46) env={ v37, v38, v39, v36, v44, v36, v45, v46 }
    Branch if RelationalOp:44(>, v45, v46 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (27, 28) env={ v37, v38, v39, v36, v44, v36, v45, v46 }
B27[target]
    v57 <- Constant:46(#false)
    Return:47(v57)
B28[target]
    v47 <- Constant:50(#0)
    goto:81 31 env={ v37, v38, v39, v36, v44, v47 }
B31[join] pred(B28, B30) {
      v48 <- phi(v36, v49) dead
      v49 <- phi(v47, v55) alive
}
    CheckSmi:85(v49) env={ v37, v38, v39, v48, v44, v49, v49, v44 }
    CheckSmi:85(v44) env={ v37, v38, v39, v48, v44, v49, v49, v44 }
    Branch if RelationalOp:85(<, v49, v44 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (32, 33) env={ v37, v38, v39, v48, v44, v49, v49, v44 }
B32[target]
    CheckStackOverflow:52()
    CheckSmi:59(v49) env={ v37, v38, v39, v48, v44, v49, v37, v49, v38 }
    CheckSmi:59(v38) env={ v37, v38, v39, v48, v44, v49, v37, v49, v38 }
    v51 <- BinarySmiOp:59(+, v49, v38) +o env={ v37, v38, v39, v48, v44, v49, v37, v49, v38 }
    CheckClass:61(v37 IC[1: _OneByteString@0x36924d72 #222]) env={ v37, v38, v39, v48, v44, v49, v37, v51 }
    CheckSmi:61(v51) env={ v37, v38, v39, v48, v44, v49, v37, v51 }
    CheckArrayBound:61(v37, v51) env={ v37, v38, v39, v48, v44, v49, v37, v51 }
    v52 <- StringCharCodeAt:124(v37, v51) env={ v37, v38, v39, v48, v44, v49, v37, v51 }
    CheckClass:66(v39 IC[1: _OneByteString@0x36924d72 #222]) env={ v37, v38, v39, v48, v44, v49, v52, v39, v49 }
    CheckSmi:66(v49) env={ v37, v38, v39, v48, v44, v49, v52, v39, v49 }
    CheckArrayBound:66(v39, v49) env={ v37, v38, v39, v48, v44, v49, v52, v39, v49 }
    v53 <- StringCharCodeAt:128(v39, v49) env={ v37, v38, v39, v48, v44, v49, v52, v39, v49 }
    CheckSmi:67(v52) env={ v37, v38, v39, v48, v44, v49, v52, v53 }
    CheckSmi:67(v53) env={ v37, v38, v39, v48, v44, v49, v52, v53 }
    Branch if EqualityCompare:67(v52 != v53 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (29, 30) env={ v37, v38, v39, v48, v44, v49, v52, v53 }
B29[target]
    v56 <- Constant:69(#false)
    Return:70(v56)
B30[target]
    v54 <- Constant:76(#1)
    CheckSmi:78(v49) env={ v37, v38, v39, v49, v44, v49, v49, v54 }
    CheckSmi:78(v54) env={ v37, v38, v39, v49, v44, v49, v49, v54 }
    v55 <- BinarySmiOp:78(+, v49, v54) +o env={ v37, v38, v39, v49, v44, v49, v49, v54 }
    goto:82 31 env={ v37, v38, v39, v49, v44, v55 }
B33[target]
    v50 <- Constant:89(#true)
    Return:90(v50)
     Success
Inlining growth factor: 8.500000
After Inlining of file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf
B0[graph] {
      v0 <- Constant:15(#null)
      v1 <- Parameter:16(0)
      v2 <- Parameter:17(1)
      v3 <- Parameter:18(2)
      v35 <- Constant:137(#0)
}
B1[target]
    CheckStackOverflow:2()
    PushArgument:6(v3)
    v4 <- Constant:7(#100)
    PushArgument:8(v4)
    CheckSmi:9(v3) env={ v1, v2, v3, v2, a0, a1 }
    v5 <- PolymorphicInstanceCall:20(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #750]) env={ v1, v2, v3, v2, a0, a1 }
    PushArgument:10(v5)
    CheckSmi:11(v5) env={ v1, v2, v3, v2, a0 }
    v6 <- PolymorphicInstanceCall:22(toString, v5 IC[1: _Smi@0x36924d72 #750]) env={ v1, v2, v3, v2, a0 }
    CheckClass:13(v2 IC[1: _OneByteString@0x36924d72 #750]) env={ v1, v2, v3, v2, v6 }
    CheckClass:5(v6 IC[1: _OneByteString@0x36924d72 #20]) env={ v2, v6, v35, v0, v0, v0, v6 } env={ v1, v2, v3, v2, v6 }
    v32 <- LoadField:106(v6, 4, immutable=1)
    v33 <- Constant:107(#0)
    v12 <- StrictCompare:108(===, v32, v33) env={ v2, v6, v35, v0, v0, v0, v6 } env={ v1, v2, v3, v2, v6 }
    v13 <- Constant:6(#true)
    Branch if StrictCompare:7(===, v12, v13) goto (6, 7)
B6[target]
    PushArgument:11(v2)
    v29 <- InstanceCall:12(get:length, v2 IC[0: ]) env={ v2, v6, v35, v0, v0, v0, v35, a0 } env={ v1, v2, v3, v2, v6 }
    Branch if RelationalOp:13(<, v35, v29 IC[0: ]) goto (3, 4) env={ v2, v6, v35, v0, v0, v0, v35, v29 } env={ v1, v2, v3, v2, v6 }
B3[target]
    goto:24 5 env={ v2, v6, v35, v35, v0, v0 } env={ v1, v2, v3, v2, v6 }
B4[target]
    PushArgument:18(v2)
    v30 <- InstanceCall:19(get:length, v2 IC[0: ]) env={ v2, v6, v35, v0, v0, v0, a0 } env={ v1, v2, v3, v2, v6 }
    goto:25 5 env={ v2, v6, v35, v30, v0, v0 } env={ v1, v2, v3, v2, v6 }
B5[join] pred(B3, B4) {
      v31 <- phi(v35, v30) alive
}
    goto:132 18
B7[target]
    v14 <- Constant:31(#0)
    CheckSmi:32(v35) env={ v2, v6, v35, v0, v0, v0, v35, v14 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:32(v14) env={ v2, v6, v35, v0, v0, v0, v35, v14 } env={ v1, v2, v3, v2, v6 }
    Branch if RelationalOp:32(<, v35, v14 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (10, 8) env={ v2, v6, v35, v0, v0, v0, v35, v14 } env={ v1, v2, v3, v2, v6 }
B10[target]
    goto:45 9 env={ v2, v6, v35, v0, v0, v0 } env={ v1, v2, v3, v2, v6 }
B8[target]
    CheckClass:37(v2 IC[1: _OneByteString@0x36924d72 #20]) env={ v2, v6, v35, v0, v0, v0, v35, v2 } env={ v1, v2, v3, v2, v6 }
    v15 <- LoadField:112(v2, 4, immutable=1) env={ v2, v6, v35, v0, v0, v0, v35, v2 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:38(v35) env={ v2, v6, v35, v0, v0, v0, v35, v15 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:38(v15) env={ v2, v6, v35, v0, v0, v0, v35, v15 } env={ v1, v2, v3, v2, v6 }
    Branch if RelationalOp:38(>=, v35, v15 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (11, 12) env={ v2, v6, v35, v0, v0, v0, v35, v15 } env={ v1, v2, v3, v2, v6 }
B11[target]
    goto:47 9 env={ v2, v6, v35, v0, v0, v0 } env={ v1, v2, v3, v2, v6 }
B9[join] pred(B10, B11)
    v28 <- Constant:41(#-1)
    goto:133 18
B12[target]
    CheckClass:51(v2 IC[1: _OneByteString@0x36924d72 #20]) env={ v2, v6, v35, v0, v0, v0, v2 } env={ v1, v2, v3, v2, v6 }
    v16 <- LoadField:116(v2, 4, immutable=1) env={ v2, v6, v35, v0, v0, v0, v2 } env={ v1, v2, v3, v2, v6 }
    CheckClass:55(v6 IC[1: _OneByteString@0x36924d72 #20]) env={ v2, v6, v35, v0, v0, v0, v16, v6 } env={ v1, v2, v3, v2, v6 }
    v17 <- LoadField:118(v6, 4, immutable=1) env={ v2, v6, v35, v0, v0, v0, v16, v6 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:57(v16) env={ v2, v6, v35, v0, v0, v0, v16, v17 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:57(v17) env={ v2, v6, v35, v0, v0, v0, v16, v17 } env={ v1, v2, v3, v2, v6 }
    v18 <- BinarySmiOp:57(-, v16, v17) +o env={ v2, v6, v35, v0, v0, v0, v16, v17 } env={ v1, v2, v3, v2, v6 }
    v19 <- Constant:59(#1)
    CheckSmi:61(v18) env={ v2, v6, v35, v0, v0, v0, v18, v19 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:61(v19) env={ v2, v6, v35, v0, v0, v0, v18, v19 } env={ v1, v2, v3, v2, v6 }
    v20 <- BinarySmiOp:61(+, v18, v19) +o env={ v2, v6, v35, v0, v0, v0, v18, v19 } env={ v1, v2, v3, v2, v6 }
    goto:88 15 env={ v2, v6, v35, v0, v20, v35 } env={ v1, v2, v3, v2, v6 }
B15[join] pred(B12, B14) {
      v21 <- phi(v0, v22) dead
      v22 <- phi(v35, v27) alive
}
    CheckSmi:92(v22) env={ v2, v6, v35, v21, v20, v22, v22, v20 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:92(v20) env={ v2, v6, v35, v21, v20, v22, v22, v20 } env={ v1, v2, v3, v2, v6 }
    Branch if RelationalOp:92(<, v22, v20 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #957]) goto (16, 17) env={ v2, v6, v35, v21, v20, v22, v22, v20 } env={ v1, v2, v3, v2, v6 }
B16[target]
    CheckStackOverflow:65()
    CheckClass:5(v6 IC[1: _OneByteString@0x36924d72 #207]) env={ v2, v22, v6, v0, v0, v0, v6 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    v60 <- LoadField:98(v6, 4, immutable=1)
    v61 <- Constant:99(#0)
    v40 <- StrictCompare:100(===, v60, v61) env={ v2, v22, v6, v0, v0, v0, v6 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    v41 <- Constant:6(#true)
    Branch if StrictCompare:7(===, v40, v41) goto (20, 21)
B20[target]
    v59 <- Constant:9(#true)
    goto:135 34
B21[target]
    v42 <- Constant:14(#0)
    CheckSmi:15(v22) env={ v2, v22, v6, v0, v0, v0, v22, v42 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:15(v42) env={ v2, v22, v6, v0, v0, v0, v22, v42 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    Branch if RelationalOp:15(<, v22, v42 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (24, 22) env={ v2, v22, v6, v0, v0, v0, v22, v42 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
B24[target]
    goto:28 23 env={ v2, v22, v6, v0, v0, v0 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
B22[target]
    CheckClass:20(v2 IC[1: _OneByteString@0x36924d72 #207]) env={ v2, v22, v6, v0, v0, v0, v22, v2 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    v43 <- LoadField:104(v2, 4, immutable=1) env={ v2, v22, v6, v0, v0, v0, v22, v2 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:21(v22) env={ v2, v22, v6, v0, v0, v0, v22, v43 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:21(v43) env={ v2, v22, v6, v0, v0, v0, v22, v43 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    Branch if RelationalOp:21(>=, v22, v43 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (25, 26) env={ v2, v22, v6, v0, v0, v0, v22, v43 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
B25[target]
    goto:30 23 env={ v2, v22, v6, v0, v0, v0 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
B23[join] pred(B24, B25)
    v58 <- Constant:24(#false)
    goto:136 34
B26[target]
    CheckClass:34(v6 IC[1: _OneByteString@0x36924d72 #207]) env={ v2, v22, v6, v0, v0, v0, v6 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    v44 <- LoadField:108(v6, 4, immutable=1) env={ v2, v22, v6, v0, v0, v0, v6 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:40(v22) env={ v2, v22, v6, v0, v44, v0, v22, v44 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:40(v44) env={ v2, v22, v6, v0, v44, v0, v22, v44 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    v45 <- BinarySmiOp:40(+, v22, v44) +o env={ v2, v22, v6, v0, v44, v0, v22, v44 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckClass:43(v2 IC[1: _OneByteString@0x36924d72 #207]) env={ v2, v22, v6, v0, v44, v0, v45, v2 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    v46 <- LoadField:113(v2, 4, immutable=1) env={ v2, v22, v6, v0, v44, v0, v45, v2 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:44(v45) env={ v2, v22, v6, v0, v44, v0, v45, v46 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:44(v46) env={ v2, v22, v6, v0, v44, v0, v45, v46 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    Branch if RelationalOp:44(>, v45, v46 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (27, 28) env={ v2, v22, v6, v0, v44, v0, v45, v46 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
B27[target]
    v57 <- Constant:46(#false)
    goto:137 34
B28[target]
    v47 <- Constant:50(#0)
    goto:81 31 env={ v2, v22, v6, v0, v44, v47 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
B31[join] pred(B28, B30) {
      v48 <- phi(v0, v49) dead
      v49 <- phi(v47, v55) alive
}
    CheckSmi:85(v49) env={ v2, v22, v6, v48, v44, v49, v49, v44 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:85(v44) env={ v2, v22, v6, v48, v44, v49, v49, v44 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    Branch if RelationalOp:85(<, v49, v44 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (32, 33) env={ v2, v22, v6, v48, v44, v49, v49, v44 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
B32[target]
    CheckStackOverflow:52()
    CheckSmi:59(v49) env={ v2, v22, v6, v48, v44, v49, v2, v49, v22 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:59(v22) env={ v2, v22, v6, v48, v44, v49, v2, v49, v22 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    v51 <- BinarySmiOp:59(+, v49, v22) +o env={ v2, v22, v6, v48, v44, v49, v2, v49, v22 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckClass:61(v2 IC[1: _OneByteString@0x36924d72 #222]) env={ v2, v22, v6, v48, v44, v49, v2, v51 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:61(v51) env={ v2, v22, v6, v48, v44, v49, v2, v51 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckArrayBound:61(v2, v51) env={ v2, v22, v6, v48, v44, v49, v2, v51 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    v52 <- StringCharCodeAt:124(v2, v51) env={ v2, v22, v6, v48, v44, v49, v2, v51 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckClass:66(v6 IC[1: _OneByteString@0x36924d72 #222]) env={ v2, v22, v6, v48, v44, v49, v52, v6, v49 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:66(v49) env={ v2, v22, v6, v48, v44, v49, v52, v6, v49 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckArrayBound:66(v6, v49) env={ v2, v22, v6, v48, v44, v49, v52, v6, v49 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    v53 <- StringCharCodeAt:128(v6, v49) env={ v2, v22, v6, v48, v44, v49, v52, v6, v49 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:67(v52) env={ v2, v22, v6, v48, v44, v49, v52, v53 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:67(v53) env={ v2, v22, v6, v48, v44, v49, v52, v53 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    Branch if EqualityCompare:67(v52 != v53 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (29, 30) env={ v2, v22, v6, v48, v44, v49, v52, v53 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
B29[target]
    v56 <- Constant:69(#false)
    goto:138 34
B30[target]
    v54 <- Constant:76(#1)
    CheckSmi:78(v49) env={ v2, v22, v6, v49, v44, v49, v49, v54 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:78(v54) env={ v2, v22, v6, v49, v44, v49, v49, v54 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    v55 <- BinarySmiOp:78(+, v49, v54) +o env={ v2, v22, v6, v49, v44, v49, v49, v54 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
    goto:82 31 env={ v2, v22, v6, v49, v44, v55 } env={ v2, v6, v35, v21, v20, v22 } env={ v1, v2, v3, v2, v6 }
B33[target]
    v50 <- Constant:89(#true)
    goto:139 34
B34[join] pred(B20, B23, B27, B29, B33) {
      v62 <- phi(v59, v58, v57, v56, v50) alive
}
    v25 <- Constant:73(#true)
    Branch if StrictCompare:74(===, v62, v25) goto (13, 14)
B13[target]
    goto:134 18
B14[target]
    v26 <- Constant:83(#1)
    CheckSmi:85(v22) env={ v2, v6, v35, v22, v20, v22, v22, v26 } env={ v1, v2, v3, v2, v6 }
    CheckSmi:85(v26) env={ v2, v6, v35, v22, v20, v22, v22, v26 } env={ v1, v2, v3, v2, v6 }
    v27 <- BinarySmiOp:85(+, v22, v26) +o env={ v2, v6, v35, v22, v20, v22, v22, v26 } env={ v1, v2, v3, v2, v6 }
    goto:89 15 env={ v2, v6, v35, v22, v20, v27 } env={ v1, v2, v3, v2, v6 }
B17[target]
    v23 <- Constant:96(#-1)
    goto:135 18
B18[join] pred(B5, B9, B13, B17) {
      v34 <- phi(v31, v28, v22, v23) alive
}
    Return:14(v34)
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Removing CheckSmi
Replacing v14 with v33
Removing CheckClass
Removing CheckClass
Replacing v16 with v15
Removing CheckClass
Replacing v17 with v32
Removing CheckClass
Replacing v60 with v32
Replacing v61 with v33
Replacing v40 with v12
Replacing v41 with v13
Replacing v42 with v33
Removing CheckClass
Replacing v43 with v15
Removing CheckClass
Replacing v44 with v32
Removing CheckClass
Replacing v46 with v15
Replacing v47 with v33
Replacing v50 with v13
Removing CheckClass
Removing CheckClass
Replacing v54 with v19
Replacing v25 with v13
Replacing v26 with v19
Replacing v59 with v13
Back edge B30 -> B31
  B13
  B18
  B19
Back edge B14 -> B15
  B5
  B8
  B9
  B10
  B11
  B12
  B13
  B14
  B15
  B16
  B18
  B19
  B20
  B21
  B22
  B23
  B24
  B25
Hoisting instruction Constant:69 from B29 to B12
Hoisting instruction Constant:46 from B27 to B12
Hoisting instruction Constant:24 from B23 to B12
After Optimizations:
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf
  0: B0[graph] {
      v0 <- Constant:15(#null) {PT: Null} {PCid: Null}
      v1 <- Parameter:16(0) {PT: dynamic} {PCid: dynamic}
      v2 <- Parameter:17(1) {PT: dynamic} {PCid: dynamic}
      v3 <- Parameter:18(2) {PT: dynamic} {PCid: dynamic}
      v35 <- Constant:137(#0) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72}
}
  2: B1[target] ParallelMove ecx <- S-2, eax <- S-1
  4:     CheckStackOverflow:2()
  6:     PushArgument:6(v3) {PCid: dynamic}
  8:     v4 <- Constant:7(#100) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [100, 100]
 10:     PushArgument:8(v4) {PCid: dynamic}
 12:     CheckSmi:9(v3) env={ v1 [S-3], v2 [ecx], v3 [eax], v2 [ecx], a0, a1 }
 14:     v5 <- PolymorphicInstanceCall:20(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #750]) {PT: dynamic} {PCid: dynamic} env={ v1 [S-3], v2 [S-2], v3 [S-1], v2 [S-2], a0, a1 }
 15:     ParallelMove eax <- eax
 16:     PushArgument:10(v5) {PCid: dynamic}
 18:     CheckSmi:11(v5) env={ v1 [S-3], v2 [S-2], v3 [S-1], v2 [S-2], a0 }
 20:     v6 <- PolymorphicInstanceCall:22(toString, v5 IC[1: _Smi@0x36924d72 #750]) {PT: dynamic} {PCid: dynamic} env={ v1 [S-3], v2 [S-2], v3 [S-1], v2 [S-2], a0 }
 21:     ParallelMove ecx <- eax, eax <- S-2
 22:     ParallelMove S+0 <- ecx
 22:     CheckClass:13(v2 IC[1: _OneByteString@0x36924d72 #750]) env={ v1 [S-3], v2 [eax], v3 [S-1], v2 [eax], v6 [ecx] }
 24:     CheckClass:5(v6 IC[1: _OneByteString@0x36924d72 #20]) env={ v2 [eax], v6 [ecx], v35 [C], v0 [C], v0 [C], v0 [C], v6 [ecx] } env={ v1 [S-3], v2 [eax], v3 [S-1], v2 [eax], v6 [ecx] }
 26:     v32 <- LoadField:106(v6, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [-1073741824, 1073741823]
 27:     ParallelMove S+4 <- edx
 28:     v33 <- Constant:107(#0) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, 0]
 30:     v12 <- StrictCompare:108(===, v32, v33) {PT: bool} {PCid: bool}
 31:     ParallelMove S+3 <- edi
 32:     v13 <- Constant:6(#true) {PT: bool} {PCid: bool}
 34:     Branch if StrictCompare:7(===, v12, v13) goto (6, 7)
 36: B6[target]
 38:     PushArgument:11(v2) {PCid: dynamic}
 40:     v29 <- InstanceCall:12(get:length, v2 IC[0: ]) {PT: dynamic} {PCid: dynamic} env={ v2 [S-2], v6 [S+0], v35 [C], v0 [C], v0 [C], v0 [C], v35 [C], a0 } env={ v1 [S-3], v2 [S-2], v3 [S-1], v2 [S-2], v6 [S+0] }
 41:     ParallelMove eax <- C, ecx <- eax, edx <- eax
 42:     ParallelMove S+1 <- edx
 42:     Branch if RelationalOp:13(<, v35, v29 IC[0: ]) goto (3, 4) env={ v2 [S-2], v6 [S+0], v35 [C], v0 [C], v0 [C], v0 [C], v35 [C], v29 [S+1] } env={ v1 [S-3], v2 [S-2], v3 [S-1], v2 [S-2], v6 [S+0] }
 44: B3[target]
 46:     ParallelMove eax <- C goto:24 5
 48: B4[target] ParallelMove eax <- S-2
 50:     PushArgument:18(v2) {PCid: dynamic}
 52:     v30 <- InstanceCall:19(get:length, v2 IC[0: ]) {PT: dynamic} {PCid: dynamic} env={ v2 [S-2], v6 [S+0], v35 [C], v0 [C], v0 [C], v0 [C], a0 } env={ v1 [S-3], v2 [S-2], v3 [S-1], v2 [S-2], v6 [S+0] }
 53:     ParallelMove eax <- eax
 54:     ParallelMove eax <- eax goto:25 5
 56: B5[join] pred(B3, B4) {
      v31 <- phi(v35, v30) {PT: dynamic} {PCid: dynamic} alive
}
 58:     ParallelMove eax <- eax goto:132 18
 60: B7[target]
 62:     Branch if RelationalOp:32(<, v35, v33 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (10, 8)
 64: B10[target]
 66:     goto:45 9
 68: B8[target] ParallelMove eax <- S-2
 70:     v15 <- LoadField:112(v2, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
 71:     ParallelMove S+2 <- ecx
 72:     Branch if RelationalOp:38(>=, v35, v15 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (11, 12)
 74: B11[target]
 76:     goto:47 9
 78: B9[join] pred(B10, B11)
 80:     v28 <- Constant:41(#-1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1, -1]
 82:     ParallelMove eax <- C goto:133 18
 84: B12[target]
 86:     ParallelMove ebx <- ecx
 86:     v18 <- BinarySmiOp:57(-, v15, v32) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741822, +inf] +o env={ v2 [eax], v6 [S+0], v35 [C], v0 [C], v0 [C], v0 [C], v15 [ecx], v32 [edx] } env={ v1 [S-3], v2 [eax], v3 [S-1], v2 [eax], v6 [S+0] }
 88:     v19 <- Constant:59(#1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, 1]
 90:     ParallelMove eax <- ebx
 90:     v20 <- BinarySmiOp:61(+, v18, v19) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741821, +inf] +o env={ v2 [S-2], v6 [S+0], v35 [C], v0 [C], v0 [C], v0 [C], v18 [ebx], v19 [C] } env={ v1 [S-3], v2 [S-2], v3 [S-1], v2 [S-2], v6 [S+0] }
 91:     ParallelMove S+1 <- eax
 92:     v56 <- Constant:88(#false) {PT: bool} {PCid: bool}
 94:     v57 <- Constant:88(#false) {PT: bool} {PCid: bool}
 96:     v58 <- Constant:88(#false) {PT: bool} {PCid: bool}
 98:     ParallelMove ebx <- C goto:88 15
100: B15[join] pred(B12, B14) {
      v22 <- phi(v35, v27) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} alive [0, 1073741823]
}
101:     ParallelMove S+5 <- ebx
102:     Branch if RelationalOp:92(<, v22, v20 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #957]) goto (16, 17)
104: B16[target]
106:     CheckStackOverflow:65()
108:     Branch if StrictCompare:7(===, v12, v13) goto (20, 21)
110: B20[target]
112:     ParallelMove edx <- C, eax <- S-2, ecx <- S+0 goto:135 34
114: B21[target]
116:     Branch if RelationalOp:15(<, v22, v33 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (24, 22)
118: B24[target]
120:     goto:28 23
122: B22[target]
124:     Branch if RelationalOp:21(>=, v22, v15 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (25, 26)
126: B25[target]
128:     goto:30 23
130: B23[join] pred(B24, B25)
132:     ParallelMove edx <- C, eax <- S-2, ecx <- S+0 goto:136 34
134: B26[target]
136:     ParallelMove eax <- ebx
136:     v45 <- BinarySmiOp:40(+, v22, v32) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741824, +inf] +o env={ v2 [S-2], v22 [ebx], v6 [S+0], v0 [C], v32 [edx], v0 [C], v22 [ebx], v32 [edx] } env={ v2 [S-2], v6 [S+0], v35 [C], v0 [C], v20 [S+1], v22 [ebx] } env={ v1 [S-3], v2 [S-2], v3 [S-1], v2 [S-2], v6 [S+0] }
138:     Branch if RelationalOp:44(>, v45, v15 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (27, 28)
140: B27[target]
142:     ParallelMove edx <- C, eax <- S-2, ecx <- S+0 goto:137 34
144: B28[target]
146:     ParallelMove edi <- C, eax <- S-2, ecx <- S+0 goto:81 31
148: B31[join] pred(B28, B30) {
      v49 <- phi(v33, v55) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} alive [0, 1073741823]
}
150:     Branch if RelationalOp:85(<, v49, v32 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (32, 33)
152: B32[target]
154:     CheckStackOverflow:52()
156:     ParallelMove edx <- edi
156:     v51 <- BinarySmiOp:59(+, v49, v22) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, v32+536870909] -o
158:     CheckArrayBound:61(v2, v51) env={ v2 [eax], v22 [ebx], v6 [ecx], v0 [C], v32 [S+4], v49 [edi], v2 [eax], v51 [edx] } env={ v2 [eax], v6 [ecx], v35 [C], v0 [C], v20 [S+1], v22 [ebx] } env={ v1 [S-3], v2 [eax], v3 [S-1], v2 [eax], v6 [ecx] }
160:     v52 <- StringCharCodeAt:124(v2, v51) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
162:     CheckArrayBound:66(v6, v49) env={ v2 [eax], v22 [S+5], v6 [ecx], v0 [C], v32 [S+4], v49 [edi], v52 [ebx], v6 [ecx], v49 [edi] } env={ v2 [eax], v6 [ecx], v35 [C], v0 [C], v20 [S+1], v22 [S+5] } env={ v1 [S-3], v2 [eax], v3 [S-1], v2 [eax], v6 [ecx] }
164:     v53 <- StringCharCodeAt:128(v6, v49) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
166:     Branch if EqualityCompare:67(v52 != v53 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (29, 30)
168: B29[target]
170:     ParallelMove edx <- C goto:138 34
172: B30[target]
174:     ParallelMove edi <- edi
174:     v55 <- BinarySmiOp:78(+, v49, v19) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, v32] -o
176:     ParallelMove edi <- edi, ebx <- S+5, edx <- S+4 goto:82 31
178: B33[target]
180:     ParallelMove edx <- C goto:139 34
182: B34[join] pred(B20, B23, B27, B29, B33) {
      v62 <- phi(v13, v58, v57, v56, v13) {PT: bool} {PCid: bool} alive
}
184:     Branch if StrictCompare:74(===, v62, v13) goto (13, 14)
186: B13[target]
188:     ParallelMove eax <- S+5 goto:134 18
190: B14[target]
192:     ParallelMove edx <- S+5
192:     v27 <- BinarySmiOp:85(+, v22, v19) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, v20] -o
194:     ParallelMove ebx <- edx, edi <- S+3, ecx <- S+2, eax <- S+1, edx <- S+4 goto:89 15
196: B17[target]
198:     v23 <- Constant:96(#-1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1, -1]
200:     ParallelMove eax <- C goto:135 18
202: B18[join] pred(B5, B9, B13, B17) {
      v34 <- phi(v31, v28, v22, v23) {PT: dynamic} {PCid: dynamic} alive
}
203:     ParallelMove eax <- eax
204:     Return:14(v34)
--> patching entry 0xb3009ce8
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' entry: 0xb300a648 time: 3633 us
Code for optimized function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' {
        ;; Enter frame
0xb300a648    55                     push ebp
0xb300a649    89e5                   mov ebp,esp
0xb300a64b    e800000000             call 0xb300a650
0xb300a650    83ec18                 sub esp,0x18
        ;; Check argument count
0xb300a653    8b420b                 mov eax,[edx+0xb]
0xb300a656    83f806                 cmp eax,0x6
0xb300a659    7505                   jnz 0xb300a660
0xb300a65b    3b420f                 cmp eax,[edx+0xf]
0xb300a65e    7411                   jz 0xb300a671
0xb300a660    83c418                 add esp,0x18
0xb300a663    b989e829b3             mov ecx,0xb329e889  'ICData target:'call' num-checks: 0'
0xb300a668    e8db5b3702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb300a66d    89ec                   mov esp,ebp
0xb300a66f    5d                     pop ebp
0xb300a670    c3                     ret
        ;; B0
        ;; B1
0xb300a671    8b4d0c                 mov ecx,[ebp+0xc]
0xb300a674    8b4508                 mov eax,[ebp+0x8]
        ;; CheckStackOverflow:2()
0xb300a677    3b25bc195809           cmp esp,[0x95819bc]
0xb300a67d    0f866f020000           jna 0xb300a8f2
        ;; PushArgument:6(v3) {PCid: dynamic}
0xb300a683    50                     push eax
        ;; v4 <- Constant:7(#100) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [100, 100]
0xb300a684    bac8000000             mov edx,0xc8
        ;; PushArgument:8(v4) {PCid: dynamic}
0xb300a689    52                     push edx
        ;; CheckSmi:9(v3)
0xb300a68a    a801                   test al,0x1
0xb300a68c    0f85b4020000           jnz 0xb300a946
        ;; v5 <- PolymorphicInstanceCall:20(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #750]) {PT: dynamic} {PCid: dynamic}
0xb300a692    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300a697    e88c5c3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300a69c    83c408                 add esp,0x8
        ;; ParallelMove eax <- eax
        ;; PushArgument:10(v5) {PCid: dynamic}
0xb300a69f    50                     push eax
        ;; CheckSmi:11(v5)
0xb300a6a0    a801                   test al,0x1
0xb300a6a2    0f85a8020000           jnz 0xb300a950
        ;; v6 <- PolymorphicInstanceCall:22(toString, v5 IC[1: _Smi@0x36924d72 #750]) {PT: dynamic} {PCid: dynamic}
0xb300a6a8    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300a6ad    e8765c3702             call 0xb5380328  [stub: CallStaticFunction]
0xb300a6b2    83c404                 add esp,0x4
        ;; ParallelMove ecx <- eax, eax <- S-2
0xb300a6b5    89c1                   mov ecx,eax
0xb300a6b7    8b450c                 mov eax,[ebp+0xc]
        ;; ParallelMove S+0 <- ecx
0xb300a6ba    894df8                 mov [ebp-0x8],ecx
        ;; CheckClass:13(v2 IC[1: _OneByteString@0x36924d72 #750])
0xb300a6bd    a801                   test al,0x1
0xb300a6bf    0f8495020000           jz 0xb300a95a
0xb300a6c5    0fb75001               movzx_w edx,[eax+0x1]
0xb300a6c9    83fa4d                 cmp edx,0x4d
0xb300a6cc    0f8588020000           jnz 0xb300a95a
        ;; CheckClass:5(v6 IC[1: _OneByteString@0x36924d72 #20])
0xb300a6d2    f6c101                 test_b ecx,0x1
0xb300a6d5    0f8484020000           jz 0xb300a95f
0xb300a6db    0fb75101               movzx_w edx,[ecx+0x1]
0xb300a6df    83fa4d                 cmp edx,0x4d
0xb300a6e2    0f8577020000           jnz 0xb300a95f
        ;; v32 <- LoadField:106(v6, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [-1073741824, 1073741823]
0xb300a6e8    8b5103                 mov edx,[ecx+0x3]
        ;; ParallelMove S+4 <- edx
0xb300a6eb    8955e8                 mov [ebp-0x18],edx
        ;; v33 <- Constant:107(#0) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, 0]
0xb300a6ee    bb00000000             mov ebx,0
        ;; v12 <- StrictCompare:108(===, v32, v33) {PT: bool} {PCid: bool}
0xb300a6f3    85d2                   test edx,edx
0xb300a6f5    7407                   jz 0xb300a6fe
0xb300a6f7    bf411030b3             mov edi,0xb3301041  'false'
0xb300a6fc    eb05                   jmp 0xb300a703
0xb300a6fe    bf391030b3             mov edi,0xb3301039  'true'
        ;; ParallelMove S+3 <- edi
0xb300a703    897dec                 mov [ebp-0x14],edi
        ;; v13 <- Constant:6(#true) {PT: bool} {PCid: bool}
        ;; Branch if StrictCompare:7(===, v12, v13) goto (6, 7)
0xb300a706    81ff391030b3           cmp edi,0xb3301039
0xb300a70c    0f856c000000           jnz 0xb300a77e
        ;; B6
        ;; PushArgument:11(v2) {PCid: dynamic}
0xb300a712    50                     push eax
        ;; v29 <- InstanceCall:12(get:length, v2 IC[0: ]) {PT: dynamic} {PCid: dynamic}
0xb300a713    bfb95c29b3             mov edi,0xb3295cb9  'Function 'indexOf': static.'
0xb300a718    b9d9b829b3             mov ecx,0xb329b8d9  'ICData target:'get:length' num-checks: 0'
0xb300a71d    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300a722    e8915dffff             call 0xb30004b8  [stub: OneArgOptimizedCheckInlineCache]
0xb300a727    83c404                 add esp,0x4
        ;; ParallelMove eax <- C, ecx <- eax, edx <- eax
0xb300a72a    89c1                   mov ecx,eax
0xb300a72c    89c2                   mov edx,eax
0xb300a72e    33c0                   xor eax,eax
        ;; ParallelMove S+1 <- edx
0xb300a730    8955f4                 mov [ebp-0xc],edx
        ;; Branch if RelationalOp:13(<, v35, v29 IC[0: ]) goto (3, 4)
0xb300a733    50                     push eax
0xb300a734    51                     push ecx
0xb300a735    bfb95c29b3             mov edi,0xb3295cb9  'Function 'indexOf': static.'
0xb300a73a    b929b929b3             mov ecx,0xb329b929  'ICData target:'<' num-checks: 0'
0xb300a73f    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300a744    e82f5effff             call 0xb3000578  [stub: TwoArgsOptimizedCheckInlineCache]
0xb300a749    83c408                 add esp,0x8
0xb300a74c    3d391030b3             cmp eax, 0xb3301039  'true'
0xb300a751    0f8507000000           jnz 0xb300a75e
        ;; B3
        ;; ParallelMove eax <- C goto:24 5
0xb300a757    33c0                   xor eax,eax
0xb300a759    e91b000000             jmp 0xb300a779
        ;; B4
0xb300a75e    8b450c                 mov eax,[ebp+0xc]
        ;; PushArgument:18(v2) {PCid: dynamic}
0xb300a761    50                     push eax
        ;; v30 <- InstanceCall:19(get:length, v2 IC[0: ]) {PT: dynamic} {PCid: dynamic}
0xb300a762    bfb95c29b3             mov edi,0xb3295cb9  'Function 'indexOf': static.'
0xb300a767    b981b929b3             mov ecx,0xb329b981  'ICData target:'get:length' num-checks: 0'
0xb300a76c    ba19bb0bb3             mov edx,0xb30bbb19  Array[1, 1, null]
0xb300a771    e8425dffff             call 0xb30004b8  [stub: OneArgOptimizedCheckInlineCache]
0xb300a776    83c404                 add esp,0x4
        ;; ParallelMove eax <- eax
        ;; ParallelMove eax <- eax goto:25 5
        ;; B5
        ;; ParallelMove eax <- eax goto:132 18
0xb300a779    e95b010000             jmp 0xb300a8d9
        ;; B7
        ;; Branch if RelationalOp:32(<, v35, v33 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (10, 8)
0xb300a77e    83fb00                 cmp ebx,0
0xb300a781    0f8e05000000           jng 0xb300a78c
        ;; B10
        ;; goto:45 9
0xb300a787    e912000000             jmp 0xb300a79e
        ;; B8
0xb300a78c    8b450c                 mov eax,[ebp+0xc]
        ;; v15 <- LoadField:112(v2, 4, immutable=1) {PT: dynamic} {PCid: _Smi@0x36924d72} [0, 536870911]
0xb300a78f    8b4803                 mov ecx,[eax+0x3]
        ;; ParallelMove S+2 <- ecx
0xb300a792    894df0                 mov [ebp-0x10],ecx
        ;; Branch if RelationalOp:38(>=, v35, v15 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #20]) goto (11, 12)
0xb300a795    83f900                 cmp ecx,0
0xb300a798    0f8f0a000000           jg 0xb300a7a8
        ;; B11
        ;; goto:47 9
        ;; B9
        ;; v28 <- Constant:41(#-1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1, -1]
        ;; ParallelMove eax <- C goto:133 18
0xb300a79e    b8feffffff             mov eax,0xfffffffe
0xb300a7a3    e931010000             jmp 0xb300a8d9
        ;; B12
        ;; ParallelMove ebx <- ecx
0xb300a7a8    89cb                   mov ebx,ecx
        ;; v18 <- BinarySmiOp:57(-, v15, v32) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741822, +inf] +o
0xb300a7aa    2bda                   sub ebx,edx
0xb300a7ac    0f80b2010000           jo 0xb300a964
        ;; v19 <- Constant:59(#1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, 1]
        ;; ParallelMove eax <- ebx
0xb300a7b2    89d8                   mov eax,ebx
        ;; v20 <- BinarySmiOp:61(+, v18, v19) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741821, +inf] +o
0xb300a7b4    83c002                 add eax,0x2
0xb300a7b7    0f80ac010000           jo 0xb300a969
        ;; ParallelMove S+1 <- eax
0xb300a7bd    8945f4                 mov [ebp-0xc],eax
        ;; v56 <- Constant:88(#false) {PT: bool} {PCid: bool}
        ;; v57 <- Constant:88(#false) {PT: bool} {PCid: bool}
        ;; v58 <- Constant:88(#false) {PT: bool} {PCid: bool}
        ;; ParallelMove ebx <- C goto:88 15
0xb300a7c0    33db                   xor ebx,ebx
        ;; B15
        ;; ParallelMove S+5 <- ebx
0xb300a7c2    895de4                 mov [ebp-0x1c],ebx
        ;; Branch if RelationalOp:92(<, v22, v20 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #957]) goto (16, 17)
0xb300a7c5    3bd8                   cmp ebx,eax
0xb300a7c7    0f8d07010000           jnl 0xb300a8d4
        ;; B16
        ;; CheckStackOverflow:65()
0xb300a7cd    3b25bc195809           cmp esp,[0x95819bc]
0xb300a7d3    0f8631010000           jna 0xb300a90a
        ;; Branch if StrictCompare:7(===, v12, v13) goto (20, 21)
0xb300a7d9    81ff391030b3           cmp edi,0xb3301039
0xb300a7df    0f8510000000           jnz 0xb300a7f5
        ;; B20
        ;; ParallelMove edx <- C, eax <- S-2, ecx <- S+0 goto:135 34
0xb300a7e5    8b450c                 mov eax,[ebp+0xc]
0xb300a7e8    8b4df8                 mov ecx,[ebp-0x8]
0xb300a7eb    ba391030b3             mov edx,0xb3301039  'true'
0xb300a7f0    e9b2000000             jmp 0xb300a8a7
        ;; B21
        ;; Branch if RelationalOp:15(<, v22, v33 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (24, 22)
0xb300a7f5    83fb00                 cmp ebx,0
0xb300a7f8    0f8d05000000           jnl 0xb300a803
        ;; B24
        ;; goto:28 23
0xb300a7fe    e908000000             jmp 0xb300a80b
        ;; B22
        ;; Branch if RelationalOp:21(>=, v22, v15 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (25, 26)
0xb300a803    3bd9                   cmp ebx,ecx
0xb300a805    0f8c10000000           jl 0xb300a81b
        ;; B25
        ;; goto:30 23
        ;; B23
        ;; ParallelMove edx <- C, eax <- S-2, ecx <- S+0 goto:136 34
0xb300a80b    8b450c                 mov eax,[ebp+0xc]
0xb300a80e    8b4df8                 mov ecx,[ebp-0x8]
0xb300a811    ba411030b3             mov edx,0xb3301041  'false'
0xb300a816    e98c000000             jmp 0xb300a8a7
        ;; B26
        ;; ParallelMove eax <- ebx
0xb300a81b    89d8                   mov eax,ebx
        ;; v45 <- BinarySmiOp:40(+, v22, v32) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1073741824, +inf] +o
0xb300a81d    03c2                   add eax,edx
0xb300a81f    0f8049010000           jo 0xb300a96e
        ;; Branch if RelationalOp:44(>, v45, v15 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #207]) goto (27, 28)
0xb300a825    3bc1                   cmp eax,ecx
0xb300a827    0f8e10000000           jng 0xb300a83d
        ;; B27
        ;; ParallelMove edx <- C, eax <- S-2, ecx <- S+0 goto:137 34
0xb300a82d    8b450c                 mov eax,[ebp+0xc]
0xb300a830    8b4df8                 mov ecx,[ebp-0x8]
0xb300a833    ba411030b3             mov edx,0xb3301041  'false'
0xb300a838    e96a000000             jmp 0xb300a8a7
        ;; B28
        ;; ParallelMove edi <- C, eax <- S-2, ecx <- S+0 goto:81 31
0xb300a83d    8b450c                 mov eax,[ebp+0xc]
0xb300a840    8b4df8                 mov ecx,[ebp-0x8]
0xb300a843    33ff                   xor edi,edi
        ;; B31
        ;; Branch if RelationalOp:85(<, v49, v32 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #233]) goto (32, 33)
0xb300a845    3bfa                   cmp edi,edx
0xb300a847    0f8d55000000           jnl 0xb300a8a2
        ;; B32
        ;; CheckStackOverflow:52()
0xb300a84d    3b25bc195809           cmp esp,[0x95819bc]
0xb300a853    0f86cf000000           jna 0xb300a928
        ;; ParallelMove edx <- edi
0xb300a859    89fa                   mov edx,edi
        ;; v51 <- BinarySmiOp:59(+, v49, v22) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [0, v32+536870909] -o
0xb300a85b    03d3                   add edx,ebx
        ;; CheckArrayBound:61(v2, v51)
0xb300a85d    3b5003                 cmp edx,[eax+0x3]
0xb300a860    0f830d010000           jnc 0xb300a973
        ;; v52 <- StringCharCodeAt:124(v2, v51) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
0xb300a866    d1fa                   sar edx, 1
0xb300a868    0fb65c100b             movzx_b ebx,[eax+edx*0x1+0xb]
0xb300a86d    03d2                   add edx,edx
0xb300a86f    03db                   add ebx,ebx
        ;; CheckArrayBound:66(v6, v49)
0xb300a871    3b7903                 cmp edi,[ecx+0x3]
0xb300a874    0f83fe000000           jnc 0xb300a978
        ;; v53 <- StringCharCodeAt:128(v6, v49) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
0xb300a87a    d1ff                   sar edi, 1
0xb300a87c    0fb654390b             movzx_b edx,[ecx+edi*0x1+0xb]
0xb300a881    03ff                   add edi,edi
0xb300a883    03d2                   add edx,edx
        ;; Branch if EqualityCompare:67(v52 != v53 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #222]) goto (29, 30)
0xb300a885    3bda                   cmp ebx,edx
0xb300a887    0f840a000000           jz 0xb300a897
        ;; B29
        ;; ParallelMove edx <- C goto:138 34
0xb300a88d    ba411030b3             mov edx,0xb3301041  'false'
0xb300a892    e910000000             jmp 0xb300a8a7
        ;; B30
        ;; ParallelMove edi <- edi
        ;; v55 <- BinarySmiOp:78(+, v49, v19) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, v32] -o
0xb300a897    83c702                 add edi,0x2
        ;; ParallelMove edi <- edi, ebx <- S+5, edx <- S+4 goto:82 31
0xb300a89a    8b5de4                 mov ebx,[ebp-0x1c]
0xb300a89d    8b55e8                 mov edx,[ebp-0x18]
0xb300a8a0    eba3                   jmp 0xb300a845
        ;; B33
        ;; ParallelMove edx <- C goto:139 34
0xb300a8a2    ba391030b3             mov edx,0xb3301039  'true'
        ;; B34
        ;; Branch if StrictCompare:74(===, v62, v13) goto (13, 14)
0xb300a8a7    81fa391030b3           cmp edx,0xb3301039
0xb300a8ad    0f8508000000           jnz 0xb300a8bb
        ;; B13
        ;; ParallelMove eax <- S+5 goto:134 18
0xb300a8b3    8b45e4                 mov eax,[ebp-0x1c]
0xb300a8b6    e91e000000             jmp 0xb300a8d9
        ;; B14
        ;; ParallelMove edx <- S+5
0xb300a8bb    8b55e4                 mov edx,[ebp-0x1c]
        ;; v27 <- BinarySmiOp:85(+, v22, v19) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [1, v20] -o
0xb300a8be    83c202                 add edx,0x2
        ;; ParallelMove ebx <- edx, edi <- S+3, ecx <- S+2, eax <- S+1, edx <- S+4 goto:89 15
0xb300a8c1    89d3                   mov ebx,edx
0xb300a8c3    8b7dec                 mov edi,[ebp-0x14]
0xb300a8c6    8b4df0                 mov ecx,[ebp-0x10]
0xb300a8c9    8b45f4                 mov eax,[ebp-0xc]
0xb300a8cc    8b55e8                 mov edx,[ebp-0x18]
0xb300a8cf    e9eefeffff             jmp 0xb300a7c2
        ;; B17
        ;; v23 <- Constant:96(#-1) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [-1, -1]
        ;; ParallelMove eax <- C goto:135 18
0xb300a8d4    b8feffffff             mov eax,0xfffffffe
        ;; B18
        ;; ParallelMove eax <- eax
        ;; Return:14(v34)
0xb300a8d9    bab95c29b3             mov edx,0xb3295cb9  'Function 'indexOf': static.'
0xb300a8de    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300a8e5    7c05                   jl 0xb300a8ec
0xb300a8e7    e8cc5fffff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300a8ec    89ec                   mov esp,ebp
0xb300a8ee    5d                     pop ebp
0xb300a8ef    c3                     ret
0xb300a8f0    90                     nop
0xb300a8f1    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300a8f2    50                     push eax
0xb300a8f3    51                     push ecx
0xb300a8f4    b970d30a08             mov ecx,0x80ad370
0xb300a8f9    ba00000000             mov edx,0
0xb300a8fe    e825573702             call 0xb5380028  [stub: CallToRuntime]
0xb300a903    59                     pop ecx
0xb300a904    58                     pop eax
0xb300a905    e979fdffff             jmp 0xb300a683
        ;; CheckStackOverflowSlowPath
0xb300a90a    50                     push eax
0xb300a90b    51                     push ecx
0xb300a90c    52                     push edx
0xb300a90d    53                     push ebx
0xb300a90e    57                     push edi
0xb300a90f    b970d30a08             mov ecx,0x80ad370
0xb300a914    ba00000000             mov edx,0
0xb300a919    e80a573702             call 0xb5380028  [stub: CallToRuntime]
0xb300a91e    5f                     pop edi
0xb300a91f    5b                     pop ebx
0xb300a920    5a                     pop edx
0xb300a921    59                     pop ecx
0xb300a922    58                     pop eax
0xb300a923    e9b1feffff             jmp 0xb300a7d9
        ;; CheckStackOverflowSlowPath
0xb300a928    50                     push eax
0xb300a929    51                     push ecx
0xb300a92a    52                     push edx
0xb300a92b    53                     push ebx
0xb300a92c    57                     push edi
0xb300a92d    b970d30a08             mov ecx,0x80ad370
0xb300a932    ba00000000             mov edx,0
0xb300a937    e8ec563702             call 0xb5380028  [stub: CallToRuntime]
0xb300a93c    5f                     pop edi
0xb300a93d    5b                     pop ebx
0xb300a93e    5a                     pop edx
0xb300a93f    59                     pop ecx
0xb300a940    58                     pop eax
0xb300a941    e913ffffff             jmp 0xb300a859
        ;; Deopt stub for id 9
0xb300a946    e82d5b3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 9
0xb300a94b    e8285b3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 11
0xb300a950    e8235b3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 11
0xb300a955    e81e5b3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 13
0xb300a95a    e8195b3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 5
0xb300a95f    e8145b3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 57
0xb300a964    e80f5b3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 61
0xb300a969    e80a5b3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 40
0xb300a96e    e8055b3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 61
0xb300a973    e8005b3702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 66
0xb300a978    e8fb5a3702             call 0xb5380478  [stub: Deoptimize]
0xb300a97d    e9b65a3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300a982    e9915b3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 28 : 0xb300a664 'ICData target:'call' num-checks: 0'
 75 : 0xb300a693 'ImmutableArray'
 97 : 0xb300a6a9 'ImmutableArray'
 176 : 0xb300a6f8 'false'
 183 : 0xb300a6ff 'true'
 192 : 0xb300a708 'true'
 204 : 0xb300a714 'Function 'indexOf': static.'
 209 : 0xb300a719 'ICData target:'get:length' num-checks: 0'
 214 : 0xb300a71e 'ImmutableArray'
 238 : 0xb300a736 'Function 'indexOf': static.'
 243 : 0xb300a73b 'ICData target:'<' num-checks: 0'
 248 : 0xb300a740 'ImmutableArray'
 261 : 0xb300a74d 'true'
 283 : 0xb300a763 'Function 'indexOf': static.'
 288 : 0xb300a768 'ICData target:'get:length' num-checks: 0'
 293 : 0xb300a76d 'ImmutableArray'
 403 : 0xb300a7db 'true'
 420 : 0xb300a7ec 'true'
 458 : 0xb300a812 'false'
 492 : 0xb300a834 'false'
 582 : 0xb300a88e 'false'
 603 : 0xb300a8a3 'true'
 609 : 0xb300a8a9 'true'
 658 : 0xb300a8da 'Function 'indexOf': static.'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300a69c	fn-call      	9		278	-1
0xb300a6b2	fn-call      	11		285	-1
0xb300a727	ic-call      	12		12991	-1
0xb300a749	ic-call      	13		12988	-1
0xb300a776	ic-call      	19		12999	-1
0xb300a8ec	other        	-1		0	-1
0xb300a8f1	return       	-1		269	-1
0xb300a903	other        	-1		258	-1
0xb300a91e	other        	-1		13047	-1
0xb300a93c	other        	-1		12859	-1
0xb300a97d	patch        	-1		0	-1
0xb300a982	lazy-deopt   	-1		0	-1
}
DeoptInfo: {
   0: 0xb300a94b  [ret bef oti:0(9)][s13][s12][ecx][pcmark oti:0][callerfp][callerpc][eax][ecx][s0]  (CheckSmi)
   1: 0xb300a950  [ret bef oti:0(9)][s13][s12][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (PolymorphicInstanceCallTestFail)
   2: 0xb300a69c  [ret aft oti:0(9)][s13][s12][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (AtCall)
   3: 0xb300a955  [ret bef oti:0(11)][s12][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (CheckSmi)
   4: 0xb300a95a  [ret bef oti:0(11)][s12][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (PolymorphicInstanceCallTestFail)
   5: 0xb300a6b2  [ret aft oti:0(11)][s12][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (AtCall)
   6: 0xb300a95f  [ret bef oti:0(13)][ecx][eax][pcmark oti:0][callerfp][callerpc][s2][eax][s0]  (CheckClass)
   7: 0xb300a964  [ret bef oti:1(5)][ecx][const oti:2][const oti:2][const oti:2][const oti:3][ecx][eax][pcmark oti:1][callerfp][ret aft oti:0(13)][ecx][eax][pcmark oti:0][callerfp][callerpc][s2][eax][s0]  (CheckClass)
   8: 0xb300a727  [ret aft oti:1(12)][s12][const oti:3][const oti:2][const oti:2][const oti:2][const oti:3][s6][s1][pcmark oti:1][callerfp][ret aft oti:0(13)][s6][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (AtCall)
   9: 0xb300a749  [ret aft oti:1(13)][s7][const oti:3][const oti:2][const oti:2][const oti:2][const oti:3][s6][s1][pcmark oti:1][callerfp][ret aft oti:0(13)][s6][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (AtCall)
  10: 0xb300a776  [ret aft oti:1(19)][s12][const oti:2][const oti:2][const oti:2][const oti:3][s6][s1][pcmark oti:1][callerfp][ret aft oti:0(13)][s6][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (AtCall)
  11: 0xb300a969  [ret bef oti:1(57)][edx][ecx][const oti:2][const oti:2][const oti:2][const oti:3][s6][eax][pcmark oti:1][callerfp][ret aft oti:0(13)][s6][eax][pcmark oti:0][callerfp][callerpc][s2][eax][s0]  (BinarySmiOp)
  12: 0xb300a96e  [ret bef oti:1(61)][const oti:4][ebx][const oti:2][const oti:2][const oti:2][const oti:3][s6][s1][pcmark oti:1][callerfp][ret aft oti:0(13)][s6][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (BinarySmiOp)
  13: 0xb300a973  [ret bef oti:5(40)][edx][ebx][const oti:2][edx][const oti:2][pcmark oti:5][callerfp][ret aft oti:1(72)][s6][ebx][s1][ebx][s7][const oti:2][const oti:3][s6][s1][pcmark oti:1][callerfp][ret aft oti:0(13)][s6][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (BinarySmiOp)
  14: 0xb300a978  [ret bef oti:5(61)][edx][eax][edi][s10][const oti:2][pcmark oti:5][callerfp][ret aft oti:1(72)][ecx][ebx][eax][ebx][s7][const oti:2][const oti:3][ecx][eax][pcmark oti:1][callerfp][ret aft oti:0(13)][ecx][eax][pcmark oti:0][callerfp][callerpc][s2][eax][s0]  (CheckArrayBound)
  15: 0xb300a97d  [ret bef oti:5(66)][edi][ecx][ebx][edi][s10][const oti:2][pcmark oti:5][callerfp][ret aft oti:1(72)][ecx][s11][eax][s11][s7][const oti:2][const oti:3][ecx][eax][pcmark oti:1][callerfp][ret aft oti:0(13)][ecx][eax][pcmark oti:0][callerfp][callerpc][s2][eax][s0]  (CheckArrayBound)
}
Object Table: {
  0: Function 'indexOf': static.
  1: Function 'indexOf':.
  2: null
  3: 0
  4: 1
  5: Function '_substringMatches@0x36924d72':.
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' {
0xb300a66d: 
0xb300a69c: 000000
0xb300a6b2: 000000
0xb300a727: 100000
0xb300a749: 110000
0xb300a776: 100000
0xb300a8ec: 000000
0xb300a903: 00000011
0xb300a91e: 11111111111
0xb300a93c: 11111111111
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' {
  stack var 'init' offset 3 (valid 261-290)
  stack var 'i' offset 2 (valid 266-290)
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_indexOf_indexOf' {
No exception handlers
}
Static call target functions {
  0xb300a69c: dart:core__IntegerImplementation@0x36924d72_%, 0xb5400019
  0xb300a6b2: dart:core_Object_toString, 0xb5400019
}
PatchStaticCall: patching from 0xb300a69c to 'dart:core__IntegerImplementation@0x36924d72_%' 0xb3008f38
PatchStaticCall: patching from 0xb300a6b2 to 'dart:core_Object_toString' 0xb3009bd8
ret = 100
PatchStaticCall: patching from 0xb300853b to 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' 0xb30011a8
PatchStaticCall: patching from 0xb3008549 to 'dart:core_::_print' 0xb3008658
indeOf time = 44 ms
PatchStaticCall: patching from 0xb3008571 to 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_gettime' 0xb3008828
Compiling function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' @ token 73
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- Constant:3(#Closure: (dynamic, String, int) => int from Function 'charCodeAt': static.)
    PushArgument:4(t0)
    t0 <- Constant:5(#10000)
    PushArgument:6(t0)
    t0 <- StaticCall:7(hotString t0, t0)
    Return:8(t0)
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' entry: 0xb300a998 time: 120 us
Code for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
        ;; Enter frame
0xb300a998    55                     push ebp
0xb300a999    89e5                   mov ebp,esp
0xb300a99b    e800000000             call 0xb300a9a0
        ;; Check argument count
0xb300a9a0    8b420b                 mov eax,[edx+0xb]
0xb300a9a3    83f802                 cmp eax,0x2
0xb300a9a6    7505                   jnz 0xb300a9ad
0xb300a9a8    3b420f                 cmp eax,[edx+0xf]
0xb300a9ab    740e                   jz 0xb300a9bb
0xb300a9ad    b909f629b3             mov ecx,0xb329f609  'ICData target:'call' num-checks: 0'
0xb300a9b2    e891583702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb300a9b7    89ec                   mov esp,ebp
0xb300a9b9    5d                     pop ebp
0xb300a9ba    c3                     ret
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300a9bb    3b25bc195809           cmp esp,[0x95819bc]
0xb300a9c1    0f8637000000           jna 0xb300a9fe
        ;; t0 <- Constant:3(#Closure: (dynamic, String, int) => int from Function 'charCodeAt': static.)
0xb300a9c7    b8f9f529b3             mov eax,0xb329f5f9  'instance of Library:'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart' Class: (dynamic, String, int) => int'
0xb300a9cc    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- Constant:5(#10000)
0xb300a9cd    b8204e0000             mov eax,0x4e20
0xb300a9d2    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- StaticCall:7(hotString t0, t0)
0xb300a9d3    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300a9d8    e84b593702             call 0xb5380328  [stub: CallStaticFunction]
0xb300a9dd    83c408                 add esp,0x8
0xb300a9e0    50                     push eax
        ;; Return:8(t0)
0xb300a9e1    58                     pop eax
0xb300a9e2    ba095e29b3             mov edx,0xb3295e09  'Function '<anonymous closure>': static.'
0xb300a9e7    ff422b                 inc [edx+0x2b]
0xb300a9ea    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300a9f1    7c05                   jl 0xb300a9f8
0xb300a9f3    e8c05effff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300a9f8    89ec                   mov esp,ebp
0xb300a9fa    5d                     pop ebp
0xb300a9fb    c3                     ret
0xb300a9fc    90                     nop
0xb300a9fd    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300a9fe    b970d30a08             mov ecx,0x80ad370
0xb300aa03    ba00000000             mov edx,0
0xb300aa08    e81b563702             call 0xb5380028  [stub: CallToRuntime]
0xb300aa0d    ebb8                   jmp 0xb300a9c7
0xb300aa0f    e9245a3702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300aa14    e9ff5a3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb300a9ae 'ICData target:'call' num-checks: 0'
 48 : 0xb300a9c8 'Closure: (dynamic, String, int) => int from Function 'charCodeAt': static.'
 60 : 0xb300a9d4 'ImmutableArray'
 75 : 0xb300a9e3 'Function '<anonymous closure>': static.'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300a9dd	fn-call      	7		77	-1
0xb300a9dd	deopt-after  	7		77	-1
0xb300a9f8	other        	-1		0	-1
0xb300a9fd	return       	-1		76	-1
0xb300aa0d	other        	-1		73	-1
0xb300aa0f	patch        	-1		0	-1
0xb300aa14	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_main_<anonymous closure>' {
No exception handlers
}
Static call target functions {
  0xb300a9dd: file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString, 0xb5400019
}
PatchStaticCall: patching from 0xb300a9dd to 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' 0xb30094a8
Compiling function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' @ token 294
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt
B0[graph]
B1[target]
    CheckStackOverflow:2()
    t0 <- LoadLocal:3(init lvl:0)
    PushArgument:4(t0)
    t0 <- LoadLocal:5(i lvl:0)
    PushArgument:6(t0)
    t0 <- Constant:7(#100)
    PushArgument:8(t0)
    t0 <- InstanceCall:9(%, t0, t0)
    PushArgument:10(t0)
    t0 <- InstanceCall:11(charCodeAt, t0, t0)
    Return:12(t0)
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' entry: 0xb300aa38 time: 118 us
Code for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' {
        ;; Enter frame
0xb300aa38    55                     push ebp
0xb300aa39    89e5                   mov ebp,esp
0xb300aa3b    e800000000             call 0xb300aa40
        ;; Check argument count
0xb300aa40    8b420b                 mov eax,[edx+0xb]
0xb300aa43    83f806                 cmp eax,0x6
0xb300aa46    7505                   jnz 0xb300aa4d
0xb300aa48    3b420f                 cmp eax,[edx+0xf]
0xb300aa4b    740e                   jz 0xb300aa5b
0xb300aa4d    b9f1f729b3             mov ecx,0xb329f7f1  'ICData target:'call' num-checks: 0'
0xb300aa52    e8f1573702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb300aa57    89ec                   mov esp,ebp
0xb300aa59    5d                     pop ebp
0xb300aa5a    c3                     ret
        ;; B0
        ;; B1
        ;; CheckStackOverflow:2()
0xb300aa5b    3b25bc195809           cmp esp,[0x95819bc]
0xb300aa61    0f8651000000           jna 0xb300aab8
        ;; t0 <- LoadLocal:3(init lvl:0)
0xb300aa67    8b450c                 mov eax,[ebp+0xc]
0xb300aa6a    50                     push eax
        ;; PushArgument:4(t0)
        ;; t0 <- LoadLocal:5(i lvl:0)
0xb300aa6b    8b4508                 mov eax,[ebp+0x8]
0xb300aa6e    50                     push eax
        ;; PushArgument:6(t0)
        ;; t0 <- Constant:7(#100)
0xb300aa6f    b8c8000000             mov eax,0xc8
0xb300aa74    50                     push eax
        ;; PushArgument:8(t0)
        ;; t0 <- InstanceCall:9(%, t0, t0)
0xb300aa75    b929f829b3             mov ecx,0xb329f829  'ICData target:'%' num-checks: 0'
0xb300aa7a    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300aa7f    e85458ffff             call 0xb30002d8  [stub: TwoArgsCheckInlineCache]
0xb300aa84    83c408                 add esp,0x8
0xb300aa87    50                     push eax
        ;; PushArgument:10(t0)
        ;; t0 <- InstanceCall:11(charCodeAt, t0, t0)
0xb300aa88    b981f829b3             mov ecx,0xb329f881  'ICData target:'charCodeAt' num-checks: 0'
0xb300aa8d    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300aa92    e88157ffff             call 0xb3000218  [stub: OneArgCheckInlineCache]
0xb300aa97    83c408                 add esp,0x8
0xb300aa9a    50                     push eax
        ;; Return:12(t0)
0xb300aa9b    58                     pop eax
0xb300aa9c    ba795e29b3             mov edx,0xb3295e79  'Function 'charCodeAt': static.'
0xb300aaa1    ff422b                 inc [edx+0x2b]
0xb300aaa4    817a2bb80b0000         cmp [edx+0x2b],0xbb8
0xb300aaab    7c05                   jl 0xb300aab2
0xb300aaad    e8065effff             call 0xb30008b8  [stub: OptimizeFunction]
0xb300aab2    89ec                   mov esp,ebp
0xb300aab4    5d                     pop ebp
0xb300aab5    c3                     ret
0xb300aab6    90                     nop
0xb300aab7    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300aab8    b970d30a08             mov ecx,0x80ad370
0xb300aabd    ba00000000             mov edx,0
0xb300aac2    e861553702             call 0xb5380028  [stub: CallToRuntime]
0xb300aac7    eb9e                   jmp 0xb300aa67
0xb300aac9    e96a593702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300aace    e9455a3702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb300aa4e 'ICData target:'call' num-checks: 0'
 62 : 0xb300aa76 'ICData target:'%' num-checks: 0'
 67 : 0xb300aa7b 'ImmutableArray'
 81 : 0xb300aa89 'ICData target:'charCodeAt' num-checks: 0'
 86 : 0xb300aa8e 'ImmutableArray'
 101 : 0xb300aa9d 'Function 'charCodeAt': static.'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300aa75	deopt-before 	9		314	-1
0xb300aa84	ic-call      	9		314	-1
0xb300aa84	deopt-after  	9		314	-1
0xb300aa88	deopt-before 	11		311	-1
0xb300aa97	ic-call      	11		311	-1
0xb300aa97	deopt-after  	11		311	-1
0xb300aab2	other        	-1		0	-1
0xb300aab7	return       	-1		305	-1
0xb300aac7	other        	-1		294	-1
0xb300aac9	patch        	-1		0	-1
0xb300aace	lazy-deopt   	-1		0	-1
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' {
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' {
  stack var 'init' offset 3 (valid 297-321)
  stack var 'i' offset 2 (valid 302-321)
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' {
No exception handlers
}
Static call target functions {
}
Compiling optimized function: 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' @ token 294
Before Optimizations
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt
B0[graph] {
      v0 <- Constant:13(#null)
      v1 <- Parameter:14(0)
      v2 <- Parameter:15(1)
      v3 <- Parameter:16(2)
}
B1[target]
    CheckStackOverflow:2()
    PushArgument:4(v2)
    PushArgument:6(v3)
    v4 <- Constant:7(#100)
    PushArgument:8(v4)
    v5 <- InstanceCall:9(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #1000]) env={ v1, v2, v3, a0, a1, a2 }
    PushArgument:10(v5)
    v6 <- InstanceCall:11(charCodeAt, v2, v5 IC[1: _OneByteString@0x36924d72 #1000]) env={ v1, v2, v3, a0, a1 }
    Return:12(v6)
Inlining calls in Function 'charCodeAt': static.
Before Inlining of file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt
B0[graph] {
      v0 <- Constant:13(#null)
      v1 <- Parameter:14(0)
      v2 <- Parameter:15(1)
      v3 <- Parameter:16(2)
}
B1[target]
    CheckStackOverflow:2()
    PushArgument:6(v3)
    v4 <- Constant:7(#100)
    PushArgument:8(v4)
    CheckSmi:9(v3) env={ v1, v2, v3, v2, a0, a1 }
    v5 <- PolymorphicInstanceCall:18(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #1000]) env={ v1, v2, v3, v2, a0, a1 }
    CheckClass:11(v2 IC[1: _OneByteString@0x36924d72 #1000]) env={ v1, v2, v3, v2, v5 }
    CheckSmi:11(v5) env={ v1, v2, v3, v2, v5 }
    CheckArrayBound:11(v2, v5) env={ v1, v2, v3, v2, v5 }
    v6 <- StringCharCodeAt:22(v2, v5) env={ v1, v2, v3, v2, v5 }
    Return:12(v6)
  Depth 1 ----------
  Static Calls (0)
  Closure Calls (0)
  Polymorphic Instance Calls (1)
  => Function '%':. (deopt count 0)
     Bailout: not inlinable
After Optimizations:
==== file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt
  0: B0[graph] {
      v0 <- Constant:13(#null)
      v1 <- Parameter:14(0) {PT: dynamic} {PCid: dynamic}
      v2 <- Parameter:15(1) {PT: dynamic} {PCid: dynamic}
      v3 <- Parameter:16(2) {PT: dynamic} {PCid: dynamic}
}
  2: B1[target] ParallelMove ecx <- S-2, eax <- S-1
  4:     CheckStackOverflow:2()
  6:     PushArgument:6(v3) {PCid: dynamic}
  8:     v4 <- Constant:7(#100) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [100, 100]
 10:     PushArgument:8(v4) {PCid: dynamic}
 12:     CheckSmi:9(v3) env={ v1 [S-3], v2 [ecx], v3 [eax], v2 [ecx], a0, a1 }
 14:     v5 <- PolymorphicInstanceCall:18(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #1000]) {PT: dynamic} {PCid: dynamic} env={ v1 [S-3], v2 [S-2], v3 [S-1], v2 [S-2], a0, a1 }
 15:     ParallelMove ecx <- eax, eax <- S-2
 16:     CheckClass:11(v2 IC[1: _OneByteString@0x36924d72 #1000]) env={ v1 [S-3], v2 [eax], v3 [S-1], v2 [eax], v5 [ecx] }
 18:     CheckSmi:11(v5) env={ v1 [S-3], v2 [eax], v3 [S-1], v2 [eax], v5 [ecx] }
 20:     CheckArrayBound:11(v2, v5) env={ v1 [S-3], v2 [eax], v3 [S-1], v2 [eax], v5 [ecx] }
 22:     v6 <- StringCharCodeAt:22(v2, v5) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
 23:     ParallelMove eax <- edx
 24:     Return:12(v6)
--> patching entry 0xb300aa38
--> 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' entry: 0xb300aae8 time: 408 us
Code for optimized function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' {
        ;; Enter frame
0xb300aae8    55                     push ebp
0xb300aae9    89e5                   mov ebp,esp
0xb300aaeb    e800000000             call 0xb300aaf0
        ;; Check argument count
0xb300aaf0    8b420b                 mov eax,[edx+0xb]
0xb300aaf3    83f806                 cmp eax,0x6
0xb300aaf6    7505                   jnz 0xb300aafd
0xb300aaf8    3b420f                 cmp eax,[edx+0xf]
0xb300aafb    740e                   jz 0xb300ab0b
0xb300aafd    b961fc29b3             mov ecx,0xb329fc61  'ICData target:'call' num-checks: 0'
0xb300ab02    e841573702             call 0xb5380248  [stub: CallNoSuchMethodFunction]
0xb300ab07    89ec                   mov esp,ebp
0xb300ab09    5d                     pop ebp
0xb300ab0a    c3                     ret
        ;; B0
        ;; B1
0xb300ab0b    8b4d0c                 mov ecx,[ebp+0xc]
0xb300ab0e    8b4508                 mov eax,[ebp+0x8]
        ;; CheckStackOverflow:2()
0xb300ab11    3b25bc195809           cmp esp,[0x95819bc]
0xb300ab17    0f865b000000           jna 0xb300ab78
        ;; PushArgument:6(v3) {PCid: dynamic}
0xb300ab1d    50                     push eax
        ;; v4 <- Constant:7(#100) {PT: _Smi@0x36924d72} {PCid: _Smi@0x36924d72} [100, 100]
0xb300ab1e    bac8000000             mov edx,0xc8
        ;; PushArgument:8(v4) {PCid: dynamic}
0xb300ab23    52                     push edx
        ;; CheckSmi:9(v3)
0xb300ab24    a801                   test al,0x1
0xb300ab26    0f8561000000           jnz 0xb300ab8d
        ;; v5 <- PolymorphicInstanceCall:18(%, v3, v4 IC[1: _Smi@0x36924d72, _Smi@0x36924d72 #1000]) {PT: dynamic} {PCid: dynamic}
0xb300ab2c    bac1d91ab3             mov edx,0xb31ad9c1  Array[2, 2, null]
0xb300ab31    e8f2573702             call 0xb5380328  [stub: CallStaticFunction]
0xb300ab36    83c408                 add esp,0x8
        ;; ParallelMove ecx <- eax, eax <- S-2
0xb300ab39    89c1                   mov ecx,eax
0xb300ab3b    8b450c                 mov eax,[ebp+0xc]
        ;; CheckClass:11(v2 IC[1: _OneByteString@0x36924d72 #1000])
0xb300ab3e    a801                   test al,0x1
0xb300ab40    0f8451000000           jz 0xb300ab97
0xb300ab46    0fb75001               movzx_w edx,[eax+0x1]
0xb300ab4a    83fa4d                 cmp edx,0x4d
0xb300ab4d    0f8544000000           jnz 0xb300ab97
        ;; CheckSmi:11(v5)
0xb300ab53    f6c101                 test_b ecx,0x1
0xb300ab56    0f8540000000           jnz 0xb300ab9c
        ;; CheckArrayBound:11(v2, v5)
0xb300ab5c    3b4803                 cmp ecx,[eax+0x3]
0xb300ab5f    0f833c000000           jnc 0xb300aba1
        ;; v6 <- StringCharCodeAt:22(v2, v5) {PT: int} {PCid: _Smi@0x36924d72} [0, 255]
0xb300ab65    d1f9                   sar ecx, 1
0xb300ab67    0fb654080b             movzx_b edx,[eax+ecx*0x1+0xb]
0xb300ab6c    03c9                   add ecx,ecx
0xb300ab6e    03d2                   add edx,edx
        ;; ParallelMove eax <- edx
0xb300ab70    89d0                   mov eax,edx
        ;; Return:12(v6)
0xb300ab72    89ec                   mov esp,ebp
0xb300ab74    5d                     pop ebp
0xb300ab75    c3                     ret
0xb300ab76    90                     nop
0xb300ab77    cc                     int3
        ;; CheckStackOverflowSlowPath
0xb300ab78    50                     push eax
0xb300ab79    51                     push ecx
0xb300ab7a    b970d30a08             mov ecx,0x80ad370
0xb300ab7f    ba00000000             mov edx,0
0xb300ab84    e89f543702             call 0xb5380028  [stub: CallToRuntime]
0xb300ab89    59                     pop ecx
0xb300ab8a    58                     pop eax
0xb300ab8b    eb90                   jmp 0xb300ab1d
        ;; Deopt stub for id 9
0xb300ab8d    e8e6583702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 9
0xb300ab92    e8e1583702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 11
0xb300ab97    e8dc583702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 11
0xb300ab9c    e8d7583702             call 0xb5380478  [stub: Deoptimize]
        ;; Deopt stub for id 11
0xb300aba1    e8d2583702             call 0xb5380478  [stub: Deoptimize]
0xb300aba6    e98d583702             jmp 0xb5380438  [stub: FixCallersTarget]
0xb300abab    e968593702             jmp 0xb5380518  [stub: DeoptimizeLazy]
}
Pointer offsets for function: {
 22 : 0xb300aafe 'ICData target:'call' num-checks: 0'
 69 : 0xb300ab2d 'ImmutableArray'
}
PC Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' {
pc        	kind    	deopt-id	tok-ix	try-ix
0xb300ab36	fn-call      	9		314	-1
0xb300ab77	return       	-1		305	-1
0xb300ab89	other        	-1		294	-1
0xb300aba6	patch        	-1		0	-1
0xb300abab	lazy-deopt   	-1		0	-1
}
DeoptInfo: {
   0: 0xb300ab92  [ret bef oti:0(9)][s7][s6][ecx][pcmark oti:0][callerfp][callerpc][eax][ecx][s0]  (CheckSmi)
   1: 0xb300ab97  [ret bef oti:0(9)][s7][s6][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (PolymorphicInstanceCallTestFail)
   2: 0xb300ab36  [ret aft oti:0(9)][s7][s6][s1][pcmark oti:0][callerfp][callerpc][s2][s1][s0]  (AtCall)
   3: 0xb300ab9c  [ret bef oti:0(11)][ecx][eax][pcmark oti:0][callerfp][callerpc][s2][eax][s0]  (CheckClass)
   4: 0xb300aba1  [ret bef oti:0(11)][ecx][eax][pcmark oti:0][callerfp][callerpc][s2][eax][s0]  (CheckSmi)
   5: 0xb300aba6  [ret bef oti:0(11)][ecx][eax][pcmark oti:0][callerfp][callerpc][s2][eax][s0]  (CheckArrayBound)
}
Object Table: {
  0: Function 'charCodeAt': static.
}
Stackmaps for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' {
0xb300ab07: 
0xb300ab36: 
0xb300ab89: 11
}
Variable Descriptors for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' {
  stack var 'init' offset 3 (valid 297-321)
  stack var 'i' offset 2 (valid 302-321)
}
Exception Handlers for function 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_charCodeAt_charCodeAt' {
No exception handlers
}
Static call target functions {
  0xb300ab36: dart:core__IntegerImplementation@0x36924d72_%, 0xb5400019
}
PatchStaticCall: patching from 0xb300ab36 to 'dart:core__IntegerImplementation@0x36924d72_%' 0xb3008f38
ret = 100
PatchStaticCall: patching from 0xb30085a2 to 'dart:core__StringBase@0x36924d72__interpolate@0x36924d72' 0xb30011a8
PatchStaticCall: patching from 0xb30085b0 to 'dart:core_::_print' 0xb3008658
charCodeAt time = 4 ms
FixCallersTarget: patching from 0xb3008c2d to 'file:///home/elise/language/dart/work/DartVM/benchmark/stringutil.dart_::_hotString' 0xb30094a8
ret = 100
substring time = 3 ms
ret = 100
indeOf time = 9 ms
ret = 100
charCodeAt time = 0 ms
ret = 100
substring time = 2 ms
ret = 100
indeOf time = 9 ms
ret = 100
charCodeAt time = 0 ms
ret = 100
substring time = 2 ms
ret = 100
indeOf time = 9 ms
ret = 100
charCodeAt time = 0 ms
PatchStaticCall: patching from 0xb30085ee to 'dart:core_::_print' 0xb3008658
### end   ###
