Dart VM Advent Calendar 2012 12/13
###############################################################################

Dart VM
===============================================================================


宿題
==============================================================================
Dart VMのメモリレイアウト(isolateとマルチスレッド)

GCの起点

GCに関連する拡張機能(peer, external, handler)


==============================================================================

拡張機能
==============================================================================

GCの起点
==============================================================================

構造
==============================================================================

peer
externl
handler


PageSpaceクラス。MarkSweepGC。page単位でallocationして、freelist管理で分割融合、再利用を行う。


Scavengerクラス。mmapした領域を2分割するCopyGC。適時old領域にpromotion
1pageに収まらないオブジェクトはLargePageとして別管理、適時allocation。

GCの起点は、Allocationに失敗した時。
GCを管理するのは、Heapオブジェクト。Heapは、Isolateごとに分割されており、Isolateが管理する。


特徴
peer領域をもつ。詳細は別途。
GC対象外のHandlerを多数持つ。詳細は別途。


GCの構造は非常にシンプルで、

ProcessPeerRefenrents()
===============================================================================

code ::

  PeerTable prev;
    std::swap(prev, peer_table_);
      prev
          RawObject* raw_obj
              ToAddr(raw_obj)
                  header
                      if IsForwarding(header)
                            new_addr = ForwardedAddr(header)
                                  heap_->SetPeer(raw_obj, it->second);





